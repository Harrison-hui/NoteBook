{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/gzip/","title":"gzip","text":"<p>NC_1.fastq.gz</p> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/gzip/#_1","title":"\u5bfc\u5165\u6a21\u5757","text":"<pre><code>import gzip\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/gzip/#gzipfile","title":"GzipFile\u5bf9\u8c61","text":"<p><code>gzip.GzipFile(filename=None, mode=None, compresslevel=9, fileobj=None, mtime=None)</code></p> <ol> <li> <p>filename\uff1a\u4e00\u4e2a\u5b9e\u9645\u7684\u6587\u4ef6\u540d\uff08\u4e00\u4e2a <code>str</code> \u5bf9\u8c61\u6216\u8005 <code>bytes</code> \u5bf9\u8c61\uff09\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u7528\u6765\u8bfb\u5199\u7684\u5df2\u5b58\u5728\u7684\u6587\u4ef6\u5bf9\u8c61</p> </li> <li> <p>mode\uff1a\u53ea\u80fd\u662f\u4e8c\u8fdb\u5236\u6a21\u5f0f</p> </li> </ol> <pre><code>with gzip.GzipFile(\"NC_1.fastq.gz\", \"rb\") as file:\n    print(file.readline())\n    print(file.readline())\n    print(file.readline())\n    print(file.readline())\n\n\"\"\"\nb'@A00917:294:HC5KJDSXY:2:1101:2700:1689\\n'\nb'TTGAGAGGCTGAGGCAGGAGGATCACTGGGGCCCAGGAGGTTGAGCCTACAATGAGTTATGATCATGCCACTGCACTCCAGCCTGAGTAACAAAGTGAGACCTTGTGTCTTAAAAAAACAAAAACCACTAAAATAGCAACAAGAGCAGTA\\n'\nb'+\\n'\nb'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFF:FFF\\n\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/gzip/#_2","title":"\u51fd\u6570","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/gzip/#open","title":"open","text":"<p><code>gzip.open(filename, mode='rb', compresslevel=9, encoding=None, errors=None, newline=None)</code></p> <p>\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u6216\u8005**\u6587\u672c\u65b9\u5f0f**\u6253\u5f00\u4e00\u4e2a gzip \u683c\u5f0f\u7684\u538b\u7f29\u6587\u4ef6\uff0c\u8fd4\u56de\u4e00\u4e2a <code>file object</code></p> <p>\u4e8c\u8fdb\u5236\u6a21\u5f0f\uff1a<code>gzip.open(filename, mode='rb')</code>\u7b49\u4ef7\u4e8e<code>gzip.GzipFile(filename=None, mode=None)</code> \u6587\u672c\u6a21\u5f0f\uff1a\u76f8\u5f53\u4e8e<code>file.open()</code>\u4e0b\u7684\u6587\u672c\u6a21\u5f0f</p> <ol> <li> <p>filename\uff1a\u4e00\u4e2a\u5b9e\u9645\u7684\u6587\u4ef6\u540d\uff08\u4e00\u4e2a <code>str</code> \u5bf9\u8c61\u6216\u8005 <code>bytes</code> \u5bf9\u8c61\uff09\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u7528\u6765\u8bfb\u5199\u7684\u5df2\u5b58\u5728\u7684\u6587\u4ef6\u5bf9\u8c61</p> </li> <li> <p>mode\uff1a\u9ed8\u8ba4\u503c\u662f 'rb'</p> </li> <li> <p>\u4e8c\u8fdb\u5236\u6a21\u5f0f\uff1a'r', 'rb', 'a', 'ab', 'w', 'wb', 'x' \u6216 'xb'</p> </li> <li> <p>\u6587\u672c\u6a21\u5f0f\uff1a'rt', 'at', 'wt', \u6216 'xt'</p> </li> <li> <p>compresslevel\uff1a\u540c\u4e0a</p> </li> <li> <p>encoding\uff1a\u540c<code>file.open()</code>\uff0c\u4ec5\u7528\u4e8e\u6587\u672c\u6a21\u5f0f</p> </li> <li> <p>errors\uff1a\u540c<code>file.open()</code>\uff0c\u4ec5\u7528\u4e8e\u6587\u672c\u6a21\u5f0f</p> </li> <li> <p>newline\uff1a\u540c<code>file.open()</code>\uff0c\u4ec5\u7528\u4e8e\u6587\u672c\u6a21\u5f0f</p> </li> </ol> <pre><code>with gzip.open(\"NC_1.fastq.gz\", \"rt\") as file:\n    print(file.readline())\n    print(file.readline())\n    print(file.readline())\n    print(file.readline())\n\n\"\"\"\n@A00917:294:HC5KJDSXY:2:1101:2700:1689\n\nTTGAGAGGCTGAGGCAGGAGGATCACTGGGGCCCAGGAGGTTGAGCCTACAATGAGTTATGATCATGCCACTGCACTCCAGCCTGAGTAACAAAGTGAGACCTTGTGTCTTAAAAAAACAAAAACCACTAAAATAGCAACAAGAGCAGTA\n\n+\n\nFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFF:FFF\n\n\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/gzip/#compress","title":"compress","text":"<p><code>gzip.compress(data, compresslevel=9, *, mtime=None)</code></p> <p>\u538b\u7f29 data(\u5fc5\u987b\u662f<code>bytes</code>\u5bf9\u8c61)\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5df2\u538b\u7f29\u6570\u636e\u7684 <code>bytes</code> \u5bf9\u8c61</p> <pre><code>a = gzip.compress(b\"ATTTTCCCGGCTCGCT\")\nprint(a)\n\n\"\"\"\nb'\\x1f\\x8b\\x08\\x00\\x82\\x9a!g\\x02\\xffs\\x0c\\x01\\x02gggww\\xe7\\x10g \\x06\\x00\\x85]\\x14\\xd0\\x10\\x00\\x00\\x00'\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/gzip/#decompress","title":"decompress","text":"<p><code>gzip.decompress(data)</code></p> <p>\u89e3\u538b\u7f29 data(\u5fc5\u987b\u662f<code>bytes</code>\u5bf9\u8c61)\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5df2\u89e3\u538b\u6570\u636e\u7684 <code>bytes</code> \u5bf9\u8c61</p> <pre><code>a = gzip.decompress(b'\\x1f\\x8b\\x08\\x00\\x82\\x9a!g\\x02\\xffs\\x0c\\x01\\x02gggww\\xe7\\x10g \\x06\\x00\\x85]\\x14\\xd0\\x10\\x00\\x00\\x00')\nprint(a)\n\n\"\"\"\nb'ATTTTCCCGGCTCGCT'\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/math/","title":"\u5bfc\u5165\u6a21\u5757","text":"<pre><code>import math\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/math/#_2","title":"\u5e38\u91cf","text":"\u4ee3\u7801 \u542b\u4e49 \u503c <code>[math.pi](https://docs.python.org/zh-cn/3.12/library/math.html#math.pi)</code> \u5706\u5468\u7387\u03c0 3.141592653589793 <code>[math.tau](https://docs.python.org/zh-cn/3.12/library/math.html#math.tau)</code> \u5706\u5468\u5e38\u6570\u03c4=2\u03c0 6.283185307179586 <code>[math.e](https://docs.python.org/zh-cn/3.12/library/math.html#math.e)</code> \u81ea\u7136\u5e38\u6570e 2.718281828459045 <code>[math.inf](https://docs.python.org/zh-cn/3.12/library/math.html#math.inf)</code> \u6d6e\u70b9\u6b63\u65e0\u7a77\u5927 \uff08\u5bf9\u4e8e\u8d1f\u65e0\u7a77\u5927\uff0c\u4f7f\u7528 <code>-math.inf</code> \uff09\u3002\u76f8\u5f53\u4e8e <code>float('inf')</code> \u7684\u8f93\u51fa\u3002 inf <code>[math.nan](https://docs.python.org/zh-cn/3.12/library/math.html#math.nan)</code> \u4e00\u4e2a\u6d6e\u70b9\u6570\u503c \"Not a Number\" (NaN)\u3002 \u76f8\u5f53\u4e8e <code>float('nan')</code> \u7684\u8f93\u51fa\u3002 nan"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/math/#_3","title":"\u6570\u8bba\u4e0e\u8868\u793a\u51fd\u6570","text":"\u4ee3\u7801 \u542b\u4e49 <code>[math.ceil(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.ceil)</code> \u2265x\u7684\u6700\u5c0f\u6574\u6570 <code>[math.floor(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.floor)</code> \u2264x\u7684\u6700\u5927\u6574\u6570 <code>[math.frexp(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.frexp)</code> (m, e)\uff0c\u6ee1\u8db3\\(x = m \\times 2^{e}\\) <code>[math.ldexp(m, e)](https://docs.python.org/zh-cn/3.12/library/math.html#math.ldexp)</code> \\(m \\times 2^{e}\\) <code>[math.lcm(a, b, ...)](https://docs.python.org/zh-cn/3.12/library/math.html#math.lcm)</code> \u6700\u5c0f\u516c\u500d\u6570\uff0c\u53c2\u6570\u5fc5\u987b\u4e3a\u6574\u6570 <code>[math.gcd(a, b, ...)](https://docs.python.org/zh-cn/3.12/library/math.html#math.gcd)</code> \u6700\u5927\u516c\u7ea6\u6570\uff0c\u53c2\u6570\u5fc5\u987b\u4e3a\u6574\u6570 <code>[math.fabs(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.fabs)</code> $ <code>[math.factorial(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.factorial)</code> \\(x!\\) <code>[math.copysign(x, y)](https://docs.python.org/zh-cn/3.12/library/math.html#math.copysign)</code> y\u7684\u7b26\u53f7 + $ <code>[math.isqrt(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.isqrt)</code> \u8fd4\u56de\u975e\u8d1f\u6574\u6570 x \u7684\u6574\u6570\u5e73\u65b9\u6839\uff0c\u662f\u5bf9 x \u7684\u5b9e\u9645\u5e73\u65b9\u6839\u5411\u4e0b\u53d6\u6574\uff0c\u6216\u8005\u76f8\u5f53\u4e8e\u4f7f\u5f97 a\u00b2 \u2264 x \u7684\u6700\u5927\u6574\u6570 a <code>[math.nextafter(x, y, steps=1)](https://docs.python.org/zh-cn/3.12/library/math.html#math.nextafter)</code> \u4ece x \u5230 y \u4ee5\u6b65\u957f\u4e3asteps\u7684\u4e0b\u4e00\u4e2a\u53ef\u8868\u793a\u6d6e\u70b9\u6570 <code>[math.comb(n, k)](https://docs.python.org/zh-cn/3.12/library/math.html#math.comb)</code> \u4ecen\u9879\u4e2d\u4e0d\u91cd\u590d\u65e0\u987a\u5e8f\u53d6k\u9879\u7684\u65b9\u5f0f\u603b\u6570\u6216\u591a\u9879\u5f0f\\((1+x)^{n}\\)\u5c55\u5f00\u4e2d\u7b2ck\u9879\u7684\u7cfb\u6570\uff08\u4e8c\u9879\u5f0f\u7cfb\u6570\uff09\uff0c\\(n! \\over {k!(n-k)!}\\) <code>[math.perm(n, k=n)](https://docs.python.org/zh-cn/3.12/library/math.html#math.perm)</code> \u4ecen\u9879\u4e2d\u4e0d\u91cd\u590d\u6709\u987a\u5e8f\u53d6k\u9879\u7684\u65b9\u5f0f\u603b\u6570\uff0c\\(n! \\over (n-k)!\\) <code>[math.fsum(iterable)](https://docs.python.org/zh-cn/3.12/library/math.html#math.fsum)</code> \u5bf9iterable\uff08\u5982\u5217\u8868\u7b49\uff09\u6c42\u548c <code>[math.prod(iterable, start=1)](https://docs.python.org/zh-cn/3.12/library/math.html#math.prod)</code> \u5bf9iterable\uff08\u5982\u5217\u8868\u7b49\uff09\u6c42\u79ef\uff0c\u521d\u59cb\u503c\u4e3astart <code>[math.sumprod(p, q)](https://docs.python.org/zh-cn/3.12/library/math.html#math.sumprod)</code> \u5bf9\u4e24\u4e2aiterable\uff08\u5982\u5217\u8868\u7b49\uff09\u4e00\u4e00\u5bf9\u5e94\u6c42\u79ef\u540e\u6c42\u548c\uff0c\u4e8c\u8005\u957f\u5ea6\u5fc5\u987b\u76f8\u7b49 <code>[math.trunc(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.trunc)</code> \u622a\u53d6x\u7684\u6574\u6570\u90e8\u5206\uff0c\u5e26x\u7684\u7b26\u53f7 <code>[math.modf(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.modf)</code> \u622a\u53d6x\u7684\u5c0f\u6570\u90e8\u5206\u548c\u6574\u6570\u90e8\u5206\uff0c\u5747\u5e26x\u7684\u7b26\u53f7 <code>[math.remainder(x, y)](https://docs.python.org/zh-cn/3.12/library/math.html#math.remainder)</code> x/y\u7684\u4f59\u6570\uff0c\\(x-n \\times y\\)\uff0cn\u4e3ax/y\u6700\u63a5\u8fd1\u7684\u6574\u6570\uff0c\u82e5\u4e3a.5\uff0c\u5219\u53d6\u6700\u63a5\u8fd1\u7684\u5076\u6570 <code>[math.fmod(x, y)](https://docs.python.org/zh-cn/3.12/library/math.html#math.fmod)</code> x/y\u7684\u4f59\u6570\uff0c\\(x-n \\times y\\)\uff0cn\u4e3a\u2265x/y\u6700\u5c0f\u6574\u6570 <code>[math.isclose(a, b, rel_tol=1e-09, abs_tol=0.0)](https://docs.python.org/zh-cn/3.12/library/math.html#math.isclose)</code> a \u548c b \u7684\u503c\u6bd4\u8f83\u63a5\u8fd1\u5219\u8fd4\u56de True\uff0c\u5373<code>abs(a-b) &lt;= max(rel_tol * max(abs(a), abs(b)), abs_tol)</code>\u3002rel_tol\uff08\u76f8\u5bf9\u5bb9\u5dee\uff09\u2208(0, 1.0]\uff1babs_tol\uff08\u7edd\u5bf9\u5bb9\u5dee\uff09\u22650.0 <code>[math.isfinite(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.isfinite)</code> x \u65e2\u4e0d\u662f\u65e0\u7a77\u5927\u4e5f\u4e0d\u662fNaN\uff0c\u5219\u8fd4\u56de True <code>[math.isinf(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.isinf)</code> x \u662f\u6b63\u6216\u8d1f\u65e0\u7a77\u5927\uff0c\u5219\u8fd4\u56de True <code>[math.isnan(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.isnan)</code> x \u662f NaN\uff08\u4e0d\u662f\u6570\u5b57\uff09\uff0c\u5219\u8fd4\u56de True"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/math/#_4","title":"\u5e42\u51fd\u6570","text":"\u4ee3\u7801 \u542b\u4e49 <code>[math.pow(x, y)](https://docs.python.org/zh-cn/3.12/library/math.html#math.pow)</code> \\(x ^ y\\) <code>[math.sqrt(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.sqrt)</code> \\(\\sqrt{x}\\) <code>[math.cbrt(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.cbrt)</code> \\(\\sqrt[3]{x}\\)"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/math/#_5","title":"\u6307\u6570\u51fd\u6570","text":"\u4ee3\u7801 \u542b\u4e49 <code>[math.exp(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.exp)</code> \\(e ^ {x}\\) <code>[math.expm1(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.expm1)</code> \\(e^{x}-1\\) <code>[math.exp2(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.exp2)</code> \\(2 ^ {x}\\)"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/math/#_6","title":"\u5bf9\u6570\u51fd\u6570","text":"\u4ee3\u7801 \u542b\u4e49 <code>[math.log(x, base)](https://docs.python.org/zh-cn/3.12/library/math.html#math.log)</code> \\(\\log_{base}({x})\\) <code>[math.log(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.log)</code> \\(\\ln(x)\\) <code>[math.log1p(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.log1p)</code> \\(\\ln(1+x)\\) <code>[math.log2(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.log2)</code> \\(\\log_{2}{x}\\) <code>[math.log10(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.log10)</code> \\(\\lg{x}\\)"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/math/#_7","title":"\u89d2\u5ea6\u8f6c\u6362","text":"\u4ee3\u7801 \u542b\u4e49 <code>[math.radians(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.radians)</code> \u5ea6\u6570 \u2192 \u5f27\u5ea6 <code>[math.degrees(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.degrees)</code> \u5f27\u5ea6 \u2192 \u5ea6\u6570"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/math/#_8","title":"\u4e09\u89d2\u51fd\u6570","text":"\u4ee3\u7801 \u542b\u4e49 <code>[math.sin(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.sin)</code> \\(\\sin(x)\\)\uff0cx\u5e94\u4e3a\u5f27\u5ea6 <code>[math.cos(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.cos)</code> \\(\\cos(x)\\)\uff0cx\u5e94\u4e3a\u5f27\u5ea6 <code>[math.tan(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.tan)</code> \\(\\tan(x)\\)\uff0cx\u5e94\u4e3a\u5f27\u5ea6 <code>[math.asin(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.asin)</code> \\(\\arcsin(x)\\)\uff0c\u8fd4\u56de\u5f27\u5ea6[\\(-{\\pi \\over 2}\\), \\(\\pi \\over 2\\)] <code>[math.acos(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.acos)</code> \\(\\arccos(x)\\)\uff0c\u8fd4\u56de\u5f27\u5ea6[\\(0\\), \\(\\pi\\)] <code>[math.atan(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.atan)</code> \\(\\arctan(x)\\)\uff0c\u8fd4\u56de\u5f27\u5ea6(\\(-{\\pi \\over 2}\\), \\(\\pi \\over 2\\)) <code>[math.atan2(y, x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.atan2)</code> \\(\\arctan({y \\over x})\\)\uff0c\u8fd4\u56de\u5f27\u5ea6[\\(-\\pi\\), \\(-{\\pi \\over 2}\\))\u222a(\\(-{\\pi \\over 2}\\), \\(\\pi \\over 2\\))\u222a(\\(\\pi \\over 2\\), \\(\\pi\\)]"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/math/#_9","title":"\u53cc\u66f2\u51fd\u6570","text":"\u4ee3\u7801 \u542b\u4e49 <code>[math.sinh(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.sinh)</code> \\(\\sinh(x) = {{e^{x} - e^{-x}} \\over {2}}\\) <code>[math.cosh(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.cosh)</code> \\(\\cosh(x) = {{e^{x} + e^{-x}} \\over {2}}\\) <code>[math.tanh(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.tanh)</code> \\(\\tanh(x) = {\\sinh(x) \\over \\cosh(x)} = {{e^{x} -e^{-x}} \\over {{e^{x} + e^{-x}} }}\\) <code>[math.asinh(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.asinh)</code> \\(arc\\sinh(x) = \\ln(x + \\sqrt{x^{2}+1})\\) <code>[math.acosh(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.acosh)</code> \\(arc\\cosh(x) = \\ln(x + \\sqrt{x^{2}-1})\\) <code>[math.atanh(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.atanh)</code> \\(arc\\tanh(x) = {1 \\over 2} \\ln({1+x \\over 1-x})\\)"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/math/#_10","title":"\u8ddd\u79bb\u51fd\u6570","text":"\u4ee3\u7801 \u542b\u4e49 <code>[math.dist(p, q)](https://docs.python.org/zh-cn/3.12/library/math.html#math.dist)</code> \u8fd4\u56de\u4efb\u610f\u7ef4\u5ea6\u4e2d\uff0c\u4e24\u4e2a\u5750\u6807\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb <code>[math.hypot(x, y, ...)](https://docs.python.org/zh-cn/3.12/library/math.html#math.hypot)</code> \u8fd4\u56de\u4efb\u610f\u7ef4\u5ea6\u4e2d\uff0c\u5750\u6807\u70b9\u5230\u539f\u70b9\u7684\u8ddd\u79bb"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/math/#_11","title":"\u5176\u4ed6\u51fd\u6570","text":"\u4ee3\u7801 \u51fd\u6570 <code>[math.erf(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.erf)</code> \u8fd4\u56dex\u5904\u7684\u8bef\u5dee\u51fd\u6570\u503c <code>[math.erfc(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.erfc)</code> \u8fd4\u56dex\u5904\u7684\u4e92\u8865\u8bef\u5dee\u51fd\u6570\u503c <code>[math.gamma(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.gamma)</code> \u8fd4\u56dex\u5904\u7684gamma\u51fd\u6570\u503c <code>[math.lgamma(x)](https://docs.python.org/zh-cn/3.12/library/math.html#math.lgamma)</code> \u8fd4\u56degamma\u51fd\u6570\u5728 x \u7edd\u5bf9\u503c\u7684\u81ea\u7136\u5bf9\u6570"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/os/","title":"\u5bfc\u5165\u6a21\u5757","text":"<pre><code>import os\nimport time\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/os/#name","title":"\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\uff1aname","text":"<p><code>os.name</code></p> <p>\u8fd4\u56de\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b</p> <ol> <li> <p>Windows\uff1a\"nt\"</p> </li> <li> <p>Unix/Linux\uff1a\"posix\"</p> </li> </ol> <pre><code>os.name\n\"\"\"\nnt\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/os/#getcwd","title":"\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff1agetcwd","text":"<p><code>os.getcwd()</code></p> <p>\u5373\u5f53\u524dpy\u6587\u4ef6\u8fd0\u884c\u540e\u5b9e\u73b0\u64cd\u4f5c\u7684\u76ee\u5f55\uff0c\u5177\u4f53\u5dee\u522b\u89c1\u540e</p> <p></p> <pre><code>os.getcwd()\n\"\"\"\nD:\\OneDrive\\\u6587\u6863\\8.Py_Project\\Learning\\\u7cfb\u7edf\u5b66\u4e60\\11.os\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/os/#chdir","title":"\u6539\u53d8\u5de5\u4f5c\u76ee\u5f55\uff1achdir","text":"<p><code>os.chdir(path)</code></p> <p>\u6539\u53d8\u5f53\u524dpy\u6587\u4ef6\u8fd0\u884c\u540e\u5b9e\u73b0\u64cd\u4f5c\u7684\u76ee\u5f55\uff0c\u4f46py\u6587\u4ef6\u5b9e\u9645\u4f4d\u7f6e\u4e0d\u4f1a\u79fb\u52a8\uff0c\u5177\u4f53\u5dee\u522b\u89c1\u540e</p> <p></p> <p></p> <pre><code>os.chdir(\"D:/OneDrive/\u6587\u6863/8.Py_Project/Learning/\u7cfb\u7edf\u5b66\u4e60/11.os/new dir\")\nos.getcwd()\n\"\"\"\nD:\\OneDrive\\\u6587\u6863\\8.Py_Project\\Learning\\\u7cfb\u7edf\u5b66\u4e60\\11.os\\new dir\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/os/#listdir","title":"\u6587\u4ef6\u6216\u76ee\u5f55\u5217\u8868\uff1alistdir","text":"<p><code>os.listdir(path=\".\")</code></p> <p>\u5217\u51fa\u6307\u5b9a\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u6216\u76ee\u5f55\u540d\u79f0\u5e76\u5f62\u6210\u5217\u8868\uff0c\u9ed8\u8ba4\u5217\u51fa\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff08\".\"\uff09\u4e0b</p> <pre><code>os.listdir(path=\"D:/OneDrive/\u6587\u6863/8.Py_Project/Learning/\u7cfb\u7edf\u5b66\u4e60/11.os/new dir\")\n\"\"\"\n['\u65b0\u5efa \u6587\u672c\u6587\u6863.txt', '\u65b0\u5efa\u6587\u4ef6\u5939']\n\"\"\"\n\nos.listdir()\n\"\"\"\n['11.os.py', 'new dir', 'os-shutil.py', 'os-\u521b\u5efa\u4e34\u65f6\u6587\u4ef6\u548c\u6587\u4ef6\u5939.py', 'os-\u538b\u7f29\u5305.py']\n\"\"\"\n\nos.chdir(\"D:/OneDrive/\u6587\u6863/8.Py_Project/Learning/\u7cfb\u7edf\u5b66\u4e60/11.os/new dir\")\nos.listdir()\n\"\"\"\n['\u65b0\u5efa \u6587\u672c\u6587\u6863.txt', '\u65b0\u5efa\u6587\u4ef6\u5939']\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/os/#stat","title":"\u6587\u4ef6\u6216\u76ee\u5f55\u72b6\u6001\uff1astat","text":"<p><code>os.stat(path, dir_fd=None, follow_symlinks=True)</code></p> <p>\u83b7\u53d6\u4e00\u4e2a\u6587\u4ef6\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u72b6\u6001</p> <ol> <li> <p>path\uff1a\u8def\u5f84</p> </li> <li> <p>dir_fd\uff1a\u6587\u4ef6\u63cf\u8ff0\u7b26</p> </li> <li> <p>follow_symlinks\uff1a\u7565</p> </li> </ol> <p></p> <pre><code>stat_info = os.stat(\"./os-shutil.py\")\n\"\"\"\nos.stat_result(st_mode=33206,                 # \u6a21\u5f0f\n               st_ino=281474976738329,        # \u7d22\u5f15\u8282\u70b9\u53f7\uff1aUnix\uff08inode\u53f7\uff09\uff0cWindows\uff08\u7d22\u5f15\uff09\n               st_dev=4943362207570832230,    # \u6240\u5728\u8bbe\u5907\u6807\u8bc6\u7b26\n               st_nlink=1,                    # \u786c\u94fe\u63a5\u6570\u91cf\n               st_uid=0,                      # \u6240\u6709\u8005\u7528\u6237\u6807\u8bc6\u7b26\n               st_gid=0,                      # \u6240\u6709\u8005\u7ec4\u6807\u8bc6\u7b26\n               st_size=598,                   # \u5927\u5c0f\n               st_atime=1735472086,           # \u6700\u8fd1\u8bbf\u95ee\u65f6\u95f4\u65f6\u95f4\u6233\n               st_mtime=1633612744,           # \u6700\u8fd1\u4fee\u6539\u65f6\u95f4\u65f6\u95f4\u6233\n               st_ctime=1705244584            # \u521b\u5efa\u65f6\u95f4\u65f6\u95f4\u6233\n               )\n\"\"\"\n\nstat_info.st_size\n\"\"\"\n598\n\"\"\"\n\ntime.ctime(stat_info.st_atime)\n\"\"\"\nSun Dec 29 19:34:46 2024\n\"\"\"\n\ntime.ctime(stat_info.st_mtime)\n\"\"\"\nThu Oct  7 21:19:04 2021\n\"\"\"\n\ntime.ctime(stat_info.st_ctime)\n\"\"\"\nSun Jan 14 23:03:04 2024\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/os/#scandir","title":"\u6d4f\u89c8\u76ee\u5f55\uff1ascandir","text":"<p><code>os.scandir(path='.')</code></p> <p>\u8fd4\u56de\u6307\u5b9a\u76ee\u5f55\u4e2d\u6587\u4ef6\u6216\u76ee\u5f55\u7684 <code>os.DirEntry</code> \u5bf9\u8c61\u7684\u8fed\u4ee3\u5668\uff0c\u9ed8\u8ba4\u6d4f\u89c8\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff08\".\"\uff09</p> <pre><code>entrys = list(os.scandir(\"./\"))\n\"\"\"\n[&lt;DirEntry '11.os.py'&gt;, &lt;DirEntry 'new dir'&gt;, &lt;DirEntry 'os-shutil.py'&gt;, &lt;DirEntry 'os-\u521b\u5efa\u4e34\u65f6\u6587\u4ef6\u548c\u6587\u4ef6\u5939.py'&gt;, &lt;DirEntry 'os-\u538b\u7f29\u5305.py'&gt;]\n\"\"\"\n\nentry = entrys[2]\nentry.name\n\"\"\"\nos-shutil.py\n\"\"\"\n\nentry.path\n\"\"\"\n./os-shutil.py\n\"\"\"\n\nentry.inode()\n\"\"\"\n281474976738329\n\"\"\"\n\nentry.is_dir()\n\"\"\"\nFalse\n\"\"\"\n\nentry.is_file()\n\"\"\"\nTrue\n\"\"\"\n\nentry.stat()\n\"\"\"\nos.stat_result(st_mode=33206, \n               st_ino=0, \n               st_dev=0, \n               st_nlink=0, \n               st_uid=0, \n               st_gid=0, \n               st_size=598, \n               st_atime=1735471295, \n               st_mtime=1633612744, \n               st_ctime=1705244584)\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/os/#walk","title":"\u904d\u5386\u76ee\u5f55\uff1awalk","text":"<p><code>os.walk(top, topdown=True, onerror=None, followlinks=False)</code></p> <p>\u751f\u6210\u76ee\u5f55\u6811\u4e2d\u7684\u6587\u4ef6\u540d\uff0c\u65b9\u5f0f\u662f\u6309\u4e0a \u2192 \u4e0b\u6216\u4e0b \u2192 \u4e0a\u987a\u5e8f\u904d\u5386\u76ee\u5f55\u6811\u3002\u5bf9\u4e8e\u4ee5 top \u4e3a\u6839\u7684\u76ee\u5f55\u6811\u4e2d\u7684\u6bcf\u4e2a\u76ee\u5f55\uff08\u5305\u62ec top \u672c\u8eab\uff09\uff0c\u5b83\u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u4e09\u5143\u7ec4 <code>(dirpath, dirnames, filenames)</code>\u3002</p> <ol> <li> <p>top\uff1a\u6839\u76ee\u5f55</p> </li> <li> <p>topdown\uff1a\u904d\u5386\u65b9\u5f0f\u662f\u5426\u6309\u4e0a\u2192\u4e0b\u3002\u9ed8\u8ba4True</p> </li> <li> <p>onerror\uff1a\u7565</p> </li> <li> <p>followlinks\uff1a\u7565</p> </li> </ol> <pre><code>list(os.walk(\"./\", topdown=True))\n\"\"\"\n[('./', ['new dir'], ['11.os.py', 'os-shutil.py', 'os-\u521b\u5efa\u4e34\u65f6\u6587\u4ef6\u548c\u6587\u4ef6\u5939.py', 'os-\u538b\u7f29\u5305.py']), \n ('./new dir', ['\u65b0\u5efa\u6587\u4ef6\u5939'], ['\u65b0\u5efa \u6587\u672c\u6587\u6863.txt']), \n ('./new dir\\\\\u65b0\u5efa\u6587\u4ef6\u5939', [], [])\n]\n\"\"\"\n\nlist(os.walk(\"./\", topdown=False))\n\"\"\"\n[('./new dir\\\\\u65b0\u5efa\u6587\u4ef6\u5939', [], []), \n ('./new dir', ['\u65b0\u5efa\u6587\u4ef6\u5939'], ['\u65b0\u5efa \u6587\u672c\u6587\u6863.txt']), \n ('./', ['new dir'], ['11.os.py', 'os-shutil.py', 'os-\u521b\u5efa\u4e34\u65f6\u6587\u4ef6\u548c\u6587\u4ef6\u5939.py', 'os-\u538b\u7f29\u5305.py'])\n]\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/string/","title":"\u5bfc\u5165\u6a21\u5757","text":"<pre><code>import string\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/string/#_2","title":"\u5e38\u91cf","text":"\u7c7b\u522b \u4ee3\u7801 \u542b\u4e49 \u7ed3\u679c \u53ef\u6253\u5370\u5b57\u7b26 string.printable \u7531\u88ab\u89c6\u4e3a\u53ef\u6253\u5370\u7b26\u53f7\u7684 ASCII \u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002 \u8fd9\u662f <code>digits</code>, <code>ascii_letters</code>, <code>punctuation</code> \u548c <code>whitespace</code> \u7684\u603b\u548c\u3002 \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\"#$%&amp;\\'()*+,-./:;&lt;=&gt;?@[\\]^_`{ \u6570\u5b57 <code>[string.digits](https://docs.python.org/zh-cn/3.12/library/string.html#string.digits)</code> \u5341\u8fdb\u5236\u6570 \"0123456789\" <code>[string.octdigits](https://docs.python.org/zh-cn/3.12/library/string.html#string.octdigits)</code> \u516b\u8fdb\u5236\u6570 \"01234567\" <code>[string.hexdigits](https://docs.python.org/zh-cn/3.12/library/string.html#string.hexdigits)</code> \u5341\u516d\u8fdb\u5236\u6570 \"0123456789abcdefABCDEF\" \u5b57\u6bcd <code>[string.ascii_letters](https://docs.python.org/zh-cn/3.12/library/string.html#string.ascii_letters)</code> \u6240\u6709\u5b57\u6bcd\uff0c<code>ascii_lowercase</code> \u548c <code>ascii_uppercase</code> \u5e38\u91cf\u7684\u62fc\u8fde \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\" <code>[string.ascii_lowercase](https://docs.python.org/zh-cn/3.12/library/string.html#string.ascii_lowercase)</code> \u5c0f\u5199\u5b57\u6bcd \"abcdefghijklmnopqrstuvwxyz\" <code>[string.ascii_uppercase](https://docs.python.org/zh-cn/3.12/library/string.html#string.ascii_uppercase)</code> \u5927\u5199\u5b57\u6bcd \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" \u6807\u70b9\u7b26\u53f7 <code>[string.punctuation](https://docs.python.org/zh-cn/3.12/library/string.html#string.punctuation)</code> \u7531\u5728 C \u533a\u57df\u8bbe\u7f6e\u4e2d\u88ab\u89c6\u4e3a\u6807\u70b9\u7b26\u53f7\u7684 ASCII \u5b57\u7b26\u6240\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 \"!\"#$%&amp;\\'()*+,-./:;&lt;=&gt;?@[\\]^_`{ \u7a7a\u767d\u7b26 <code>[string.whitespace](https://docs.python.org/zh-cn/3.12/library/string.html#string.whitespace)</code> \u7531\u88ab\u89c6\u4e3a\u7a7a\u767d\u7b26\u53f7\u7684 ASCII \u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002 \u5176\u4e2d\u5305\u62ec\u7a7a\u683c\u3001\u5236\u8868\u3001\u6362\u884c\u3001\u56de\u8f66\u3001\u8fdb\u7eb8\u548c\u7eb5\u5411\u5236\u8868\u7b26\u3002 \" \\t\\n\\r\\x0b\\x0c\""},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/string/#template","title":"Template\u7c7b","text":"<pre><code>s = string.Template(\"${name}\u7684\u8bed\u6587\u6210\u7ee9\u662f${score}\u5206\u3002\")\n\ns.substitute(name=\"\u674e\u660e\", score=98)\ns.substitute({\"name\": \"\u674e\u660e\", \"score\": 98})\n\"\"\"\n\u674e\u660e\u7684\u8bed\u6587\u6210\u7ee9\u662f98\u5206\u3002\n\"\"\"\n\ns.substitute(name=\"\u674e\u660e\")\n\"\"\"\nKeyError: 'score'\n\"\"\"\n\ns.safe_substitute(name=\"\u674e\u660e\")\n\"\"\"\n\u674e\u660e\u7684\u8bed\u6587\u6210\u7ee9\u662f${score}\u5206\u3002\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/string/#capword","title":"capword\u51fd\u6570","text":"<p>\u4f7f\u7528 <code>str.split()</code> \u5c06\u53c2\u6570\u62c6\u5206\u4e3a\u5355\u8bcd\uff0c\u4f7f\u7528 <code>str.capitalize()</code> \u5c06\u5355\u8bcd\u8f6c\u4e3a\u5927\u5199\u5f62\u5f0f\uff0c\u4f7f\u7528 <code>str.join()</code> \u5c06\u5927\u5199\u7684\u5355\u8bcd\u8fdb\u884c\u62fc\u63a5\u3002 \u5982\u679c\u53ef\u9009\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570 sep \u88ab\u7701\u7565\u6216\u4e3a <code>None</code>\uff0c\u5219\u8fde\u7eed\u7684\u7a7a\u767d\u5b57\u7b26\u4f1a\u88ab\u66ff\u6362\u4e3a\u5355\u4e2a\u7a7a\u683c\u7b26\u5e76\u4e14\u5f00\u5934\u548c\u672b\u5c3e\u7684\u7a7a\u767d\u5b57\u7b26\u4f1a\u88ab\u79fb\u9664\uff0c\u5426\u5219 sep \u4f1a\u88ab\u7528\u6765\u62c6\u5206\u548c\u62fc\u63a5\u5355\u8bcd\u3002</p> <pre><code>string.capwords(\"hello world!please input: \")\n\"\"\"\nHello World!please Input:\n\"\"\"\n\nstring.capwords(\"hello world!please input: \", sep=\"!\")\n\"\"\"\nHello world!Please input: \n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/","title":"\u5bfc\u5165\u6a21\u5757","text":"<pre><code>import time\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#_2","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#utccoordinated-universal-time","title":"UTC\uff08Coordinated Universal Time\uff09","text":"<p>\u4e5f\u88ab\u79f0\u4e3a**\u683c\u6797\u5a01\u6cbb\u6807\u51c6\u65f6\u95f4\uff08GMT\uff09**\u3002\u4f7f\u7528UTC\u800c\u4e0d\u662fCUT\u4f5c\u4e3a\u7f29\u5199\u662f\u82f1\u8bed\u4e0e\u6cd5\u8bed\uff08Temps Universel Coordonn\u00e9\uff09\u4e4b\u95f4\u59a5\u534f\u7684\u7ed3\u679c\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#epoch","title":"epoch\uff08\u7eaa\u5143\uff09","text":"<p>\u8d77\u59cb\u7684\u65f6\u95f4\u70b9\uff0c \u8fd9\u5728\u6240\u6709\u5e73\u53f0\u4e0a\u90fd\u662f 1970-01-01, 00:00:00 (UTC)\uff08\u5317\u4eac\u65f6\u95f41970\u5e7401\u670801\u65e508\u65f600\u520600\u79d2\uff09\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#_3","title":"\u65f6\u95f4\u6233\uff08\u7eaa\u5143\u79d2\u6570\uff09","text":"<p>\u6307\u81ea epoch \uff08\u7eaa\u5143\uff09\u65f6\u95f4\u70b9\u4ee5\u6765\u7ecf\u8fc7\u7684\u603b\u79d2\u6570\u3002\u5c5e\u4e8e\u4e00\u4e2a\u7edd\u5bf9\u6982\u5ff5\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#dstdaylight-saving-time","title":"DST\uff08Daylight Saving Time\uff09","text":"<p>\u590f\u4ee4\u65f6\u3002\u4e5f\u79f0\u4e3a\u65e5\u5149\u8282\u7ea6\u65f6\u5236\uff0c\u662f\u4e00\u79cd\u5b63\u8282\u6027\u7684\u65f6\u95f4\u8c03\u6574\u5236\u5ea6\uff0c\u65e8\u5728\u901a\u8fc7\u5728\u590f\u5b63\u5c06\u65f6\u95f4\u8c03\u5feb\u4e00\u5c0f\u65f6\uff0c\u4ee5\u5145\u5206\u5229\u7528\u81ea\u7136\u5149\uff0c\u4ece\u800c\u8282\u7ea6\u80fd\u6e90\u200c\u3002\u200c</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#struct_time","title":"struct_time\u5bf9\u8c61","text":"<p>\u5c5e\u4e8e\u4e00\u4e2a\u76f8\u5bf9\u6982\u5ff5\u3002</p> <pre><code>time.struct_time(tm_year=2024,    # \u5e74 \n                 tm_mon=12,       # \u6708\uff1a[1, 12]\n                 tm_mday=29,      # \u65e5\uff1a[1, 31]\n                 tm_hour=21,      # \u65f6\uff1a[0, 23]\n                 tm_min=33,       # \u5206\uff1a[0, 59]\n                 tm_sec=37,       # \u79d2\uff1a[0, 61]\n                 tm_wday=6,       # \u661f\u671f\uff1a[0, 6]\uff0c0\u4e3a\u5468\u4e00\n                 tm_yday=364,     # \u5f53\u5e74\u7b2c\u51e0\u5929\uff1a[1, 366]\n                 tm_isdst=0       # \u662f\u5426\u590f\u4ee4\u65f6\uff1a0\uff08\u5426\uff09, 1\uff08\u662f\uff09, -1\uff08\u672a\u77e5\uff09\n                 )\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#time","title":"\u5f53\u524d\u65f6\u95f4\u6233\uff1atime","text":"<p><code>[time.time()](https://docs.python.org/zh-cn/3.12/library/time.html#time.time)</code></p> <pre><code>time.time()\n\"\"\"\n1735480695.425197\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#_4","title":"\u65f6\u95f4\u683c\u5f0f\u8f6c\u6362","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#struct_time_1","title":"\u65f6\u95f4\u6233 \u2192 struct_time\u5bf9\u8c61","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#utcstruct_timegmtime","title":"UTC\u5bf9\u5e94struct_time\u5bf9\u8c61\uff1agmtime","text":"<p><code>[time.gmtime([secs])](https://docs.python.org/zh-cn/3.12/library/time.html#time.gmtime)</code></p> <p>\u5c06\u4e00\u4e2a\u65f6\u95f4\u6233\u8f6c\u5316\u4e3aUTC\u5bf9\u5e94\u7684struct_time\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u4f7f\u7528\u5f53\u524d\u65f6\u95f4\u6233\uff08\u5373<code>time.time()</code>\uff09</p> <pre><code>time.gmtime()\ntime.gmtime(1735480695.425197)\ntime.gmtime(time.time())\n\"\"\"\ntime.struct_time(tm_year=2024, \n                 tm_mon=12, \n                 tm_mday=29, \n                 tm_hour=13, \n                 tm_min=58, \n                 tm_sec=15, \n                 tm_wday=6, \n                 tm_yday=364, \n                 tm_isdst=0)\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#struct_timelocaltime","title":"\u672c\u5730\u65f6\u95f4\u5bf9\u5e94struct_time\u5bf9\u8c61\uff1alocaltime","text":"<p><code>[time.localtime([secs])](https://docs.python.org/zh-cn/3.12/library/time.html#time.localtime)</code></p> <p>\u5c06\u4e00\u4e2a\u65f6\u95f4\u6233\u8f6c\u5316\u4e3a\u672c\u5730\u65f6\u95f4\u5bf9\u5e94\u7684struct_time\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u4f7f\u7528\u5f53\u524d\u65f6\u95f4\u6233\uff08\u5373<code>time.time()</code>\uff09</p> <pre><code>time.localtime()\ntime.localtime(1735480695.425197)\ntime.localtime(time.time())\n\"\"\"\ntime.struct_time(tm_year=2024, \n                 tm_mon=12, \n                 tm_mday=29, \n                 tm_hour=21, \n                 tm_min=58, \n                 tm_sec=15, \n                 tm_wday=6, \n                 tm_yday=364, \n                 tm_isdst=0)\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#struct_time-asctime","title":"struct_time\u5bf9\u8c61 \u2192 \u6613\u8bfb\u5b57\u7b26\u4e32\uff1aasctime","text":"<p><code>[time.asctime([t])](https://docs.python.org/zh-cn/3.12/library/time.html#time.asctime)</code></p> <p>\u5c06\u4e00\u4e2astruct_time\u5bf9\u8c61\u8f6c\u5316\u4e3a\u6613\u8bfb\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u4f7f\u7528\u5f53\u524d\u672c\u5730\u65f6\u95f4\u5bf9\u5e94struct_time\u5bf9\u8c61\uff08\u5373<code>time.localtime()</code>\uff09</p> <pre><code>time.asctime()\ntime.asctime(localtime())\n\"\"\"\nSun Dec 29 21:58:15 2024\n\"\"\"\n\ntime.asctime(gmtime())\n\"\"\"\nSun Dec 29 13:58:15 2024\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#struct_time-mktime","title":"\u672c\u5730\u65f6\u95f4struct_time\u5bf9\u8c61 \u2192 \u65f6\u95f4\u6233\uff1amktime","text":"<p><code>[time.mktime(t)](https://docs.python.org/zh-cn/3.12/library/time.html#time.mktime)</code></p> <p>\u5c06\u4e00\u4e2a\u672c\u5730\u65f6\u95f4\u5bf9\u5e94\u7684struct_time\u5bf9\u8c61\u8f6c\u5316\u4e3a\u65f6\u95f4\u6233</p> <pre><code>time.mktime(localtime())\n\"\"\"\n1735480695.0\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#ctime","title":"\u65f6\u95f4\u6233 \u2192 \u672c\u5730\u65f6\u95f4\u6613\u8bfb\u5b57\u7b26\u4e32\uff1actime","text":"<p><code>[time.ctime([secs])](https://docs.python.org/zh-cn/3.12/library/time.html#time.ctime)</code></p> <p>\u5c06\u4e00\u4e2a\u65f6\u95f4\u6233\u8f6c\u5316\u4e3a\u672c\u5730\u65f6\u95f4\u5bf9\u5e94\u7684\u6613\u8bfb\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u4f7f\u7528\u5f53\u524d\u65f6\u95f4\u6233\uff08\u5373<code>time.time()</code>\uff09</p> <pre><code>time.ctime()\ntime.ctime(1735480695.425197)\ntime.ctime(time.time())\n\"\"\"\nSun Dec 29 21:58:15 2024\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#_5","title":"\u65f6\u95f4\u683c\u5f0f\u5316","text":"<p>|\u63a7\u5236\u7b26 ||\u542b\u4e49| |-|-|-| |\u5e74|%y|\u65e0\u4e16\u7eaa\u5e74\u4efd\uff0c[00, 99]| ||%Y|\u6709\u4e16\u7eaa\u5e74\u4efd\uff0c[0001, 9999]| |\u6708|%b|\u6708\u4efd\u540d\u7f29\u5199\uff0cJan~Dec| ||%B|\u6708\u4efd\u540d\u5168\u540d\uff0cJanuary~December| ||%m|\u6708\u4efd\u53f7\uff0c[01, 12]| |\u65e5|%d|\u6708\u4e2d\u65e5\uff0c[01, 31]| ||%j|\u5e74\u4e2d\u65e5\uff0c[001, 366]| |\u65f6|%H|24\u5c0f\u65f6\u5236\uff0c[00, 23]| ||%I|12\u5c0f\u65f6\u5236\uff0c[01, 12]| |\u5206|%M|\u5206\u949f\uff0c[00, 59]| |\u79d2|%S|\u79d2\uff0c[00, 61]| |\u4e0a\u4e0b\u5348|%p|AM, PM| |\u661f\u671f|%a|\u661f\u671f\u540d\u7f29\u5199\uff0cMon~Sun| ||%A|\u661f\u671f\u540d\u5168\u540d\uff0cMonday~Sunday| ||%u|\u661f\u671f\u53f7\uff0c[1, 7]\uff0c1\u4ee3\u8868\u661f\u671f\u4e00| ||%w|\u661f\u671f\u53f7\uff0c[0, 6]\uff0c0\u4ee3\u8868\u661f\u671f\u65e5| |\u5468\u6570|%U|[00, 53]\uff0c\u4e00\u5e74\u4e2d\u7684\u5468\u6570\uff08\u661f\u671f\u65e5\u4f5c\u4e3a\u4e00\u5468\u7684\u7b2c\u4e00\u5929\uff09\u3002 \u5728\u7b2c\u4e00\u4e2a\u661f\u671f\u65e5\u4e4b\u524d\u7684\u65b0\u5e74\u4e2d\u7684\u6240\u6709\u65e5\u5b50\u90fd\u88ab\u8ba4\u4e3a\u662f\u5728\u7b2c 0 \u5468\u3002| ||%W|[00, 53]\uff0c\u4e00\u5e74\u4e2d\u7684\u5468\u6570\uff08\u661f\u671f\u4e00\u4f5c\u4e3a\u4e00\u5468\u7684\u7b2c\u4e00\u5929\uff09\u3002 \u5728\u7b2c\u4e00\u4e2a\u661f\u671f\u4e00\u4e4b\u524d\u7684\u65b0\u5e74\u4e2d\u7684\u6240\u6709\u65e5\u5b50\u90fd\u88ab\u8ba4\u4e3a\u662f\u5728\u7b2c 0 \u5468\u3002| |\u65f6\u533a|%z|\u65f6\u533a\u504f\u79fb\uff0c\u4ee5\u683c\u5f0f +HHMM \u6216 -HHMM \u5f62\u5f0f\u7684 UTC/GMT \u7684\u6b63\u6216\u8d1f\u65f6\u5dee\u6307\u793a\uff0c\u5176\u4e2dH\u8868\u793a\u5341\u8fdb\u5236\u5c0f\u65f6\u6570\u5b57\uff0cM\u8868\u793a\u5c0f\u6570\u5206\u949f\u6570\u5b57 [-23:59, +23:59] \u3002| ||%Z|\u65f6\u533a\u540d\u79f0\uff08\u5982\u679c\u4e0d\u5b58\u5728\u65f6\u533a\uff0c\u5219\u4e0d\u5305\u542b\u5b57\u7b26\uff09\u3002| |\u5176\u5b83|%c|\u9002\u5f53\u65e5\u671f\u548c\u65f6\u95f4\uff0c\u4f8b\uff1aSun Dec 29 23:53:50 2024| ||%x|\u9002\u5f53\u65e5\u671f\uff0c\u4f8b\uff1a12/29/24| ||%X|\u9002\u5f53\u65f6\u95f4\uff0c\u4f8b\uff1a23:58:21| ||%f|\u5fae\u79d2\u6570\uff0c[000000, 999999]\u3002\u53ea\u5e94\u7528\u4e8e <code>strptime()</code>| ||%G|ISO 8601 \u5e74\u4efd\uff08\u7c7b\u4f3c\u4e8e %Y \u4f46\u9075\u5faa\u9488\u5bf9 ISO 8601 \u65e5\u5386\u5e74\u4efd\u7684\u89c4\u5219\uff09\u3002 \u6b64\u5e74\u4efd\u4ece\u5305\u542b\u65e5\u5386\u5e74\u4efd\u7684\u7b2c\u4e00\u4e2a\u661f\u671f\u516d\u7684\u661f\u671f\u5f00\u59cb\u3002| ||%V|ISO 8601 \u661f\u671f\u5e8f\u53f7\uff08\u4ee5\u5341\u8fdb\u5236\u6570 [01,53] \u8868\u793a\uff09\u3002 \u6bcf\u5e74\u7684\u7b2c\u4e00\u4e2a\u661f\u671f\u662f\u5305\u542b\u8be5\u5e74\u7684\u7b2c\u4e00\u4e2a\u661f\u671f\u516d\u7684\u661f\u671f\u3002 \u6bcf\u661f\u671f\u7684\u7b2c\u4e00\u5929\u4e3a\u661f\u671f\u4e00\u3002| ||%%|\"%\"\u5b57\u7b26|</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#struct_time-strftime","title":"struct_time\u5bf9\u8c61 \u2192 \u683c\u5f0f\u5316\u5bf9\u8c61\uff1astrftime","text":"<p><code>[time.strftime(format[, t])](https://docs.python.org/zh-cn/3.12/library/time.html#time.strftime)</code></p> <p>\u5c06\u4e00\u4e2astruct_time\u5bf9\u8c61\u8f6c\u5316\u4e3aformat \u53c2\u6570\u6307\u5b9a\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u4f7f\u7528\u5f53\u524d\u672c\u5730\u65f6\u95f4\u5bf9\u5e94struct_time\u5bf9\u8c61\uff08\u5373<code>time.localtime()</code>\uff09</p> <pre><code>time.strftime(\"\u4eca\u5929\u662f%Y\u5e74%m\u6708%d\u65e5 \u4eca\u5e74\u7b2c%j\u5929\u7b2c%U\u5468 \u73b0\u5728\u662f%H\u65f6%M\u5206%S\u79d2%p %A \u65f6\u533a\uff1a%Z%z\", time.localtime())\n\"\"\"\n\u4eca\u5929\u662f2024\u5e7412\u670829\u65e5 \u4eca\u5e74\u7b2c364\u5929\u7b2c52\u5468 \u73b0\u5728\u662f21\u65f658\u520615\u79d2PM Sunday \u65f6\u533a\uff1a\u4e2d\u56fd\u6807\u51c6\u65f6\u95f4+0800\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#struct_timestrptime","title":"\u683c\u5f0f\u5316\u5bf9\u8c61 \u2192 struct_time\u5bf9\u8c61\uff1astrptime","text":"<p><code>[time.strptime(string[, format])](https://docs.python.org/zh-cn/3.12/library/time.html#time.strptime)</code></p> <p>\u5c06\u4e00\u4e2a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6309\u7167format \u53c2\u6570\u6307\u5b9a\u7684\u683c\u5f0f\u8f6c\u5316\u4e3astruct_time\u5bf9\u8c61</p> <pre><code>time.strptime(\"\u4eca\u5929\u662f2024\u5e7412\u670829\u65e5 \u4eca\u5e74\u7b2c364\u5929\u7b2c52\u5468 \u73b0\u5728\u662f21\u65f658\u520615\u79d2PM Sunday \u65f6\u533a\uff1a\u4e2d\u56fd\u6807\u51c6\u65f6\u95f4+0800\", \"\u4eca\u5929\u662f%Y\u5e74%m\u6708%d\u65e5 \u4eca\u5e74\u7b2c%j\u5929\u7b2c%U\u5468 \u73b0\u5728\u662f%H\u65f6%M\u5206%S\u79d2%p %A \u65f6\u533a\uff1a%Z%z\")\n\"\"\"\ntime.struct_time(tm_year=2024, \n                 tm_mon=12, \n                 tm_mday=29, \n                 tm_hour=21, \n                 tm_min=58, \n                 tm_sec=15, \n                 tm_wday=6, \n                 tm_yday=364, \n                 tm_isdst=0\n                 )\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E6%A0%87%E5%87%86%E5%BA%93/time/#sleep","title":"\u7a0b\u5e8f\u4f11\u7720\uff1asleep","text":"<p><code>[time.sleep(secs)](https://docs.python.org/zh-cn/3.12/library/time.html#time.sleep)</code></p> <p>\u4f7f\u7a0b\u5e8f\u4f11\u7720\u6307\u5b9a\u79d2\u6570\u540e\u518d\u7ee7\u7eed\u8fd0\u884c</p> <pre><code>time.sleep(10)\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%9B%BE%E5%83%8F%E4%B8%8E%E8%A7%86%E9%A2%91/","title":"\u56fe\u50cf","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%9B%BE%E5%83%8F%E4%B8%8E%E8%A7%86%E9%A2%91/#_2","title":"\u56fe\u50cf\u7c7b\u578b","text":"\u56fe\u50cf\u7c7b\u578b \u50cf\u7d20\u7684\u7ec4\u6210 \u50cf\u7d20\u6df1\u5ea6(\u4f4d\u6570) \u989c\u8272\u7a7a\u95f4 \u5355\u8272\u56fe\u50cf \u9ed1\u767d\u56fe\u50cf \u4ec51\u4e2a\u5206\u91cf 1\u4f4d \u4e0d\u4f7f\u7528 \u7070\u5ea6\u56fe\u50cf \u4ec51\u4e2a\u5206\u91cf 2\uff5e12\u4f4d \u4e0d\u4f7f\u7528 \u5f69\u8272\u56fe\u50cf \u5f69\u8272\u56fe\u50cf 3\u4e2a\u5206\u91cf\u4ee5\u4e0a 8\uff5e36\u4f4d RGB\uff0cCMY\uff0cYUV\u7b49 <ol> <li>\u9ed1\u767d\u56fe\u50cf \u6bcf\u4e2a\u50cf\u7d20\u4ec5\u5305\u542b**1\u4e2a\u4eae\u5ea6\u5206\u91cf**\uff0c\u4e14\u4ec5\u75281\u4e2a\u4e8c\u8fdb\u4f4d\uff0c\u5373\u4eae\uff081\uff09\u4e0e\u4e0d\u4eae\uff080\uff09\uff0c\u8868\u793a\u9ed1\uff081\uff09\u4e0e\u767d\uff080\uff09**2\u79cd**\u989c\u8272</li> </ol> <ol> <li>\u7070\u5ea6\u56fe\u50cf \u6bcf\u4e2a\u50cf\u7d20\u4e5f\u4ec5\u5305\u542b**1\u4e2a\u4eae\u5ea6\u5206\u91cf**\uff0c\u901a\u8fc78~12\u4e2a\u4e8c\u8fdb\u4f4d\u6765\u8868\u793a**\\(2^{n}\\)\u79cd**\u4eae\u5ea6</li> </ol> <ol> <li>\u5f69\u8272\u56fe\u50cf \u6bcf\u4e2a\u50cf\u7d20\u4e00\u822c\u6709**3\u4e2a\u4eae\u5ea6\u5206\u91cf**\uff0c\u5206\u522b\u8868\u793a3\u4e2a\u57fa\u8272\uff08\u7ea2R\u3001\u7effG\u3001\u84ddB\uff09\u7684\u4eae\u5ea6\uff0c\u901a\u8fc7\u4e09\u57fa\u8272\u4e0d\u540c\u4eae\u5ea6\u7684\u7ec4\u5408\u6765\u8868\u793a\u4e0d\u540c\u7684\u989c\u8272\u3002 \u5047\u8bbe3\u4e2a\u5206\u91cf\u5206\u522b\u7528n,m,k\u4e2a\u4e8c\u8fdb\u4f4d\u8868\u793a\uff0c\u5219\u53ef\u8868\u793a\\(2^{n+m+k}\\)\u79cd\u4e0d\u540c\u7684\u989c\u8272 \u5176\u4e2d\uff0c\u6bcf\u4e2a\u4eae\u5ea6\u5206\u91cf\u75288\u4e2a\u4e8c\u8fdb\u4f4d\uff0c\u517124\u4e2a\u4e8c\u8fdb\u4f4d\uff0c\u53ef\u8868\u793a\\(2^{24}\\)\u79cd\u989c\u8272\u7684\u5f69\u8272\u56fe\u50cf\u6210\u4e3a\u771f\u5f69\u8272\u56fe\u50cf</li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%9B%BE%E5%83%8F%E4%B8%8E%E8%A7%86%E9%A2%91/#_3","title":"\u56fe\u50cf\u91c7\u6837","text":"<p>\u5c06\u4e00\u5f20\u56fe\u50cf\u5728\u6c34\u5e73\u548c\u5782\u76f4\u65b9\u5411\u4e0a\u7b49\u95f4\u8ddd\u5212\u5206\u6210\u82e5\u5e72\u7f51\u683c\uff0c\u5373\u786e\u5b9a\u7528\u591a\u5c11\u50cf\u7d20\u70b9\u6765\u63cf\u8ff0\u56fe\u50cf</p> <ol> <li> <p>\u50cf\u7d20\u70b9\uff1a\u662f\u7ec4\u6210\u56fe\u50cf\u7684\u6700\u5c0f\u5355\u4f4d</p> </li> <li> <p>\u5206\u8fa8\u7387\uff1a\u5ea6\u91cf\u56fe\u50cf\u7cbe\u7ec6\u7a0b\u5ea6\u7684\u6307\u6807\uff0c\u5206\u8fa8\u7387 = \u6c34\u5e73\u50cf\u7d20\u6570 x \u5782\u76f4\u50cf\u7d20\u6570 \u5bf9\u540c\u4e00\u5c3a\u5bf8\u7684\u4e00\u5e45\u56fe\uff0c\u50cf\u7d20\u6570\u76ee\u8d8a\u591a\uff0c\u56fe\u50cf\u5206\u8fa8\u7387\u8d8a\u9ad8\uff0c\u56fe\u50cf\u8d8a\u7cbe\u7ec6\uff0c\u4f46\u5b58\u50a8\u91cf\u4e5f\u8d8a\u5927 \u5728\u663e\u793a\u6bd4\u4f8b\u76f8\u540c\u65f6\uff0c\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u7684\u56fe\u50cf\u5c3a\u5bf8\u4e0e\u56fe\u50cf\u5206\u8fa8\u7387\u6210\u6b63\u6bd4</p> </li> </ol> <p></p> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%9B%BE%E5%83%8F%E4%B8%8E%E8%A7%86%E9%A2%91/#_4","title":"\u56fe\u50cf\u91cf\u5316","text":"<p>\u5c06\u50cf\u7d20\u70b9\u7684\u91c7\u6837\u503c\u8fdb\u884c\u5206\u7ea7\uff0c\u5b9e\u73b0\u7528\u6709\u9650\u7684\u6570\u8fd1\u4f3c\u5730\u8868\u793a\u8fde\u7eed\u53d8\u5316\u7684\u91c7\u6837\u503c\u3002\u989c\u8272\u5206\u7ea7\u8d8a\u591a\uff0c\u56fe\u50cf\u8d28\u91cf\u8d8a\u597d\u3002 \u7531\u4e8e\u8ba1\u7b97\u673a\u5185\u90e8\u53ea\u80fd\u5b58\u50a8\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u56e0\u6b64\u5e94\u5c06\u6bcf\u4e00\u7ea7\u989c\u8272\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u5982\u56db\u7ea7\u989c\u8272\u81f3\u5c11\u9700\u89812\u4f4d\u4e8c\u8fdb\u5236\u6570\u8868\u793a\uff0c\u800c8\u7ea7\u989c\u8272\u9700\u89813\u4f4d\u4e8c\u8fdb\u5236\u6570\u8868\u793a \u50cf\u7d20\u6df1\u5ea6\uff08\u989c\u8272\u6df1\u5ea6\uff09\uff1a\u50cf\u7d20\u70b9\u7684\u6240\u6709\u989c\u8272\u5206\u91cf\u7684\u4e8c\u8fdb\u4f4d\u6570\u76ee\u4e4b\u548c\uff0c\u5373\u91cf\u5316\u4f4d\u6570\u3002\u50cf\u7d20\u6df1\u5ea6\u8d8a\u591a\uff0c\u80fd\u8868\u793a\u7684\u989c\u8272\u79cd\u7c7b\u8d8a\u591a\uff0c\u4f46\u5360\u7528\u7684\u50a8\u5b58\u7a7a\u95f4\u8d8a\u5927 \u5982\u4e0b\u56fe\u4e2d\u7528\u516b\u7ea7\u989c\u8272\u8868\u793a\u8be5\u56fe\u50cf\uff0c\u6bcf\u4e2a\u50cf\u7d20\u75283\u4f4d\u4e8c\u8fdb\u5236\u6570\u6765\u4ee3\u8868\u4e00\u79cd\u989c\u8272\uff0c\u91cf\u5316\u4f4d\u6570\u4e3a3\uff0c\u50cf\u7d20\u6df1\u5ea6\u4e3a3\uff0c\u6bcf\u4e2a\u50cf\u7d20\u70b9\u5b58\u50a8\u5360\u75283bit</p> <p></p> <p></p> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%9B%BE%E5%83%8F%E4%B8%8E%E8%A7%86%E9%A2%91/#_5","title":"\u56fe\u50cf\u7f16\u7801","text":"\u540d\u79f0 \u538b\u7f29\u7f16\u7801\u65b9\u6cd5 \u6027\u8d28 \u5178\u578b\u5e94\u7528 \u5f00\u53d1\u516c\u53f8(\u7ec4\u7ec7) BMP RLE(\u884c\u7a0b\u957f\u5ea6\u7f16\u7801) \u65e0\u635f Windows\u5e94\u7528\u7a0b\u5e8f Microsoft TIF RLE,LZW(\u5b57\u5178\u7f16\u7801) \u65e0\u635f \u684c\u9762\u51fa\u7248 Aldus\uff0cMicrosoft GIF LZW \u65e0\u635f \u56e0\u7279\u7f51 CompuServe JPEG DCT(\u79bb\u6563\u4f59\u5f26\u53d8\u6362)\uff0cHuffman\u7f16\u7801 \u5927\u591a\u6570\u4e3a\u6709\u635f \u56e0\u7279\u7f51,\u6570\u7801\u76f8\u673a\u7b49 ISO/IEC JP2 \u5c0f\u6ce2\u53d8\u6362\uff0c\u7b97\u672f\u7f16\u7801 \u65e0\u635f/\u6709\u635f \u533b\u5b66\u5e94\u7528\u7b49 ISO/IEC <p>\u786e\u5b9a\u6570\u636e\u6392\u5217\u89c4\u5219\uff0c\u751f\u6210\u76f8\u5e94\u683c\u5f0f\u7684\u6587\u4ef6</p> <p>\u5e38\u89c1\u683c\u5f0f\u7c7b\u578b\uff1abmp\u3001jpg/jpeg\u3001png\u3001gif</p> <ol> <li> <p>bmp \u662fWindows\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u4f7f\u7528\u7684\u4e00\u79cd\u6807\u51c6\u56fe\u50cf\u683c\u5f0f\uff0c\u652f\u6301\u5355\u8272\u300116\u8272\u3001256\u8272\u3001\u771f\u5f69\u8272\u56fe\u50cf\uff0c\u53ef\u4ee5\u8fdb\u884c\u65e0\u635f\u538b\u7f29\uff0c\u4e5f\u53ef\u4e0d\u538b\u7f29\uff0c\u975e\u538b\u7f29\u7684BMP\u6587\u4ef6\u662f\u4e00\u79cd\u901a\u7528\u7684\u56fe\u50cf\u6587\u4ef6\u683c\u5f0f\uff0c\u51e0\u4e4e\u6240\u6709Windows \u5e94\u7528\u8f6f\u4ef6\u90fd\u80fd\u652f\u6301\uff0c\u4fdd\u7559\u4e86\u539f\u59cb\u7684\u6240\u6709\u4fe1\u606f\uff0c\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u76f8\u5bf9\u8f83\u5927</p> </li> <li> <p>jpg/jpeg \u662f\u4e00\u79cd\u6709\u635f\u538b\u7f29\u7684\u683c\u5f0f\uff0c\u662f\u9759\u6b62\u56fe\u50cf\u6570\u636e\u538b\u7f29\u7f16\u7801\u7684\u56fd\u9645\u6807\u51c6\uff0c\u5b83\u53bb\u9664\u4e86\u6211\u4eec\u8089\u773c\u4e2d\u4e0d\u53ef\u5206\u8fa8\u7684\u5185\u5bb9\uff0c\u4ece\u800c\u63d0\u9ad8\u538b\u7f29\u6bd4\uff0c\u964d\u4f4e\u5b58\u50a8\u5bb9\u91cf\uff0c\u662f\u975e\u5e38\u5e38\u89c1\u7684\u56fe\u50cf\u683c\u5f0f\uff0c\u7279\u522b\u9002\u5408\u5404\u79cd\u8fde\u7eed\u8272\u8c03\u7684\u5f69\u8272\u6216\u7070\u5ea6\u56fe\u50cf\u3002\u6700\u65b0\u6807\u51c6\u662fJPEG2000\uff08\u56fe\u50cf\u6587\u4ef6\u6269\u5c55\u540d\u662f .jp2 \uff09\uff0c\u5b83\u91c7\u7528\u66f4\u5148\u8fdb\u7684\u6280\u672f\uff0c\u53ef\u53d6\u5f97\u66f4\u597d\u7684\u6548\u679c</p> </li> <li> <p>png \u662f\u4e00\u79cd\u65e0\u635f\u538b\u7f29\u683c\u5f0f\uff0c\u901a\u8fc7\u4f18\u5316\u6570\u636e\u6392\u5217\u7b97\u6cd5\u63d0\u9ad8\u538b\u7f29\u6bd4\uff0c\u751f\u6210\u7684\u6587\u4ef6\u4f53\u79ef\u4e5f\u8f83\u5c0f\uff0c\u540c\u65f6\u53ef\u652f\u6301\u900f\u660e\u6548\u679c</p> </li> <li> <p>gif \u662f\u4e00\u79cd\u6bd4\u8f83\u5e38\u7528\u7684\u52a8\u6001\u56fe\u50cf\u683c\u5f0f\uff0c\u6700\u591a\u652f\u6301256\u8272\uff0c\u9002\u5408\u7528\u4f5c\u63d2\u56fe\u3001\u526a\u8d34\u753b\u7b49\u8272\u5f69\u6570\u8981\u6c42\u4e0d\u9ad8\u7684\u573a\u5408\uff0c\u6587\u4ef6\u7279\u522b\u5c0f\uff0c\u9002\u5408\u7f51\u7edc\u4f20\u8f93\uff0c\u7f51\u7edc\u4e0a\u7684\u52a8\u6001\u8868\u60c5\u5305\u4e00\u822c\u90fd\u662fgif\u683c\u5f0f\u3002\u5177\u6709\u7d2f\u8fdb\u663e\u793a\u529f\u80fd\uff0c\u9002\u5408\u7f51\u7edc\u6d4f\u89c8\u5668\u89c2\u770b\uff1b\u80fd\u652f\u6301\u900f\u660e\u80cc\u666f\uff08JPEG\u4e0d\u652f\u6301\uff09\uff1b\u80fd\u652f\u6301\u52a8\u753b\uff1b\u4e0d\u9002\u5408\u771f\u5f69\u8272\u56fe\u7247</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%9B%BE%E5%83%8F%E4%B8%8E%E8%A7%86%E9%A2%91/#_6","title":"\u56fe\u50cf\u6570\u636e\u91cf","text":"<p>\u6570\u636e\u91cf=\u6c34\u5e73\u5206\u8fa8\u7387\u00d7\u5782\u76f4\u5206\u8fa8\u7387\u00d7\u50cf\u7d20\u6df1\u5ea6\uff0f8\uff08B\uff09</p> \u56fe\u50cf\u5927\u5c0f 8\u4f4d(256\u8272) 16\u4f4d(65536\u8272) 24\u4f4d(\u771f\u5f69\u8272) 640\u00d7480 300 KB 600 KB 900 KB 1024\u00d7768 768 KB 1.5 MB 2.25 MB 1280\u00d71024 1.25 MB 2.5 MB 3.75 MB"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%9B%BE%E5%83%8F%E4%B8%8E%E8%A7%86%E9%A2%91/#_7","title":"\u89c6\u9891","text":"<p>\u89c6\u9891\u662f\u7531\u4e00\u5b9a\u901f\u7387\u64ad\u653e\u7684\u56fe\u50cf\u5e8f\u5217\uff0c\u6bcf\u4e00\u5e45\u56fe\u50cf\u4e3a1\u5e27\uff0c\u5373\u56fe\u50cf\u662f\u79bb\u6563\u7684\u89c6\u9891\uff0c\u89c6\u9891\u662f\u8fde\u7eed\u7684\u56fe\u50cf</p> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%9B%BE%E5%83%8F%E4%B8%8E%E8%A7%86%E9%A2%91/#_8","title":"\u89c6\u9891\u91c7\u6837","text":"<ol> <li>\u786e\u5b9a\u6bcf\u79d2\u591a\u5c11\u5f20\u56fe\u50cf\uff1a\u5e27\u901f\u7387\uff08FPS\uff09\uff0c\u89c6\u9891\u6bcf\u79d2\u5237\u65b0\u7684\u56fe\u7247\u5f20\u6570\uff0c\u5355\u4f4d\u5e27\u6bcf\u79d2 \u5e27\u901f\u7387\u5c0f\u4e8e24\u5e27\u6bcf\u79d2\uff0c\u4eba \u773c\u4f1a\u611f\u89c9\u753b\u9762\u5361\u987f\uff1b\u8d85\u8fc724\u5e27\u6bcf\u79d2\uff0c\u4eba\u773c\u96be\u4ee5\u5206\u8fa8\u6d41\u7545\u5ea6</li> </ol> <ol> <li>\u56fe\u50cf\u6570\u5b57\u5316 \u5206\u8fa8\u7387\uff1a720P\uff081280 x 720\uff09\u30011080P\uff081920 x 1080\uff09\u30012K\uff082560 x 1440\uff09\u30014K\uff083840 x 2160\uff09</li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%9B%BE%E5%83%8F%E4%B8%8E%E8%A7%86%E9%A2%91/#_9","title":"\u89c6\u9891\u91cf\u5316","text":"<p>\u5373\u5bf9\u89c6\u9891\u7684\u6bcf\u4e00\u5e27\u56fe\u50cf\u5206\u522b\u8fdb\u884c\u91cf\u5316</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%9B%BE%E5%83%8F%E4%B8%8E%E8%A7%86%E9%A2%91/#_10","title":"\u89c6\u9891\u7f16\u7801","text":"<p>\u901a\u8fc7\u7279\u5b9a\u7684\u89c6\u9891\u538b\u7f29\u6280\u672f\uff0c\u5c06\u91c7\u6837\u548c\u91cf\u5316\u8fc7\u7a0b\u4e2d\u6240\u83b7\u5f97\u7684\u6570\u636e\u7ec4\u5408\u6210\u76f8\u5e94\u683c\u5f0f\u7684\u89c6\u9891\u6587\u4ef6</p> <p>\u5e38\u89c1\u683c\u5f0f\u7c7b\u578b\uff1aAVI\u3001MOV\u3001FLV\u3001MP4</p> <ol> <li> <p>AVI \u662f\u5fae\u8f6f\u63a8\u51fa\u7684\u4e00\u79cd\u591a\u5a92\u4f53\u6587\u4ef6\u683c\u5f0f\uff0c\u8fd9\u79cd\u89c6\u9891\u683c\u5f0f\u7684\u4f18\u70b9\u662f\u56fe\u50cf\u8d28\u91cf\u597d\uff0c\u7ecf\u5e38\u88ab\u6211\u4eec\u4f7f\u7528\uff0c\u4f46\u6587\u4ef6\u4f53\u79ef\u8fc7\u4e8e\u5e9e\u5927</p> </li> <li> <p>MOV \u662f\u82f9\u679c\u516c\u53f8\u5f00\u53d1\u7684\u4e00\u79cd\u97f3\u89c6\u9891\u6587\u4ef6\u683c\u5f0f\uff0c\u5177\u6709\u8f83\u9ad8\u7684\u538b\u7f29\u6bd4\u7387\u548c\u8f83\u5b8c\u7f8e\u7684\u89c6\u9891\u6e05\u6670\u5ea6\u3001\u652f\u6301\u8de8\u5e73\u53f0\u7b49\u7279\u70b9\uff0c\u5927\u90e8\u5206\u6444\u50cf\u673a\u3001\u6570\u7801\u76f8\u673a\u91c7\u7528\u8be5\u683c\u5f0f\u6765\u5b58\u50a8\u62cd\u6444\u6570\u5b57\u89c6\u9891</p> </li> <li> <p>FLV \u662f\u4e00\u79cd\u6d41\u5a92\u4f53\u683c\u5f0f\uff0c\u7531\u4e8e\u5b83\u5f62\u6210\u7684\u6587\u4ef6\u6781\u5c0f\u3001\u52a0\u8f7d\u901f\u5ea6\u6781\u5feb\uff0c\u5f88\u591a\u7f51\u7edc\u89c2\u770b\u7684\u89c6\u9891\u6587\u4ef6\u90fd\u662f\u7528\u8fd9\u79cd\u683c\u5f0f</p> </li> <li> <p>MP4(MPEG-4) \u662f\u4e3a\u4e86\u64ad\u653e\u6d41\u5a92\u4f53\u7684\u9ad8\u8d28\u91cf\u89c6\u9891\u800c\u4e13\u95e8\u8bbe\u8ba1\u7684\uff0c\u4ee5\u6c42\u4f7f\u7528\u6700\u5c11\u7684\u6570\u636e\u83b7\u5f97\u6700\u4f73\u7684\u56fe\u50cf\u8d28\u91cf \u73b0\u9636\u6bb5\uff0c\u6211\u4eec\u5728\u7f51\u7edc\u4e0a\u770b\u5230\u7684\u89c6\u9891\u5927\u591a\u6570\u662fmp4\u683c\u5f0f\uff0c\u53ef\u4ee5\u8bf4\u662f\u76ee\u524d\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u79cd\u89c6\u9891\u683c\u5f0f</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%A3%B0%E9%9F%B3/","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u58f0\u97f3\u662f\u7531\u632f\u52a8\u4ea7\u751f\u7684\u4e00\u79cd\u6ce2\uff0c\u901a\u8fc7\u7a7a\u6c14\u8fdb\u884c\u4f20\u64ad\uff0c\u7531\u8bb8\u591a\u4e0d\u540c\u9891\u7387\u7684\u8c10\u6ce2\u7ec4\u6210\uff0c\u8c10\u6ce2\u7684\u9891\u7387\u8303\u56f4\u79f0\u4e3a\u58f0\u97f3\u7684\u201c\u5e26\u5bbd\u201d</p> <p></p> <ol> <li> <p>\u8ba1\u7b97\u673a\u5904\u7406\u7684\u58f0\u97f3\u7c7b\u578b\uff1a</p> </li> <li> <p>\u8bdd\u97f3\u6216\u8bed\u97f3\uff0c\u4e13\u6307\u4eba\u7684\u8bf4\u8bdd\u58f0\u97f3\uff0c\u5e26\u5bbd\u4ec5\u4e3a300\uff5e3400Hz</p> </li> <li> <p>\u5168\u9891\u5e26\u58f0\u97f3(\u5982\u97f3\u4e50\u58f0\u3001\u98ce\u96e8\u58f0\u3001\u6c7d\u8f66\u58f0\u7b49)\uff0c\u5176\u5e26\u5bbd\u53ef\u8fbe\u523020Hz\uff5e20kHz</p> </li> <li> <p>\u4eba\u8033\u53ef\u542c\u5230\u7684\u58f0\u97f3\u7edf\u79f0\u201c\u53ef\u542c\u58f0\u201d\uff0c\u5e26\u5bbd\u4e3a20Hz\uff5e20kHz</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%A3%B0%E9%9F%B3/#_2","title":"\u6570\u5b57\u5316","text":"<ol> <li> <p>\u53d6\u6837 \u628a\u65f6\u95f4\u4e0a\u8fde\u7eed\u7684\u4fe1\u53f7\u8f6c\u6362\u6210\u65f6\u95f4\u4e0a\u79bb\u6563\u7684\u4fe1\u53f7</p> </li> <li> <p>\u91cf\u5316\uff08\u6a21\u6570\u8f6c\u6362\uff09 \u628a\u6bcf\u4e2a\u6837\u672c\u4ece\u6a21\u62df\u91cf\u8f6c\u6362\u6210\u4e3a\u6570\u5b57\u91cf(8\u4f4d\u621616\u4f4d\u6574\u6570\u8868\u793a)</p> </li> <li> <p>\u7f16\u7801 \u5c06\u6240\u6709\u6837\u672c\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u7ec4\u7ec7\u5728\u4e00\u8d77\uff0c\u5e76\u8fdb\u884c\u6570\u636e\u538b\u7f29\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u964d\u4f4e\u5b58\u50a8\u6210\u672c\u548c\u63d0\u9ad8\u5728\u7f51\u7edc\u4e0a\u7684\u4f20\u8f93\u6548\u7387</p> </li> <li> <p>\u5168\u9891\u5e26\u58f0\u97f3 \u56fd\u9645\u6807\u51c6MPEG\uff1b\u5de5\u4e1a\u6807\u51c6Dolby AC-3</p> </li> <li> <p>\u6570\u5b57\u8bed\u97f3 \u56fa\u5b9a\u7535\u8bdd\u4f7f\u7528ADPCM\u7f16\u7801\uff1b\u624b\u673a\u4f7f\u7528\u9ad8\u6548\u7387\u7684\u6df7\u5408\u7f16\u7801\u6280\u672f</p> </li> </ol> <p>\u6240\u8c13\u201cMP3\u97f3\u4e50\u201d\uff0c\u5b83\u662f\u4e00\u79cd\u91c7\u7528MPEG-1\u5c423\u7f16\u7801\u7684\u9ad8\u8d28\u91cf\u6570\u5b57\u58f0\u97f3, \u538b\u7f29\u6bd4\u5927\u7ea610\uff5e12\u500d\uff0c\u4f7f\u4e00\u5f20\u666e\u901aCD\u5149\u76d8\u4e0a\u53ef\u4ee5\u5b58\u50a8\u5927\u7ea6100\u9996MP3\u6b4c\u66f2\uff0c\u53ef\u8fde\u7eed\u64ad\u653e10\u5c0f\u65f6</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%A3%B0%E9%9F%B3/#_3","title":"\u91cd\u5efa","text":"<p>\u628a\u58f0\u97f3\u4ece\u6570\u5b57\u5f62\u5f0f\u8f6c\u6362\u6210\u6a21\u62df\u4fe1\u53f7\u5f62\u5f0f\uff0c\u7531**\u58f0\u5361**\u5b8c\u6210</p> <ol> <li> <p>\u89e3\u7801 \u628a\u538b\u7f29\u7f16\u7801\u7684\u6570\u5b57\u58f0\u97f3\u6062\u590d\u4e3a\u538b\u7f29\u7f16\u7801\u524d\u7684\u72b6\u6001</p> </li> <li> <p>\u6570\u6a21\u8f6c\u6362 \u628a\u58f0\u97f3\u6837\u672c\u4ece\u6570\u5b57\u91cf\u8f6c\u6362\u4e3a\u6a21\u62df\u91cf</p> </li> <li> <p>\u63d2\u503c \u628a\u65f6\u95f4\u4e0a\u79bb\u6563\u7684\u4e00\u7ec4\u6837\u672c\u8f6c\u6362\u6210\u5728\u65f6\u95f4\u4e0a\u8fde\u7eed\u7684\u6a21\u62df\u58f0\u97f3\u4fe1\u53f7</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%A3%B0%E9%9F%B3/#_4","title":"\u64ad\u653e","text":"<p>\u5c06\u6a21\u62df\u58f0\u97f3\u4fe1\u53f7\u7ecf\u5904\u7406\u548c\u653e\u5927\u540e\u9001\u5230**\u97f3\u7bb1(\u626c\u58f0\u5668)**</p> <ol> <li> <p>\u666e\u901a\u97f3\u7bb1 \u63a5\u6536\u7684\u662f\u91cd\u5efa\u7684\u6a21\u62df\u58f0\u97f3\u4fe1\u53f7</p> </li> <li> <p>\u6570\u5b57\u97f3\u7bb1 \u76f4\u63a5\u63a5\u6536\u6570\u5b57\u58f0\u97f3\u4fe1\u53f7\uff0c\u5931\u771f\u66f4\u5c0f</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E5%A3%B0%E9%9F%B3/#_5","title":"\u53c2\u6570","text":"\u58f0\u97f3\u7c7b\u578b \u58f0\u97f3\u4fe1\u53f7\u5e26\u5bbd(Hz) \u53d6\u6837\u9891\u7387(kHz) \u91cf\u5316\u4f4d\u6570(bits) \u58f0\u9053\u6570 \u672a\u538b\u7f29\u65f6\u7684\u7801\u7387 \u6570\u5b57\u8bed\u97f3 300\uff5e3400 8 8 1 64 kb/s CD\u7acb\u4f53\u58f0 20\uff5e20000 44.1 16 2 1411.2 kb/s <ol> <li> <p>\u53d6\u6837\u9891\u7387</p> </li> <li> <p>\u8bed\u97f3\u7684\u53d6\u6837\u9891\u7387\u4f4e\uff0c\u4e00\u822c\u4e3a8kHz</p> </li> <li> <p>\u5168\u9891\u5e26\u58f0\u97f3\uff08\u5982\u97f3\u4e50\uff09\u7684\u53d6\u6837\u9891\u7387\u9ad8\uff0c\u4e00\u822c\u4e3a44.1kHz</p> </li> <li> <p>\u91cf\u5316\u4f4d\u6570 \u901a\u5e38\u4e3a8\u4f4d\u300112\u4f4d\u621616\u4f4d</p> </li> <li> <p>\u58f0\u9053\u6570\u76ee \u5355\u58f0\u9053\u4e3a1\uff0c\u53cc\u58f0\u9053\u4e3a2</p> </li> <li> <p>\u7801\u7387(\u6bd4\u7279\u7387) \u6bcf\u79d2\u949f\u7684\u6570\u636e\u91cf</p> </li> <li> <p>\u672a\u538b\u7f29 \u7801\u7387 = \u53d6\u6837\u9891\u7387 \u00d7 \u91cf\u5316\u4f4d\u6570 \u00d7 \u58f0\u9053\u6570</p> </li> <li> <p>\u538b\u7f29\u540e \u538b\u7f29\u540e\u7684\u7801\u7387 = \u672a\u538b\u7f29\u65f6\u7684\u7801\u7387/\u538b\u7f29\u6bd4</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/","title":"\u6570\u5236\uff08\u8ba1\u6570\u5236\uff09","text":"<p>\u591a\u4f4d\u6570\u7801\u7684\u6784\u6210\u65b9\u5f0f\u53ca\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u7684\u8fdb\u4f4d\u89c4\u5219\u79f0\u4e3a\u8fdb\u4f4d\u8ba1\u6570\u5236\uff0c\u5373\u8fdb\u5236\uff0c\u5982\u5341\u8fdb\u5236\u3001\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236\u7b49</p> <ol> <li> <p>\u6570\u7801\uff08\u6570\u5143\uff09\uff1a\u6570\u5236\u4e2d\u7528\u6765\u8868\u793a\u6570\u636e\u7684\u6570\u5b57\u7b26\u53f7</p> </li> <li> <p>\u57fa\u6570\uff08\u57fa\uff09\uff1a\u6570\u5236\u6240\u4f7f\u7528\u7684\u6570\u7801\u4e2a\u6570\uff0c\u5e38\u7528\"R\"\u8868\u793a\uff0c\u79f0\u4e3aR\u8fdb\u5236\u3002\u4e00\u822c\u5728\u53f3\u4e0b\u6807\u660e\u6216\u540e\u52a0\u5927\u5199\u5b57\u6bcd\u7b26\u53f7\uff0c\u5341\u8fdb\u5236\u53ef\u7701\u7565\u3002</p> </li> <li> <p>\u4f4d\u6743\uff1a\u6570\u7801\u5728\u7b2ci\u4f4d\u4e0a\u7684\u6743\u503c\uff0c\u6574\u6570\u90e8\u5206\u4e3a\\(R^{(i-1)}\\), \u5c0f\u6570\u90e8\u5206\u4e3a\\(R^{-i}\\)</p> </li> </ol> <p></p> <p></p> <p></p> <p></p> \u6570\u5236 \u7b26\u53f7 \u57fa\u6570R \u6570\u7801 \u4f4d\u6743 \u5341\u8fdb\u5236 D (Decimal) 10 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 \\(10^{(i-1)}\\) \u6216 \\(10^{-i}\\) \u4e8c\u8fdb\u5236 B (Binary) 2 0, 1 \\(2^{(i-1)}\\) \u6216 \\(2^{-i}\\) \u516b\u8fdb\u5236 O (Octonary)\u6216Q 8 0, 1, 2, 3, 4, 5, 6, 7 \\(8^{(i-1)}\\) \u6216 \\(8^{-i}\\) \u5341\u516d\u8fdb\u5236 H (Hexadecimal) 16 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F \\(16^{(i-1)}\\) \u6216 \\(16^{-i}\\) <p></p> <ol> <li>\u8ba1\u7b97\u673a\u5185\u90e8\u6240\u6709\u6570\u636e\u3001\u6587\u4ef6\u6216\u6307\u4ee4\u7684\u4f20\u9001\u3001\u50a8\u5b58\u3001\u5904\u7406\u90fd\u662f\u901a\u8fc7\u4e8c\u8fdb\u5236\u7801\u8fdb\u884c\u7684     (1)\u7269\u7406\u4e0a\u5bb9\u6613\u5b9e\u73b0\uff1b     (2)\u8fd0\u7b97\u7b80\u5355\uff1b     (3)\u53ef\u9760\u6027\u9ad8\uff1b     (4)\u6613\u4e8e\u5b9e\u73b0\u903b\u8f91\u8fd0\u7b97\u3002</li> <li>\u5728\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7f16\u5199\u4e2d\uff0c\u4e3a\u4e86\u4e66\u5199\u65b9\u4fbf\uff0c\u4f1a\u91c7\u7528\u5341\u516d\u8fdb\u5236</li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_2","title":"\u8fdb\u5236\u8f6c\u6362","text":"<p>\u53ef\u53c2\u8003\u8fdb\u5236\u8f6c\u6362\u5de5\u5177\u53ca\u6587\u7ae0\u7f51\u7ad9\uff1a\u5728\u7ebf\u8fdb\u5236\u8f6c\u6362 | \u8fdb\u5236\u8f6c\u6362\u5668 \u2014 \u5728\u7ebf\u5de5\u5177 (sojson.com) \u53ef\u81ea\u884c\u7ec3\u4e60\uff0c\u901a\u8fc7\u6b64\u5de5\u5177\u9a8c\u8bc1\u81ea\u5df1\u7684\u8ba1\u7b97\u7ed3\u679c</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#r","title":"\u5341\u8fdb\u5236\u8f6cR\u8fdb\u5236","text":"<p>\u6574\u6570\u90e8\u5206\uff1a\u9664R\u5012\u5e8f\u53d6\u4f59\uff0c\u76f4\u81f3\u5546\u4e3a0</p> <p>\u5c0f\u6570\u90e8\u5206\uff1a\u4e58R\u987a\u5e8f\u53d6\u6574\uff0c\u76f4\u81f3\u5c0f\u6570\u90e8\u5206\u4e3a0\u6216\u6ee1\u8db3\u7cbe\u5ea6\uff08\u53ef\u80fd\u8f83\u957f\uff0c\u6839\u636e\u7cbe\u5ea6\u53d6\u820d\uff09</p> <p>\u7ed3\u679c = \u6574\u6570\u90e8\u5206 + \u5c0f\u6570\u90e8\u5206</p> <p></p> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#r_1","title":"R\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236","text":"<p>\u6bcf\u4e00\u4f4d\u8fdb\u5236\u6570\u4e58\u4ee5\u4f4d\u6743\u540e\u76f8\u52a0\uff08\u6309\u6743\u5c55\u5f00\u3001\u76f8\u52a0)</p> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_3","title":"\u4e8c\u8fdb\u5236\u8f6c\u516b\u3001\u5341\u516d\u8fdb\u5236","text":"<p>\u6574\u6570\u90e8\u5206\u4ece\u53f3\u5f80\u5de6\uff0c\u5c0f\u6570\u90e8\u5206\u4ece\u5de6\u5f80\u53f3\uff0c\u8f6c\u516b\u8fdb\u5236\u4ee53\u4f4d\u4e8c\u8fdb\u5236\u6570\u4e3a\u4e00\u7ec4\uff08\u53d6\u4e09\u5408\u4e00\uff09\uff0c\u8f6c\u5341\u516d\u8fdb\u5236\u4ee54\u4f4d\u4e8c\u8fdb\u5236\u6570\u4e3a\u4e00\u7ec4\uff08\u53d6\u56db\u5408\u4e00\uff09\uff1b\u4e0d\u8db3\u65f6\uff0c\u6574\u6570\u90e8\u5206\u6700\u9ad8\u4f4d\u88650\uff0c\u5c0f\u6570\u90e8\u5206\u6700\u4f4e\u4f4d\u88650\uff08\u4fdd\u8bc1\u88650\u540e\u4f4d\u6743\u4e0d\u53d8\uff09\u3002\u5c06\u6bcf\u7ec4\u4e8c\u8fdb\u5236\u6570\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\uff0c\u6bcf\u7ec4\u5341\u8fdb\u5236\u6570\u7ec4\u5408\u5728\u4e00\u8d77\u5373\u4e3a\u5bf9\u5e94\u8fdb\u5236\u6570</p> <p></p> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_4","title":"\u516b\u3001\u5341\u516d\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236","text":"<p>\u5c06\u6bcf\u4f4d\u8fdb\u5236\u6570\u4ee5\u5341\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236\uff0c\u516b\u8fdb\u5236\u6bcf\u4f4d\u6570\u8f6c\u4e3a3\u4f4d\u4e8c\u8fdb\u5236\u6570\uff08\u53d6\u4e00\u5206\u4e09\uff09\uff0c\u5341\u516d\u8fdb\u5236\u6bcf\u4f4d\u6570\u8f6c\u4e3a4\u4f4d\u4e8c\u8fdb\u5236\u6570\uff08\u53d6\u4e00\u5206\u56db\uff09\uff0c\u4e0d\u8db3\u5de6\u8fb9\u88650\uff08\u4fdd\u8bc1\u88650\u540e\u5404\u4f4d\u6743\u4e0d\u53d8\uff09\uff0c\u7ec4\u5408\u5728\u4e00\u8d77\u5373\u4e3a\u5bf9\u5e94\u4e8c\u8fdb\u5236\u6570</p> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_5","title":"\u516b\u8fdb\u5236\u4e0e\u5341\u516d\u8fdb\u5236\u4e92\u8f6c","text":"<ol> <li> <p>\u516b\u8fdb\u5236/\u5341\u516d\u8fdb\u5236 \u2192 \u5341\u8fdb\u5236 \u2192 \u5341\u516d\u8fdb\u5236/\u516b\u8fdb\u5236</p> </li> <li> <p>\u516b\u8fdb\u5236/\u5341\u516d\u8fdb\u5236 \u2192 \u4e8c\u8fdb\u5236 \u2192 \u5341\u516d\u8fdb\u5236/\u516b\u8fdb\u5236</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_6","title":"\u8fdb\u5236\u8fd0\u7b97","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_7","title":"\u7b97\u672f\u8fd0\u7b97","text":"<p>\u9022R\u8fdb1\uff0c\u501f1\u5f53R\uff08\u53c2\u8003\u5341\u8fdb\u5236\uff09</p> <ol> <li>\u52a0\u6cd5</li> </ol> <p></p> <p></p> <p></p> <ol> <li>\u51cf\u6cd5</li> </ol> <p></p> <p></p> <p></p> <ol> <li>\u4e58\u6cd5</li> </ol> <p></p> <p></p> <p></p> <ol> <li>\u9664\u6cd5</li> </ol> <p></p> <p></p> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_8","title":"\u903b\u8f91\u8fd0\u7b97","text":"<ol> <li>\u903b\u8f91\u4e0e\u3001\u903b\u8f91\u4e58\uff08&amp;\uff0cand\uff0c^\uff09\uff1a\u67090\u5373\u4e3a0\uff0c\u5426\u5219\u4e3a1</li> </ol> <ol> <li>\u903b\u8f91\u6216\u3001\u903b\u8f91\u52a0\uff08|\uff0cor\uff0cv\uff09\uff1a\u67091\u5373\u4e3a1\uff0c\u5426\u5219\u4e3a0</li> </ol> <ol> <li>\u903b\u8f91\u975e\u3001\u53d6\u53cd\uff08!\uff0cnot\uff09\uff1a#1 = 0, !0= 1</li> </ol> <ol> <li>\u903b\u8f91\u5f02\u6216\uff08^\uff0cxor\uff09\uff1a\u540c0\u5f021</li> </ol> <ol> <li>\u903b\u8f91\u540c\u6216\uff08xnor\uff09\uff1a\u540c1\u5f020\uff0c\u7f16\u7a0b\u8bed\u8a00\u65e0\u8be5\u8fd0\u7b97\uff0c\u901a\u8fc7\u5f02\u6216\u5b9e\u73b0</li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_9","title":"\u6570\u636e\u5355\u4f4d","text":"<ol> <li> <p>\u4e8c\u8fdb\u4f4d\u3001\u4f4d\u3001\u6bd4\u7279\uff08b\uff0cbit\uff09\uff1a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u53ea\u6709\u4e24\u4e2a\u53d6\u503c0\u548c1\uff0c\u65e0\u5927\u5c0f\u4e4b\u5206 \u5b58\u50a8\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3001\u7ec4\u6210\u6570\u5b57\u4fe1\u606f\u7684\u6700\u5c0f\u5355\u4f4d \u5982 1011 \u4e3a4 \u4f4d\u62164 bit\u30014 b</p> </li> <li> <p>\u4f4d\u6a21\u5f0f\uff08\u4f4d\u6d41\uff09\uff1a\u591a\u4e2a\u4f4d\u7ec4\u6210\u4e00\u4e2a\u4f4d\u6a21\u5f0f \u5982 1011 \u4e3a\u957f\u5ea6\u4e3a4\u7684\u4f4d\u6a21\u5f0f</p> </li> <li> <p>\u5b57\u8282\uff08B\uff0cByte\uff09\uff1a\u957f\u5ea6\u4e3a8\u7684\u4f4d\u6a21\u5f0f \u5b58\u50a8\u4fe1\u606f\u7684\u57fa\u672c\u5355\u4f4d\u3001\u6570\u636e\u5904\u7406\u7684\u6700\u5c0f\u5355\u4f4d \u5982 10111010 \u4e3a1\u5b57\u8282\u62161 B 1 B = 8 bit</p> </li> <li> <p>\u5b57\uff1a\u662fCPU\u4e00\u6b21\u5904\u7406\u7684\u6570\u636e\uff0c\u901a\u5e38\u7531**\u4e00\u4e2a\u5b57\u8282\u6216\u82e5\u5e72\u4e2a\u5b57\u8282**\u7ec4\u6210 \u5b57\u957f\uff1a\u8ba1\u7b97\u673a\u4e00\u6b21\u80fd\u5904\u7406\u7684\u5b9e\u9645\u4f4d\u6570\u957f\u5ea6\uff0c\u8861\u91cf\u8ba1\u7b97\u6027\u80fd \u5982 \u8ba1\u7b97\u673a\u768432\u4f4d\u548c64\u4f4d\u5904\u7406\u5668\uff0c64\u4f4d\u5904\u7406\u5668\u4e00\u6b21\u63d0\u53d68\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff0c\u800c32\u4f4d\u5219\u4e00\u6b21\u63d0\u53d64\u4e2a\u5b57\u8282\u7684\u6570\u636e</p> </li> </ol> \u8fdb\u5236 \u5e94\u7528 \u5355\u4f4d\u6362\u7b97 \u4e8c\u8fdb\u5236 \u5185\u5b58\u3001\u5916\u5b58\uff08\u64cd\u4f5c\u7cfb\u7edf\u663e\u793a\uff09\u3001cache\u3001\u534a\u5bfc\u4f53\u5b58\u50a8\u5668\u82af\u7247\u3001\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u5927\u5c0f 1 KB\uff08\u5343\u5b57\u8282\uff09 = \\(2^{10}\\) B = 1024 B 1 MB\uff08\u5146\u5b57\u8282\u3001\u5146\uff09 = \\(2^{20}\\) B = 1024 KB 1 GB\uff08\u5409\u5b57\u8282\u3001\u5343\u5146\uff09 = \\(2^{30}\\) B = 1024 MB 1 TB\uff08\u592a\u5b57\u8282\uff09 = \\(2^{40}\\) B = 1024 GB PB\uff08\u62cd\u5b57\u8282\uff09\u3001EB\uff08\u827e\u5b57\u8282\uff09\u3001ZB\uff08\u6cfd\u5b57\u8282\uff09\u3001YB\uff08\u5c27\u5b57\u8282\uff09\u3001BB \u5341\u8fdb\u5236 \u5916\u5b58\uff08\u5382\u5546\u6807\u6ce8\uff09 1 KB\uff08\u5343\u5b57\u8282\uff09 = \\(10^{3}\\) B = 1000 B 1 MB\uff08\u5146\u5b57\u8282\u3001\u5146\uff09 = \\(10^{6}\\) B = 1000 KB 1 GB\uff08\u5409\u5b57\u8282\u3001\u5343\u5146\uff09 = \\(10^{9}\\) B = 1000 MB 1 TB\uff08\u592a\u5b57\u8282\uff09 = \\(10^{12}\\) B = 1000 GB PB\uff08\u62cd\u5b57\u8282\uff09\u3001EB\uff08\u827e\u5b57\u8282\uff09\u3001ZB\uff08\u6cfd\u5b57\u8282\uff09\u3001YB\uff08\u5c27\u5b57\u8282\uff09\u3001BB \u9891\u7387\uff08Hz\uff09 1 KHz = $10^{3} $ Hz = 1000 Hz 1 MHz = \\(10^{6}\\) Hz = 1000 KHz 1 GHz = \\(10^{9}\\) Hz = 1000 MHz \u4f20\u8f93\u901f\u7387\uff08b/s\u3001bps\uff09 1 Kb/s = \\(10^{3}\\) b/s = 1000 b/s 1 Mb/s = \\(10^{6}\\) b/s = 1000 Kb/s 1 Gb/s = \\(10^{9}\\) b/s = 1000 Mb/s 1 Tb/s = \\(10^{12}\\) b/s = 1000 Gb/s"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_10","title":"\u6574\u6570\u8868\u793a\u6cd5","text":"<p>\u5047\u8bbe\u4e00\u4e2a\u5b57\u957f\u4e3a8\u7684\u8ba1\u7b97\u673a\uff0c\u5373\u53ea\u80fd\u5904\u74068\u4f4d\u4e8c\u8fdb\u5236\u6570\u7684\u8fd0\u7b97\u3002\u5df2\u77e5**\u8ba1\u7b97\u673a\u53ea\u6709\u52a0\u6cd5\u5668\uff0c\u6ca1\u6709\u51cf\u6cd5\u5668\uff0c\u51cf\u6cd5\u53ea\u80fd\u901a\u8fc7\u52a0\u6cd5\u5b9e\u73b0**\uff0c\u53735 - 5 = 0\uff0c\u8ba1\u7b97\u673a\u53ea\u80fd\u901a\u8fc75 +\uff08-5\uff09= 0\u5b9e\u73b0\u3002</p> <p>5\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a\\(101_{(2)}\\)\uff0c\u82e5\u76f4\u63a5\u5c06\u5176\u5b58\u5165\u8ba1\u7b97\u673a\u4e2d\uff0c\u5219\u4e3a0000 0101\uff0c\u6b64\u5373\u65e0\u7b26\u53f7\u6574\u6570\u539f\u7801\u3002\u4e3a\u4e86\u5b58\u50a8\u8d1f\u6570\uff0c\u9996\u5148\u63d0\u51fa\u4e86\u5c06**\u6700\u9ad8\u4f4d\u4f5c\u4e3a\u7b26\u53f7\u4f4d\uff0c\u4ee5\u7b26\u53f7\u4f4d\u4e3a0\u4ee3\u8868\u6b63\u6570\uff0c\u7b26\u53f7\u4f4d\u4e3a1\u4ee3\u8868\u8d1f\u6570**\u3002\u56e0\u6b64\uff0c5\u7684\u5185\u90e8\u8868\u793a\u4ecd\u4e3a0000 0101\uff0c\u800c-5\u7684\u5185\u90e8\u8868\u793a\u5219\u4e3a1000 0101\uff0c\u6b64\u5373\u5e26\u7b26\u53f7\u6574\u6570\u539f\u7801\u3002\u6b64\u65f6\u82e5\u4f5c\u8fd0\u7b97\uff1a5 + (-5) = 0000 0101 + 1000 0101 = 1000 1010 = -10\uff0c\u4e0e\u5df2\u77e5\u4e8b\u5b9e\u4e0d\u7b26\u3002</p> <p>\u540e\u7ee7\u63d0\u51fa\u4e86**\u53cd\u7801\uff0c\u5373\u539f\u7801\u7b26\u53f7\u4f4d\u4fdd\u6301\u4e0d\u53d8\uff0c\u975e\u7b26\u53f7\u4f4d\u53d6\u53cd**\uff0c\u4f46**\u6b63\u6570\u7684\u53cd\u7801\u7b49\u4e8e\u539f\u7801**\u3002\u52195\u7684\u53cd\u7801\u4ecd\u4e3a0000 0101\uff0c-5\u7684\u53cd\u7801\u4e3a1111 1010\u3002\u6b64\u65f6\u82e5\u4f5c\u8fd0\u7b97\uff1a5 + (-5) = 0000 0101 + 1111 1010 = 1111 1111\uff0c\u5c06\u7ed3\u679c\u518d\u6b21\u8f6c\u4e3a\u539f\u7801: 1000 0000\uff0c\u5373\u6700\u7ec8\u8fd0\u7b97\u7ed3\u679c\u4e3a-0\uff0c\u4e3a\u975e\u5e38\u89c4\u6570\u3002</p> <p>\u6b63\u662f\u7531\u4e8e\u539f\u7801\u548c\u53cd\u7801\u7528\u4e8e\u8fd0\u7b97\u5b58\u5728\u9519\u8bef\uff0c\u800c\u4e14\u539f\u7801\u4e2d0000 0000\u8868\u793a+0,  1000 0000\u8868\u793a-0\uff0c\u53cd\u7801\u4e2d0000 0000\u8868\u793a+0\u548c 1111 1111\u8868\u793a-0\uff0c\u4e0e\u5e38\u8bc6\u4e0d\u7b26\uff0c\u56e0\u6b64\u4e0d\u9002\u5408\u4f7f\u7528\u539f\u7801\u548c\u53cd\u7801\u6765\u5b58\u50a8\u548c\u5904\u7406\u6570\u636e\u3002</p> <p>\u6700\u540e\u63d0\u51fa\u4e86**\u8865\u7801\uff0c\u5373\u53cd\u7801+1**\uff0c\u4f46**\u6b63\u6570\u7684\u8865\u7801\u4e5f\u7b49\u4e8e\u539f\u7801**\u3002\u52195\u7684\u8865\u7801\u4ecd\u4e3a0000 0101\uff0c\u800c-5\u7684\u8865\u7801\u4e3a1111 1011\u3002\u6b64\u65f6\u82e5\u505a\u8fd0\u7b97\uff1a5 + (-5) = 0000 0101 + 1111 1011 = 1 0000 0000\uff0c\u7531\u4e8e\u53ea\u80fd\u5904\u74068\u4f4d\uff0c\u6240\u4ee5\u6700\u9ad8\u4f4d1\u6ea2\u51fa\u88ab\u5ffd\u7565\uff0c\u7ed3\u679c\u4e3a0000 0000\uff0c\u539f\u7801=\u8865\u7801\uff0c\u4e0e\u4e8b\u5b9e\u76f8\u7b26\u3002</p> <p></p> <p>\u6240\u4ee5\uff0c\u76ee\u524d**\u8ba1\u7b97\u673a\u5185\u90e8\u90fd\u662f\u4ee5\u8865\u7801\u7684\u5f62\u5f0f\u5b58\u50a8\u548c\u5904\u7406\u6570\u636e\uff0c\u4f46\u6700\u7ec8\u7ed3\u679c\u662f\u4ee5\u539f\u7801\u5f62\u5f0f\u5448\u73b0**\uff0c\u5373\u8fd0\u7b97\u901a\u8fc7\u8865\u7801\u8fdb\u884c\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e5f\u662f\u8865\u7801\uff0c\u4f46\u6700\u7ec8\u8f93\u51fa\u9700\u8981\u5c06\u8865\u7801\u8f6c\u6362\u4e3a\u539f\u7801\u624d\u662f\u6211\u4eec\u6240\u80fd\u7406\u89e3\u7684\u8ba1\u7b97\u7ed3\u679c\u3002</p> <p>|     \u4e8c\u8fdb\u5236 |  \u65e0\u7b26\u53f7\u6570|                               \u5e26\u7b26\u53f7\u6570|||| |-|-|-|-|-|-| |||\u4f5c\u4e3a\u539f\u7801|\u4f5c\u4e3a\u53cd\u7801|\u4f5c\u4e3a\u8865\u7801|\u4f5c\u4e3a\u79fb\u7801| |0000 0000|0|+0|+0|0|-128| |0000 0001|1|1|1|1|-127| |......|......|......|......|......|......| |0111 1111|127|127|127|127|-1| |1000 0000|128|-0|-127|-128|0| |1000 0001|129|-1|-126|-127|1| |......|......|......|......|......|......| |1111 1110|254|-126|-1|-2|126| |1111 1111|255|-127|-0|-1|127|</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_11","title":"\u65e0\u7b26\u53f7\u6574\u6570","text":"<p>\u65e0\u7b26\u53f7\u4f4d\uff0c\u6bcf\u4e00\u4f4d\u90fd\u7528\u6765\u5b58\u50a8\u6570\u636e\uff0c\u7a7a\u4f4d\u88650\uff0c\u4e00\u5171\u53ef\u8868\u793a\\(2^{n}\\)\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u8303\u56f4\u4e3a**0 ~ \\(2^{n}-1\\)**\uff0c\u82e5\u8be5\u65e0\u7b26\u53f7\u6574\u6570\u8d85\u8fc7\u4e86\u8be5\u8303\u56f4\uff0c\u9ad8\u4f4d\u5c06\u4f1a\u53d1\u751f\u6ea2\u51fa\uff0c\u4ec5\u4fdd\u7559\u4f4e\u4f4d\u7684n\u4f4d</p> <p>8\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u7684\u8303\u56f4\u4e3a 0000 0000 ~ 1111 1111\uff0c\u4ee3\u88680 ~255\uff0c\u82e5\u7528\u6765\u8868\u793a256\uff081 0000 0000\uff09\uff0c\u5219\u6700\u9ad8\u4f4d\u6ea2\u51fa\u65e0\u6cd5\u5904\u7406\uff0c\u53ea\u4fdd\u75590000 0000\uff0c\u6700\u7ec8\u8868\u793a0\uff08\u7c7b\u4f3c\u4e8e0\uff5e255\u7684\u949f\u8868\uff0c\u8fc7\u4e86255\u91cd\u65b0\u5faa\u73af\uff09</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_12","title":"\u5e26\u7b26\u53f7\u6574\u6570\uff08\u5b9a\u70b9\u6574\u6570\uff09","text":"<p>\u5c0f\u6570\u70b9\u4f4d\u7f6e\u9ed8\u8ba4\u56fa\u5b9a\u9690\u542b\u5728\u6700\u4f4e\u4f4d\u53f3\u4fa7\uff0c\u5b9e\u9645\u5e76\u4e0d\u50a8\u5b58\uff0c\u7528\u4e8e\u8868\u793a**\u7eaf\u6574\u6570**</p> <p>\uff08\u6ce8\uff1a\u4e0b\u56fe\u4e2dn\u4ee3\u8868\u7684\u662f\u6570\u503c\u90e8\u5206\u7684\u4f4d\u6570\uff0c\u4e0d\u662f\u5b57\u957f\uff09</p> <p></p> <p>\u771f\u503c\uff1a\u5e26\u7b26\u53f7\u7684\u6570\uff0c\u4e00\u822c\u4e66\u5199\u8868\u793a\u7684\u6570</p> <p>\u673a\u5668\u6570\uff08\u673a\u5668\u7801\uff09\uff1a\u7b26\u53f7\u6570\u5b57\u5316\u7684\u6570\uff0c\u8ba1\u7b97\u673a\u5185\u90e8\u7f16\u7801\u7684\u6570\uff0c\u901a\u8fc7\u539f\u7801\u3001\u53cd\u7801\u3001\u8865\u7801\u3001\u79fb\u7801\u7b49\u8868\u793a\u3002\u6700\u9ad8\u4f4d\u4e3a\u7b26\u53f7\u4f4d\uff0c1\u8868\u793a\u8d1f\u6570\uff0c0\u8868\u793a\u6b63\u6570\uff0c\u5176\u4f59n-1\u4e2a\u5b58\u50a8\u4f4d\u7528\u6765\u5b58\u50a8\u6570\u636e\uff0c\u6574\u6570\u9ad8\u4f4d\u88650\uff0c\u5c0f\u6570\u4f4e\u4f4d\u88650\uff0c\u5171\u53ef\u8868\u793a\\(2\\times2^{n-1} = 2^{n}\\)\u4e2a\u6709\u7b26\u53f7\u6574\u6570</p> <p>\u5982\uff1a +10 \u2192 \u771f\u503c\\(x\\)\uff1a+1010 \u2192 \u539f\u7801\\([x]_{\u539f}\\)\uff1a0000 1010 - 10 \u2192 \u771f\u503c\\(x\\)\uff1a- 1010 \u2192 \u539f\u7801\\([x]_{\u539f}\\)\uff1a1000 1010</p> <ol> <li>\u539f\u7801 \u4ee3\u8868\u7684\u8303\u56f4\u4e3a ****\\(-(2^{n-1} -1)\\) ~ \\(\\pm0\\) ~ \\((2^{n-1} - 1)\\)\uff0c8\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u539f\u7801\u8303\u56f4\u4e3a 11111111 ~ 100000000 ~ 00000000 ~ 01111111\uff08-127 ~ \u00b10 ~ +127\uff09 +10 \u2192 \\(x\\)\uff1a+1010 \u2192 \\([x]_{\u539f}\\) = \\(x\\) = 0000 1010</li> </ol> <ul> <li>10 \u2192 \\(x\\)\uff1a- 1010 \u2192 \\([x]_{\u539f}\\) = \\(2^{7} + \\mid -1010 \\mid\\)  = 1000 0000 + 1010 = 1000 1010</li> </ul> <p>\\([x]_{\u539f} = \\begin{cases}x &amp; 2^{n-1}&gt;x\\geq 0\\\\2^{n-1}-x = 2^{n-1}+\\mid x \\mid  &amp; 0 \\geq x &gt; -2^{n-1}\\end{cases}\\)</p> <ol> <li>\u53cd\u7801 \u4ee3\u8868\u7684\u8303\u56f4\u4e3a \\(-(2^{n-1} -1)\\) ~ \\(\\pm0\\) ~ \\((2^{n-1} - 1)\\)\uff0c8\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u53cd\u7801\u8303\u56f4\u4e3a1000 0000 ~ 1111 1111 ~ 0000 0000 ~ 0111 1111\uff08-127 ~ \u00b10 ~+127\uff09 +10 \u2192  \\([x]_{\u539f}\\) = 0000 1010 \u2192 \\([x]_{\u53cd} = [x]_{\u539f}\\) = 0000 1010</li> </ol> <ul> <li>10 \u2192  \\([x]_{\u539f}\\) = 1000 1010 \u2192 \\([x]_{\u53cd} =\\) 1111 0101</li> <li>10 \u2192 \\(x\\) = -1010 \u2192 \\([x]_{\u53cd}\\) = \\((2^{8}-1)\\) - 1010 = 1111 1111 - 1010 = 1111 0101</li> </ul> <ol> <li> <p>\u6b63\u6570\uff1a\u53cd\u7801 = \u539f\u7801</p> </li> <li> <p>\u8d1f\u6570\uff1a\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u975e\u7b26\u53f7\u4f4d\u53d6\u53cd (= 1111 1111 + \\(x\\))</p> </li> </ol> <p>\\([x]_{\u8865} = \\begin{cases}x &amp; 2^{n-1}&gt;x\\geq 0\\\\(2^{n}-1)+x = (2^{n}-1)- \\mid x \\mid &amp; 0 \\geq x &gt; -2^{n-1}\\end{cases}\\)</p> <ol> <li>\u8865\u7801 \u4ee3\u8868\u7684\u8303\u56f4\u4e3a**\\(-2^{n-1}\\sim(2^{n-1}-1)\\)\uff0c8\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8865\u7801\u8303\u56f4\u4e3a1000 0000 ~ 1111 1111 ~ 0000 0000 ~ 0111 1111\uff08-128 ~ -1 ~ 0 ~ 127\uff09\u3002\u8865\u7801\u7684\u4f18\u70b9\u662f\u80fd\u591a\u8868\u793a\u4e00\u4e2a\u8d1f\u6570\\(-2^{n-1}\\)\uff0c\u4e14\u4ec5\u4fdd\u7559\u4e00\u4e2a0\u3002**\u8865\u7801\u4e0e\u539f\u7801\u4e92\u8865 +10 \u2192  \\([x]_{\u539f}\\) = 0000 1010 \u2192 \\([x]_{\u8865} = [x]_{\u539f}\\) = 0000 1010</li> </ol> <ul> <li>10 \u2192  \\([x]_{\u53cd}\\) = 1111 0101 \u2192 \\([x]_{\u8865} = [x]_{\u53cd}\\)\u672b\u4f4d + 1 = 1111 0101 + 1 = 1111 0110</li> <li>10 \u2192 \\(x\\) = -1010 \u2192 \\([x]_{\u8865}\\) = \\(2^{8}\\) - 1010 = 1 0000 0000 - 1010 = 1111 0110</li> </ul> <ol> <li> <p>\u6b63\u6570\uff1a\u8865\u7801 = \u539f\u7801</p> </li> <li> <p>\u8d1f\u6570\uff1a\u8865\u7801 = \u53cd\u7801\u672b\u4f4d + 1 (= 1 0000 0000 + \\(x\\))</p> </li> </ol> <p>\\([x]_{\u8865} = \\begin{cases}x &amp; 2^{n-1}&gt;x\\geq 0\\\\2^{n}+x = 2^{n}- \\mid x \\mid &amp; 0 &gt; x \\geq -2^{n-1}\\end{cases}\\)</p> <p>\u8865\u7801\u7684\u6982\u5ff5\u7c7b\u4f3c\u4e8e\u751f\u6d3b\u4e2d\u7684\u65f6\u949f\uff0812h\u5236\uff09\u3002\u4f8b\u5982\u73b0\u5728\u4e3a6\u65f6\uff0c\u82e5\u60f3\u52303\u65f6\uff0c\u53ef\u4ee5\u67096-3=3\u65f6\uff0c\u4e5f\u53ef\u4ee5\u662f6+9=3\u65f6\uff0c\u6b64\u65f6\u53ef\u4ee5\u8bf4+9\u662f-3\u4ee512\u4e3a\u6a21\u7684\u8865\u6570\uff0c\u5373\u53ef\u5b9e\u73b0\u4ee5\u52a0\u6cd5\u4ee3\u66ff\u51cf\u6cd5 \u6a21\u662f\u6307\u4e00\u4e2a\u8ba1\u91cf\u7cfb\u7edf\u7684\u8ba1\u6570\u8303\u56f4\uff0c\u65f6\u949f\u7684\u8ba1\u91cf\u8303\u56f4\u662f1~12\uff0c\u6a21=12\u3002\u8868\u793an\u4f4d\u7684\u8ba1\u7b97\u673a\u8ba1\u91cf\u8303\u56f4\u662f**0 ~ \\(2^{n}-1\\)**\uff0c\u6a21=\\(2^{n}\\) 1. \u4e00\u4e2a\u8d1f\u6570\u52a0\u4e0a\u6a21\u5373\u5f97\u8be5\u8d1f\u6570\u7684\u8865\u6570 2. \u4e00\u4e2a\u6b63\u6570\u548c\u4e00\u4e2a\u8d1f\u6570\u4e92\u4e3a\u8865\u6570\u65f6\uff0c\u4ed6\u4eec\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u5373\u4e3a\u6a21</p> <ol> <li>\u79fb\u7801 \u4ee3\u8868\u7684\u8303\u56f4\u4e3a**\\(-2^{n-1}\\sim(2^{n-1}-1)\\)\uff0c8\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u79fb\u7801\u8303\u56f4\u4e3a0000 0000 ~1111 1111\uff08-128 ~ 127\uff09\u3002\u4f18\u70b9\u662f\u80fd\u591f\u76f4\u63a5\u5224\u65ad\u771f\u503c\u5927\u5c0f\u3002\u4e00\u822c\u7528\u4e8e\u8868\u793a\u6d6e\u70b9\u6570\u7684\u9636\u7801\u3002 **\u79fb\u7801 = \u8865\u7801\u7b26\u53f7\u4f4d\u53d6\u53cd</li> </ol> <p>\\([x]_{\u79fb} = 2^{n-1} + x, 2^{n-1}&gt;x\\geq-2^{n-1}\\)</p> <p></p> <p>\u5df2\u77e5\u4efb\u610f\u6570Y\u6c42\u51768\u4f4d\u539f\u7801\uff1a\u7edd\u5bf9\u503c\u8f6c\u4e8c\u8fdb\u5236\uff0c\u9ad8\u4f4d\u88650\u8db38\u4f4d\uff0c\u786e\u5b9a\u7b26\u53f7\u4f4d     +10\u7684\u539f\u7801\uff1a\u7edd\u5bf9\u503c\u8f6c\u4e8c\u8fdb\u5236 \u2192 1010\uff0c\u9ad8\u4f4d\u88650\u8db38\u4f4d \u2192 0000 1010\uff0c\u6b63\u6570\u6700\u9ad8\u4f4d\u4e3a0 \u2192 0000 1010     - 10\u7684\u539f\u7801\uff1a\u7edd\u5bf9\u503c\u8f6c\u4e8c\u8fdb\u5236 \u2192 1010\uff0c\u9ad8\u4f4d\u88650\u8db38\u4f4d \u2192 0000 1010\uff0c\u8d1f\u6570\u6700\u9ad8\u4f4d\u4e3a1 \u2192 1000 1010</p> <p>**\u5df2\u77e5\u8d1f\u6570(-X)\u6c42\u51768\u4f4d\u8865\u7801\uff1a\u53cd\u7801\u672b\u4f4d + 1     -10\u7684\u8865\u7801\uff1a\u539f\u7801 \u2192 1000 1010\uff0c\u53cd\u7801 \u2192 11110101\uff0c+1 \u2192 1111 0110</p> <p>\u5df2\u77e5\u8d1f\u6570(-X)\u6c42\u51768\u4f4d\u8865\u7801\uff1a\\(2^{n} + x\\)     -10\u7684\u8865\u7801\uff1a\\(x\\)\uff1a-1010 \u2192 \u8ba1\u7b97\\(2^{8}\\) - 1010 = 1 0000 0000 - 1010 = 1111 0110     -128\u7684\u8865\u7801\uff1a\\(x\\)\uff1a-1000 0000 \u2192 \u8ba1\u7b97\\(2^{8}\\) - 1000 0000 = 1 0000 0000 - 1000 0000 = 1000 0000**</p> <p>**\u5df2\u77e58\u4f4d\u8865\u7801\u6c42\u8d1f\u6570(-X)\uff1a\u8865\u7801\u7684\u8865\u7801\uff0c\u5373\u7b26\u53f7\u4f4d\u4e0d\u53d8\u53d6\u53cd\u672b\u4f4d+1\u5f97\u539f\u7801\uff0c\u4e8c\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\uff08\u7b26\u53f7\u4f4d\u4e0d\u7b97\uff09     1111 0110 \u2192 1000 1001 \u2192 1000 1010 \u2192 -10</p> <p>\u5df2\u77e58\u4f4d\u8865\u7801\u6c42\u8d1f\u6570(-X)\uff1a\u9006\u8fd0\u7b97\uff0c\u5373\u672b\u4f4d-1\u7b26\u53f7\u4f4d\u4e0d\u53d8\u53d6\u53cd\u5f97\u539f\u7801\uff0c\u4e8c\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\uff08\u7b26\u53f7\u4f4d\u4e0d\u7b97\uff09     1111 0110 \u2192 1111 0101 \u2192 1000 1010 \u2192 -10</p> <p>\u5df2\u77e58\u4f4d\u8865\u7801\u6c42\u8d1f\u6570(-X)\uff1a\\([x]_{\u8865}\\) - \\(2^{n}\\)     1111 0110 \u2192 246 \u2192 246 - \\(2^{8}\\) \u2192 -10     1000 0000 \u2192 \\(2^{7}\\) \u2192 \\(2^{7}\\) - \\(2^{8}\\) = -128**</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_13","title":"\u5b9a\u70b9\u5c0f\u6570\u8868\u793a\u6cd5","text":"<p>\u5c0f\u6570\u70b9\u9ed8\u8ba4\u56fa\u5b9a\u9690\u542b\u5728\u7b26\u53f7\u4f4d\u53f3\u4fa7\uff0c\u5b9e\u9645\u5e76\u4e0d\u50a8\u5b58\uff0c\u7528\u4e8e\u8868\u793a**\u7eaf\u5c0f\u6570**\uff0c\u59820.75\u30010.1222\u30010.5\u7b49</p> <p>\u5b9a\u70b9\u5c0f\u6570\u7684\u8868\u793a\u65b9\u6cd5\u6709\u539f\u7801\u3001\u53cd\u7801\u3001\u8865\u7801\uff0c\u8f6c\u6362\u65b9\u5f0f\u540c\u5b9a\u70b9\u6574\u6570(\u516c\u5f0f\u4e2dn=1)\uff0c\u4ec5\u4e8c\u8fdb\u5236\u4f4d\u6743\u4e0d\u540c\uff0c\u4f4e\u4f4d\u88650</p> <p></p> <ol> <li> <p>\u539f\u7801\uff1a\\(-(1-2^{1-n})\\) \u2264 x \u2264 \\(1-2^{1-n}\\)</p> </li> <li> <p>\u53cd\u7801\uff1a\\(-(1-2^{1-n})\\) \u2264 x \u2264 \\(1-2^{1-n}\\)</p> </li> <li> <p>\u8865\u7801\uff1a-1 \u2264 x \u2264 \\(1-2^{1-n}\\)</p> </li> </ol> \u4e8c\u8fdb\u5236 \u4f5c\u4e3a\u539f\u7801 \u4f5c\u4e3a\u53cd\u7801 \u4f5c\u4e3a\u8865\u7801 0.000 0000 +0 +0 0 0.000 0001 \\(2^{-7}\\) \\(2^{-7}\\) \\(2^{-7}\\) ...... ...... ...... ...... 0.111 1111 1-\\(2^{-7}\\) 1-\\(2^{-7}\\) 1-\\(2^{-7}\\) 1.000 0000 -0 -(1-\\(2^{-7}\\)) -1 1.000 0001 \\(-2^{-7}\\) -(1-\\(2^{-6}\\)) -(1-\\(2^{-7}\\)) ...... ...... ...... ...... 1.111 1110 -(1-\\(2^{-6}\\)) -\\(2^{-7}\\) -\\(2^{-6}\\) 1.111 1111 -(1-\\(2^{-7}\\)) -0 \\(-2^{-7}\\) <p>+0.75     \u771f\u503c\uff1a+0.11     \u539f\u7801\uff1a0.110 0000     \u53cd\u7801\uff1a0.110 0000     \u8865\u7801\uff1a0.110 0000</p> <ul> <li>0.75     \u771f\u503c\uff1a-0.11     \u539f\u7801\uff1a1.110 0000     \u53cd\u7801\uff1a1.001 1111 = 1.111 1111 -0.11     \u8865\u7801\uff1a1.010 0000 = 1 0.000 0000 - 0.11</li> </ul>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_14","title":"\u6d6e\u70b9\u6570\u8868\u793a\u6cd5","text":"<p>\u6d6e\u70b9\u6570\u5373\u5b9e\u6570\uff0c\u662f\u6307\u673a\u5668\u6570\u8868\u793a\u4e2d\u5c0f\u6570\u70b9\u4f4d\u7f6e\u4e0d\u56fa\u5b9a\u7684\u6570\uff0c\u80fd\u591f\u5728\u4f4d\u6570\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\u589e\u52a0\u6570\u636e\u8868\u793a\u8303\u56f4\uff0c\u5305\u62ec\u6574\u6570\u90e8\u5206\u548c\u5c0f\u6570\u90e8\u5206\uff0c\u4f46\u5728\u8ba1\u7b97\u673a\u4e2d\u5b58\u50a8\u53ea\u5b58\u50a8\u6570\u503c\u548c\u5c0f\u6570\u70b9\u5728\u6570\u503c\u4e2d\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_15","title":"\u79d1\u5b66\u8ba1\u6570\u6cd5","text":"<p>\\(N = M \\times r^{E}\\)</p> <p>r\uff1a\\(R^{i}\\)\uff08i\u22651\uff0c\u4e00\u822c\u4e3a1\uff09\uff0c\u65e0\u9700\u5b58\u50a8</p> <p>E\uff1a\u9636\u7801\uff0c\u53cd\u6620\u6570\u503c\u8303\u56f4\u5927\u5c0f\u53ca\u5c0f\u6570\u70b9\u7684\u5b9e\u9645\u4f4d\u7f6e\u3002\u8ba1\u7b97\u673a\u4e2d\u5e38\u4e3a\u8865\u7801\u6216\u79fb\u7801\u8868\u793a\u7684\u5b9a\u70b9\u6574\u6570\uff08\u7eaf\u6574\u6570\uff09</p> <p>M\uff1a\u5c3e\u6570\uff0c\u6570\u503c\u90e8\u5206\u4f4d\u6570\u53cd\u6620\u7cbe\u5ea6\u3002\u4f4d\u6570\u8d8a\u591a\uff0c\u7cbe\u5ea6\u8d8a\u9ad8\u3002\u8ba1\u7b97\u673a\u4e2d\u5e38\u4e3a\u539f\u7801\u6216\u8865\u7801\u8868\u793a\u7684\u5b9a\u70b9\u5c0f\u6570\uff08\u7eaf\u5c0f\u6570\uff09</p> <p>\u5341\u8fdb\u5236\uff1a+302657264526 = \\(+3.026 \\times 10^{11}\\)\uff0c+11\u4e3a\u9636\u7801\uff0c+3.026\u4e3a\u5c3e\u6570</p> <p>\u4e8c\u8fdb\u5236\uff1a+0.375 = + 0.011B =$ + 0.00011 \\times 2^{2}B$ =$ +0.00011 \\times 2^{10}B$\uff0c+10\u4e3a\u9636\u7801\uff0c+0.00011\u4e3a\u5c3e\u6570</p> <pre><code>         +0.375 = + 0.011B = $+0.11\\times2^{-01}B$ \uff0c-01\u4e3a\u9636\u7801\uff0c+0.11\u4e3a\u5c3e\u6570\n</code></pre> <p></p> <p>\u5047\u8bbe\u4e00\u4e2a8\u5b57\u957f\u7684\u8ba1\u7b97\u673a\uff0c\u9636\u7801\u51713\u4f4d\uff0c\u9636\u7b261\u4f4d\uff0c\u5c3e\u6570\u51715\u4f4d\uff0c\u6570\u7b261\u4f4d\uff0c\u5c06+0.375\u8fdb\u884c\u5b58\u50a8\uff0c\u5747\u4ee5\u8865\u7801\u5f62\u5f0f\uff0c\u4ee5\u4e0a\u8ff0\u7b2c\u4e00\u79cd\u4e3a\u4f8b \u9636\u7801     \u771f\u503c\uff1a+10 \u2192 \u539f\u7801\uff1a010 \u2192 \u8865\u7801\uff1a010 \u5c3e\u6570     \u771f\u503c\uff1a+0.00011 \u2192 \u539f\u7801\uff1a0.0001\uff08\u4f4e\u4f4d1\u4e22\u5f03\uff09 \u2192 \u8865\u7801\uff1a0.0001</p> <p>\u7ed3\u679c\uff1a01000001 \u7ed3\u679c \u2192 \u6d6e\u70b9\u6570\uff1a\\(+0.0001 \\times 2^{10}\\) = +0.01 = +0.25</p> <p>\u53ef\u89c1\u7ed3\u679c\u4e27\u5931\u4e86\u7cbe\u5ea6\uff0c\u56e0\u6b64\u6d6e\u70b9\u6570\u5b58\u50a8\u65f6\u5c3e\u6570\u8fd8\u9700\u8981\u89c4\u683c\u5316</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#_16","title":"\u5c3e\u6570\u89c4\u683c\u5316","text":"<p>\u5f53\u5c3e\u6570\u6570\u503c\u90e8\u5206\u7684\u6700\u9ad8\u4f4d\u4e3a\u65e0\u6548\u503c0\u65f6\uff0c\u7ed3\u679c\u4f1a\u4e27\u5931\u7cbe\u5ea6\u3002\u56e0\u6b64\uff0c\u89c4\u683c\u5316\u6d6e\u70b9\u6570\u5373\u5c3e\u6570\u6700\u9ad8\u6570\u503c\u4f4d\u5fc5\u987b\u4e3a\u4e00\u4e2a\u6709\u6548\u503c1\uff0c\u5373\\(\u00b10.1xxxx \\times r^{E}\\)</p> <p>\u4e0a\u8ff0+0.375\u7684\u7b2c\u4e8c\u79cd\u8868\u793a\u5373\u4e3a\u89c4\u683c\u5316\u8868\u793a\uff0c\u76f8\u5bf9\u4e8e\u7b2c\u4e00\u79cd\uff0c\u6570\u503c\u90e8\u5206\u5411\u5de6\u79fb\u4e863\u4f4d\uff0c\u9636\u7801\u51cf3\uff0c\u8fd9\u53eb\u5de6\u89c4\u3002</p> <ol> <li> <p>\u5de6\u89c4 \u5c3e\u6570\u7b97\u6570\u5de6\u79fb\u6216\u8005\u5c0f\u6570\u70b9\u53f3\u79fb\uff0c\u6bcf\u79fb1\u4f4d\uff0c\u9636\u7801-1</p> </li> <li> <p>\u53f3\u89c4 \u5c3e\u6570\u7b97\u6570\u53f3\u79fb\u6216\u8005\u5c0f\u6570\u70b9\u5de6\u79fb\uff0c\u6bcf\u79fb1\u4f4d\uff0c\u9636\u7801+1</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA/#ieee-754","title":"IEEE 754\u6807\u51c6","text":"<p>\u8be5\u6807\u51c6\u4e2d\uff0c\u9636\u7801\u7528\u79fb\u7801\u8868\u793a\uff0c\u5728\u79fb\u7801\u7684\u5b9a\u4e49\u4e2d\uff1a\u79fb\u7801 = \u771f\u503c + \u504f\u7f6e\u503c</p> <p>\u5982-46.375 = -101110.011 B = \\(-1.01110011 \\times 2^{5} B\\) = \\(-1.01110011 \\times 2^{101} B\\)\uff0c\u8f6c\u6362\u4e3a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u8868\u793a\uff1a \u6570\u7b26\uff1a1\uff08\u8d1f\u6570\uff09 \u5c3e\u6570M \uff1a 1.01110011000000000000000 B \u9636\u7801E \uff1a101 B + 01111111 B = 1000 0100 B \u7ed3\u679c\uff1a11000010001110011000000000000000 B</p> <p>\u5982\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570C0A00000 H\uff0c\u8868\u793a\u7684\u6d6e\u70b9\u6570\uff1a \u4e8c\u8fdb\u5236\uff1a11000000101000000000000000000000 B \u6570\u7b26\uff1a1\uff08\u8d1f\u6570\uff09 \u5c3e\u6570M\uff1a1.01000000000000000000000 B \u9636\u7801\uff1a10000001 B - 01111111 B = 10 B \u7ed3\u679c\uff1a\\(-1.01 \\times 2^{10} B\\) = \\(-1.01 \\times 2^{2} B\\) = -101 B = -5.0</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/","title":"\u57fa\u672c\u6982\u5ff5","text":"<ol> <li> <p>\u6587\u672c\uff1a\u6307\u8ba1\u7b97\u673a\u4e2d\u7684\u6587\u5b57\u4fe1\u606f\uff0c\u662f\u8ba1\u7b97\u673a\u4e2d\u6700\u5e38\u7528\u7684\u4e00\u79cd\u6570\u5b57\u5a92\u4f53\uff0c\u7531\u4e00\u7cfb\u5217 \u201c\u5b57\u7b26\u201d\u7ec4\u6210</p> </li> <li> <p>\u5b57\u7b26\uff1a\u5404\u79cd\u6587\u5b57\u548c\u7b26\u53f7\u7684\u603b\u79f0\uff0c\u5305\u62ec\u5404\u56fd\u5bb6\u6587\u5b57\u3001\u6807\u70b9\u7b26\u53f7\u3001\u56fe\u5f62\u7b26\u53f7\u3001\u6570\u5b57\u7b49</p> </li> <li> <p>\u5b57\u7b26\u96c6\uff1a\u591a\u4e2a\u5b57\u7b26\u7684\u96c6\u5408\uff0c\u5b57\u7b26\u96c6\u79cd\u7c7b\u8f83\u591a\uff0c\u6bcf\u4e2a\u5b57\u7b26\u96c6\u5305\u542b\u7684\u5b57\u7b26\u53ca\u4e2a\u6570\u4e0d\u540c</p> </li> <li> <p>\u5b57\u7b26\u7f16\u7801\uff1a\u4e5f\u79f0\u5b57\u96c6\u7801\uff0c\u5c31\u662f\u628a\u5b57\u7b26\u96c6\u4e2d\u7684\u5b57\u7b26\uff0c\u7f16\u7801\u4e3a\u6307\u5b9a\u96c6\u5408\u4e2d\u67d0\u4e00\u5bf9\u8c61\uff0c\u4ee5\u4fbf\u6587\u672c\u5728\u8ba1\u7b97\u673a\u4e2d\u5b58\u50a8\u548c\u901a\u8fc7\u901a\u4fe1\u7f51\u7edc\u8fdb\u884c\u4f20\u9012\uff0c\u5373\u5b57\u7b26\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e00\u822c\u4ee5**\u5341\u516d\u8fdb\u5236**\u8868\u793a\uff08\u8ba1\u7b97\u673a\u5185\u90e8\u5b58\u50a8\u4ecd\u7136\u662f\u4e8c\u8fdb\u5236\uff09</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#_2","title":"\u6587\u672c\u5206\u7c7b","text":"<ol> <li>\u7b80\u5355\u6587\u672c\uff08\u7eaf\u6587\u672c\uff09\uff1a.txt \u6ca1\u6709\u5b57\u4f53\u3001\u5b57\u53f7\u7684\u53d8\u5316\uff0c\u65e0\u56fe\u7247\u548c\u8868\u683c\uff0c\u4e5f\u4e0d\u80fd\u5efa\u7acb\u8d85\u94fe\u63a5\uff0c\u7531\u4e00\u4e32\u7528\u4e8e\u8868\u8fbe\u6b63\u6587\u5185\u5bb9\u7684\u5b57\u7b26\u7f16\u7801\u6240\u7ec4\u6210\uff0c\u51e0\u4e4e\u4e0d\u5305\u542b\u4efb\u4f55\u5176\u4ed6\u7684\u683c\u5f0f\u4fe1\u606f\u548c\u7ed3\u6784\u4fe1\u606f</li> </ol> <ol> <li> <p>\u4e30\u5bcc\u683c\u5f0f\u6587\u672c\uff1a.doc\u3001.rtf\u3001.htm\u3001.html\u3001.pdf \u6709\u5b57\u4f53\u3001\u5b57\u53f7\u7b49\u5c5e\u6027\u53d8\u5316\u3001\u8bbe\u7f6e\u4e86\u6bb5\u843d\u548c\u9875\u9762\u6392\u7248\u683c\u5f0f\u7684\u6587\u672c\uff0c\u5305\u542b\u7684\u4fe1\u606f\u66f4\u591a\uff0c\u8868\u73b0\u529b\u66f4\u5f3a\uff0c\u9664\u4e86\u6b63\u6587\u5185\u5bb9\u4e4b\u5916\uff0c\u8fd8\u4f7f\u7528\u4e86\u8bb8\u591a\u201c\u6807\u8bb0\u201d\u6765\u63cf\u8ff0\u5b57\u7b26\u7684\u5c5e\u6027\u548c\u683c\u5f0f\u7684\u8bbe\u7f6e\uff0c\u5982word\u6587\u6863</p> </li> <li> <p>\u8d85\u6587\u672c\uff08www\u7f51\u9875\uff09\uff1a.doc\u3001.rtf\u3001.htm\u3001.html\u3001.pdf\u3001.hlp \u4e5f\u5c5e\u4e8e\u4e30\u5bcc\u683c\u5f0f\u6587\u672c\uff0c\u9664\u5bcc\u6587\u672c\u7279\u5f81\u5916\uff0c\u6587\u672c\u4e2d\u8fd8\u542b\u6709\u8d85\u94fe\uff0c\u4f7f\u6587\u672c\u5448\u73b0\u4e3a\u4e00\u79cd\u7f51\u72b6\u7ed3\u6784</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#_3","title":"\u7f16\u7801\u4e0e\u89e3\u7801","text":"<p>\u7f16\u7801\uff1a\u6839\u636e\u5b57\u7b26\u96c6\u6620\u5c04\uff0c\u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5bf9\u5e94\u5b57\u7b26\u7f16\u7801\u3002\u5982\u4e2d\u6587\u5b57\u7b26\u201c\u764c\u201d\u7684gb2312\u7f16\u7801\u4e3a\u201cB0 A9\u201d\u3002</p> <p>\u89e3\u7801\uff1a\u6839\u636e\u5b57\u7b26\u96c6\u6620\u5c04\uff0c\u5c06\u5b57\u7b26\u7f16\u7801\u8f6c\u6362\u4e3a\u5bf9\u5e94\u5b57\u7b26\u3002\u5982gb2312\u7f16\u7801\u201cB0 A9\u201d\u5bf9\u5e94\u7684\u5b57\u7b26\u4e3a\u201c\u764c\u201d\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#_4","title":"\u897f\u6587\u5b57\u7b26\u7f16\u7801","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#ascii","title":"\u2606ASCII\u5b57\u7b26\u96c6","text":"<p>ASCII\u7801\uff08America Standard Code for Information Interchange\uff09\uff0c\u5373\u7f8e\u56fd\u4fe1\u606f\u4ea4\u6362\u6807\u51c6\u7801\u3002\u5b83\u5df2\u88ab\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7(ISO)\u5b9a\u4e3a\u56fd\u9645\u6807\u51c6\uff0c\u79f0\u4e3aISO 646\u6807\u51c6\u3002\u9002\u7528\u4e8e\u6240\u6709\u62c9\u4e01\u6587\u5b57\u5b57\u6bcd\u3002</p> <ol> <li>\u6807\u51c6ASCII\u7801 \u4f7f\u7528\u6307\u5b9a\u7684**\u5355\u5b57\u82827\u4f4d\u4e8c\u8fdb\u5236\u6570**\u7ec4\u5408\u6765\u8868\u793a\\(2^{7}\\)\u4e2a\u5b57\u7b26\uff0c\u53730000 0000 B ~ 0111 1111 B\u6765\u8868\u793a128\u4e2a\u5b57\u7b26\uff0c\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u8303\u56f4\u4e3a0~127\uff0c\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u8303\u56f4\u4e3a**00 H~7F H** \u56fd\u9645\u4e0a\u6700\u901a\u7528\u7684\u897f\u6587\u5b57\u7b26\u7f16\u7801\uff0c\u662f\u76ee\u524d\u8ba1\u7b97\u673a\u4e2d\uff0c\u7279\u522b\u662f\u5fae\u578b\u8ba1\u7b97\u673a\u4e2d\u4f7f\u7528\u6700\u666e\u904d\u7684\u5b57\u7b26\u7f16\u7801\u96c6</li> </ol> ASCII\u7801\uff08\u4e8c\u8fdb\u5236\uff09 \u5341\u8fdb\u5236 \u5341\u516d\u8fdb\u5236 \u5b57\u7b26 \u6570\u91cf 0011 0000 B ~ 0011 1001 B 48 ~ 57 30 H ~ 39 H \u6570\u5b570~9 10 0100 0001 B ~ 0101 1010 B 65 ~ 90 41 H ~ 5A H \u5927\u5199\u5b57\u6bcdA~Z 26 0110 0001 B ~ 0111 1010 B 97 ~ 122 61 H ~ 7A H \u5c0f\u5199\u5b57\u6bcda~z 26 0000 0000 B ~ 0001 1111 B 0 ~ 31 00 H ~ 1F H \u63a7\u5236\u5b57\u7b26 32 ... ... ... \u901a\u7528\u5b57\u7b26 34 <p></p> <ol> <li>\u6269\u5c55ASCII\u7801 \u4e3a\u5145\u5206\u5229\u7528\u5b57\u8282\u7684\u6bcf\u4e00\u4f4d\uff0c\u5728\u6807\u51c6ASCII\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u4f7f\u6700\u9ad8\u4f4d\u4e3a1\u7684\u7f16\u7801\u3002\u4f7f\u7528\u4e8c\u8fdb\u5236\u65701000 0000 B ~ 1111 1111 B\u6765\u8868\u793a\u989d\u5916\u7684128\u4e2a**\u4e0d\u5e38\u7528\u5b57\u7b26**\uff0c\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u8303\u56f4\u4e3a128~255\uff0c\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u8303\u56f4\u4e3a80 H ~ FF H</li> </ol> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#_5","title":"\u4e2d\u6587\u5b57\u7b26\u7f16\u7801","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#gb2312","title":"\u2606GB2312\u5b57\u7b26\u96c6","text":"<p>\u8be5\u6807\u51c6\u4e8e1980\u5e74\u53d1\u5e03\uff0c1981\u5e745\u67081\u65e5\u5f00\u59cb\u5b9e\u65bd\uff0c\u9002\u7528\u4e8e\u6c49\u5b57\u5904\u7406\u3001\u6c49\u5b57\u901a\u8baf\u7b49\u7cfb\u7edf\u95f4\u7684\u4fe1\u606f\u4ea4\u6362\uff0c\u901a\u884c\u4e8e\u4e2d\u56fd\u5927\u9646\uff0c\u65b0\u52a0\u5761\u7b49\u5730\u4e5f\u91c7\u7528\u3002\u8be5\u6807\u51c6\u5212\u520694\u4e2a\u533a\uff0c\u6bcf\u4e2a\u533a\u5185\u670994\u4e2a\u4f4d\uff0c\u7528\u6765\u5bf9\u5e943755\u4e2a\u4e00\u7ea7\u6c49\u5b57\u30013008\u4e2a\u4e8c\u7ea7\u6c49\u5b57\u4ee5\u53ca682\u4e2a\u975e\u6c49\u5b57\u5b57\u7b26\uff0c\u5176\u4f59\u90e8\u5206\u7a7a\u767d\u3002\u5176\u4e2d\uff0c\u533a\u53f7\u548c\u4f4d\u53f7\u5404\u7528\u4e00\u4e2a\u5b57\u8282\u5b58\u50a8\uff0c\u6240\u4ee5\u7528\u8be5\u6807\u51c6\u6765**\u5b58\u50a81\u4e2a\u6c49\u5b57\u9700\u89812\u4e2a\u5b57\u8282\u3002**\u81ea2017\u5e743\u670823\u65e5\u8d77\uff0c\u8be5\u6807\u51c6\u8f6c\u5316\u4e3a\u63a8\u8350\u6027\u6807\u51c6\uff1aGB/T2312-1980\uff0c\u4e0d\u518d\u5f3a\u5236\u6267\u884c\u3002</p> <p></p> <p></p> <p></p> <p></p> \u533a \u5b57\u7b26 \u6570\u91cf 01~09 \u7279\u6b8a\u7b26\u53f7\u3001\u6570\u5b57\u3001\u82f1\u6587\u5b57\u7b26\u3001\u5236\u8868\u7b26\u7b49\u975e\u6c49\u5b57\u5b57\u7b26 682 10~15 \u7a7a\u533a\uff0c\u7559\u5f85\u6269\u5c55 16~55 \u5e38\u7528\u6c49\u5b57\uff08\u4e00\u7ea7\u6c49\u5b57\uff09\uff0c\u6309\u62fc\u97f3\u6392\u5e8f 3755 56~87 \u975e\u5e38\u7528\u6c49\u5b57\uff08\u4e8c\u7ea7\u6c49\u5b57\uff09\uff0c\u6309\u90e8\u9996\u7b14\u753b\u6392\u5e8f 3008 88~94 \u7a7a\u767d\uff0c\u7559\u5f85\u6269\u5c55 <p></p> <p></p> <ol> <li> <p>\u5916\u7801\uff08\u8f93\u5165\u7801\u3001\u8f93\u5165\u6cd5\u7f16\u7801\uff09 \u7528\u6765\u5c06\u6c49\u5b57\u8f93\u5165\u5230\u8ba1\u7b97\u673a\u4e2d\u7684\u4e00\u7ec4\u952e\u76d8\u7b26\u53f7\uff0c\u4f5c\u4e3a\u6c49\u5b57\u8f93\u5165\u7528\u7684\u7f16\u7801\uff0c\u82f1\u6587\u5b57\u7b26\u5219\u65e0\u9700\u8f93\u5165\u7801</p> </li> <li> <p>\u6570\u5b57\u7f16\u7801\uff1a\u5982\u533a\u4f4d\u7801</p> </li> <li> <p>\u62fc\u97f3\u7f16\u7801\uff1a\u5982\u5168\u62fc\u3001\u53cc\u62fc\u3001\u81ea\u7136\u7801\u7b49</p> </li> <li> <p>\u5b57\u5f62\u7f16\u7801\uff1a\u5982\u4e94\u7b14\u3001\u8868\u5f62\u7801\u3001\u90d1\u7801\u7b49</p> </li> <li> <p>\u533a\u4f4d\u7801 \u533a\u53f7\uff0801<sub>94\uff09\u4e0e\u4f4d\u53f7\uff0801</sub>94\uff09\u7684\u7ec4\u5408\uff0c\u533a\u53f7\u548c\u4f4d\u53f7\u5404\u81ea\u72ec\u7acb \u5341\u8fdb\u5236\uff1a01 01 ~ 94 94 \u4e8c\u8fdb\u5236\uff1a00000001 00000001 B ~ 01011110 01011110 B \u5341\u516d\u8fdb\u5236\uff1a01 01 H ~ 5E 5E H</p> </li> <li> <p>\u56fd\u6807\u7801\uff08\u4ea4\u6362\u7801\uff09= \u5341\u516d\u8fdb\u5236\u533a\u4f4d\u7801 + 20 20 H \u662f\u6c49\u5b57\u4fe1\u606f\u4ea4\u6362\u7801\uff0c\u5373\u4e0d\u540c\u7684\u5177\u6709\u6c49\u5b57\u5904\u7406\u529f\u80fd\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e4b\u95f4\u5728\u4ea4\u6362\u6c49\u5b57\u4fe1\u606f\u65f6\u6240\u4f7f\u7528\u7684\u4ee3\u7801\u6807\u51c6\u3002\u4e3a\u4e86\u907f\u514d\u4e0e\u901a\u8baf\u65f6\u4f7f\u7528\u7684\u63a7\u5236\u5b57\u7b26\u7f16\u7801\u51b2\u7a81\uff0c\u5373ASCII\u7801\u4e2d0~31\uff0c\u56e0\u6b64\u89c4\u5b9a\u6bcf\u4e2a\u6c49\u5b57\u7684\u533a\u53f7\u548c\u4f4d\u53f7\u90fd\u5fc5\u987b\u52a032\uff0c\u6b64\u5373\u56fd\u6807\u7801 \u5341\u8fdb\u5236\uff1a+32 32\u2192 33 33 ~ 126 126 \u4e8c\u8fdb\u5236\uff1a+00100000 00100000 B \u2192 00100001 00100001 B ~ 01111110 01111110 B \u5341\u516d\u8fdb\u5236\uff1a+ 20 20 H \u2192 21 21 H ~ 7E 7E H</p> </li> <li> <p>\u673a\u5185\u7801 = \u5341\u516d\u8fdb\u5236\u56fd\u6807\u7801 + 80 80 H = \u5341\u516d\u8fdb\u5236\u533a\u4f4d\u7801 + A0 A0 H \u662f\u8ba1\u7b97\u673a\u5185\u90e8\u8bc6\u522b\u6c49\u5b57\u7684\u7f16\u7801\uff0c\u4e3a\u4e86\u4e0e\u6807\u51c6ASCII\u7801\u533a\u522b\uff0c\u5c06\u56fd\u6807\u7801\u7684\u533a\u53f7\u548c\u4f4d\u53f7\u6700\u9ad8\u4f4d\u53d8\u4e3a1\uff0c\u5373\u90fd\u52a0\u4e0a128 ****\u5341\u8fdb\u5236\uff1a+128 128 \u2192 161 161 ~ 254 254 \u4e8c\u8fdb\u5236\uff1a+10000000 10000000 B\u2192 10100001 10100001 B ~ 11111110 11111110 B \u5341\u516d\u8fdb\u5236\uff1a+80 80 H \u2192 A1 A1 H ~ FE FE H</p> </li> <li> <p>\u5b57\u5f62\u7801\uff08\u5b57\u6a21\u7801\u3001\u8f93\u51fa\u7801\uff09 \u5c5e\u4e8e\u70b9\u9635\u4ee3\u7801\u3002\u5c06\u4e00\u4e2a\u6c49\u5b57\u653e\u5165n\u884cm\u5217\u7684\u70b9\u9635\u4e2d\uff0c\u6bcf\u4e2a\u5c0f\u683c\u4ee51\u4f4d\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u6709\u7b14\u753b\u7ecf\u8fc7\u7684\u65b9\u683c\u503c\u4e3a1\uff0c\u5426\u5219\u4e3a0 \u4e00\u4e2an\u884cm\u5217\u7684\u70b9\u9635\u5b58\u50a8\u4e00\u4e2a\u6c49\u5b57\u5360\u7528\u7684\u5b57\u8282\u6570 = \\(n \\times m\\div 8\\)</p> </li> </ol> <p></p> <p>\u5982\u201c\u764c\u201d\u5b57\u4f4d\u4e8e\u7b2c16\u533a\u7684\u7b2c09\u4f4d \u533a\u4f4d\u7801 = 16 09 D = 10 09 H \u56fd\u6807\u7801 = 10 09 H + 20 20 H = 30 29 H \u673a\u5185\u7801 = 30 29 H + 80 80 H = B0 A9 H</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#big5cns-11643","title":"BIG5\uff08CNS 11643\uff09\u5b57\u7b26\u96c6","text":"<p>\u65e2\u662f\u5b57\u7b26\u96c6\u53c8\u662f\u5b57\u7b26\u7f16\u7801\u3002\u901a\u884c\u4e8e\u6211\u56fd\u53f0\u6e7e\u3001\u9999\u6e2f\u5730\u533a\u7684\u4e00\u4e2a\u7e41\u4f53\u5b57\u7f16\u7801\u65b9\u6848\uff0c\u4fd7\u79f0\u201c\u5927\u4e94\u7801\u201d\u3002B1G-5\u7f16\u7801\u662f\u4e00\u4e2a**\u53cc\u5b57\u8282\u7f16\u7801**\u65b9\u6848\uff0c\u6536\u5f55\u7684\u7b26\u53f7408\u4e2a\uff0c\u6c49\u5b5713053\u4e2a\uff0c1984\u5e74\u5b9e\u65bd\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#gbk","title":"GBK\u5b57\u7b26\u96c6","text":"<p>1995\u5e7412\u6708\u53d1\u5e03\u7684\u6c49\u5b57\u7f16\u7801\u56fd\u5bb6\u6807\u51c6\uff0c\u662f**\u5bf9GB2312\u7f16\u7801\u7684\u6269\u5145**\uff0c\u5bf9\u6c49\u5b57\u91c7\u7528**\u53cc\u5b57\u8282\u7f16\u7801\uff0c\u53ea\u8981\u6c42\u9ad88\u4f4d\uff08\u7b2c\u4e00\u4e2a\u5b57\u8282\uff09\u5927\u4e8e127\uff0c\u4e0d\u518d\u8981\u6c42\u4f4e8\u4f4d\uff0c\u53ea\u8981\u78b0\u5230\u5927\u4e8e127\u7684\u5373\u4ee3\u8868\u4e00\u4e2a\u6c49\u5b57\u7684\u5f00\u59cb\uff0c\u5e94\u5f80\u540e\u8bfb\u53d6\u4e24\u4e2a\u5b57\u8282**\u3002GBK\u5b57\u7b26\u96c6\u5171\u6536\u5f5521003\u4e2a\u6c49\u5b57\u548c883\u4e2a\u56fe\u5f62\u7b26\u53f7\uff0c\u5305\u542b\u56fd\u5bb6\u6807\u51c6GB13000-1\u4e2d\u7684\u5168\u90e8\u4e2d\u65e5\u97e9\u6c49\u5b57\uff0c\u548cBIG5\u7f16\u7801\u4e2d\u7684\u6240\u6709\u6c49\u5b57\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#gb18030","title":"GB18030\u5b57\u7b26\u96c6","text":"<p>2000\u5e743\u670817\u65e5\u53d1\u5e03\u7684\u6c49\u5b57\u7f16\u7801\u56fd\u5bb6\u6807\u51c6\uff0c\u662f**\u5bf9GBK\u7f16\u7801\u7684\u6269\u5145**\uff0c\u8986\u76d6\u4e2d\u6587\u3001\u65e5\u6587\u3001\u671d\u9c9c\u8bed\u548c\u4e2d\u56fd\u5c11\u6570\u6c11\u65cf\u6587\u5b57\uff0c\u5176\u4e2d\u6536\u5f5527484\u4e2a\u6c49\u5b57\u3002GB18030\u5b57\u7b26\u96c6**\u91c7\u7528\u5355\u5b57\u8282\u3001\u53cc\u5b57\u8282\u548c\u56db\u5b57\u8282\u4e09\u79cd\u65b9\u5f0f\u5bf9\u5b57\u7b26\u7f16\u7801**\u3002\u517c\u5bb9GBK\u548cGB2312\u5b57\u7b26\u96c6\u30022005\u5e7411\u67088\u65e5\uff0c\u53d1\u5e03\u4e86\u4fee\u8ba2\u7248\u672c\uff1aGB18030-2005\uff0c\u5171\u6536\u5f55\u6c49\u5b57\u4e03\u4e07\u4f59\u4e2a\u30022022\u5e747\u670819\u65e5\uff0c\u53d1\u5e03\u4e86\u7b2c\u4e8c\u6b21\u4fee\u8ba2\u7248\u672c\uff1aGB18030-2022\uff0c\u6536\u5f55\u6c49\u5b57\u603b\u6570\u516b\u4e07\u4f59\u4e2a\u3002\u76ee\u524d\u5df2\u5728\u6211\u56fd\u4fe1\u606f\u5904\u7406\u4ea7\u54c1\u4e2d\u5f3a\u5236\u8d2f\u5f7b\u6267\u884c\u3002</p> <ol> <li> <p>\u5355\u5b57\u8282\u7f16\u7801\uff1a\u8868\u793a128\u4e2aASCII\u5b57\u7b26</p> </li> <li> <p>\u53cc\u5b57\u8282\u7f16\u7801\uff1a\u8868\u793a23940\u4e2a\u6c49\u5b57\uff0c\u4e0eGBK\u3001GB2312\u5411\u4e0b\u517c\u5bb9</p> </li> <li> <p>\u56db\u5b57\u8282\u7f16\u7801\uff1a\u8868\u793a \u7ea6158\u4e07\u4e2aUCS/Unicode\u4e2d\u7684\u5176\u4ed6\u5b57\u7b26</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#unicode","title":"\u25b3\u7edf\u4e00\u5b57\u7b26\u7f16\u7801\uff08Unicode\u5b57\u7b26\u96c6\uff09","text":"<p>Unicode\u5b57\u7b26\u96c6\uff08\u7f16\u7801\uff09\u53c8\u79f0\u4e3a**\u7edf\u4e00\u7801**\u3001\u4e07\u56fd\u7801\uff0c\u5b9a\u4e49\u4e86\u8fd9\u4e2a\u4e16\u754c\u4e0a\u51e0\u4e4e\u6240\u6709\u5b57\u7b26\u7684\u8868\u793a\uff0c\u4ee5\u6ee1\u8db3\u8de8\u8bed\u8a00\u3001\u8de8\u5e73\u53f0\u8fdb\u884c\u6587\u672c\u8f6c\u6362\u3001\u5904\u7406\u7684\u8981\u6c42\u3002\u800c\u4e14Unicode\u8fd8\u517c\u5bb9\u4e86\u5f88\u591a\u8001\u7248\u672c\u7684\u7f16\u7801\u89c4\u8303\uff0c\u4f8b\u5982ASCII\u7801\u3002</p> <p>\u7801\u70b9\uff1aUnicode\u7ed9\u6bcf\u4e2a\u5b57\u7b26\u5206\u914d\u7684\u6570\u5b57ID\uff0c\u4e14\u5177\u6709\u552f\u4e00\u6027\uff0c\u901a\u5e38\u5199\u6210U+ABCD\u7684\u683c\u5f0f\u3002UCS-2\u662f\u7528\u4e24\u4e2a\u5b57\u8282\u6765\u8868\u793a\u7801\u70b9\uff0c\u5176\u53d6\u503c\u8303\u56f4\u4e3a U+0000\uff5eU+FFFF\uff1bUCS-4\u7528\u56db\u4e2a\u5b57\u8282\u8868\u793a\u7801\u70b9\uff0c\u8303\u56f4\u4e3aU+00000000<sub>U+7FFFFFFF\uff0c\u5176\u4e2dU+00000000</sub>U+0000FFFF\u548cUCS-2\u662f\u4e00\u6837\u7684\u3002\uff08ASCII\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\u7684\u7801\u70b9\u4e0e\u5176\u5341\u516d\u8fdb\u5236ASCII\u7801\u5b8c\u5168\u4e00\u81f4\uff09</p> <p>Unicode\u5b57\u7b26\u96c6\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u9700\u8981\u4ee5UTF-8\u3001UTF-16\u3001UTF-32\u7b49\u65b9\u6cd5\u7f16\u7801\uff0c\u5b83\u7684\u5b9e\u73b0\u65b9\u5f0f\u79f0\u4e3a**Unicode\u8f6c\u6362\u683c\u5f0f(Unicode Transformation Format, UTF)**\u3002UTF-8\u3001UTF-16\u3001UTF-32\u90fd\u662f\u5c06\u6570\u5b57\u8f6c\u6362\u5230\u7a0b\u5e8f\u6570\u636e\u7684\u7f16\u7801\u65b9\u6848\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#utf-16","title":"UTF-16","text":"<p>\u5b8c\u5168\u5bf9\u5e94\u4e8e**UCS-2**\uff0c\u7528**2\u4e2a\u5b57\u8282**\u8fdb\u884c\u5b58\u50a8\uff0c\u5373\u752800000000 00000000 B ~ 11111111 11111111 B\u6765\u8868\u793a\u5b58\u50a8\u5b57\u7b26\uff0c\u5341\u516d\u8fdb\u5236\u8303\u56f4\u4e3a00 00 H ~ FF FF H\uff0c\u5171\u53ef\u8868\u793a\\(2^{16} = 65536\\)\u4e2a\u5b57\u7b26\uff0c\u4f46**\u6db5\u76d6\u8303\u56f4\u4ecd\u7136\u8f83\u5c0f**</p> <ol> <li> <p>UTF-16BE</p> </li> <li> <p>UTF-16LE</p> </li> <li> <p>UTF-16(Big Endian)</p> </li> <li> <p>UTF-16(Little Endian)</p> </li> <li> <p>UTF-16(\u4e0d\u5e26\u6807\u8bb0)</p> </li> </ol> <p>\u5982\u5b57\u7b26\"A\"\uff0c\u5bf9\u5e94\u5341\u516d\u8fdb\u5236ASCII\u7801\u4e3a41 UTF-16BE\uff1a00 41 H UTF-16LE\uff1a41 00 H UTF-16(Big Endian)\uff1aFE FF 00 41 H UTF-16(Little Endian)\uff1aFF FE 41 00 H UTF-16(\u4e0d\u5e26\u6807\u8bb0)\uff1a00 41 H</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#utf-32","title":"UTF-32","text":"<p>\u7531\u4e8eUCS-2\u4ecd\u7136\u4e0d\u80fd\u56ca\u62ec\u4e16\u754c\u4e0a\u6240\u6709\u7684\u5b57\u7b26\uff0c\u6240\u4ee5\u63d0\u51fa\u4e86UCS-4\uff0cUTF-32\u5b8c\u5168\u5bf9\u5e94**UCS-4**\uff0c\u91c7\u7528**4\u4e2a\u5b57\u8282**\u6765\u8868\u793a\uff0c\u5341\u516d\u8fdb\u5236\u8303\u56f4\u4e3a00 00 00 00 H ~ FF FF FF FF H\uff0c\u5171\u53ef\u8868\u793a$2^{32} = 4294967296 $\u4e2a\u5b57\u7b26\uff0c\u57fa\u672c\u4e0a\u80fd\u6db5\u76d6\u4e16\u754c\u4e0a\u6240\u6709\u7684\u5b57\u7b26\u3002\u4f46\u6240**\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u8f83\u5927**\uff0c\u4e0d\u88ab\u5e7f\u6cdb\u63a5\u53d7\u3002\u5982\u4e00\u4e2a\u5b57\u7b26\u901a\u8fc7ASCII\u7801\u672c\u53ef\u4ee5\u75281\u4e2a\u5b57\u8282\u8fdb\u884c\u5b58\u50a8\uff0c\u82e5\u91c7\u7528\u8be5\u7f16\u7801\u5219\u9700\u8981\u5360\u75284\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4</p> <ol> <li> <p>UTF-32BE</p> </li> <li> <p>UTF-32LE</p> </li> <li> <p>UTF-32(Big Endian)</p> </li> <li> <p>UTF-32(Little Endian)</p> </li> <li> <p>UTF-32(\u4e0d\u5e26\u6807\u8bb0)</p> </li> </ol> <p>\u5982\u5b57\u7b26\"A\"\uff0c\u5bf9\u5e94\u5341\u516d\u8fdb\u5236ASCII\u7801\u4e3a41 UTF-32BE\uff1a00 00 00 41 H UTF-32LE\uff1a41 00 00 00 H UTF-32(Big Endian)\uff1a00 00 FE FF 00 00 00 41 H UTF-32(Little Endian)\uff1aFF FE 00 00 41 00 00 00 H UTF-32(\u4e0d\u5e26\u6807\u8bb0)\uff1a00 00 00 41 H</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E6%96%87%E6%9C%AC%E4%B8%8E%E5%AD%97%E7%AC%A6/#utf-8","title":"UTF-8","text":"<p>UTF-8\u7f16\u7801\u662f\u5728\u4e92\u8054\u7f51\u4e0a\u4f7f\u7528\u6700\u5e7f\u7684\u4e00\u79cdUnicode\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5b83\u662f\u4e00\u79cd**\u53ef\u53d8\u957f\u7684\u7f16\u7801\u65b9\u5f0f**\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528**1~4\u4e2a\u5b57\u8282**\u8868\u793a\u4e00\u4e2a\u7b26\u53f7\uff0c\u6839\u636e\u4e0d\u540c\u7684\u7b26\u53f7\u800c\u53d8\u5316\u5b57\u8282\u957f\u5ea6\u3002\u6839\u636eUCS-4\u7801\u70b9\u8303\u56f4\u5bf9\u5e94\u7684UTF-8\u683c\u5f0f\uff0c\u5c06\u4e8c\u8fdb\u5236\u7f16\u7801\u4ece\u4f4e\u4f4d\u5f80\u9ad8\u4f4d\u8fdb\u884c\u586b\u5145\u3002</p> UCS-4\uff08UCS-2\uff09 UTF-8 00 00 00 00 H ~ 00 00 00 7F H 0xxxxxxx 00 00 00 80 H ~ 00 00 07 FF H 110xxxxx 10xxxxxx 00 00 08 00 H ~ 00 00 FF FF H 1110xxxx 10xxxxxx 10xxxxxx 00 01 00 00 H ~ 00 10 FF FF H 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx <p>\u5bf9\u4e8e\u6807\u51c6ASCII\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\u5728UCS-4\u4e2d\u5bf9\u5e94\u7684\u7f16\u7801\u4ecd\u4e3a00 00 00 00 H ~ 00 00 00 7F H\uff0c\u56e0\u6b64\u8fd9\u4e9b\u5b57\u7b26\u4ecd\u91c7\u75281\u4e2a\u5b57\u8282\u8fdb\u884c\u5b58\u50a8\uff0c\u6309\u683c\u5f0f\u586b\u5145\u540e\u4e8c\u8005\u5b8c\u5168\u4e00\u81f4</p> <p>\u5982\u897f\u6587\u5b57\u7b26\"A\"\uff0c\u5bf9\u5e94\u5341\u516d\u8fdb\u5236ASCII\u7801\u4e3a41 H\uff0cUCS-2\u7801\u70b9\u4e3a00 41 H\uff0cUCS-4\u7801\u70b9\u4e3a00 00 00 41 H\uff0c\u5c5e\u4e8e00 00 00 00 H ~ 00 00 00 7F H \u4e8c\u8fdb\u5236\u7801\u70b9\uff1a00000000 00000000 00000000 0**1000001** B UTF-8\uff1a0**xxxxxxx** \u2192 0**1000001** B \u2192 41 H</p> <p>\u5982\u4e2d\u6587\u5b57\u7b26\u201c\u738b\u201d\uff0c\u5bf9\u5e94\u7684UCS-4\u7801\u70b9\u4e3a00 00 73 8B H\uff0c\u5c5e\u4e8e00 00 08 00 H ~ 00 00 FF FF H \u4e8c\u8fdb\u5236\u7801\u70b9\uff1a00000000 00000000 01110011 10001011 B UTF-8\uff1a1110**xxxx** 10**xxxxxx** 10**xxxxxx** B ****\u2192 ****1110**0111** 10**001110** 10**001011** B \u2192 E7 8E 8B H</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/","title":"map","text":"<p><code>map(function, iterable, *iterables)</code></p> <p>\u5c06iterable\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4f20\u5165\u5230function\u51fd\u6570\u4e2d\uff0c\u8fd4\u56de\u6bcf\u4e00\u4e2a\u7ed3\u679c\u7ec4\u6210\u7684\u7684\u8fed\u4ee3\u5668\u3002iterable\u7684\u6570\u91cf\u6700\u5c11\u5fc5\u987b\u4e0efunction\u5fc5\u9009\u53c2\u6570\u7684\u6570\u91cf\u76f8\u540c\uff0c\u6700\u591a\u4e0d\u8d85\u8fc7function\u6240\u6709\u53ef\u9009\u53c2\u6570\u7684\u6570\u91cf\uff0c\u4f20\u5165\u987a\u5e8f\u540c\u53c2\u6570\u987a\u5e8f\uff0c\u6ce8\u610f\u4f20\u5165\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u8f93\u51fa\u7ed3\u679c\u957f\u5ea6\u4ee5\u6700\u77ed\u7684iterable\u4e3a\u51c6\u3002</p> <pre><code>l1 = [1, 2, 3, 4, 5]\nl2 = [3, 4, 5, 6, 7, 8, 9]\ni1 = map(str, l1)\nprint(i1)\n\"\"\"\n&lt;map object at 0x000002B5731FC640&gt;\n\"\"\"\n\nprint(list(i1))\n\"\"\"\n['1', '2', '3', '4', '5']\n\"\"\"\n\ni2 = map(pow, l1, l2)\nprint(list(i2))\n\"\"\"\n[1, 16, 243, 4096, 78125]\n\"\"\"\n</code></pre> <p>function\u542b\u67092\u4e2a\u53ca\u4ee5\u4e0a\u5fc5\u9009\u53c2\u6570\u65f6\uff0c\u4e5f\u53ef\u4f7f\u7528\u6807\u51c6\u5e93\u51fd\u6570<code>itertools.starmap(function, iterable)</code>\uff0c\u8be5\u51fd\u6570\u53ea\u80fd\u4f20\u5165\u4e00\u4e2aiterable\uff0c\u6240\u4ee5iterable\u7684\u5143\u7d20\u957f\u5ea6\u6700\u5c11\u5fc5\u987b\u4e0efunction\u5fc5\u9009\u53c2\u6570\u7684\u6570\u91cf\u76f8\u540c\uff0c\u6700\u591a\u4e0d\u8d85\u8fc7function\u6240\u6709\u53ef\u9009\u53c2\u6570\u7684\u6570\u91cf</p> <pre><code>import itertools\ni3 = itertools.starmap(pow, [(1, 3), (2, 4), (3, 5), (4, 6), (5, 7)])\nprint(list(i3))\n\"\"\"\n[1, 16, 243, 4096, 78125]\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%86%85%E7%BD%AE%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b","text":"<p>\u5728\u5185\u5b58\u5b58\u50a8\u7684\u6570\u636e\u53ef\u4ee5\u6709\u591a\u79cd\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u4eba\u7684\u59d3\u540d\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u578b\u5b58\u50a8\u3001\u5e74\u9f84\u53ef\u4ee5\u4f7f\u7528\u6570\u503c\u578b\u5b58\u50a8\u3001\u800c\u5a5a\u5426\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u7c7b\u578b\u5b58\u50a8\u3002\u8fd9\u4e9b\u90fd\u662fPython\u63d0\u4f9b\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%86%85%E7%BD%AE%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_2","title":"\u6570\u503c","text":"<p>\u5728Python\u4e2d\uff0c\u63d0\u4f9b\u4e86\u6570\u503c\u7c7b\u578b\u7528\u4e8e\u4fdd\u5b58\u6570\u503c\uff0c\u5e76\u4e14\u5b83\u4eec\u662f**\u4e0d\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b**\u3002\u5982\u679c\u4fee\u6539\u6570\u503c\u7c7b\u578b\u53d8\u91cf\u7684\u503c\uff0c\u90a3\u4e48\u4f1a\u5148\u628a\u8be5\u503c\u5b58\u50a8\u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u4fee\u6539\u53d8\u91cf\u4f7f\u5176\u6307\u5411\u65b0\u7684\u5185\u5b58\u5730\u5740\u3002</p> <ol> <li> <p>\u6574\u578b\uff1aint</p> </li> <li> <p>\u6d6e\u70b9\u6570\uff1afloat</p> </li> <li> <p>\u590d\u6570\uff1acomplex</p> </li> </ol> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%86%85%E7%BD%AE%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#str","title":"\u5b57\u7b26\u4e32\uff08str\uff09","text":"<p>\u5b57\u7b26\u4e32\u5c31\u662f\u8fde\u7eed\u7684\u5b57\u7b26\u5e8f\u5217\uff0c\u53ef\u4ee5\u662f\u8ba1\u7b97\u673a\u6240\u80fd\u8868\u793a\u7684\u4e00\u5207\u5b57\u7b26\u7684\u96c6\u5408\u3002\u5728Python\u4e2d\uff0c\u5b57\u7b26\u4e32\u5c5e\u4e8e**\u4e0d\u53ef\u53d8\u5e8f\u5217**\uff0c\u901a\u5e38\u4f7f\u7528**\u5355\u5f15\u53f7\u201c' '\u201d\u3001\u53cc\u5f15\u53f7\u201c\" \"\u201d\u3001\u4e09\u5f15\u53f7\u201c''' '''\u201d\u6216\u201c\"\"\" \"\"\"\u201d**\u62ec\u8d77\u6765\uff0c\u5f00\u59cb\u548c\u7ed3\u5c3e\u4f7f\u7528\u7684\u5f15\u53f7\u5f62\u5f0f\u5fc5\u987b\u4e00\u81f4\uff0c\u5f53\u9700\u8981\u8868\u793a\u590d\u6742\u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u5f15\u53f7\u7684\u5d4c\u5957\u3002\u5b57\u7b26\u4e32\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u90fd\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a1\u7684\u5b57\u7b26\u4e32\u3002 \u8fd9\u4e09\u79cd\u5f15\u53f7\u5f62\u5f0f\u5728\u8bed\u4e49\u4e0a\u6ca1\u6709\u5dee\u522b\uff0c\u53ea\u662f\u5728\u5f62\u5f0f\u4e0a\u6709\u4e9b\u5dee\u522b\u3002\u5176\u4e2d\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u4e2d\u7684\u5b57\u7b26\u5e8f\u5217\u5fc5\u987b\u5728\u4e00\u884c\u4e0a\uff0c\u800c\u4e09\u5f15\u53f7\u5185\u7684\u5b57\u7b26\u5e8f\u5217\u53ef\u4ee5\u5206\u5e03\u5728\u8fde\u7eed\u7684\u591a\u884c\u4e0a\u3002  Python\u4e2d\u7684\u5b57\u7b26\u4e32\u8fd8\u652f\u6301\u8f6c\u4e49\u5b57\u7b26\u3002\u6240\u8c13\u8f6c\u4e49\u5b57\u7b26\u662f\u6307\u4f7f\u7528\u53cd\u659c\u6760\u201c\\\u201d\u5bf9\u4e00\u4e9b\u7279\u6b8a\u5b57\u7b26\u8fdb\u884c\u8f6c\u4e49\u3002  \u5728\u5b57\u7b26\u4e32\u754c\u5b9a\u7b26\u7684\u524d\u9762\u52a0\u4e0a\u5b57\u6bcdr\u6216R\uff0c\u90a3\u4e48\u8be5\u5b57\u7b26\u4e32\u5c06\u539f\u6837\u8f93\u51fa\uff0c\u5176\u4e2d\u7684\u8f6c\u4e49\u5b57\u7b26\u5c06\u4e0d\u8fdb\u884c\u8f6c\u4e49\u3002  \u5e38\u7528\u7684\u8f6c\u4e49\u5b57\u7b26\u53ca\u5176\u8bf4\u660e\u5982\u4e0b\uff1a \u200b\u200b</p> <p></p> <pre><code>school = \"\u5357\u4eac\u533b\u79d1\u5927\u5b66\"\nschool = '\u5357\u4eac\u533b\u79d1\u5927\u5b66'\nlines = \"\"\"\u78a7\u4e91\u5929\uff0c \u9ec4\u53f6\u5730\uff0c\u79cb\u8272\u8fde\u6ce2\uff0c \u6ce2\u4e0a\u5bd2\u70df\u7fe0\u3002\n\u5c71\u9634\u659c\u9633\u5929\u63a5\u6c34\uff0c\u82b3\u8349\u65e0\u60c5\uff0c\u66f4\u5728\u659c\u9633\u5916\u3002\n\"\"\"\nlines = \"\u78a7\u4e91\u5929\uff0c \u9ec4\u53f6\u5730\uff0c\u79cb\u8272\u8fde\u6ce2\uff0c \u6ce2\u4e0a\u5bd2\u70df\u7fe0\u3002\\n\u5c71\u9634\u659c\u9633\u5929\u63a5\u6c34\uff0c\u82b3\u8349\u65e0\u60c5\uff0c\u66f4\u5728\u659c\u9633\u5916\u3002\"\nlines = r\"\u78a7\u4e91\u5929\uff0c \u9ec4\u53f6\u5730\uff0c\u79cb\u8272\u8fde\u6ce2\uff0c \u6ce2\u4e0a\u5bd2\u70df\u7fe0\u3002\\n\u5c71\u9634\u659c\u9633\u5929\u63a5\u6c34\uff0c\u82b3\u8349\u65e0\u60c5\uff0c\u66f4\u5728\u659c\u9633\u5916\u3002\"\nlines = \"\u78a7\u4e91\u5929\uff0c \u9ec4\u53f6\u5730\uff0c\u79cb\u8272\u8fde\u6ce2\uff0c \u6ce2\u4e0a\u5bd2\u70df\u7fe0\u3002\\\\n\u5c71\u9634\u659c\u9633\u5929\u63a5\u6c34\uff0c\u82b3\u8349\u65e0\u60c5\uff0c\u66f4\u5728\u659c\u9633\u5916\u3002\" # \u4e0e\u4e0a\u4e00\u4e2a\u7b49\u4ef7\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%86%85%E7%BD%AE%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#bool","title":"\u5e03\u5c14\u503c\uff08bool\uff09","text":"<p>\u5e03\u5c14\u7c7b\u578b\u4e3b\u8981\u7528\u6765\u8868\u793a\u771f\u6216\u5047\u7684\u503c\u3002\u5728Python\u4e2d\uff0c\u6807\u8bc6\u7b26True\u548cFalse\u88ab\u89e3\u91ca\u4e3a\u5e03\u5c14\u503c\u3002\u5e03\u5c14\u7c7b\u578b\u7684\u503c\u53ef\u4ee5\u8fdb\u884c\u6570\u503c\u8fd0\u7b97\uff0c\u4f46\u662f\u4e0d\u5efa\u8bae\u5bf9\u5e03\u5c14\u7c7b\u578b\u7684\u503c\u8fdb\u884c\u6570\u503c\u8fd0\u7b97\u3002 \u5728Python\u4e2d\uff0c\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8fdb\u884c\u771f\u503c\u6d4b\u8bd5\u3002\u5176\u4e2d\uff0c\u53ea\u6709\u4e0b\u9762\u5217\u51fa\u7684\u51e0\u79cd\u60c5\u51b5\u5f97\u5230\u7684\u503c\u4e3a\u5047\uff0c\u5176\u4ed6\u5bf9\u8c61\u5728if\u6216while\u8bed\u53e5\u4e2d\u90fd\u8868\u73b0\u4e3a\u771f\uff1a</p> <ol> <li> <p>False\u6216None\u3002</p> </li> <li> <p>\u6570\u503c\u4e2d\u7684\u96f6\uff0c\u5305\u62ec0\u30010.0\u3001\u865a\u65700j\u3002</p> </li> <li> <p>\u7a7a\u5e8f\u5217\uff0c\u5305\u62ec\u5b57\u7b26\u4e32\u3001\u7a7a\u5143\u7ec4\u3001\u7a7a\u5217\u8868\u3001\u7a7a\u5b57\u5178\u3002</p> </li> <li> <p>\u81ea\u5b9a\u4e49\u5bf9\u8c61\u7684\u5b9e\u4f8b\uff0c\u8be5\u5bf9\u8c61\u7684bool\u65b9\u6cd5\u8fd4\u56deFalse\uff0c\u6216\u8005**len**\u65b9\u6cd5\u8fd4\u56de0</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%86%85%E7%BD%AE%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_3","title":"\u5e8f\u5217","text":"<p>\u6b64\u7c7b\u5bf9\u8c61\u8868\u793a\u4ee5\u975e\u8d1f\u6574\u6570\u4f5c\u4e3a\u7d22\u5f15\u7684\u6709\u9650\u6709\u5e8f\u96c6</p> <ol> <li> <p>\u53ef\u53d8\u5e8f\u5217 \u5728\u88ab\u521b\u5efa\u540e\u4ecd\u53ef\u88ab\u6539\u53d8</p> </li> <li> <p>\u5217\u8868\uff08list\uff09 \u5217\u8868\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u610f Python \u5bf9\u8c61\u3002\u5217\u8868\u7531\u7528**\u65b9\u62ec\u53f7**\u62ec\u8d77\u5e76\u7531**\u9017\u53f7\u5206\u9694**\u7684\u591a\u4e2a\u8868\u8fbe\u5f0f\u6784\u6210\u3002(\u6ce8\u610f\u521b\u5efa\u957f\u5ea6\u4e3a 0 \u6216 1 \u7684\u5217\u8868\u65e0\u9700\u4f7f\u7528\u7279\u6b8a\u89c4\u5219\u3002</p> <p>```Python a = []         # \u8fd9\u662f\u4e00\u4e2a\u7a7a\u5217\u8868 a = [1]        # \u8fd9\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a1\u542b\u67091\u4e2a\u5143\u7d20\u7684\u5217\u8868 a = [1, 2, 3]  # \u8fd9\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u542b\u67093\u4e2a\u5143\u7d20\u7684\u5217\u8868 <pre><code>  2. \u5b57\u8282\u6570\u7ec4\n\n9. **\u4e0d\u53ef\u53d8\u5e8f\u5217**\n\u5bf9\u8c61\u4e00\u65e6\u521b\u5efa\u5c31\u4e0d\u80fd\u518d\u6539\u53d8\u3002(\u5982\u679c\u5bf9\u8c61\u5305\u542b\u5bf9\u5176\u4ed6\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5176\u4e2d\u7684\u53ef\u53d8\u5bf9\u8c61\u5c31\u662f\u53ef\u4ee5\u6539\u53d8\u7684\uff1b\u4f46\u662f\uff0c\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5bf9\u8c61\u6240\u76f4\u63a5\u5f15\u7528\u7684\u5bf9\u8c61\u96c6\u662f\u4e0d\u80fd\u6539\u53d8\u7684\u3002)\n\n  1. **\u5b57\u7b26\u4e32\uff08str\uff09**\n\n  2. **\u5143\u7ec4\uff08tuple\uff09**\n\u4e00\u4e2a\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u610f Python \u5bf9\u8c61\u3002\u5305\u542b\u4e24\u4e2a\u6216\u4ee5\u4e0a\u6761\u76ee\u7684\u5143\u7ec4\u7531**\u9017\u53f7\u5206\u9694**\u7684\u8868\u8fbe\u5f0f\u6784\u6210\u3002**\u53ea\u6709\u4e00\u4e2a\u6761\u76ee\u7684\u5143\u7ec4 ('\u5355\u9879\u5143\u7ec4') \u53ef\u901a\u8fc7\u5728\u8868\u8fbe\u5f0f\u540e\u52a0\u4e00\u4e2a\u9017\u53f7\u6765\u6784\u6210 (\u4e00\u4e2a\u8868\u8fbe\u5f0f\u672c\u8eab\u4e0d\u80fd\u521b\u5efa\u4e3a\u5143\u7ec4\uff0c\u56e0\u4e3a\u5706\u62ec\u53f7\u8981\u7528\u6765\u8bbe\u7f6e\u8868\u8fbe\u5f0f\u5206\u7ec4)**\u3002\u4e00\u4e2a\u7a7a\u5143\u7ec4\u53ef\u901a\u8fc7\u4e00\u5bf9\u5185\u5bb9\u4e3a\u7a7a\u7684**\u5706\u62ec\u53f7**\u521b\u5efa\u3002\n\n    ```Python\na = ()         # \u8fd9\u662f\u4e00\u4e2a\u7a7a\u5143\u7ec4\na = (1, )      # \u8fd9\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a1\u542b\u67091\u4e2a\u5143\u7d20\u7684\u5143\u7ec4\uff0c\u6ce8\u610f\",\"\uff0c\u5bb9\u6613\u88ab\u5ffd\u7565\na = (1)        # \u8fd9\u662f\u6570\u503c\u7c7b\u578b\uff0c\u4e0d\u662f\u5143\u7ec4\uff0c\uff08\uff09\u4ec5\u8d77\u5206\u9694\u4f5c\u7528\na = (1, 2, 3)  # \u8fd9\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u542b\u67093\u4e2a\u5143\u7d20\u7684\u5143\u7ec4\n</code></pre></p> </li> <li> <p>\u5b57\u8282\u4e32</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%86%85%E7%BD%AE%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#set","title":"\u96c6\u5408\uff08set\uff09","text":"<p>\u6b64\u7c7b\u5bf9\u8c61\u8868\u793a\u7531**\u4e0d\u91cd\u590d**\u4e14**\u4e0d\u53ef\u53d8\u5bf9\u8c61\u7ec4\u6210**\u7684**\u65e0\u5e8f**\u4e14**\u6709\u9650**\u7684\u96c6\u5408\uff0c\u56e0\u6b64\u5b83\u4eec\u4e0d\u80fd\u901a\u8fc7\u4e0b\u6807\u6765\u7d22\u5f15\u3002\u96c6\u5408\u5e38\u89c1\u7684\u7528\u5904\u662f\u5feb\u901f\u6210\u5458\u68c0\u6d4b\uff0c\u53bb\u9664\u5e8f\u5217\u4e2d\u7684\u91cd\u590d\u9879\uff0c\u4ee5\u53ca\u8fdb\u884c\u4ea4\u3001\u5e76\u3001\u5dee\u548c\u5bf9\u79f0\u5dee\u7b49\u6570\u5b66\u8fd0\u7b97\u3002</p> <ol> <li>\u53ef\u53d8\u96c6\u5408 \u521b\u5efa\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u8fdb\u884c\u4fee\u6539</li> </ol> <p>```Python a = {1}        # \u8fd9\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a1\u542b\u67093\u4e2a\u5143\u7d20\u7684\u53ef\u53d8\u96c6\u5408 a = {1, 2, 3}  # \u8fd9\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u542b\u67093\u4e2a\u5143\u7d20\u7684\u53ef\u53d8\u96c6\u5408 <pre><code>11. \u51bb\u7ed3\uff08\u4e0d\u53ef\u53d8\uff09\u96c6\u5408\n****\u521b\u5efa\u4e4b\u540e\u4e0d\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u8fdb\u884c\u4fee\u6539\n\n# \u6620\u5c04\uff08\u5b57\u5178dict\uff09\n\n\u6b64\u7c7b\u5bf9\u8c61\u8868\u793a\u7531\u4efb\u610f\u7d22\u5f15\u96c6\u5408\u6240\u7d22\u5f15\u7684\u5bf9\u8c61\uff08**\u952e\u503c\u5bf9**\uff09\u7684\u96c6\u5408\uff0c\u5c5e\u4e8e**\u53ef\u53d8\u7c7b\u578b**\uff0c\u901a\u8fc7{}\u62ec\u8d77\u6765\uff0c\u4f46\u5176\u4e2d**\u952e\u5fc5\u987b\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b**\uff0c\u4e14**\u952e\u4e0d\u80fd\u91cd\u590d**\u3002\u5b57\u5178\u4f1a\u4fdd\u7559\u63d2\u5165\u987a\u5e8f\uff0c\u8fd9\u610f\u5473\u7740\u952e\u5c06\u4ee5\u5b83\u4eec\u88ab\u6dfb\u52a0\u7684\u987a\u5e8f\u5728\u5b57\u5178\u4e2d\u4f9d\u6b21\u4ea7\u751f\u3002 \u66ff\u6362\u67d0\u4e2a\u73b0\u6709\u7684\u952e\u4e0d\u4f1a\u6539\u53d8\u5176\u987a\u5e8f\uff0c\u4f46\u662f\u79fb\u9664\u67d0\u4e2a\u952e\u518d\u91cd\u65b0\u63d2\u5165\u5219\u4f1a\u5c06\u5176\u6dfb\u52a0\u5230\u672b\u5c3e\u800c\u4e0d\u4f1a\u4fdd\u7559\u5176\u539f\u6709\u4f4d\u7f6e\u3002\n\n```Python\na = {}                        # \u8fd9\u662f\u7a7a\u5b57\u5178\na = {1: \"a\"}                  # \u8fd9\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a1\u542b\u67091\u4e2a\u952e\u503c\u5bf9\u7684\u5b57\u5178\na = {[1]: \"a\"}                # \u8fd9\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u5c06\u62a5\u9519\uff0c\u56e0\u5217\u8868\u5c5e\u4e8e\u53ef\u53d8\u7c7b\u578b\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u952e\na = {\"a\": 1, \"b\": 2, \"c\": 3}  # \u8fd9\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u542b\u67093\u4e2a\u952e\u503c\u5bf9\u7684\u5b57\u5178\n</code></pre></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%88%97%E8%A1%A8/","title":"\u521b\u5efa","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%88%97%E8%A1%A8/#_2","title":"\u7d22\u5f15","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%88%97%E8%A1%A8/#_3","title":"\u5207\u7247","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%88%97%E8%A1%A8/#_4","title":"\u65b9\u6cd5","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/","title":"\u6ce8\u91ca","text":"<p>\u6ce8\u91ca\u662f\u6307\u5728\u4ee3\u7801\u4e2d\u5bf9\u4ee3\u7801\u529f\u80fd\u89e3\u91ca\u8bf4\u660e\u7684\u6807\u6ce8\u6027\u6587\u5b57\uff0c\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002\u6ce8\u91ca\u7684\u5185\u5bb9\u5c06\u88abPython\u89e3\u91ca\u5668\u5ffd\u7565\uff0c\u5e76\u4e0d\u4f1a\u5728\u6267\u884c\u7ed3\u679c\u4e2d\u4f53\u73b0\u51fa\u6765\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#_2","title":"\u5355\u884c\u6ce8\u91ca\uff1a","text":"<p>\u4ece\u7b26\u53f7\u201c#\u201d\u5f00\u59cb\u76f4\u5230\u6362\u884c\u4e3a\u6b62\uff0c\u5176\u540e\u9762\u6240\u6709\u7684\u5185\u5bb9\u90fd\u4f5c\u4e3a\u6ce8\u91ca\u7684\u5185\u5bb9\u800c\u88ab\u89e3\u91ca\u5668\u5ffd\u7565\u3002</p> <pre><code># \u8fd9\u662f\u4e00\u884c\u6ce8\u91ca\nprint()  # \u8fd9\u662f\u4e00\u884c\u6ce8\u91ca\nprint()  # \u8fd9\u662f\u4e00\u884c\u6ce8\u91ca\nprint()  # \u8fd9\u662f\u4e00\u884c\u6ce8\u91ca\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#_3","title":"\u591a\u884c\u6ce8\u91ca\uff1a'''...''' / \"\"\"...\"\"\"","text":"<p>\u6ce8\u610f\u662f**\u82f1\u6587\u5f15\u53f7(\u4e09\u4e2a\u5355\u5f15\u53f7\u6216\u4e09\u4e2a\u53cc\u5f15\u53f7)**\uff0c\u5305\u542b\u5728\u5185\u7684\u4ee3\u7801\u90fd\u5c06\u88ab\u89e3\u91ca\u5668\u5ffd\u7565\uff0c\u53ef\u4ee5\u5206\u4e3a\u591a\u884c\u7f16\u5199\u6ce8\u91ca\u3002 \u901a\u5e38\u7528\u6765\u4e3aPython\u6587\u4ef6\u3001\u6a21\u5757\u3001\u7c7b\u6216\u51fd\u6570\u7b49\u6dfb\u52a0\u7248\u6743\u3001\u529f\u80fd\u7b49\u4fe1\u606f\uff0c\u4e5f\u7ecf\u5e38\u7528\u6765\u89e3\u91ca\u4ee3\u7801\u4e2d\u91cd\u8981\u7684\u51fd\u6570\u3001\u53c2\u6570\u7b49\u4fe1\u606f\uff0c\u4ee5\u4fbf\u4e8e\u540e\u7eed\u5f00\u53d1\u8005\u7ef4\u62a4\u4ee3\u7801\u3002</p> <pre><code>'''\n\u6ce8\u91ca1\n\u6ce8\u91ca2\n\u6ce8\u91ca3\n...\n'''\n\n\n\"\"\"\n\u6ce8\u91ca1\n\u6ce8\u91ca2\n\u6ce8\u91ca3\n...\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#_4","title":"\u4e2d\u6587\u58f0\u660e\u6ce8\u91ca","text":"<p>\u5728Python\u4e2d\u7f16\u5199\u4ee3\u7801\u65f6\uff0c\u5982\u679c\u7528\u5230\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u7c7b\u578b\u7684\u4e2d\u6587\u7f16\u7801\uff08\u4e00\u822c\u4e3autf-8\uff09\uff0c\u5219\u9700\u8981\u5728\u6587\u4ef6\u5f00\u5934\u52a0\u4e0a\u4e2d\u6587\u58f0\u660e\u6ce8\u91ca\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u7c7b\u578b\u7684\u4e2d\u6587\u7f16\u7801\uff0c\u4e0d\u81f3\u4e8e\u51fa\u73b0\u4ee3\u7801\u9519\u8bef\u3002</p> <pre><code># -*- coding: utf-8 -*-\n\n# coding: utf-8\n\n# coding = utf-8\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#_5","title":"\u5feb\u6377\u6ce8\u91ca","text":"<p>\u5728python\u89e3\u91ca\u5668\u4e2d\uff0c\u5982\u679c\u9700\u8981\u5c06\u67d0\u4e00\u6bb5\u4ee3\u7801\u6ce8\u91ca\u6389\u4e0d\u4e88\u6267\u884c\uff0c\u53ef\u4ee5\u9009\u4e2d\u540e\u6309\u4e0b<code>Alt</code>\u200b+<code>3</code>\u200b\u6765\u5b9e\u73b0\uff0c\u901a\u8fc7<code>Alt</code>\u200b+<code>4</code>\u200b\u6765\u53d6\u6d88\u3002 \u200b\u200b</p> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#_6","title":"\u4ee3\u7801\u7f29\u8fdb","text":"<p>Python\u91c7\u7528\u4ee3\u7801\u7f29\u8fdb\u548c\u5192\u53f7\u201c:\u201d(\u82f1\u6587\u7b26\u53f7)\u533a\u5206\u4ee3\u7801\u4e4b\u95f4\u7684\u5c42\u6b21\u3002 \u7f29\u8fdb\u53ef\u4ee5\u4f7f\u7528<code>\u7a7a\u683c</code>\u200b\u6216<code>Tab</code>\u200b\u5b9e\u73b0\u3002\u4f7f\u7528<code>\u7a7a\u683c</code>\u200b\u65f6\uff0c\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\u91c7\u75284\u4e2a\u7a7a\u683c\u4f5c\u4e3a\u4e00\u4e2a\u7f29\u8fdb\u91cf\uff0c\u800c\u4f7f\u7528<code>Tab</code>\u200b\u65f6\uff0c\u5219\u91c7\u7528\u4e00\u4e2aTab\u952e\u4f5c\u4e3a\u4e00\u4e2a\u7f29\u8fdb\u91cf\u3002\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\u5efa\u8bae\u91c7\u7528\u7a7a\u683c\u8fdb\u884c\u7f29\u8fdb\u3002  \u5728Python\u4e2d\uff0c\u5bf9\u4e8e\u7c7b\u5b9a\u4e49\u3001\u51fd\u6570\u5b9a\u4e49\u3001\u6d41\u7a0b\u63a7\u5236\u8bed\u53e5\uff0c\u4ee5\u53ca\u5f02\u5e38\u5904\u7406\u8bed\u53e5\u7b49\uff0c\u884c\u5c3e\u7684\u5192\u53f7\u548c\u4e0b\u4e00\u884c\u7684\u7f29\u8fdb\u8868\u793a\u4e00\u4e2a\u4ee3\u7801\u5757\u7684\u5f00\u59cb\uff0c\u800c\u7f29\u8fdb\u7ed3\u675f\uff0c\u5219\u8868\u793a\u4e00\u4e2a\u4ee3\u7801\u5757\u7684\u7ed3\u675f\u3002\u6b64\u7c7b\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u201c:\u201d\u8f93\u5165\u6b63\u786e\uff0c\u6309\u4e0b<code>Enter</code>\u200b\u4e00\u822c\u4f1a\u81ea\u52a8\u7f29\u8fdb\u3002  \u4e5f\u53ef\u4ee5\u9009\u4e2d\u4ee3\u7801\u540e\u4f7f\u7528\u5feb\u6377\u952e<code>Ctrl</code>\u200b+<code>[</code>\u200b\u548c<code>Ctrl</code>\u200b+<code>]</code>\u200b\u6765\u5b9e\u73b0\u7f29\u8fdb\u548c\u53d6\u6d88\u7f29\u8fdb\u3002 \u200b\u200b</p> <p></p> <pre><code>for i in range(10):\n    print(i)         # \u7f29\u8fdb\u5f00\u59cb\n    ...\n...                  # \u7f29\u8fdb\u7ed3\u675f\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#pep-8","title":"\u7f16\u7801\u89c4\u8303\uff1aPEP 8","text":"<p>PEP\u662fPython Enhancement Proposal\u7684\u7f29\u5199\uff0c\u5176\u4e2d\u6587\u542b\u4e49\u662fPython\u589e\u5f3a\u5efa\u8bae\u4e66\uff0c\u800c\u201c8\u201d\u8868\u793a\u7248\u672c\u53f7\u3002PEP 8\u662fPython\u4ee3\u7801\u7684\u6837\u5f0f\u6307\u5357\u3002  \u4f7f\u7528\u7279\u5b9a\u7684\u7f16\u8f91\u5668\u5982pycharm\u7b49\u53ef\u81ea\u52a8\u8bc6\u522b\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u4ee3\u7801\uff0c\u53ef\u6839\u636e\u9700\u8981\u548c\u63d0\u793a\u8fdb\u884c\u4fee\u6539\uff0c\u6b64\u5904\u4ec5\u505a\u4e86\u89e3\u3002\u4e14\u4ee3\u7801\u7f16\u5199\u4e0d\u7b26\u5408PEP 8\u4e0d\u4e00\u5b9a\u5f71\u54cd\u4ee3\u7801\u8fd0\u884c\uff0c\u521d\u5b66\u8005\u53ef\u4e0d\u9075\u5b88\u3002  \u4ee5\u4e0b\u4e3e\u4f8b\uff1a</p> <ol> <li> <p>\u6bcf\u4e2aimport\u8bed\u53e5\u53ea\u5bfc\u5165\u4e00\u4e2a\u6a21\u5757\uff0c\u5c3d\u91cf\u907f\u514d\u4e00\u6b21\u5bfc\u5165\u591a\u4e2a\u6a21\u5757\u3002</p> </li> <li> <p>\u4e0d\u8981\u5728\u884c\u5c3e\u6dfb\u52a0\u5206\u53f7\u201c\uff1b\u201d\uff0c\u4e5f\u4e0d\u8981\u7528\u5206\u53f7\u5c06\u4e24\u6761\u547d\u4ee4\u653e\u5728\u540c\u4e00\u884c\u3002</p> </li> <li> <p>\u5efa\u8bae\u6bcf\u884c\u4e0d\u8d85\u8fc780\u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u8d85\u8fc7\uff0c\u5219\u5efa\u8bae\u4f7f\u7528\u5c0f\u62ec\u53f7\u201c\uff08\uff09\u201d\u5c06\u591a\u884c\u5185\u5bb9\u9690\u5f0f\u5730\u8fde\u63a5\u8d77\u6765\uff0c\u800c\u4e0d\u63a8\u8350\u4f7f\u7528\u53cd\u659c\u6760\u201c\\\u201d\u8fdb\u884c\u8fde\u63a5\u3002 \u200b\u200b</p> </li> </ol> <p></p> <p>\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u9664\u5916\uff1a</p> <ul> <li> <p>\u5bfc\u5165\u6a21\u5757\u7684\u8bed\u53e5\u8fc7\u957f\u3002</p> </li> <li> <p>\u6ce8\u91ca\u91cc\u7684URL\u3002</p> </li> </ul> <ol> <li> <p>\u4f7f\u7528\u5fc5\u8981\u7684\u7a7a\u884c\u53ef\u4ee5\u589e\u52a0\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002\u4e00\u822c\u5728\u9876\u7ea7\u5b9a\u4e49\uff08\u5982\u51fd\u6570\u6216\u7c7b\u7684\u5b9a\u4e49\uff09\u4e4b\u95f4\u7a7a\u4e24\u884c\uff0c\u800c\u65b9\u6cd5\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e00\u884c\u3002\u53e6\u5916\uff0c\u5728\u7528\u4e8e\u5206\u9694\u67d0\u4e9b\u529f\u80fd\u7684\u4f4d\u7f6e\u4e5f\u53ef\u4ee5\u7a7a\u4e00\u884c\u3002</p> </li> <li> <p>\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd0\u7b97\u7b26\u4e24\u4fa7\u3001\u51fd\u6570\u53c2\u6570\u4e4b\u95f4\u3001\u9017\u53f7\u201c\uff0c\u201d\u4e24\u4fa7\u5efa\u8bae\u4f7f\u7528\u7a7a\u683c\u8fdb\u884c\u5206\u9694\u3002</p> </li> <li> <p>\u5e94\u8be5\u907f\u514d\u5728\u5faa\u73af\u4e2d\u4f7f\u7528\u201c+\u201d\u548c\u201c+=\u201d\u8fd0\u7b97\u7b26\u7d2f\u52a0\u5b57\u7b26\u4e32\u3002\u8fd9\u662f\u56e0\u4e3a\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u8fd9\u6837\u505a\u4f1a\u521b\u5efa\u4e0d\u5fc5\u8981\u7684\u4e34\u65f6\u5bf9\u8c61\u3002\u63a8\u8350\u5c06\u6bcf\u4e2a\u5b50\u5b57\u7b26\u4e32\u52a0\u5165\u5217\u8868\uff0c\u7136\u540e\u5728\u5faa\u73af\u7ed3\u675f\u540e\u4f7f\u7528join\uff08\uff09\u65b9\u6cd5\u8fde\u63a5\u5217\u8868\u3002</p> </li> <li> <p>\u867d\u7136\u9002\u5f53\u4f7f\u7528\u5f02\u5e38\u5904\u7406\u7ed3\u6784\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u5bb9\u9519\u6027\uff0c\u4f46\u662f\u4e0d\u80fd\u8fc7\u591a\u4f9d\u8d56\u5f02\u5e38\u5904\u7406\u7ed3\u6784\uff0c\u9002\u5f53\u7684\u663e\u5f0f\u5224\u65ad\u8fd8\u662f\u5fc5\u8981\u7684\u3002</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#_7","title":"\u547d\u540d\u89c4\u8303","text":"<p>\u4f7f\u7528\u547d\u540d\u89c4\u8303\u53ef\u4ee5\u4f7f\u4eba\u4eec\u66f4\u52a0\u76f4\u89c2\u5730\u4e86\u89e3\u4ee3\u7801\u6240\u4ee3\u8868\u7684\u542b\u4e49\u3002</p> <ol> <li> <p>\u6a21\u5757\u540d\u5c3d\u91cf\u77ed\u5c0f\uff0c\u5e76\u4e14\u5168\u90e8\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u753b\u7ebf\u5206\u9694\u591a\u4e2a\u5b57\u6bcd\u3002</p> </li> <li> <p>\u5305\u540d\u5c3d\u91cf\u77ed\u5c0f\uff0c\u5e76\u4e14\u5168\u90e8\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u4e0b\u753b\u7ebf\u3002</p> </li> <li> <p>\u7c7b\u540d\u91c7\u7528\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199\u5f62\u5f0f\uff08\u5373Pascal\u98ce\u683c\uff09\u3002</p> </li> <li> <p>\u6a21\u5757\u5185\u90e8\u7684\u7c7b\u91c7\u7528\u4e0b\u753b\u7ebf\u201c_\u201d+Pascal\u98ce\u683c\u7684\u7c7b\u540d\u7ec4\u6210\u3002</p> </li> <li> <p>\u51fd\u6570\u3001\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u547d\u540d\u89c4\u5219\u540c\u6a21\u5757\u7684\u547d\u540d\u89c4\u5219\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5168\u90e8\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\uff0c\u591a\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u4f7f\u7528\u4e0b\u753b\u7ebf\u201c_\u201d\u5206\u9694\u3002</p> </li> <li> <p>\u5e38\u91cf\u547d\u540d\u65f6\u91c7\u7528\u5168\u90e8\u5927\u5199\u5b57\u6bcd\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u753b\u7ebf\u3002</p> </li> <li> <p>\u4f7f\u7528\u5355\u4e0b\u753b\u7ebf\u201c_\u201d\u5f00\u5934\u7684\u6a21\u5757\u53d8\u91cf\u6216\u51fd\u6570\u662f\u53d7\u4fdd\u62a4\u7684\uff0c\u5728\u4f7f\u7528from xxx import*\u8bed\u53e5\u4ece\u6a21\u5757\u4e2d\u5bfc\u5165\u65f6\uff0c\u8fd9\u4e9b\u6a21\u5757\u53d8\u91cf\u6216\u51fd\u6570\u4e0d\u80fd\u88ab\u5bfc\u5165\u3002</p> </li> <li> <p>\u4f7f\u7528\u53cc\u4e0b\u753b\u7ebf\u201c__\u201d\u5f00\u5934\u7684\u5b9e\u4f8b\u53d8\u91cf\u6216\u65b9\u6cd5\u662f\u7c7b\u79c1\u6709\u7684\u3002</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#_8","title":"\u4fdd\u7559\u5b57\uff08\u5173\u952e\u5b57\uff09","text":"<p>\u4fdd\u7559\u5b57\u662fPython\u5df2\u7ecf\u88ab\u8d4b\u4e88\u7279\u5b9a\u610f\u4e49\u7684\u4e00\u4e9b\u5355\u8bcd\uff0c\u5728\u5f00\u53d1\u7a0b\u5e8f\u65f6\uff0c\u4e0d\u53ef\u4ee5\u628a\u8fd9\u4e9b\u4fdd\u7559\u5b57\u4f5c\u4e3a\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\u3001\u6a21\u5757\u548c\u5176\u4ed6\u5bf9\u8c61\u7684\u540d\u79f0\u6765\u4f7f\u7528\uff0c\u5426\u5219\u4f1a\u63d0\u793a\u201cinvalid syntax\u201d\u7684\u9519\u8bef\u4fe1\u606f\u3002  \u6240\u6709\u4fdd\u7559\u5b57\u662f**\u533a\u5206\u5b57\u6bcd\u5927\u5c0f\u5199**\u7684\u3002  \u53ef\u4ee5\u901a\u8fc7\u4e00\u4e0b\u4ee3\u7801\u67e5\u8be2\u83b7\u5f97\uff1a</p> <pre><code>import keyword\nprint(keyword.kwlist)\n</code></pre> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#_9","title":"\u6807\u8bc6\u7b26","text":"<p>\u6807\u8bc6\u7b26\u53ef\u4ee5\u7b80\u5355\u5730\u7406\u89e3\u4e3a\u4e00\u4e2a\u540d\u5b57\uff0c\u6bd4\u5982\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u540d\u5b57\uff0c\u5b83\u4e3b\u8981\u7528\u6765\u6807\u8bc6\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\u3001\u6a21\u5757\u548c\u5176\u4ed6\u5bf9\u8c61\u7684\u540d\u79f0\u3002 \u547d\u540d\u89c4\u5219\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u7531\u5b57\u6bcd\u3001\u4e0b\u753b\u7ebf\u201c_\u201d\u548c\u6570\u5b57\u7ec4\u6210\uff0c\u5e76\u4e14\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0d\u80fd\u662f\u6570\u5b57</p> </li> <li> <p>\u4e0d\u80fd\u5305\u542b\u7a7a\u683c\u3001@\u3001%\u548c$\u7b49\u7279\u6b8a\u5b57\u7b26</p> </li> <li> <p>\u533a\u5206\u5b57\u6bcd\u5927\u5c0f\u5199</p> </li> <li> <p>\u4ee5\u4e0b\u753b\u7ebf\u5f00\u5934\u7684\u6807\u8bc6\u7b26\u6709\u7279\u6b8a\u610f\u4e49\uff0c\u4e00\u822c\u5e94\u907f\u514d\u4f7f\u7528\u76f8\u4f3c\u7684\u6807\u8bc6\u7b26\u3002</p> </li> </ol> <ul> <li> <p>\u4ee5\u5355\u4e0b\u753b\u7ebf\u5f00\u5934\u7684\u6807\u8bc6\u7b26\uff08\u5982_width\uff09\u8868\u793a\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u7684\u7c7b\u5c5e\u6027\uff0c\u4e5f\u4e0d\u80fd\u901a\u8fc7\u201cfrom xxx import *\u201d\u5bfc\u5165\u3002</p> </li> <li> <p>\u4ee5\u53cc\u4e0b\u753b\u7ebf\u5f00\u5934\u7684\u6807\u8bc6\u7b26\uff08\u5982__add\uff09\u8868\u793a\u7c7b\u7684\u79c1\u6709\u6210\u5458\u3002</p> </li> <li> <p>\u4ee5\u53cc\u4e0b\u753b\u7ebf\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u662fPython\u4e13\u7528\u7684\u6807\u8bc6\uff0c\u4f8b\u5982\uff0c\u201cinit\uff08\uff09\u201d\u8868\u793a\u6784\u9020\u51fd\u6570\u3002</p> </li> </ul> <ol> <li>\u5141\u8bb8\u4f7f\u7528\u6c49\u5b57\u4f5c\u4e3a\u6807\u8bc6\u7b26\uff0c\u4f46\u5efa\u8bae\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u6c49\u5b57\u4f5c\u4e3a\u6807\u8bc6\u7b26\u3002</li> </ol> <p></p> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#_10","title":"\u53d8\u91cf","text":"<p>\u5728Python\u4e2d\uff0c\u53d8\u91cf\u4e25\u683c\u610f\u4e49\u4e0a\u5e94\u8be5\u79f0\u4e3a\u201c\u540d\u5b57\u201d\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6807\u7b7e\uff0c\u4e0d\u9700\u8981\u5148\u58f0\u660e\u53d8\u91cf\u540d\u53ca\u5176\u7c7b\u578b\uff0c\u76f4\u63a5\u8d4b\u503c\u5373\u53ef\u521b\u5efa\u5404\u79cd\u7c7b\u578b\u7684\u53d8\u91cf\u3002</p> <p>\u5c31\u50cf\u53d6\u5feb\u9012\u4e00\u6837\uff0c\u5185\u5b58\u5c31\u50cf\u4e00\u4e2a\u5de8\u5927\u7684\u8d27\u7269\u67b6\uff0c\u5728Python\u4e2d\u5b9a\u4e49\u53d8\u91cf\u5c31\u5982\u540c\u7ed9\u5feb\u9012\u76d2\u5b50\u8d34\u6807\u7b7e\u3002\u5feb\u9012\u5b58\u653e\u5728\u8d27\u7269\u67b6\u4e0a\uff0c\u4e0a\u9762\u9644\u7740\u5199\u6709\u53d6\u8d27\u7801\u7684\u6807\u7b7e\u3002\u5f53\u5ba2\u6237\u6765\u53d6\u5feb\u9012\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u5b83\u4eec\u5b58\u653e\u5728\u5927\u578b\u8d27\u67b6\u7684\u5177\u4f53\u4f4d\u7f6e\u3002\u53ea\u9700\u8981\u5ba2\u6237\u63d0\u4f9b\u53d6\u8d27\u7801\uff0c\u5feb\u9012\u5458\u5c31\u4f1a\u628a\u5feb\u9012\u4ea4\u7ed9\u5ba2\u6237\u3002\u53d8\u91cf\u4e5f\u4e00\u6837\uff0c\u4f60\u4e0d\u9700\u8981\u51c6\u786e\u5730\u77e5\u9053\u4fe1\u606f\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981\u8bb0\u4f4f\u5b58\u50a8\u53d8\u91cf\u65f6\u6240\u7528\u7684\u540d\u5b57\uff0c\u518d\u4f7f\u7528\u8fd9\u4e2a\u540d\u5b57\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#_11","title":"\u547d\u540d","text":"<p>\u53d8\u91cf\u7684\u547d\u540d\u5e76\u4e0d\u662f\u4efb\u610f\u7684\uff0c\u5e94\u9075\u5faa\u4ee5\u4e0b\u51e0\u6761\u89c4\u5219\uff1a</p> <ol> <li> <p>\u53d8\u91cf\u540d\u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u6548\u7684\u6807\u8bc6\u7b26\uff0c\u56e0\u6b64\u4e5f\u5e94\u9075\u5faa\u6807\u8bc6\u7b26\u547d\u540d\u89c4\u5219</p> </li> <li> <p>\u4e0d\u80fd\u4f7f\u7528Python\u4e2d\u7684\u4fdd\u7559\u5b57</p> </li> <li> <p>\u614e\u7528\u5c0f\u5199\u5b57\u6bcdl\u548c\u5927\u5199\u5b57\u6bcdO\uff08\u6613\u4e0e\u6570\u5b571\u548c0\u6df7\u6dc6\uff09</p> </li> <li> <p>\u5e94\u9009\u62e9\u6709\u610f\u4e49\u7684\u5355\u8bcd\u4f5c\u4e3a\u53d8\u91cf\u540d</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#_12","title":"\u8d4b\u503c","text":"<p>\u4e3a\u53d8\u91cf\u8d4b\u503c\u53ef\u4ee5\u901a\u8fc7\u7b49\u53f7\uff08=\uff09\u6765\u5b9e\u73b0\uff0c\u89e3\u91ca\u4e3a\u201c\u5c06\u67d0\u4e2a\u503c\u8d4b\u7ed9\u67d0\u4e2a\u53d8\u91cf\u6216\u5c06\u67d0\u4e9b\u503c\u8d4b\u7ed9\u67d0\u4e9b\u53d8\u91cf\u201d\u3002Python\u662f\u4e00\u79cd\u52a8\u6001\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53d8\u91cf\u7684\u503c\u548c\u7c7b\u578b\u53ef\u4ee5\u968f\u65f6\u53d8\u5316\u3002</p> <p>\u539f\u7406\u662f\u5148\u5c06\u67d0\u4e2a\u503c\u5199\u5165\u5185\u5b58\u67d0\u4e2a\u5730\u5740\uff0c\u7136\u540e\u4f7f\u88ab\u8d4b\u503c\u7684\u53d8\u91cf\u540d\u6307\u5411\u8be5\u5730\u5740\uff0c\u4f7f\u7528\u8be5\u53d8\u91cf\u65f6\uff0c\u5c06\u987a\u7740\u5730\u5740\u53d6\u5230\u8be5\u503c\u3002\u5141\u8bb8\u591a\u4e2a\u53d8\u91cf\u6307\u5411\u540c\u4e00\u4e2a\u503c\uff0c\u6b64\u65f6\u6bcf\u4e2a\u53d8\u91cf\u90fd\u5c06\u6307\u5411\u540c\u4e00\u5185\u5b58\u5730\u5740\u3002</p> <ol> <li> <p>\u4e00\u5bf9\u4e00\uff1a\u53d8\u91cf\u540d = value</p> </li> <li> <p>\u4e00\u5bf9\u591a\uff1a\u53d8\u91cf\u540d = value1, value2, value3, ...\uff08\u591a\u503c\u88ab\u89e3\u91ca\u4e3a\u4e00\u4e2a\u5143\u7ec4\uff09</p> </li> <li> <p>\u591a\u5bf9\u591a\uff1a\u53d8\u91cf\u540d1, \u53d8\u91cf\u540d2, ... = value1, value2, ...\uff08\u9700\u4e00\u4e00\u5bf9\u5e94\uff0c\u5206\u522b\u8d4b\u503c\uff09</p> </li> <li> <p>\u591a\u5bf9\u4e00\uff1a\u53d8\u91cf\u540d1 = \u53d8\u91cf\u540d2 = ... = value1</p> </li> </ol> <pre><code>number = 404                  # \u521b\u5efa\u53d8\u91cfnumber\u5e76\u8d4b\u503c\u4e3a404\nnumber = 505                  # \u6b64\u65f6\u53d8\u91cfnumber\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u4e0d\u518d\u662f404\uff0c\u800c\u662f505\nnumber = \"505\"                # \u6b64\u65f6\u53d8\u91cfnumber\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u4e0d\u518d\u662f\u6570\u503c505\uff0c\u800c\u662f\u5b57\u7b26\u4e32\"505\"\nnumber0 = \"505\"               # \u521b\u5efa\u53d8\u91cfnumber0\uff0c\u6307\u5411\u4e0e\u53d8\u91cfnumber\u503c\u5730\u5740\u76f8\u540c\u7684\"505\"\uff08\"505\"\u5728\u5185\u5b58\u4e2d\u5df2\u7ecf\u6709\u4e86\u5730\u5740\uff09\nmy_school = \"\u5357\u4eac\u533b\u79d1\u5927\u5b66\"     # \u521b\u5efa\u53d8\u91cfmy_school\u5e76\u8d4b\u503c\u4e3a\"\u5357\u4eac\u533b\u79d1\u5927\u5b66\"\nnumber = 404, 505             # \u6b64\u65f6\u53d8\u91cfnumber\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u4e0d\u518d\u662f\u5b57\u7b26\u4e32\"505\"\uff0c\u800c\u662f\u5143\u7ec4(404, 505)\nnumber1, number2 = 404, 505   # \u521b\u5efa\u53d8\u91cfnumber1\u548cnumber2\uff0c\u5e76\u5206\u522b\u8d4b\u503c\u4e3a404\u548c505\nnumber1 = number2 = 404       # \u521b\u5efa\u53d8\u91cfnumber1\u548cnumber2\uff0c\u5e76\u90fd\u8d4b\u503c\u4e3a404\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#_13","title":"\u5185\u7f6e\u5e38\u91cf","text":"<p>\u5e38\u91cf\u662f\u7a0b\u5e8f\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u503c\u4e0d\u80fd\u6539\u53d8\u7684\u91cf\uff0c\u5982\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u5c45\u6c11\u8eab\u4efd\u8bc1\u53f7\u7801\u3001\u6570\u5b66\u8fd0\u7b97\u4e2d\u7684\u5706\u5468\u7387\u7b49\uff0c\u8fd9\u4e9b\u90fd\u662f\u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\u7684\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u5e38\u91cf\u3002\u5728Python\u4e2d\uff0c\u5e76\u6ca1\u6709\u63d0\u4f9b\u5b9a\u4e49\u5e38\u91cf\u7684\u4fdd\u7559\u5b57\u3002\u4e0d\u8fc7\u5728PEP 8\u89c4\u8303\u4e2d\u89c4\u5b9a\u4e86\u5e38\u91cf\u7531\u5927\u5199\u5b57\u6bcd\u548c\u4e0b\u753b\u7ebf\u7ec4\u6210\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u5e38\u91cf\u9996\u6b21\u8d4b\u503c\u540e\uff0c\u8fd8\u662f\u53ef\u4ee5\u88ab\u5176\u4ed6\u4ee3\u7801\u4fee\u6539\u7684\u3002</p> <p>\u6709\u5c11\u6570\u7684\u5e38\u91cf\u5b58\u5728\u4e8e\u5185\u7f6e\u547d\u540d\u7a7a\u95f4\u4e2d\uff1a</p> <ol> <li> <p>False\uff1a\u5e03\u5c14\u7c7b\u578b\u7684\u5047\u503c\uff0c\u4ee3\u8868\u6570\u5b570</p> </li> <li> <p>True\uff1a\u5e03\u5c14\u7c7b\u578b\u7684\u771f\u503c\uff0c\u4ee3\u8868\u6570\u5b571</p> </li> <li> <p>None\uff1aNoneType \u7c7b\u578b\u7684\u552f\u4e00\u503c\uff0c\u5e38\u7528\u4e8e\u8868\u793a\u7f3a\u5c11\u503c\uff08\u7a7a\u503c\uff09</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"\u521b\u5efa\u4e0e\u8f6c\u6362","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_2","title":"\u64cd\u4f5c","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_3","title":"\u65b9\u6cd5","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#14","title":"\u5224\u65ad\u7c7b(14)","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#isalpha","title":"isalpha","text":"<p><code>str.isalpha()</code></p> <p>\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5b57\u7b26\u4e14\u6240\u6709\u5b57\u7b26\u90fd\u662f\u5b57\u6bcd\u5219\u8fd4\u56de <code>True</code> \uff0c\u5426\u5219\u8fd4\u56de <code>False</code></p> <pre><code>a = \"ATCGatcg\"\nb = \"1234\"\nc = \"1234ATCG\"\nd = \"\"\nprint(a.isalpha())    # True\nprint(b.isalpha())    # False\nprint(c.isalpha())    # False\nprint(d.isalpha())    # False\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#isupper","title":"isupper","text":"<p><code>str.isupper()</code></p> <p>\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u6709\u533a\u5206\u5927\u5c0f\u5199\u7684\u5b57\u7b26\uff08\u4e00\u822c\u662f\u82f1\u6587\u5b57\u7b26\uff09\u4e14\u5747\u4e3a\u5927\u5199\u5219\u8fd4\u56de <code>True</code> \uff0c\u5426\u5219\u8fd4\u56de <code>False</code></p> <pre><code>a = \"ATCGatcg\"\nb = \"1234ATCGATCG\"\nc = \"ATCGATCG\"\nd = \"1234atcgatcg\"\ne = \"atcgatcg\"\nf = \"\"\nprint(a.isupper())    # False\nprint(b.isupper())    # True\nprint(c.isupper())    # True\nprint(d.isupper())    # False\nprint(e.isupper())    # False\nprint(f.isupper())    # False\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#islower","title":"islower","text":"<p><code>str.islower()</code></p> <p>\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u6709\u533a\u5206\u5927\u5c0f\u5199\u7684\u5b57\u7b26\uff08\u4e00\u822c\u662f\u82f1\u6587\u5b57\u7b26\uff09\u4e14\u5747\u4e3a\u5c0f\u5199\u5219\u8fd4\u56de <code>True</code> \uff0c\u5426\u5219\u8fd4\u56de <code>False</code></p> <pre><code>a = \"ATCGatcg\"\nb = \"1234ATCGATCG\"\nc = \"ATCGATCG\"\nd = \"1234atcgatcg\"\ne = \"atcgatcg\"\nf = \"\"\nprint(a.islower())    # False\nprint(b.islower())    # False\nprint(c.islower())    # False\nprint(d.islower())    # True\nprint(e.islower())    # True\nprint(f.islower())    # False\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#istitle","title":"istitle","text":"<p><code>str.istitle()</code></p> <p>\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5b57\u7b26\u4e14\u4e3a\u6807\u9898\u5b57\u7b26\u4e32\u5219\u8fd4\u56de <code>True</code> \uff0c\u5373\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u82f1\u6587\u5355\u8bcd\u5747\u9996\u5b57\u6bcd\u5927\u5199\u3002 \u5426\u5219\u8fd4\u56de <code>False</code></p> <pre><code>a = \"123 Nanjing Medical University\"\nb = \"123Nanjing\"\nc = \"nanjing\"\nd = \"Nanjing medical University\"\ne = \"\"\nprint(a.istitle())    # True\nprint(b.istitle())    # True\nprint(c.istitle())    # False\nprint(d.istitle())    # False\nprint(e.istitle())    # False\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#isnumericisdigitisdecimal","title":"isnumeric\u3001isdigit\u3001isdecimal","text":"<p><code>str.isnumeric()</code>\u3001<code>str.isdigit()</code>\u3001<code>str.isdecimal()</code></p> <p>\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5b57\u7b26\u4e14\u6240\u6709\u5b57\u7b26\u5747\u4e3a\u6570\u5b57\u5219\u8fd4\u56de <code>True</code> \uff0c\u5426\u5219\u8fd4\u56de <code>False</code></p> <p>isnumeric\uff1a\u5b9e\u9645\u5224\u65ad\u7684\u662f\u6570\u503c\u5b57\u7b26\u3002\u6570\u503c\u5b57\u7b26\u5305\u62ec\u6570\u5b57\u5b57\u7b26\uff0c\u4ee5\u53ca\u6240\u6709\u5728 Unicode \u4e2d\u8bbe\u7f6e\u4e86\u6570\u503c\u7279\u6027\u5c5e\u6027\u7684\u5b57\u7b26\uff0c\u4f8b\u5982 U+2155, VULGAR FRACTION ONE FIFTH\u3002 \u6b63\u5f0f\u7684\u5b9a\u4e49\u4e3a\uff1a\u6570\u503c\u5b57\u7b26\u5c31\u662f\u5177\u6709\u7279\u5f81\u5c5e\u6027\u503c Numeric_Type=Digit, Numeric_Type=Decimal \u6216 Numeric_Type=Numeric \u7684\u5b57\u7b26\u3002</p> <p>isdigit\uff1a\u5b9e\u9645\u5224\u65ad\u7684\u662f\u6570\u5b57\u5b57\u7b26\u3002\u6570\u5b57\u5b57\u7b26\u5305\u62ec\u5341\u8fdb\u5236\u5b57\u7b26\u548c\u9700\u8981\u7279\u6b8a\u5904\u7406\u7684\u6570\u5b57\uff0c\u5982\u517c\u5bb9\u6027\u4e0a\u6807\u6570\u5b57\u3002\u8fd9\u5305\u62ec\u4e86\u4e0d\u80fd\u7528\u6765\u7ec4\u6210 10 \u8fdb\u5236\u6570\u7684\u6570\u5b57\uff0c\u5982 Kharosthi \u6570\u3002 \u4e25\u683c\u5730\u8bb2\uff0c\u6570\u5b57\u662f\u6307\u5c5e\u6027\u503c\u4e3a Numeric_Type=Digit \u6216 Numeric_Type=Decimal \u7684\u5b57\u7b26\u3002</p> <p>isdecimal\uff1a\u5b9e\u9645\u5224\u65ad\u7684\u662f\u5341\u8fdb\u5236\u5b57\u7b26\u3002\u5341\u8fdb\u5236\u5b57\u7b26\u6307\u90a3\u4e9b\u53ef\u4ee5\u7528\u6765\u7ec4\u621010\u8fdb\u5236\u6570\u5b57\u7684\u5b57\u7b26\uff0c\u4f8b\u5982 U+0660 \uff0c\u5373\u963f\u62c9\u4f2f\u5b57\u6bcd\u6570\u5b570 \u3002 \u4e25\u683c\u5730\u8bb2\uff0c\u5341\u8fdb\u5236\u5b57\u7b26\u662f Unicode \u901a\u7528\u7c7b\u522b \"Nd\" \u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u3002</p> <pre><code>a = \"ATCGatcg\"\nb = \"1234\"\nc = \"1234ATCG\"\nd = \"\"\nprint(a.isnumeric())    # False\nprint(b.isnumeric())    # True\nprint(c.isnumeric())    # False\nprint(d.isnumeric())    # False\n\nprint(a.isdigit())      # False\nprint(b.isdigit())      # True\nprint(c.isdigit())      # False\nprint(d.isdigit())      # False\n\nprint(a.isdecimal())    # False\nprint(b.isdecimal())    # True\nprint(c.isdecimal())    # False\nprint(d.isdecimal())    # False\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#isalnum","title":"isalnum","text":"<p><code>str.isalnum()</code></p> <p>\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5b57\u7b26\u4e14\u6240\u6709\u5b57\u7b26\u90fd\u662f\u5b57\u6bcd\u6216\u6570\u5b57\uff0c\u5219\u8fd4\u56de <code>True</code> \uff0c \u5426\u5219\u8fd4\u56de <code>False</code></p> <pre><code>a = \"ATCGatcg\"\nb = \"1234\"\nc = \"1234ATCG\"\nd = \"1234ATCG@# \"\ne = \"\"\nprint(a.isalnum())    # True\nprint(b.isalnum())    # True\nprint(c.isalnum())    # True\nprint(d.isalnum())    # False\nprint(e.isalnum())    # False\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#isspace","title":"isspace","text":"<p><code>str.isspace()</code></p> <p>\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5b57\u7b26\u4e14\u5747\u4e3a\u7a7a\u767d\u5b57\u7b26\uff08\u5305\u62ec\u7a7a\u683c\u3001\u5236\u8868\u7b26\u3001\u6362\u884c\u7b26\u7b49\uff09\uff0c\u8fd4\u56de <code>True</code> \uff0c\u5426\u5219\u8fd4\u56de <code>False</code></p> <pre><code>a = \"   \\t\\n\"\nb = \"\"\nprint(a.isspace())    # True\nprint(b.isspace())    # False\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#isascii","title":"isascii","text":"<p><code>str.isascii()</code></p> <p>\u5982\u679c\u5b57\u7b26\u4e32\u4e3a\u7a7a\u5b57\u7b26\u4e32\u6216\u5747\u4e3a ASCII \u5b57\u7b26\uff08\u5305\u62ec\u63a7\u5236\u5b57\u7b26\u548c\u53ef\u6253\u5370\u5b57\u7b26\uff09\uff0c\u8fd4\u56de <code>True</code> \uff0c\u5426\u5219\u8fd4\u56de <code>False</code></p> <pre><code>a = \"1234ATCG@# \"    # ASCII\u53ef\u6253\u5370\u5b57\u7b26\nb = \"\"               # \u7a7a\u5b57\u7b26\u4e32\nc = \"\u4f60\u597d\"           # \u975eASCII\u7c7b\u53ef\u6253\u5370\u5b57\u7b26 \nd = \"\\t\"             # ASCII\u63a7\u5236\u5b57\u7b26\nprint(a.isascii())    # True\nprint(b.isascii())    # True\nprint(c.isascii())    # False\nprint(d.isascii())    # True\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#isprintable","title":"isprintable","text":"<p><code>str.isprintable()</code></p> <p>\u5982\u679c\u5b57\u7b26\u4e32\u4e3a\u7a7a\u5b57\u7b26\u4e32\u6216\u5747\u4e3a\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u8fd4\u56de <code>True</code> \uff0c\u5426\u5219\u8fd4\u56de <code>False</code> </p> <p>\u4e0d\u53ef\u6253\u5370\u5b57\u7b26\u662f\u5728 Unicode \u5b57\u7b26\u6570\u636e\u5e93\u4e2d\u88ab\u5b9a\u4e49\u4e3a \"Other\" \u6216 \"Separator\" \u7684\u5b57\u7b26\uff0c\u5982\u8f6c\u4e49\u5b57\u7b26\uff0c\u4f8b\u5916\u60c5\u51b5\u662f ASCII \u7a7a\u683c\u5b57\u7b26 (0x20) \u88ab\u89c6\u4f5c\u53ef\u6253\u5370\u5b57\u7b26\u3002</p> <pre><code>a = \"1234ATCG@# \"         # ASCII\u53ef\u6253\u5370\u5b57\u7b26\nb = \"\"                    # \u7a7a\u5b57\u7b26\u4e32\nc = \"\u4f60\u597d\"                # \u975eASCII\u7c7b\u53ef\u6253\u5370\u5b57\u7b26\nd = \"\\t\"                  # ASCII\u63a7\u5236\u5b57\u7b26\nprint(a.isprintable())    # True\nprint(b.isprintable())    # True\nprint(c.isprintable())    # True\nprint(d.isprintable())    # False\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#isidentifier","title":"isidentifier","text":"<p><code>str.isidentifier()</code></p> <p>\u5982\u679c\u5b57\u7b26\u4e32\u662f\u6709\u6548\u7684\u6807\u8bc6\u7b26\uff0c\u8fd4\u56de <code>True</code>\uff0c\u5426\u5219\u8fd4\u56de <code>False</code></p> <pre><code>a = \"1234ATCG@# \"\nb = \"ATCG_atcg\"\nprint(a.isidentifier())    # False\nprint(b.isidentifier())    # True\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#startswith","title":"startswith","text":"<p><code>str.startswith(prefix[, start[, end]])</code></p> <p>\u5982\u679c\u5b57\u7b26\u4e32[<code>start</code>,<code>end</code>)\u7684\u5b50\u5b57\u7b26\u4e32\u4ee5\u6307\u5b9a\u7684 <code>prefix</code> \u5f00\u59cb\u5219\u8fd4\u56de <code>True</code>\uff0c\u5426\u5219\u8fd4\u56de <code>False</code></p> <ol> <li> <p>prefix\uff1a\u53ef\u4ee5\u662f\u524d\u7f00\u5b57\u7b26\u4e32\u6216\u524d\u7f00\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u5143\u7ec4\uff08\u5176\u4e2d\u4e4b\u4e00\u6ee1\u8db3\u5373\u53ef\uff09</p> </li> <li> <p>start\uff1a\u5f00\u59cb\u7d22\u5f15\uff0c\u53ef\u9009\uff0c\u9ed8\u8ba4\u4ece0\u5f00\u59cb</p> </li> <li> <p>end\uff1a\u7ed3\u675f\u7d22\u5f15\uff0c\u53ef\u9009\uff0c\u9ed8\u8ba4\u5230\u5b57\u7b26\u4e32\u672b\u5c3e</p> </li> </ol> <pre><code>a = \"ATCGGGCGGGTTTATTTCCTATTTTTATCG\"\nprint(a.startswith(\"ATCG\"))                             # True\nprint(a.startswith((\"TTCC\", \"CGTA\", \"ATCG\")))           # True\nprint(a.startswith((\"TTCC\", \"CGTA\", \"ATCG\"), 15))       # True\nprint(a.startswith((\"TTCC\", \"CGTA\", \"ATCG\"), 15, 18))   # False\nprint(a.startswith((\"TTCC\", \"CGTA\", \"ATCG\"), 15, 19))   # True\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#endswith","title":"endswith","text":"<p><code>str.endswith(suffix[, start[, end]])</code></p> <p>\u5982\u679c\u5b57\u7b26\u4e32[<code>start</code>,<code>end</code>)\u7684\u5b50\u5b57\u7b26\u4e32\u4ee5\u6307\u5b9a\u7684 <code>suffix</code> \u7ed3\u5c3e\u5219\u8fd4\u56de <code>True</code>\uff0c\u5426\u5219\u8fd4\u56de <code>False</code></p> <ol> <li> <p>suffix\uff1a\u540cstartswith</p> </li> <li> <p>start\uff1a\u540cstartswith</p> </li> <li> <p>end\uff1a\u540cstartswith</p> </li> </ol> <pre><code>a = \"ATCGGGCGGGTTTATTTCCTATTTTTATCG\"\nprint(a.endswith(\"ATCG\"))                             # True\nprint(a.endswith((\"TTCC\", \"CGTA\", \"ATCG\")))           # True\nprint(a.endswith((\"TTCC\", \"CGTA\", \"ATCG\"), 15))       # True\nprint(a.endswith((\"TTCC\", \"CGTA\", \"ATCG\"), 0, 18))    # False\nprint(a.endswith((\"TTCC\", \"CGTA\", \"ATCG\"), 0, 19))    # True\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#4","title":"\u7d22\u5f15\u7c7b(4)","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#find","title":"find","text":"<p><code>str.find(sub[, start[, end]])</code></p> <p>\u8fd4\u56de\u5b50\u5b57\u7b26\u4e32 <code>sub</code> \u5728[<code>start</code>, <code>end</code>)\u8303\u56f4\u5185\u88ab\u627e\u5230\u7684\u6700\u5c0f\u7d22\u5f15\uff08\u5b50\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\uff09\u5e76\u8fd4\u56de\uff0c\u672a\u627e\u5230\u5219\u8fd4\u56de-1</p> <ol> <li> <p>sub\uff1a\u5b50\u5b57\u7b26\u4e32</p> </li> <li> <p>start\uff1a\u5f00\u59cb\u7d22\u5f15\uff0c\u53ef\u9009\uff0c\u9ed8\u8ba4\u4ece0\u5f00\u59cb</p> </li> <li> <p>end\uff1a\u7ed3\u675f\u7d22\u5f15\uff0c\u53ef\u9009\uff0c\u9ed8\u8ba4\u5230\u5b57\u7b26\u4e32\u672b\u5c3e</p> </li> </ol> <pre><code>a = \"ATCGGGCGGGTTTATTTCCTATTTTTATCG\"\nprint(a.find(\"ATCG\"))            # 0\nprint(a.find(\"ATCG\", 15))        # 26\nprint(a.find(\"ATCG\", 15, 29))    # -1\nprint(a.find(\"ATCG\", 15, 30))    # 26\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#index","title":"index","text":"<p><code>str.index(sub[, start[, end]])</code></p> <p>\u540c<code>str.find()</code>\uff0c\u4f46\u627e\u4e0d\u5230\u5b50\u5b57\u7b26\u4e32\u4f1a\u62a5\u9519</p> <pre><code>a = \"ATCGGGCGGGTTTATTTCCTATTTTTATCG\"\nprint(a.index(\"ATCG\"))            # 0\nprint(a.index(\"ATCG\", 15))        # 26\nprint(a.index(\"ATCG\", 15, 29))    # ValueError: substring not found\nprint(a.index(\"ATCG\", 15, 30))    # 26\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#rfind","title":"rfind","text":"<p><code>str.rfind(sub[, start[, end]])</code></p> <p>\u540c<code>str.find()</code>\uff0c\u4f46\u627e\u6700\u5927\u7d22\u5f15\uff08\u5b50\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\uff09</p> <pre><code>a = \"ATCGGGCGGGTTTATTTCCTATTTTTATCG\"\nprint(a.rfind(\"ATCG\"))    # 26\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#rindex","title":"rindex","text":"<p><code>str.rindex(sub[, start[, end]])</code></p> <p>\u540c<code>str.index()</code>\uff0c\u4f46\u627e\u6700\u5927\u7d22\u5f15\uff08\u5b50\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\uff09</p> <pre><code>a = \"ATCGGGCGGGTTTATTTCCTATTTTTATCG\"\nprint(a.rindex(\"ATCG\"))    # 26\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#4_1","title":"\u586b\u5145\u7c7b(4)","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#center","title":"center","text":"<p><code>str.center(width[, fillchar])</code></p> <p>\u8fd4\u56de\u957f\u5ea6\u4e3a <code>width</code> \u7684\u5b57\u7b26\u4e32\u526f\u672c\uff0c\u539f\u5b57\u7b26\u4e32\u5728\u5176\u6b63\u4e2d\u3002 \u4f7f\u7528\u6307\u5b9a\u7684 <code>fillchar</code> \u586b\u5145\u7a7a\u4f4d (\u9ed8\u8ba4\u4f7f\u7528\u7a7a\u683c\u7b26)\u3002 \u5982\u679c <code>width</code> \u2264 \u539f\u5b57\u7b26\u4e32\u957f\u5ea6\u5219\u8fd4\u56de\u539f\u5b57\u7b26\u4e32\u7684\u526f\u672c\u3002</p> <pre><code>a = \"ATCG\"\nprint(a.center(10))        #    ATCG   \nprint(a.center(10, \"*\"))   # ***ATCG***\nprint(a.center(2))         # ATCG\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#ljust","title":"ljust","text":"<p><code>str.ljust(width[, fillchar])</code></p> <p>\u540c<code>str.center()</code>\uff0c\u4f46\u539f\u5b57\u7b26\u4e32\u5728\u8fd4\u56de\u526f\u672c\u4e2d\u9760\u5de6\u5bf9\u9f50</p> <pre><code>a = \"ATCG\"    \nprint(a.ljust(10, \"*\"))   # ATCG******\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#rjust","title":"rjust","text":"<p><code>str.rjust(width[, fillchar])</code></p> <p>\u540c<code>str.center()</code>\uff0c\u4f46\u539f\u5b57\u7b26\u4e32\u5728\u8fd4\u56de\u526f\u672c\u4e2d\u9760\u53f3\u5bf9\u9f50</p> <pre><code>a = \"ATCG\"\nprint(a.rjust(10, \"*\"))   # ******ATCG\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#zfill","title":"zfill","text":"<p><code>str.zfill(width)</code></p> <p>\u8fd4\u56de\u539f\u5b57\u7b26\u4e32\u7684\u526f\u672c\uff0c\u5728\u5de6\u8fb9\u586b\u5145'0' \u4f7f\u5176\u957f\u5ea6\u53d8\u4e3a<code>width</code>\u3002 \u6b63\u8d1f\u503c\u524d\u7f00 ('+'/'-') \u7684\u5904\u7406\u65b9\u5f0f\u662f\u5728\u6b63\u8d1f\u7b26\u53f7\u4e4b\u540e\u586b\u5145\u3002 \u5982\u679c width \u2264 \u539f\u5b57\u7b26\u4e32\u957f\u5ea6 \u5219\u8fd4\u56de\u539f\u5b57\u7b26\u4e32\u7684\u526f\u672c\u3002</p> <pre><code>a = \"ATCG\"\nb = \"+ATCG\"\nprint(a.zfill(10))    # 000000ATCG\nprint(b.zfill(10))    # +00000ATCG\nprint(a.zfill(2))     # ATCG\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#6","title":"\u62c6\u5206\u7c7b(6)","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#split","title":"split","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#lsplit","title":"lsplit","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#rsplit","title":"rsplit","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#splitlines","title":"splitlines","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#partition","title":"partition","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#rpartition","title":"rpartition","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#3","title":"\u79fb\u9664\u7c7b(3)","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#strip","title":"strip","text":"<p><code>str.strip([chars])</code></p> <p>\u8fd4\u56de\u539f\u5b57\u7b26\u4e32\u7684\u526f\u672c\uff0c\u79fb\u9664\u5176\u4e2d\u7684\u524d\u5bfc\u548c\u672b\u5c3e\u5b57\u7b26\u3002 <code>chars</code> \u53c2\u6570\u4e3a\u6307\u5b9a\u8981\u79fb\u9664\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u7701\u7565\u6216\u4e3a <code>None</code>\uff0c\u5219 \u9ed8\u8ba4\u79fb\u9664\u7a7a\u767d\u7b26\uff08\u5305\u62ec\u7a7a\u683c\u3001\u6362\u884c\u7b26\u7b49\uff09\u3002 \u5b9e\u9645\u4e0a <code>chars</code> \u53c2\u6570\u5e76\u975e\u6307\u5b9a\u5355\u4e2a\u524d\u7f00\u6216\u540e\u7f00\uff0c\u800c\u662f\u4f1a\u79fb\u9664\u5176\u4e2d\u5b57\u7b26\u7684\u6240\u6709\u7ec4\u5408\uff08\u5373\u79fb\u9664\u7684\u5b57\u7b26\u4e32\u8fde\u7eed\u542b\u6709<code>chars</code>\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\uff09</p> <pre><code>a = \"  *@#ATCG#**@    \"\nprint(a.strip())        # *@#ATCG#**@\nprint(a.strip(\"*# @\"))  # ATCG\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#lstrip","title":"lstrip","text":"<p><code>str.lstrip([chars])</code></p> <p>\u540c<code>str.strip()</code>\uff0c\u4f46\u53ea\u79fb\u9664\u524d\u5bfc\u5b57\u7b26</p> <pre><code>a = \"  *@#ATCG#**@    \"\nprint(a.lstrip(\"*# @\"))    # ATCG#**@\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#rstrip","title":"rstrip","text":"<p><code>str.rstrip([chars])</code></p> <p>\u540c<code>str.strip()</code>\uff0c\u4f46\u53ea\u79fb\u9664\u672b\u5c3e\u5b57\u7b26</p> <pre><code>a = \"  *@#ATCG#**@    \"\nprint(a.rstrip(\"*# @\"))    #   *@#ATCG\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#1","title":"\u8ba1\u6570\u7c7b(1)","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#count","title":"count","text":"<p><code>str.count(sub[, start[, end]])</code></p> <p>\u8fd4\u56de\u5b50\u5b57\u7b26\u4e32 <code>sub</code> \u5728 [<code>start</code>, <code>end</code>) \u8303\u56f4\u5185\u975e\u91cd\u53e0\u51fa\u73b0\u7684\u6b21\u6570</p> <ol> <li> <p>sub\uff1a\u5b50\u5b57\u7b26\u4e32</p> </li> <li> <p>start\uff1a\u5f00\u59cb\u7d22\u5f15\uff0c\u53ef\u9009\uff0c\u9ed8\u8ba4\u4ece0\u5f00\u59cb</p> </li> <li> <p>end\uff1a\u7ed3\u675f\u7d22\u5f15\uff0c\u53ef\u9009\uff0c\u9ed8\u8ba4\u5230\u5b57\u7b26\u4e32\u672b\u5c3e</p> </li> </ol> <pre><code>a = \"ATCGGGGCCCTTTAGGTC\"\nprint(a.count(\"GG\"))        # 3\nprint(a.count(\"GG\", 4))     # 2\nprint(a.count(\"GG\", 4, 15)) # 1\nprint(a.count(\"GG\", 4, 16)) # 2\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#7","title":"\u8f6c\u6362\u7c7b(7)","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#capitalize","title":"capitalize","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#casefold","title":"casefold","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#upper","title":"upper","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#lower","title":"lower","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#swapcase","title":"swapcase","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#title","title":"title","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#translate","title":"translate","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#2","title":"\u66ff\u6362\u7c7b(2)","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#replace","title":"replace","text":"<p><code>str.replace(old, new[, count])</code></p> <p>\u7528 <code>new</code> \u66ff\u6362\u5b50\u5b57\u7b26\u4e32 <code>old</code> \u7684\u6240\u6709\u51fa\u73b0\u6b21\u6570\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u4e32\u7684\u526f\u672c\u3002\u5982\u679c\u7ed9\u5b9a\u4e86\u53ef\u9009\u53c2\u6570 <code>count</code>\uff0c\u5219\u53ea\u66ff\u6362\u524d <code>count</code> \u6b21\u51fa\u73b0\u7684\u5b57\u7b26\u4e32\u3002</p> <pre><code>a = \"ATCGGGGCCCTTTAGGTC\"\nprint(a.replace(\"GG\", \"gg\"))      # ATCggggCCCTTTAggTC\nprint(a.replace(\"GG\", \"gg\", 1))   # ATCggGGCCCTTTAGGTC\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#expandtabs","title":"expandtabs","text":"<p><code>str.expandtabs(tabsize*=*8)</code></p> <p>\u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u526f\u672c\uff0c\u5176\u4e2d\u6240\u6709\u7684\u5236\u8868\u7b26\u4f1a\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u7a7a\u683c\u66ff\u6362\uff0c\u4f7f\u5f97\u5236\u8868\u7b26\u524d\u7684\u5b57\u7b26+\u5236\u8868\u7b26\u66ff\u6362\u540e\u7684\u7a7a\u683c=<code>tabsize</code>\uff08\u9ed8\u8ba4\u4e3a8\uff09\u7684\u6700\u5c0f\u500d\u6570\u3002\u5f53<code>tabsize</code>\uff1e\u6700\u957f\u5b50\u5b57\u7b26\u4e32\u957f\u5ea6\u65f6\uff0c\u53ef\u5b9e\u73b0\u5217\u7684\u5bf9\u9f50\u3002</p> <pre><code>a = \"name\\tsex\\tage\\tvocation\\tinterest\\nxiaoming\\tmale\\t23\\tstudent\\tpython\"\nprint(a.expandtabs())\n\"\"\"\nname    sex     age     vocation        interest\nxiaoming        male    23      student python\n\"\"\"\n\nprint(a.expandtabs(tabsize=9))\n\"\"\"\nname     sex      age      vocation interest\nxiaoming male     23       student  python\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#1_1","title":"\u62fc\u63a5\u7c7b(1)","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#join","title":"join","text":"<p><code>str.join(iterable)</code></p> <p>\u8fd4\u56de\u4e00\u4e2a\u7531 <code>iterable</code> \u4e2d\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u800c\u6210\u7684\u5b57\u7b26\u4e32\u3002 \u5982\u679c iterable \u4e2d\u5b58\u5728\u4efb\u4f55\u975e\u5b57\u7b26\u4e32\u503c\u5219\u4f1a\u5f15\u53d1 <code>TypeError</code>\u3002 \u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u5b57\u7b26\u4e32\u5c06\u4f5c\u4e3a\u5143\u7d20\u4e4b\u95f4\u7684\u5206\u9694\u3002</p> <pre><code>print(\"*\".join([\"1\", \"2\", \"3\"]))    # 1*2*3\nprint(\"*\".join([1, \"2\", \"3\"]))      # TypeError\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#1_2","title":"\u7f16\u7801\u7c7b(1)","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#encode","title":"encode","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#2_1","title":"\u683c\u5f0f\u5316\u7c7b(2)","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#format","title":"format","text":"<p>\u89c1\u683c\u5f0f\u5316</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#format_map","title":"format_map","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_4","title":"\u51fd\u6570","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_5","title":"\u683c\u5f0f\u5316","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_6","title":"\u8f6c\u4e49\u5b57\u7b26","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/","title":"\u6253\u5f00\u4e0e\u5173\u95ed","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#openclose","title":"open\u548cclose","text":"<p><code>open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)</code></p> <p>\u6253\u5f00 <code>file</code> \u5e76\u8fd4\u56de\u5bf9\u5e94\u7684\u6587\u4ef6\u5bf9\u8c61<code>file object</code>\u3002 \u5982\u679c\u8be5\u6587\u4ef6\u4e0d\u80fd\u88ab\u6253\u5f00\uff0c\u5219\u5f15\u53d1 <code>OSError</code>\uff08\u5982\u6587\u4ef6\u5df2\u88ab\u5176\u5b83\u7a0b\u5e8f\u6253\u5f00\u6216\u4e0a\u4e00\u6b21\u7a0b\u5e8f\u672a\u7ed3\u675f\u540c\u65f6\u672a\u5173\u95ed\u6587\u4ef6\u7b49\uff09</p> <ol> <li> <p>file\uff1a\u5fc5\u9009\uff0c\u5c06\u8981\u6253\u5f00\u7684\u6587\u4ef6\u7684\u8def\u5f84\uff08\u7edd\u5bf9\u8def\u5f84\u6216\u8005\u76f8\u5bf9\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u8def\u5f84\uff09</p> </li> <li> <p>\u7cfb\u7edf\u8def\u5f84\uff1a\u6307\u4ece\u7cfb\u7edf\u8d44\u6e90\u7ba1\u7406\u5668\u76f4\u63a5\u590d\u5236\u6765\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u4ee5\u53cd\u659c\u6760\uff08\"\\\"\uff09\u5206\u7ea7\u3002\u5982\"D:\\OneDrive\\\u6587\u6863\\8.Py_Project\\TEMP\\Temp\\FPKM.txt\"</p> </li> <li> <p>\u8f93\u5165\u8def\u5f84\uff1a\u6307python\u4ee3\u7801\u7f16\u5199\u65f6\u5e94\u4f20\u5165\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u4ee5\u6b63\u659c\u6760\uff08\"/\", \"\\\"\uff09\u5206\u7ea7\u3002\u5982\"D:/OneDrive/\u6587\u6863/8.Py_Project/TEMP/Temp/FPKM.txt\" \u6216 \"D:\\OneDrive\\\u6587\u6863\\8.Py_Project\\TEMP\\Temp\\FPKM.txt\"\uff08\u56e0\u4e3a\"\\\"\u5728python\u4e2d\u88ab\u89e3\u91ca\u4e3a\u8f6c\u4e49\u7b26\uff09</p> </li> <li> <p>\u7edd\u5bf9\u8def\u5f84\uff1a\u6307\u4ece\u78c1\u76d8\u6839\u76ee\u5f55\u4e00\u76f4\u5230\u6587\u4ef6\u540d\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u5982\u4e0a</p> </li> <li> <p>\u76f8\u5bf9\u8def\u5f84\uff1a\u6307\u76f8\u5bf9\u4e8e\u6240\u6267\u884cpython\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u7684\u8def\u5f84\uff0c\u4ee5\"./\"\u8868\u793a\u5f53\u524d\u76ee\u5f55\uff0c\u5982\"./FPKM.txt\"\uff0c\u540c\u76ee\u5f55\u65f6\u53ef\u76f4\u63a5\u7701\u7565\u7528\u6587\u4ef6\u540d\uff0c\u5982\u76f4\u63a5\u7528\"FPKM.txt\"</p> </li> </ol> <p></p> <ol> <li>mode\uff1a\u6307\u660e\u6587\u4ef6\u6253\u5f00\u6a21\u5f0f\u7684\u53ef\u9009\u5b57\u7b26\u4e32\uff0c\u53ef\u9009\u3002\u5e38\u89c1\"r\"\uff08\u9ed8\u8ba4\uff0c\u6587\u672c\u6a21\u5f0f\u8bfb\u53d6\uff0c\u7b49\u4ef7\u4e8e\"rt\"\uff09\u3001\"rb\"\uff08\u4e8c\u8fdb\u5236\u6a21\u5f0f\u8bfb\u53d6\uff09\u3001\"r+\"\uff08\u8bfb\u53d6\u5e76\u540c\u65f6\u5199\u5165\uff09\u3001\"w\"\uff08\u6587\u672c\u6a21\u5f0f\u8986\u76d6\u5199\u5165\uff0c\u7b49\u4ef7\u4e8e\"wt\"\uff09\u3001\"wb\"\uff08\u4e8c\u8fdb\u5236\u6a21\u5f0f\u5199\u5165\uff09\u3001\"a+\"\uff08\u6587\u672c\u6a21\u5f0f\u8ffd\u52a0\u5199\u5165\u540c\u65f6\u8bfb\u53d6\uff09\u7b49\uff0c\u89c1\u540e</li> </ol> \u6a21\u5f0f \u542b\u4e49 \"r\" \u8bfb\u53d6\uff08\u9ed8\u8ba4\uff09\uff0c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u62a5\u9519 \"w\" \u8986\u76d6\u5199\u5165\uff0c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa \"a\" \u8ffd\u52a0\u5199\u5165\uff0c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa \"x\" \u521b\u5efa\u5199\u5165\uff0c\u6587\u4ef6\u5b58\u5728\u5219\u62a5\u9519 \"t\" \u6587\u672c\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09\uff0c\u7528\u4e8e\u6587\u672c\u6587\u4ef6\u7684\u8bfb\u5199 \"b\" \u4e8c\u8fdb\u5236\u6a21\u5f0f\uff0c\u7528\u4e8e\u6d41\u6587\u4ef6\u5982mp4\u3001mp3\u3001xlsx\u3001docx\u3001pdf\u3001exe\u7b49\u6587\u4ef6\u7684\u4e8c\u8fdb\u5236\u8bfb\u5199 \"+\" \u540c\u65f6\u8bfb\u5199 <ol> <li> <p>buffering\uff1a\u7565</p> </li> <li> <p>encoding\uff1a\u53ea\u5728\u6587\u672c\u6a21\u5f0f\u4e0b\u4f7f\u7528\uff0c\u53ef\u9009\u3002\u5c06\u6587\u4ef6\u7684\u4e8c\u8fdb\u5236\u6e90\u7801\u6309\u6307\u5b9a\u7f16\u7801\u683c\u5f0f\u8fdb\u884c\u7f16\u7801\u89e3\u7801\uff0c\u6587\u4ef6\u662f\u4ee5\u4ec0\u4e48\u7f16\u7801\u683c\u5f0f\u50a8\u5b58\u7684\u5c31\u8bbe\u7f6e\u4e3a\u4ec0\u4e48\u7f16\u7801\u683c\u5f0f\uff0c\u4ee5\u9632\u51fa\u73b0\u4e71\u7801\u548c\u62a5\u9519\uff0c\u5e38\u7528\"utf-8\"\u3002\u9ed8\u8ba4\u4f7f\u7528\u7684\u7f16\u7801\u683c\u5f0f\u4f9d\u8d56\u4e8e\u5177\u4f53\u5e73\u53f0\uff0c\u53ef\u80fd\u662f\"GBK\"\u3002</p> </li> <li> <p>errors\uff1a\u53ea\u5728\u6587\u672c\u6a21\u5f0f\u4e0b\u4f7f\u7528\uff0c\u53ef\u9009\uff0c\u4e00\u822c\u4e0d\u4f20\u5165\u53c2\u6570\u3002\u7528\u4e8e\u6307\u5b9a\u5982\u4f55\u5904\u7406\u7f16\u7801\u548c\u89e3\u7801\u9519\u8bef</p> </li> <li> <p>\"strict\"\uff1a\u9ed8\u8ba4\u3002\u5b58\u5728\u7f16\u7801\u9519\u8bef\u65f6\u4f1a\u5f15\u53d1 <code>ValueError</code> \u5f02\u5e38</p> </li> <li> <p>\"ignore\"\uff1a\u5ffd\u7565\u7f16\u7801\u9519\u8bef\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u4e22\u5931</p> </li> <li> <p>\"replace\"\uff1a\u5c06\u66ff\u6362\u6807\u8bb0\uff08\u4f8b\u5982 '?' \uff09\u63d2\u5165\u6709\u9519\u8bef\u6570\u636e\u7684\u5730\u65b9</p> </li> <li> <p>\"surrogateescape\"\uff1a\u628a\u4efb\u4f55\u4e0d\u6b63\u786e\u7684\u5b57\u8282\u8868\u793a\u4e3a U+DC80 \u81f3 U+DCFF \u8303\u56f4\u5185\u7684\u4e0b\u65b9\u66ff\u4ee3\u7801\u4f4d\u3002 \u5f53\u5728\u5199\u5165\u6570\u636e\u65f6\u4f7f\u7528 surrogateescape \u9519\u8bef\u5904\u7406\u5668\u65f6\u8fd9\u4e9b\u66ff\u4ee3\u7801\u4f4d\u4f1a\u88ab\u8f6c\u56de\u5230\u76f8\u540c\u7684\u5b57\u8282\u3002 \u8fd9\u9002\u7528\u4e8e\u5904\u7406\u5177\u6709\u672a\u77e5\u7f16\u7801\u683c\u5f0f\u7684\u6587\u4ef6\u3002</p> </li> <li> <p>\"xmlcharrefreplace\"\uff1a\u4ec5\u5728\u5199\u5165\u6587\u4ef6\u65f6\u624d\u53d7\u5230\u652f\u6301\u3002 \u7f16\u7801\u683c\u5f0f\u4e0d\u652f\u6301\u7684\u5b57\u7b26\u5c06\u88ab\u66ff\u6362\u4e3a\u76f8\u5e94\u7684 XML \u5b57\u7b26\u5f15\u7528 &amp;#nnn;</p> </li> <li> <p>\"backslashreplace\"\uff1a\u7528Python\u7684\u53cd\u5411\u8f6c\u4e49\u5e8f\u5217\u66ff\u6362\u683c\u5f0f\u9519\u8bef\u7684\u6570\u636e</p> </li> <li> <p>\"namereplace\"\uff1a\u53ea\u5728\u7f16\u5199\u65f6\u652f\u6301\uff0c\u7528 \\N{...} \u8f6c\u4e49\u5e8f\u5217\u66ff\u6362\u4e0d\u652f\u6301\u7684\u5b57\u7b26</p> </li> <li> <p>newline\uff1a\u53ea\u5728\u6587\u672c\u6a21\u5f0f\u4e0b\u4f7f\u7528\uff0c\u53ef\u9009\uff0c\u4e00\u822c\u4e0d\u4f20\u5165\u53c2\u6570\u3002\u51b3\u5b9a\u5982\u4f55\u89e3\u6790\u6587\u4ef6\u7684\u6362\u884c\u7b26\u3002 \u5b83\u53ef\u4ee5\u4e3a <code>None</code>, <code>''</code>, <code>'\\n'</code>, <code>'\\r'</code> \u548c <code>'\\r\\n'</code>\u3002\u89c1<code>file.tell()</code></p> </li> <li> <p>closefd\uff1a\u7565</p> </li> <li> <p>opener\uff1a\u7565</p> </li> </ol> <pre><code>file = open(\"FPKM.txt\", \"r\", encoding=\"utf-8\")    # \u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5c06\u6587\u4ef6\u5bf9\u8c61\u8d4b\u503c\u7ed9\u53d8\u91cffile\nprint(file)                                       # \u6253\u5370file\uff1a&lt;_io.TextIOWrapper name='FPKM.txt' mode='r' encoding='cp936'&gt;\nprint(file.closed)                                # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5173\u95ed\uff1aFalse\nfile.close()                                      # \u5173\u95ed\u6587\u4ef6\nprint(file.closed)                                # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5173\u95ed\uff1aTrue\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#with-open-as","title":"with open() as","text":"<p>\u53c2\u6570\u540c\u4e0a\uff0c\u6ce8\u610f\u7f29\u8fdb\uff0c\u7f29\u8fdb\u7ed3\u675f\u6587\u4ef6\u81ea\u52a8\u5173\u95ed\uff0c\u53ef\u4ee5\u540c\u65f6\u7528open()\u6253\u5f00\u591a\u4e2a\u6587\u4ef6\uff08\u89c1\u540e\uff09</p> <pre><code>with open(\"FPKM.txt\", \"r\", encoding=\"utf-8\") as file:  # \u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5c06\u6587\u4ef6\u5bf9\u8c61\u8d4b\u503c\u7ed9\u53d8\u91cffile\n    print(file)                                        # \u6253\u5370file\uff1a&lt;_io.TextIOWrapper name='FPKM.txt' mode='r' encoding='cp936'&gt;\n    print(file.closed)                                 # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5173\u95ed\uff1aFalse\uff08\u7f29\u8fdb\u672a\u7ed3\u675f\uff0c\u6587\u4ef6\u64cd\u4f5c\u672a\u7ed3\u675f\uff0c\u6587\u4ef6\u672a\u5173\u95ed\uff09\nprint(file.closed)                                     # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5173\u95ed\uff1aTrue\uff08\u7f29\u8fdb\u7ed3\u675f\uff0c\u6587\u4ef6\u64cd\u4f5c\u7ed3\u675f\uff0c\u6587\u4ef6\u81ea\u52a8\u5173\u95ed\uff09\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#_2","title":"\u8bfb\u53d6","text":"<p>FPKM.txt</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#read","title":"read","text":"<p><code>file.read(size)</code></p> <p>\u4ece\u6587\u672c\u6307\u9488\u5904\uff08\u4e00\u822c\u6253\u5f00\u6587\u4ef6\u65f6\u6307\u9488\u4f4d\u7f6e\u5728\u6587\u672c\u5f00\u5934\uff09\u5f00\u59cb\u8bfb\u53d6\u6574\u4e2a\u6587\u672c\uff0c\u8bfb\u53d6\u7684\u5185\u5bb9\u5f62\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u6587\u672c\u6a21\u5f0f\uff09\uff0c\u6216\u5b57\u8282\u4e32\u5bf9\u8c61\uff08\u4e8c\u8fdb\u5236\u6a21\u5f0f\uff09</p> <ol> <li> <p>size\uff1a\u6307\u5b9a\u8bfb\u53d6\u5185\u5bb9\u7684\u957f\u5ea6</p> </li> <li> <p>\u7701\u7565\u6216\u8d1f\u6570\uff1a\u9ed8\u8ba4\u4e3a-1\uff0c\u8bfb\u53d6\u5e76\u8fd4\u56de\u6574\u4e2a\u6587\u672c\u5185\u5bb9</p> </li> <li> <p>\u6587\u672c\u6a21\u5f0f\uff1a\u8bfb\u53d6\u5e76\u8fd4\u56de\u6700\u591a\u524dsize\u4e2a\u5b57\u7b26</p> </li> <li> <p>\u4e8c\u8fdb\u5236\u6a21\u5f0f\uff1a\u8bfb\u53d6\u5e76\u8fd4\u56de\u6700\u591a\u524dsize\u4e2a\u5b57\u8282</p> </li> </ol> <pre><code>with open(\"FPKM.txt\", \"r\", encoding=\"utf-8\") as file:\n    text = file.read(53)    # \u8bfb\u53d6\u4ece\u6587\u4ef6\u5f00\u5934\u5f00\u59cb\u768453\u4e2a\u5b57\u7b26\uff0c\u5305\u62ec\u6362\u884c\u7b26\"\\n\"\n    print(text)\n\n\"\"\"\nID          Fruit       Root        Stem        Leaf\n\n\"\"\"\n\n\nwith open(\"FPKM.txt\", \"r\", encoding=\"utf-8\") as file:\n    text = file.read(100)\n    print(text)\n\n\"\"\"\nID          Fruit       Root        Stem        Leaf\ngene1       324.1       10131.62    2345.36    \n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#readline","title":"readline","text":"<p><code>file.readline(limit)</code></p> <p>\u4ece\u6587\u672c\u6307\u9488\u5904\u5f00\u59cb\u8bfb\u53d6\u4e00\u884c\uff0c\u5230\u6362\u884c\u7b26\u7ed3\u675f\uff08\u5305\u62ec\u6362\u884c\u7b26\uff09\uff0c\u5f62\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32</p> <ol> <li> <p>limit\uff1a\u6307\u5b9a\u8bfb\u53d6\u5185\u5bb9\u7684\u957f\u5ea6</p> </li> <li> <p>\u7701\u7565\u6216\u8d1f\u6570\uff1a\u9ed8\u8ba4\u4e3a-1\uff0c\u8bfb\u53d6\u5e76\u8fd4\u56de\u6574\u884c\u5185\u5bb9</p> </li> <li> <p>\u6587\u672c\u6a21\u5f0f\uff1a\u8bfb\u53d6\u5e76\u8fd4\u56de\u6700\u591a\u8be5\u884c\u524dsize\u4e2a\u5b57\u7b26</p> </li> <li> <p>\u4e8c\u8fdb\u5236\u6a21\u5f0f\uff1a\u8bfb\u53d6\u5e76\u8fd4\u56de\u6700\u591a\u8be5\u884c\u524dsize\u4e2a\u5b57\u8282</p> </li> </ol> <pre><code>with open(\"FPKM.txt\", \"r\", encoding=\"utf-8\") as file:\n    line1 = file.readline()\n    line2 = file.readline()\n    line3 = file.readline()\n    print(line1, line2, line3)\n\n\"\"\"\nID          Fruit       Root        Stem        Leaf\ngene1       324.1       10131.62    2345.36     7730.21\ngene2       46          4460.22     17132.75    43406.46\n\n\"\"\"\n\n\nwith open(\"FPKM.txt\", \"r\", encoding=\"utf-8\") as file:\n    line = file.readline(100)\n    print(line)\n\n\"\"\"\nID          Fruit       Root        Stem        Leaf\n\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#readlines","title":"readlines","text":"<p><code>file.readlines(hint)</code></p> <p>\u4ece\u6587\u672c\u6307\u9488\u5904\u5f00\u59cb\u8bfb\u53d6\u6240\u6709\u884c\uff0c\u6bcf\u884c\u5230\u6362\u884c\u7b26\u7ed3\u675f\uff0c\u5c06\u6bcf\u4e00\u884c\u4f5c\u4e3a\u5b57\u7b26\u4e32\u5143\u7d20\u5b58\u5165\u5217\u8868</p> <ol> <li>hint\uff1a\u7701\u7565\u65f6\u9ed8\u8ba4\u8bfb\u53d6\u6240\u6709\u884c\uff0c\u6b64\u65f6\u7b49\u4ef7\u4e8e<code>list(file)</code>\uff1b\u6307\u5b9a\u4ee5\u63a7\u5236\u8bfb\u53d6\u7684\u884c\u6570\u3002\u4ee5\u5b57\u7b26\uff08\u6587\u672c\u6a21\u5f0f\uff09\u6216\u5b57\u8282\uff08\u4e8c\u8fdb\u5236\u6a21\u5f0f\uff09\u4e3a\u5355\u4f4d\uff0chint\u6307\u5b9a\u7684\u5927\u5c0f\u8bfb\u5230\u4e86\u54ea\u4e00\u884c\uff0c\u5c31\u8f93\u51fa\u591a\u5c11\u884c\uff1b\u8bfb\u5230\u6362\u884c\u7b26\"\\n\"\u65f6\u4f1a\u591a\u8bfb\u53d6\u4e0b\u4e00\u884c\u3002\uff08\u6bcf\u884c\u8f93\u51fa\u7684\u957f\u5ea6\u4e0ehint\u65e0\u5173\uff0c\u90fd\u662f\u6574\u884c\u8f93\u51fa\uff09</li> </ol> <pre><code># \u6ce8\u610f\uff1a\u6240\u7528\u6587\u672c\u7b2c\u4e00\u884c\u5305\u62ec\"\\n\"\u5728\u5185\u4e00\u517153\u4e2a\u5b57\u7b26\n\nwith open(\"FPKM.txt\", \"r\", encoding=\"utf-8\") as file:\n    lines = file.readlines(52)    # \u8bfb\u5230\u7b2c\u4e00\u884c\u4f46\u672a\u8bfb\u5230\u7b2c\u4e00\u884c\u6362\u884c\u7b26\uff0c\u53ea\u8f93\u51fa\u7b2c\u4e00\u884c\n    print(lines)\n\n\"\"\"\n['ID          Fruit       Root        Stem        Leaf\\n']\n\"\"\"\n\n\nwith open(\"FPKM.txt\", \"r\", encoding=\"utf-8\") as file:\n    lines = file.readlines(53)    # \u8bfb\u5230\u7b2c\u4e00\u884c\u4e14\u8bfb\u5230\u7b2c\u4e00\u884c\u6362\u884c\u7b26\uff0c\u8f93\u51fa\u7b2c\u4e00\u884c\u53ca\u4e0b\u4e00\u884c\n    print(lines)\n\n\"\"\"\n['ID          Fruit       Root        Stem        Leaf\\n', 'gene1       324.1    10131.62    2345.36     7730.21\\n']\n\"\"\"\n\n\nwith open(\"FPKM.txt\", \"r\", encoding=\"utf-8\") as file:\n    lines = file.readlines(54)    # \u8bfb\u5230\u7b2c\u4e8c\u884c\u4f46\u672a\u8bfb\u5230\u7b2c\u4e8c\u884c\u6362\u884c\u7b26\uff0c\u53ea\u8f93\u51fa\u7b2c\u4e00\u884c\u548c\u7b2c\u4e8c\u884c\n    print(lines)\n\n\"\"\"\n['ID          Fruit       Root        Stem        Leaf\\n', 'gene1       324.1    10131.62    2345.36     7730.21\\n']\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#_3","title":"\u904d\u5386","text":"<pre><code>with open(\"FPKM.txt\", \"r\", encoding=\"utf-8\") as file:\n    n = 0    # \u4ec5\u7528\u4e8e\u63a7\u5236\u8f93\u51fa\u884c\u6570\uff0c\u65e0\u5176\u5b83\u7279\u6b8a\u7528\u610f\n    for line in file:\n        print(line, end=\"\")\n        n += 1\n        if n == 2:\n            break\n\n\"\"\"\nID          Fruit       Root        Stem        Leaf\ngene1       324.1       10131.62    2345.36     7730.21\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#_4","title":"\u5199\u5165","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#write","title":"write","text":"<p><code>file.write(string)</code></p> <p>\u628astring\u5185\u5bb9\uff08\u5b57\u7b26\u4e32\u6216\u5b57\u8282\u5bf9\u8c61\uff09\u5199\u5165\u5230\u6587\u4ef6\u4e2d\uff0c\u5e76\u8fd4\u56de\u5199\u5165\u7684\u5b57\u7b26\u6216\u5b57\u8282\u6570</p> <pre><code>with open(\"FPKM_out.txt\", \"w\", encoding=\"utf-8\") as file:\n    byte = file.write(\"ID          Fruit       Root        Stem        Leaf\\ngene1       324.1       10131.62    2345.36     7730.21\")\n    print(byte)    # 108\n</code></pre> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#writelines","title":"writelines","text":"<p><code>file.writelines(lines)</code></p> <p>**lines**\u53c2\u6570\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216\u5b57\u8282\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u662f\u5217\u8868\u3002\u5f53\u4e3a\u5b57\u7b26\u4e32\u6216\u5b57\u8282\u5bf9\u8c61\u65f6\uff0c\u7528\u6cd5\u540cwrite()\uff1b\u5f53\u4e3a\u5217\u8868\u65f6\uff0c\u5c06\u5217\u8868\u7684\u5b57\u7b26\u4e32\u6216\u5b57\u8282\u5bf9\u8c61\u5143\u7d20\u62fc\u63a5\u540e\u7ec4\u6210\u7684\u5185\u5bb9\u5199\u5165\u6587\u672c\uff08\u82e5\u6bcf\u4e2a\u5143\u7d20\u4ee5\u6362\u884c\u7b26\"\\n\"\u7ed3\u5c3e\uff0c\u6b63\u597d\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u5143\u7d20\u4e3a\u4e00\u884c\u5185\u5bb9\uff09</p> <pre><code>with open(\"FPKM_out.txt\", \"w\", encoding=\"utf-8\") as file:\n    file.writelines(\"ID          Fruit       Root        Stem        Leaf\\ngene1       324.1       10131.62    2345.36     7730.21\")\n\nwith open(\"FPKM_out.txt\", \"w\", encoding=\"utf-8\") as file:\n    file.writelines([\"ID          Fruit       Root        Stem        Leaf\\n\", \"gene1       324.1       10131.62    2345.36     7730.21\"])\n\nwith open(\"FPKM_out.txt\", \"w\", encoding=\"utf-8\") as file:\n    file.writelines([\"ID          Fruit       Root        Stem        Leaf\", \"gene1       324.1       10131.62    2345.36     7730.21\"])\n</code></pre> <p>\u524d\u4e24\u4e2a\u64cd\u4f5c\u7ed3\u679c\u7ed3\u679c\u540c\u4e0a\uff0c\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#_5","title":"\u6587\u672c\u6307\u9488","text":"<p>\u6bcf\u6b21\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u6587\u672c\u7684\u6307\u9488\u90fd\u5728\u6587\u4ef6\u7684\u5f00\u5934\uff08\u4f4d\u7f6e\u4e3a0\uff09\uff0c\u5728\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u6307\u9488\u53d1\u751f\u79fb\u52a8\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#tell","title":"tell","text":"<p><code>file.tell()</code></p> <p>\u8fd4\u56de\u5f53\u524d\u6587\u4ef6\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002</p> <p>\u6ce8\u610f\u6587\u672c\u6587\u4ef6\u6253\u5f00\u540e\u53f3\u4e0b\u65b9\u72b6\u6001\u680f\u663e\u793a\uff0c\u6839\u636e\u7f16\u7801\u6a21\u5f0f\u4e0enewline\u53c2\u6570\uff08\u4e00\u822c\u4e0d\u4f20\uff0c\u4f7f\u7528\u9ed8\u8ba4\uff09\u51b3\u5b9a\u6362\u884c\u7b26\u7684\u663e\u793a\u4e0e\u5b57\u8282\u5360\u7528\u60c5\u51b5\u3002\u82e5\u4e3a\"UTF-8\"\u7684\"CRLF\"\u6a21\u5f0f\uff08\u6587\u672c\u6587\u4ef6\u521b\u5efa\u65f6\u7684\u9ed8\u8ba4\u6a21\u5f0f\uff09\uff0c\u6362\u884c\u7b26\"\\n\"\u88ab\u89e3\u91ca\u4e3a\"\\n\\r\"\uff08\u8f93\u51fa\u8fd8\u662f\"\\n\"\uff09\uff0c\u5360\u4e24\u4e2a\u5b57\u8282\uff0c\u6c49\u5b57\u53603\u4e2a\u5b57\u8282\uff1b\u82e5\u4e3a\"LF\u6a21\u5f0f\"\uff0c\u6362\u884c\u7b26\u4ecd\u89e3\u91ca\u4e3a\"\\n\"\uff0c\u5360\u4e00\u4e2a\u5b57\u8282\uff0c\u6c49\u5b57\u5360\u4e24\u4e2a\u5b57\u8282\u3002 \u4e0a\u8ff0\u6587\u672c\u6587\u4ef6\u4e3a\u9ed8\u8ba4\u6a21\u5f0f\u3002</p> <p></p> <pre><code>with open(\"FPKM.txt\", \"r\", encoding=\"utf-8\") as file:\n    loc = file.tell()\n    print(loc)               # 0\n    line1 = file.readline()  # \u8bfb\u53d6\u4e00\u884c\u540e\uff0c\u6307\u9488\u4f4d\u7f6e\u4e5f\u968f\u4e4b\u53d8\u5316\uff0c\u79fb\u5230\u6362\u884c\u7b26\u53f7\uff08\u6b64\u6a21\u5f0f\u4e0b\u53602\u4e2a\u5b57\u8282\uff09\u540e\n    loc = file.tell()\n    print(loc)               # 54\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#seek","title":"seek","text":"<p><code>file.seek(offset, whence)</code></p> <p>\u901a\u8fc7\u5411\u53c2\u8003\u70b9whence\u6dfb\u52a0 offset \u504f\u79fb\u91cf\uff0c\u8ba1\u7b97\u5e76\u6539\u53d8\u6307\u9488\u4f4d\u7f6e</p> <ol> <li> <p>offset\uff1a\u76f8\u5bf9\u53c2\u8003\u70b9\u7684\u504f\u79fb\u91cf\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\u3002</p> </li> <li> <p>whence\uff1a\u53c2\u8003\u70b9\u3002\u6587\u672c\u6a21\u5f0f\u4e0b\u552f\u4e00\u6709\u6548\u503c\u4e3a0\u6216<code>file.tell()</code>\u8fd4\u56de\u503c</p> </li> <li> <p>0\uff1a\u9ed8\u8ba4\uff0c\u8868\u793a\u4ece\u6587\u4ef6\u5f00\u5934\u8ba1\u7b97</p> </li> <li> <p>1\uff1a\u8868\u793a\u4f7f\u7528\u5f53\u524d\u6307\u9488\u4f4d\u7f6e\u3002\u6587\u672c\u6a21\u5f0f\u4e0d\u53ef\u7528\u3002</p> </li> <li> <p>2\uff1a\u8868\u793a\u4f7f\u7528\u6587\u4ef6\u672b\u5c3e\u3002\u6587\u672c\u6a21\u5f0f\u4e0d\u53ef\u7528\uff0c\u9664\u4e86<code>seek(0, 2)</code>\u5b9a\u4f4d\u5728\u6587\u672c\u672b\u5c3e\u3002</p> </li> </ol> <pre><code>with open(\"FPKM.txt\", \"r\", encoding=\"utf-8\") as file:\n    file.seek(1)\n    line = file.readline()\n    print(line)\n\n\"\"\"\nD          Fruit       Root        Stem        Leaf\n\n\"\"\"\n\n\nwith open(\"FPKM.txt\", \"r\", encoding=\"utf-8\") as file:\n    file.seek(0, 2)\n    loc = file.tell()\n    print(loc)         # 5307\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#_6","title":"\u4e8c\u8fdb\u5236\u6a21\u5f0f","text":"<p>\u53ef\u7528\u4e8e\u7f51\u7edc\u722c\u866b\u65f6\u5a92\u4f53\u6587\u4ef6\u7684\u4e0b\u8f7d\u4fdd\u5b58\uff0c\u4ee5mp4\u6587\u4ef6\u7684\u590d\u5236\u4e3a\u4f8b\u7b80\u8ff0</p> <pre><code>with open(\"demo.mp4\", \"rb\") as file1, open(\"demo1.mp4\", \"wb\") as file2:\n    file2.write(file1.read())    # \u5c06\u4ecefile1\u8bfb\u53d6\u7684\u4e8c\u8fdb\u5236\u6e90\u7801\u4ee5\u4e8c\u8fdb\u5236\u6e90\u7801\u7684\u5f62\u5f0f\u5b58\u5165file2\n</code></pre> <p></p> <p></p> <p>demo.mp4</p> <p>demo1.mp4</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/#_7","title":"\u6587\u4ef6\u63cf\u8ff0\u7b26","text":"<p>\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u4e00\u4e9b\u5c0f\u7684\u6574\u6570\uff0c\u5bf9\u5e94\u4e8e\u5f53\u524d\u8fdb\u7a0b\u6240\u6253\u5f00\u7684\u6587\u4ef6\u3002\u4f8b\u5982\uff0c\u6807\u51c6\u8f93\u5165\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u901a\u5e38\u662f0\uff0c\u6807\u51c6\u8f93\u51fa\u662f1\uff0c\u6807\u51c6\u9519\u8bef\u662f2\u3002\u4e4b\u540e\u88ab\u8fdb\u7a0b\u6253\u5f00\u7684\u6587\u4ef6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4f1a\u88ab\u4f9d\u6b21\u6307\u5b9a\u4e3a3\uff0c4\uff0c5\u7b49\u3002\u5f53\u9700\u8981\u65f6\uff0c\u53ef\u4ee5\u7528 <code>fileno()</code> \u53ef\u4ee5\u83b7\u5f97 file object \u6240\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u76f4\u63a5\u4f7f\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u4f1a\u7ed5\u8fc7\u6587\u4ef6\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u4f1a\u5ffd\u7565\u5982\u6570\u636e\u5185\u90e8\u7f13\u51b2\u7b49\u60c5\u51b5\u3002</p> <p><code>file.open()</code>\u8fd4\u56de\u7684<code>file object</code>\u5185\u90e8\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u6240\u4ee5\u4e24\u8005\u5728\u529f\u80fd\u4e0a\u7b49\u4ef7</p> <pre><code>file1 = open(\"FPKM.txt\", \"r\", encoding=\"utf-8\")    # \u8fdb\u7a0b\u4e2d\u7b2c\u4e00\u4e2a\u6587\u4ef6\u6253\u5f00\nprint(file1.fileno())                              # \u8f93\u51fa\u540e\u6587\u4ef6\u672a\u5173\u95ed\uff1a3\nfile2 = open(\"demo.mp4\", \"rb\")                     # \u8fdb\u7a0b\u4e2d\u7b2c\u4e8c\u4e2a\u6587\u4ef6\u6253\u5f00\nprint(file2.fileno())                              # \u8f93\u51fa\u540e\u6587\u4ef6\u672a\u5173\u95ed\uff1a4\nfile1.close()                                      # \u7b2c\u4e00\u4e2a\u6587\u4ef6\u5173\u95ed\nfile2.close()                                      # \u7b2c\u4e8c\u4e2a\u6587\u4ef6\u5173\u95ed\n\n\nfile1 = open(\"FPKM.txt\", \"r\", encoding=\"utf-8\")    # \u8fdb\u7a0b\u4e2d\u7b2c\u4e00\u4e2a\u6587\u4ef6\u6253\u5f00\nprint(file1.fileno())                              # \u8f93\u51fa\uff1a3\nfile1.close()                                      # \u7b2c\u4e00\u4e2a\u6587\u4ef6\u5173\u95ed\uff0c\u8fdb\u7a0b\u4e2d\u6b64\u65f6\u65e0\u6587\u4ef6\u6253\u5f00\nfile2 = open(\"demo.mp4\", \"rb\")                     # \u4ecd\u662f\u8fdb\u7a0b\u4e2d\u7b2c\u4e00\u4e2a\u6587\u4ef6\u6253\u5f00\nprint(file2.fileno())                              # \u8f93\u51fa\uff1a3\nfile2.close()                                      # \u4ecd\u662f\u7b2c\u4e00\u4e2a\u6587\u4ef6\u5173\u95ed\uff0c\u8fdb\u7a0b\u4e2d\u6b64\u65f6\u65e0\u6587\u4ef6\u6253\u5f00\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E7%B1%BB/","title":"\u7c7b\u5c5e\u6027\u4e0e\u7c7b\u65b9\u6cd5","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E7%B1%BB/#_2","title":"\u5b9e\u4f8b\u5c5e\u6027\u4e0e\u5b9e\u4f8b\u65b9\u6cd5","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E7%B1%BB/#_3","title":"\u79c1\u6709\u5c5e\u6027\u4e0e\u79c1\u6709\u65b9\u6cd5","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E7%B1%BB/#_4","title":"\u9759\u6001\u65b9\u6cd5","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E7%B1%BB/#_5","title":"\u5c5e\u6027\u4f2a\u88c5","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA/","title":"\u8f93\u51fa\uff1aprint()","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA/#_1","title":"\u51fd\u6570\u89e3\u91ca","text":"<p>\u200b<code>print(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False)\u200b\u200b</code></p> <p>\u5c06 objects \u6253\u5370\u5230 file \u6307\u5b9a\u7684\u6587\u672c\u6d41\uff0c\u4ee5 sep \u5206\u9694\u5e76\u5728\u672b\u5c3e\u52a0\u4e0a end\u3002 sep, end, file \u548c flush \u5982\u679c\u5b58\u5728\uff0c\u5b83\u4eec\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f\u7ed9\u51fa\u3002\u6240\u6709\u975e\u5173\u952e\u5b57\u53c2\u6570\u90fd\u4f1a\u88ab\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002\u5404\u53c2\u6570\u53ef\u4ee5\u642d\u914d\u4f7f\u7528\u3002</p> <ol> <li> <p>objects\uff1a\u5f85\u8f93\u51fa\u5185\u5bb9\uff0c\u53ef\u4ee5\u662f\u5404\u79cd\u6570\u636e\u7c7b\u578b\u3001\u5404\u79cd\u7c7b\u578b\u53d8\u91cf\u3001\u53ef\u8fd0\u7b97\u7684\u8868\u8fbe\u5f0f\u7b49\uff0c\u53ef\u4e3a\u591a\u4e2a\uff0c\u4ee5\",\"\u9694\u5f00\u3002\u4e5f\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u6b64\u65f6\u8f93\u51faend\u53c2\u6570\u7684\u503c\u3002\u8868\u8fbe\u5f0f\u5c06\u8f93\u51fa\u8ba1\u7b97\u7ed3\u679c\u3002</p> </li> <li> <p>sep\uff1a\u8f93\u51fa\u591a\u4e2a\u503c\u65f6\uff0c\u5404\u4e2a\u503c\u4e4b\u95f4\u7684\u95f4\u9694\u7b26\uff0c\u5fc5\u987b\u4e3a\u5b57\u7b26\u4e32\u6216None\uff0c\u9ed8\u8ba4\u4e3a\u4e00\u4e2a\u7a7a\u683c\u3002\u5982\u679c\u4e3aNone\uff0c\u4e5f\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002</p> </li> <li> <p>end\uff1a\u8bbe\u5b9a\u7ed3\u5c3e\uff0c\u5fc5\u987b\u4e3a\u5b57\u7b26\u4e32\u6216None\uff0c\u9ed8\u8ba4\u662f\u4ee5\u6362\u884c\u7b26\u7ed3\u5c3e\uff0c\u5373\u8f93\u51fa\u7ed3\u675f\u540e\u8df3\u5230\u65b0\u884c\u3002\u5982\u679c\u4e3aNone\uff0c\u4e5f\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002</p> </li> <li> <p>file\uff1a\u8f93\u51fa\u5230\u6307\u5b9a\u53ef\u5199\u5bf9\u8c61\uff0c\u53ef\u4ee5\u662f\u6587\u4ef6\u6216\u6570\u636e\u6d41\uff0c\u9ed8\u8ba4\u662fsys.stout\uff0c\u5373\u6807\u51c6\u8f93\u51fa\uff0c\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002\u6307\u5b9a\u53ef\u5199\u6587\u4ef6\u5bf9\u8c61\u53ef\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6\u3002</p> </li> <li> <p>flush\uff1a\u662f\u5426\u5237\u65b0\u7f13\u5b58\u533a\uff0c\u5f3a\u5236\u7acb\u5373\u8f93\u51fa\u3002</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA/#_2","title":"\u539f\u7406","text":"<ol> <li> <p>\u65e0\u5f85\u8f93\u51fa\u5185\u5bb9\uff1aend</p> </li> <li> <p>\u5355\u4e2a\u5f85\u8f93\u51fa\u5185\u5bb9\uff1aobject + end</p> </li> <li> <p>\u591a\u4e2a\u5f85\u8f93\u51fa\u5185\u5bb9\uff1aobject1 + sep + object2 + sep + ... + objectn + end</p> </li> </ol>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA/#_3","title":"\u57fa\u672c\u8f93\u51fa","text":"<pre><code>a = 2023\nb = \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\"\nc = \"\u5929\u5143\u4e1c\u8def\"\n\nprint(2023)                                                        # \"2023\" + \"\\n\"\nprint(\"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\")                                          # \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\" + \"\\n\"\nprint(\"\u5929\u5143\u4e1c\u8def\")                                                  # \"\u5929\u5143\u4e1c\u8def\" + \"\\n\"\nprint(2023, \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\", \"\u5929\u5143\u4e1c\u8def\")                        # \"2023\" + \" \" + \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\" + \" \" + \"\u5929\u5143\u4e1c\u8def\" + \"\\n\"\nprint()                                                           # \"\\n\"\nprint(a)                                                          # \"2023\" + \"\\n\"\nprint(b)                                                          # \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\" + \"\\n\"\nprint(c)                                                          # \"\u5929\u5143\u4e1c\u8def\" + \"\\n\"\nprint(a, b, c)                                                    # \"2023\" + \" \" + \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\" + \" \" + \"\u5929\u5143\u4e1c\u8def\" + \"\\n\"\nprint()                                                           # \"\\n\"\nprint(2023, \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\", \"\u5929\u5143\u4e1c\u8def\", sep=\"@\")              # \"2023\" + \"@\" + \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\" + \"@\" + \"\u5929\u5143\u4e1c\u8def\" + \"\\n\"\nprint(a, b, c, sep=\",\")                                          # \"2023\" + \",\" + \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\" + \",\" + \"\u5929\u5143\u4e1c\u8def\" + \"\\n\"\nprint()                                                          # \"\\n\"\nprint(2023, \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\", \"\u5929\u5143\u4e1c\u8def\", end=\"@\\n\")           # \"2023\" + \" \" + \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\" + \" \" + \"\u5929\u5143\u4e1c\u8def\" + \"@\\n\"\nprint(a, b, c, end=\",\\n\")                                       # \"2023\" + \" \" + \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\" + \" \" + \"\u5929\u5143\u4e1c\u8def\" + \",\\n\"\nprint()                                                         # \"\\n\"\nprint(2023, \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\", \"\u5929\u5143\u4e1c\u8def\", sep=\"@\", end=\"@\\n\") # \"2023\" + \"@\" + \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\" + \"@\" + \"\u5929\u5143\u4e1c\u8def\" + \"@\\n\" \nprint(a, b, c, sep=\",\", end=\",\\n\")                             # \"2023\" + \",\" + \"\u5357\u4eac\u533b\u79d1\u5927\u5b662023\" + \",\" + \"\u5929\u5143\u4e1c\u8def\" + \",\\n\"\nprint()                                                        # \"\\n\"\nprint(1+2)                                                     # \"3\"\nprint(1-2)                                                     # \"-1\"\n\n\"\"\"\n2023\n\u5357\u4eac\u533b\u79d1\u5927\u5b662023\n\u5929\u5143\u4e1c\u8def\n2023 \u5357\u4eac\u533b\u79d1\u5927\u5b662023 \u5929\u5143\u4e1c\u8def\n\n2023\n\u5357\u4eac\u533b\u79d1\u5927\u5b662023\n\u5929\u5143\u4e1c\u8def\n2023 \u5357\u4eac\u533b\u79d1\u5927\u5b662023 \u5929\u5143\u4e1c\u8def\n\n2023@\u5357\u4eac\u533b\u79d1\u5927\u5b662023@\u5929\u5143\u4e1c\u8def\n2023,\u5357\u4eac\u533b\u79d1\u5927\u5b662023,\u5929\u5143\u4e1c\u8def\n\n2023 \u5357\u4eac\u533b\u79d1\u5927\u5b662023 \u5929\u5143\u4e1c\u8def@\n2023 \u5357\u4eac\u533b\u79d1\u5927\u5b662023 \u5929\u5143\u4e1c\u8def,\n\n2023@\u5357\u4eac\u533b\u79d1\u5927\u5b662023@\u5929\u5143\u4e1c\u8def@\n2023,\u5357\u4eac\u533b\u79d1\u5927\u5b662023,\u5929\u5143\u4e1c\u8def,\n\n3\n-1\n\"\"\"\n</code></pre>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA/#input","title":"\u8f93\u5165\uff1ainput()","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA/#_4","title":"\u51fd\u6570\u89e3\u91ca","text":"<p><code>\u200binput([prompt])\u200b\u200b\u200b</code></p> <p>\u5982\u679c\u5b58\u5728 prompt \u5b9e\u53c2\uff0c\u5219\u5c06\u5176\u5199\u5165\u6807\u51c6\u8f93\u51fa\uff0c\u672b\u5c3e\u4e0d\u5e26\u6362\u884c\u7b26\u3002\u63a5\u4e0b\u6765\uff0c\u8be5\u51fd\u6570\u4ece\u8f93\u5165\u4e2d\u8bfb\u53d6\u4e00\u884c\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff08\u9664\u4e86\u672b\u5c3e\u7684\u6362\u884c\u7b26\uff09\u5e76\u8fd4\u56de\u3002prompt\u610f\u4e3a\u201c\u63d0\u793a\u201d\uff0c\u5373\u63d0\u793a\u7528\u6237\u8f93\u5165\u7684\u8bed\u53e5\uff0c\u9664\u6b64\u4e4b\u5916\u65e0\u5176\u4ed6\u7279\u6b8a\u610f\u4e49\uff0c\u53ef\u6709\u53ef\u65e0\u3002</p>"},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA/#_5","title":"\u539f\u7406\u53ca\u57fa\u672c\u8f93\u5165","text":""},{"location":"Python%E5%9F%BA%E7%A1%80/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%BF%90%E7%AE%97%E7%AC%A6/","title":"\u8fd0\u7b97\u7b26","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/","title":"\u5e38\u7528\u51fd\u6570","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_1","title":"\u6307\u6570\u4e0e\u5bf9\u6570\u51fd\u6570","text":"<ol> <li> <p>\\(e^x\\): exp\u51fd\u6570</p> </li> <li> <p>\\(2^x\\): exp2\u51fd\u6570</p> </li> <li> <p>\\(e^x-1\\): expm1\u51fd\u6570\uff0clog1p\u7684\u9006\u51fd\u6570</p> </li> <li> <p>\\(x = y_{1} \\times 2^{y_{2}}\\):</p> </li> <li> <p>frexp\u51fd\u6570\uff0c\u5c06x\u5206\u89e3\u8fd4\u56dey1\u7ec4\u6210\u7684\u6570\u7ec4\u548cy2\u7ec4\u6210\u7684\u6570\u7ec4</p> </li> <li> <p>ldexp\u51fd\u6570\uff0c\u5c06y1\u548cy2\u5408\u6210\u8fd4\u56dex\u7684\u6570\u7ec4\uff0c\u5373frexp\u51fd\u6570\u7684\u9006\u51fd\u6570</p> </li> <li> <p>\\(\\ln x\\): log\u51fd\u6570</p> </li> <li> <p>\\(\\log_{2}{x}\\): log2\u51fd\u6570</p> </li> <li> <p>\\(\\log_{10}{x}\\): log10\u51fd\u6570</p> </li> <li> <p>\\(\\ln (1+x)\\): log1p\u51fd\u6570\uff0cexpm1\u51fd\u6570\u7684\u9006\u51fd\u6570</p> </li> <li> <p>\\(\\ln(e^{x_{1}}+e^{x_{2}})\\): logaddexp\u51fd\u6570</p> </li> <li> <p>\\(\\log_{2}{(2^{x_{1}}+2^{x_{2}})}\\): logaddexp2\u51fd\u6570</p> </li> </ol> <pre><code>n1 = np.array([1, 2, 3, 4])\n\nprint(np.exp(n1))\n\"\"\"\n[ 2.71828183  7.3890561  20.08553692 54.59815003]\n\"\"\"\n\nprint(np.exp2(n1))\n\"\"\"\n[ 2.  4.  8. 16.]\n\"\"\"\n\nprint(np.expm1(n1), np.exp(n1) - 1)\n\"\"\"\n[ 1.71828183  6.3890561  19.08553692 53.59815003] [ 1.71828183  6.3890561  19.08553692 53.59815003]\n\"\"\"\n\ny1, y2 = np.frexp(n1)\nprint(y1, y2, y1 * 2 ** y2)\n\"\"\"\n[0.5  0.5  0.75 0.5 ] [1 2 2 3] [1. 2. 3. 4.]\n\"\"\"\n\nprint(np.ldexp(y1, y2))\n\"\"\"\n[1. 2. 3. 4.]\n\"\"\"\n\nprint(np.log(n1))\n\"\"\"\n[0.         0.69314718 1.09861229 1.38629436]\n\"\"\"\n\nprint(np.log2(n1))\n\"\"\"\n[0.        1.        1.5849625 2.       ]\n\"\"\"\n\nprint(np.log10(n1))\n\"\"\"\n[0.         0.30103    0.47712125 0.60205999]\n\"\"\"\n\nprint(np.log1p(n1), np.log(n1+1))\n\"\"\"\n[0.69314718 1.09861229 1.38629436 1.60943791] [0.69314718 1.09861229 1.38629436 1.60943791]\n\"\"\"\n\nx1 = np.array([1, 2, 3, 4])\nx2 = np.array([5, 6, 7, 8])\n\nprint(np.logaddexp(x1, x2))\n\"\"\"\n[5.01814993 6.01814993 7.01814993 8.01814993]\n\"\"\"\n\nprint(np.logaddexp2(x1, x2))\n\"\"\"\n[5.08746284 6.08746284 7.08746284 8.08746284]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_2","title":"\u5e42\u51fd\u6570","text":"<ol> <li> <p>\\(\\sqrt{x}\\): sqrt\u51fd\u6570</p> </li> <li> <p>\\(x^{2}\\): square\u51fd\u6570</p> </li> <li> <p>\\(\\sqrt[3]{x}\\): cbrt\u51fd\u6570</p> </li> <li> <p>\\(1 \\over x\\): reciprocal\u51fd\u6570\uff0c\u4e0d\u9002\u7528\u4e8e\u6574\u6570\uff0c\u5bf9\u4e8e\u6574\u6570\\(\\left| {x} \\right| &gt; 1\\)\uff0c\u7ed3\u679c\u59cb\u7ec8\u4e3a0</p> </li> </ol> <pre><code>n1 = np.array([1, 2, 3, 4])\n\nprint(np.sqrt(n1))\n\"\"\"\n[1.         1.41421356 1.73205081 2.        ]\n\"\"\"\n\nprint(np.square(n1))\n\"\"\"\n[ 1  4  9 16]\n\"\"\"\n\nprint(np.cbrt(n1))\n\"\"\"\n[1.         1.25992105 1.44224957 1.58740105]\n\"\"\"\n\nprint(np.reciprocal(n1))\n\"\"\"\n[1 0 0 0]\n\"\"\"\n\nn2 = np.float_(n1)\nprint(np.reciprocal(n2))\n\"\"\"\n[1.         0.5        0.33333333 0.25      ]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_3","title":"\u6700\u5927\u516c\u7ea6\u6570\u4e0e\u6700\u5c0f\u516c\u500d\u6570","text":"<ol> <li> <p>\u6700\u5927\u516c\u7ea6\u6570: gcd\u51fd\u6570</p> </li> <li> <p>\u6700\u5c0f\u516c\u500d\u6570: lcm\u51fd\u6570</p> </li> </ol> <pre><code>n0 = np.array([2, 3, 4, 5])\nn1 = np.array([10, 20, 30, 40])\n\nprint(np.gcd(n0, n1))\n\"\"\"\n[2 1 2 5]\n\"\"\"\n\nprint(np.lcm(n0, n1))\n\"\"\"\n[10 60 60 40]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_4","title":"\u820d\u5165\u51fd\u6570","text":"<ol> <li> <p>round\uff08around\uff09\u51fd\u6570\u3001round\u65b9\u6cd5: \u56db\u820d\u4e94\u5165\u5230\u5c0f\u6570\u70b9\u540e\u6307\u5b9a\u4f4d\u6570</p> </li> <li> <p>floor\u51fd\u6570: \u2264x\u7684\u6700\u5927\u6574\u6570</p> </li> <li> <p>ceil\u51fd\u6570: \u2265x\u7684\u6700\u5c0f\u6574\u6570</p> </li> <li> <p>trunc\u51fd\u6570: \u622a\u53d6\u6574\u6570\u90e8\u5206</p> </li> <li> <p>rint\u51fd\u6570: \u6700\u63a5\u8fd1\u7684\u6574\u6570\uff0c\u4f46\u5bf9\u4e8e\u4e2d\u95f4\u503cx.5\u9075\u5faa\"\u5947\u8fdb\u5076\u4e0d\u8fdb\"\u539f\u5219</p> </li> <li> <p>fix\u51fd\u6570: \u63a5\u8fd1\u4e8e0\u7684\u6574\u6570</p> </li> <li> <p>modf\u51fd\u6570: \u5206\u5f00\u5c0f\u6570\u90e8\u5206\u548c\u6574\u6570\u90e8\u5206\uff0c\u5747\u5e26\u7b26\u53f7</p> </li> </ol> <pre><code>n0 = np.array([-3.34534654, 4.354235434534, 3.45345, 6.453453445, 1.5, 2.5])\n\nprint(n0.round(2))\n\"\"\"\n[-3.35  4.35  3.45  6.45  1.5   2.5 ]\n\"\"\"\n\nprint(np.round(n0, 2))\n\"\"\"\n[-3.35  4.35  3.45  6.45  1.5   2.5 ]\n\"\"\"\n\nprint(np.around(n0, 2))\n\"\"\"\n[-3.35  4.35  3.45  6.45  1.5   2.5 ]\n\"\"\"\n\nprint(np.floor(n0))\n\"\"\"\n[-4.  4.  3.  6.  1.  2.]\n\"\"\"\n\nprint(np.ceil(n0))\n\"\"\"\n[-3.  5.  4.  7.  2.  3.]\n\"\"\"\n\nprint(np.trunc(n0))\n\"\"\"\n[-3.  4.  3.  6.  1.  2.]\n\"\"\"\n\nprint(np.rint(n0))\n\"\"\"\n[-3.  4.  3.  6.  2.  2.]\n\"\"\"\n\nprint(np.fix(n0))\n\"\"\"\n[-3.  4.  3.  6.  1.  2.]\n\"\"\"\n\nprint(np.modf(n0))\n\"\"\"\n(array([-0.34534654, 0.35423543, 0.45345, 0.45345345, 0.5, 0.5]), array([-3., 4., 3., 6., 1., 2.]))\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_5","title":"\u7b26\u53f7\u51fd\u6570","text":"<ol> <li> <p>\\(|x|\\): absolute\u51fd\u6570\u3001abs\u51fd\u6570\u3001fabs\u51fd\u6570\uff08\u8be5\u51fd\u6570\u4e0d\u652f\u6301\u590d\u6570\u6c42\u6a21\uff0c\u4e14\u8fd4\u56de\u7c7b\u578b\u59cb\u7ec8\u4e3a\u6d6e\u70b9\u6570\uff09</p> </li> <li> <p>\\(-x\\): negative\u51fd\u6570</p> </li> <li> <p>\\(+x\\): positive\u51fd\u6570</p> </li> <li> <p>\u5171\u8f6d\u590d\u6570: conjugate\u51fd\u6570\u3001conj\u51fd\u6570</p> </li> <li> <p>\u7b26\u53f7\u6807\u8bc6: sign\u51fd\u6570</p> </li> <li> <p>x &lt; 0: -1</p> </li> <li> <p>x = 0: 0</p> </li> <li> <p>x &gt; 0: 1</p> </li> <li> <p>x = nan: nan</p> </li> <li> <p>m + nj: sign(m) + 0j</p> </li> <li> <p>nj: sign(n) + 0j</p> </li> <li> <p>\u9636\u8dc3\u51fd\u6570: heaviside\u51fd\u6570</p> </li> <li> <p>x1 &lt; 0: 0</p> </li> <li> <p>x1 = 0: x2\uff08\u901a\u5e38\u89c6\u4e3a0.5\uff09</p> </li> <li> <p>x1 &gt; 0: 1</p> </li> <li> <p>\u7b26\u53f7\u4f4d: signbit\u51fd\u6570\uff0c\u2265 0\u8fd4\u56deFalse\uff0c\uff1c 0\u8fd4\u56deTrue</p> </li> <li> <p>\u7b26\u53f7\u590d\u5236: copysign\u51fd\u6570\uff0c\u5c06x1\u7684\u7b26\u53f7\u66f4\u6539\u4e3ax2\u7684\u7b26\u53f7</p> </li> </ol> <pre><code>n0 = np.array([-1, 2, -3, 4, 0])\n\nprint(np.absolute(n0))\n\"\"\"\n[1 2 3 4 0]\n\"\"\"\n\nprint(np.abs(n0))\n\"\"\"\n[1 2 3 4 0]\n\"\"\"\n\nprint(np.fabs(n0))\n\"\"\"\n[1. 2. 3. 4. 0.]\n\"\"\"\n\nprint(np.absolute(3 + 4j))\n\"\"\"\n5.0\n\"\"\"\n\nprint(np.abs(3 + 4j))\n\"\"\"\n5.0\n\"\"\"\n\nprint(np.negative(n0))\n\"\"\"\n[ 1 -2  3 -4  0]\n\"\"\"\n\nprint(np.positive(n0))\n\"\"\"\n[-1  2 -3  4  0]\n\"\"\"\n\nprint(np.conjugate(3 + 4j))\n\"\"\"\n(3-4j)\n\"\"\"\n\nprint(np.conj(3 + 4j))\n\"\"\"\n(3-4j)\n\"\"\"\n\nprint(np.sign(n0))\n\"\"\"\n[-1  1 -1  1  0]\n\"\"\"\n\nprint(np.sign(np.nan))\n\"\"\"\nnan\n\"\"\"\n\nprint(np.sign(-3 + 4j))\n\"\"\"\n(-1+0j)\n\"\"\"\n\nprint(np.sign(-4j))\n\"\"\"\n(-1+0j)\n\"\"\"\n\nprint(np.heaviside(n0, 0.5))\n\"\"\"\n[0.  1.  0.  1.  0.5]\n\"\"\"\n\nprint(np.signbit(n0))\n\"\"\"\n[ True False  True False False]\n\"\"\"\n\nprint(np.copysign(n0, -2))\n\"\"\"\n[-1. -2. -3. -4. -0.]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_6","title":"\u4e09\u89d2\u51fd\u6570","text":"<ol> <li> <p>\\(\\sin(x)\\): \u6b63\u5f26\u51fd\u6570\uff0csin\u51fd\u6570\uff0c\u4ee5\u5f27\u5ea6\u4e3a\u5355\u4f4d</p> </li> <li> <p>\\(\\cos(x)\\): \u4f59\u5f26\u51fd\u6570\uff0ccos\u51fd\u6570\uff0c\u4ee5\u5f27\u5ea6\u4e3a\u5355\u4f4d</p> </li> <li> <p>\\(\\tan(x)\\): \u6b63\u5207\u51fd\u6570\uff0ctan\u51fd\u6570\uff0c\u4ee5\u5f27\u5ea6\u4e3a\u5355\u4f4d</p> </li> <li> <p>\\(\\arcsin(x)\\): \u53cd\u6b63\u5f26\u51fd\u6570\uff0carcsin\u51fd\u6570\uff0c\u8fd4\u56de\u5f27\u5ea6\u5b9e\u90e8\u8303\u56f4\u5728[-\u03c0/2, \u03c0/2]</p> </li> <li> <p>\\(\\arccos(x)\\): \u53cd\u4f59\u5f26\u51fd\u6570\uff0carccos\u51fd\u6570\uff0c\u8fd4\u56de\u5f27\u5ea6\u5b9e\u90e8\u8303\u56f4\u5728[0, \u03c0]</p> </li> <li> <p>\\(\\arctan(x)\\): \u53cd\u6b63\u5207\u51fd\u6570\uff0carctan\u51fd\u6570\uff0c\u8fd4\u56de\u5f27\u5ea6\u5b9e\u90e8\u8303\u56f4\u5728[-\u03c0/2, \u03c0/2]</p> </li> <li> <p>\\(\\arctan(x1/x2)\\): arctan2\u51fd\u6570\uff0c\u8fd4\u56de\u7ecf\u8fc7\uff08x2, x1\uff09\u548c\u539f\u70b9\u7684\u5c04\u7ebf\u4e0ex\u8f74\u5f62\u6210\u89d2\u7684\u5f27\u5ea6\uff0c\u8fd4\u56de\u5f27\u5ea6\u8303\u56f4\u5728[-\u03c0, \u03c0]</p> </li> </ol> x2 x1 arctan2(x1, x2) + 0 \u00b1 0 \u00b1 0 - 0 \u00b1 0 \u00b1 \u03c0 \u00b1 inf &gt; 0 + 0/+ \u03c0 \u00b1 inf &lt; 0 - 0/- \u03c0 + inf \u00b1 inf \u00b1 (\u03c0/4) - inf \u00b1 inf \u00b1 (3\u03c0/4) <ol> <li> <p>\\(\\sinh(x) = {e^{x}-e^{-x} \\over 2} = -1i\\times\\sin(1i\\times x)\\): \u53cc\u66f2\u6b63\u5f26\u51fd\u6570\uff0csinh\u51fd\u6570\uff0c\u4ee5\u5f27\u5ea6\u4e3a\u5355\u4f4d</p> </li> <li> <p>\\(\\cosh(x) = {e^{x}+e^{-x} \\over 2} = \\cos(1i\\times x)\\): \u53cc\u66f2\u4f59\u5f26\u51fd\u6570\uff0ccosh\u51fd\u6570\uff0c\u4ee5\u5f27\u5ea6\u4e3a\u5355\u4f4d</p> </li> <li> <p>\\(\\tanh(x)={\\sinh(x) \\over \\cosh(x)}=-1i\\times \\tan(1i\\times x)\\): \u53cc\u66f2\u6b63\u5207\u51fd\u6570\uff0ctanh\u51fd\u6570\uff0c\u4ee5\u5f27\u5ea6\u4e3a\u5355\u4f4d</p> </li> <li> <p>\u53cd\u53cc\u66f2\u6b63\u5f26\u51fd\u6570: arcsinh\u51fd\u6570\uff0c\u8fd4\u56de\u5f27\u5ea6\u865a\u90e8\u8303\u56f4\u5728[-\u03c0/2, \u03c0/2]</p> </li> <li> <p>\u53cd\u53cc\u66f2\u4f59\u5f26\u51fd\u6570: arccosh\u51fd\u6570\uff0c\u8fd4\u56de\u5f27\u5ea6\u865a\u90e8\u8303\u56f4\u5728[-\u03c0, \u03c0]\uff0c\u5b9e\u90e8\u8303\u56f4\u5728[0, inf]</p> </li> <li> <p>\u53cd\u53cc\u66f2\u6b63\u5207\u51fd\u6570: arctanh\u51fd\u6570\uff0c\u8fd4\u56de\u5f27\u5ea6\u865a\u90e8\u8303\u56f4\u5728[-\u03c0/2, \u03c0/2]</p> </li> <li> <p>\\(deg \\times \\pi \\over 180\\): \u5ea6\u8f6c\u5f27\u5ea6\uff0cradians\u51fd\u6570\u3001deg2rad\u51fd\u6570</p> </li> <li> <p>\\(rad\\times180  \\over \\pi\\): \u5f27\u5ea6\u8f6c\u5ea6\uff0cdegrees\u51fd\u6570\u3001rad2deg\u51fd\u6570</p> </li> <li> <p>\\(\\sqrt{x_{1}^{2} + x_{2}^{2}}\\): \u52fe\u80a1\u5b9a\u7406\uff0chypot\u51fd\u6570</p> </li> </ol> <pre><code>n0 = np.array([0, 30, 45, 60, 90, 180])    # \u89d2\u5ea6\nn1 = n0 * np.pi / 180    # \u5f27\u5ea6\nn3 = np.array([1, -1, 1, -1])\nn4 = np.array([1, -1, -1, 1])\n\nprint(n0)\n\"\"\"\n[  0  30  45  60  90 180]\n\"\"\"\n\nprint(n1)\n\"\"\"\n[0.  0.52359878  0.78539816  1.04719755  1.57079633  3.14159265]\n\"\"\"\n\n# sin(x)\u4e0earcsin(x)\nprint(np.sin(n1))\n\"\"\"\n[0.00000000e+00  5.00000000e-01  7.07106781e-01  8.66025404e-01  1.00000000e+00  1.22464680e-16]\n\"\"\"\n\nprint(np.arcsin(np.sin(n1)))\n\"\"\"\n[ 0.00000000e+00  5.23598776e-01  7.85398163e-01  1.04719755e+00  1.57079633e+00  1.22464680e-16]\n\"\"\"\n\n# cos(x)\u4e0earccos(x)\nprint(np.cos(n1))\n\"\"\"\n[ 1.00000000e+00  8.66025404e-01  7.07106781e-01  5.00000000e-01  6.12323400e-17  -1.00000000e+00]\n\"\"\"\n\nprint(np.arccos(np.cos(n1)))\n\"\"\"\n[ 0.  0.52359878  0.78539816  1.04719755  1.57079633  3.14159265]\n\"\"\"\n\n# tan(x)\u4e0earctan(x)\nprint(np.tan(n1))\n\"\"\"\n[ 0.00000000e+00  5.77350269e-01  1.00000000e+00  1.73205081e+00  1.63312394e+16  -1.22464680e-16]\n\"\"\"\n\nprint(np.arctan(np.tan(n1)))\n\"\"\"\n[ 0.00000000e+00  5.23598776e-01  7.85398163e-01  1.04719755e+00  1.57079633e+00  -1.22464680e-16]\n\"\"\"\n\n# arctan2\u51fd\u6570\nprint(np.arctan2(n3, n4) * 180 / np.pi)\n\"\"\"\n[  45. -135.  135.  -45.]\n\"\"\"\n\n# sinh(x)\u4e0earcsinh(x)\nprint(np.sinh(n1), 1/2 * (np.exp(n1) - np.exp(-n1)))\n\"\"\"\n[ 0.  0.54785347  0.86867096  1.24936705  2.3012989  11.54873936] \n[ 0.  0.54785347  0.86867096  1.24936705  2.3012989  11.54873936]\n\"\"\"\n\nprint(np.arcsinh(np.sinh(n1)))\n\"\"\"\n[ 0.  0.52359878  0.78539816  1.04719755  1.57079633  3.14159265]\n\"\"\"\n\n# cosh(x)\u4e0earccosh(x)\nprint(np.cosh(n1), 1/2 * (np.exp(n1) + np.exp(-n1)))\n\"\"\"\n[ 1.  1.14023832  1.32460909  1.60028686  2.50917848 11.59195328] \n[ 1.  1.14023832  1.32460909  1.60028686  2.50917848 11.59195328]\n\"\"\"\n\nprint(np.arccosh(np.cosh(n1)))\n\"\"\"\n[ 0.  0.52359878  0.78539816  1.04719755  1.57079633  3.14159265]\n\"\"\"\n\n# tanh(x)\u4e0earctanh(x)\nprint(np.tanh(n1))\n\"\"\"\n[ 0.  0.48047278  0.6557942  0.78071444  0.91715234  0.99627208]\n\"\"\"\n\nprint(np.arctanh(np.tanh(n1)))\n\"\"\"\n[ 0.  0.52359878  0.78539816  1.04719755  1.57079633  3.14159265]\n\"\"\"\n\n# \u5ea6\u8f6c\u5f27\u5ea6\nprint(np.radians(n0), np.deg2rad(n0), n0 * np.pi / 180)\n\"\"\"\n[0.  0.52359878 0.78539816 1.04719755 1.57079633 3.14159265] \n[0.  0.52359878 0.78539816 1.04719755 1.57079633 3.14159265] \n[0.  0.52359878 0.78539816 1.04719755 1.57079633 3.14159265]\n\"\"\"\n\n# \u5f27\u5ea6\u8f6c\u5ea6\nprint(np.degrees(n1), np.rad2deg(n1), 180 * n1 / np.pi)\n\"\"\"\n[  0.  30.  45.  60.  90. 180.] \n[  0.  30.  45.  60.  90. 180.] \n[  0.  30.  45.  60.  90. 180.]\n\"\"\"\n\n# \u52fe\u80a1\u5b9a\u7406\nprint(np.hypot(3, 4))\n\"\"\"\n5.0\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_7","title":"\u5224\u65ad\u51fd\u6570","text":"<ol> <li> <p>isfinite\u51fd\u6570: \u662f\u5426\u4e3a\u6709\u9650\u6570</p> </li> <li> <p>isinf\u51fd\u6570: \u662f\u5426\u4e3a\u65e0\u7a77\u6570\uff08\u00b1 inf\uff09</p> </li> <li> <p>isneginf\u51fd\u6570: \u662f\u5426\u4e3a\u8d1f\u65e0\u7a77\u5927\uff08- inf\uff09</p> </li> <li> <p>isposinf\u51fd\u6570: \u662f\u5426\u4e3a\u6b63\u65e0\u7a77\u5927\uff08+ inf\uff09</p> </li> <li> <p>isnan\u51fd\u6570: \u662f\u5426\u4e3a\u975e\u6570\u5b57\uff08nan\uff09</p> </li> <li> <p>isnat\u51fd\u6570\uff1a\u662f\u5426\u975e\u65f6\u95f4(NaT)</p> </li> </ol> <pre><code>data = np.array([1, 2, 3, 4, 0, np.divide(1, 0), np.log(0), np.log(-1)])\nposinf = np.array([np.Inf, np.Infinity, np.PINF, np.infty, np.inf, -np.NINF])\nneginf = np.array([-np.Inf, -np.Infinity, -np.PINF, -np.infty, -np.inf, np.NINF])\nnan = np.array([np.NAN, np.NaN, np.nan])\ndatetime = np.array([np.datetime64('NaT'), np.datetime64('2024-02-14')])\n\nprint(np.isfinite(data), np.isfinite(posinf), np.isfinite(neginf), np.isfinite(nan))\n\"\"\"\n[ True  True  True  True  True False False False] \n[False False False False False False] \n[False False False False False False] \n[False False False]\n\"\"\"\n\nprint(np.isinf(data), np.isinf(posinf), np.isinf(neginf), np.isinf(nan))\n\"\"\"\n[False False False False False  True  True False] \n[ True  True  True  True  True True] \n[ True  True  True  True  True True] \n[False False False]\n\"\"\"\n\nprint(np.isneginf(data), np.isneginf(posinf), np.isneginf(neginf), np.isneginf(nan))\n\"\"\"\n[False False False False False False  True False] \n[False False False False False False] \n[ True  True  True  True  True  True] \n[False False False]\n\"\"\"\n\nprint(np.isposinf(data), np.isposinf(posinf), np.isposinf(neginf), np.isposinf(nan))\n\"\"\"\n[False False False False False  True False False] \n[ True  True  True  True  True True] \n[False False False False False False] \n[False False False]\n\"\"\"\nprint(np.isnan(data), np.isnan(posinf), np.isnan(neginf), np.isnan(nan))\n\"\"\"\n[False False False False False False False  True] \n[False False False False False False] \n[False False False False False False] \n[ True  True  True]\n\"\"\"\n\nprint(np.isnat(datetime))\n\"\"\"\n[ True False]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#_8","title":"\u7edf\u8ba1\u5206\u6790\u51fd\u6570","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#sumcumsum","title":"\u6c42\u548c(sum)\u4e0e\u7d2f\u8ba1\u6c42\u548c(cumsum)","text":"<ol> <li> <p><code>ndarray.sum(axis=None, dtype=None, out=None, keepdims=np._NoValue, initial=np._NoValue, where=np._NoValue)</code> <code>sum(a, axis=None, dtype=None, out=None, keepdims=np._NoValue, initial=np._NoValue, where=np._NoValue)</code> <code>nansum(a, axis=None, dtype=None, out=None, keepdims=np._NoValue, initial=np._NoValue, where=np._NoValue)</code> nansum\u51fd\u6570\u5c06nan\u89c6\u4e3a0</p> </li> <li> <p>a: \u5f85\u6c42\u548c\u7684\u6570\u7ec4</p> </li> <li> <p>axis: \u6c42\u548c\u6240\u6cbf\u7684\u8f74\u3002\u9ed8\u8ba4\u4e3aNone\uff0c\u5373\u76f4\u63a5\u6c42\u548c\u6570\u7ec4\u6240\u6709\u5143\u7d20\u3002\u82e5\u6307\u5b9a\u591a\u4e2a\u8f74\uff0c\u5c06\u5bf9\u6307\u5b9a\u8f74\u7ec4\u6210\u7684\u6570\u7ec4\u6240\u6709\u5143\u7d20\u6c42\u548c</p> </li> <li> <p>dtype: \u6570\u636e\u7c7b\u578b\u548c\u7d2f\u52a0\u5668\u7c7b\u578b</p> </li> <li> <p>out: \u5b58\u653e\u7ed3\u679c\u7684\u6570\u7ec4</p> </li> <li> <p>keepdims: \u662f\u5426\u4fdd\u7559\u7ef4\u5ea6\u3002\u9ed8\u8ba4\u4e0d\u4fdd\u7559</p> </li> <li> <p>initial: \u7d2f\u52a0\u521d\u59cb\u503c\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>where: \u53c2\u4e0e\u6c42\u548c\u7684\u5143\u7d20\u6761\u4ef6</p> </li> </ol> <p>```Python n0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4) print(n0) \"\"\" [[[ 1.  2.  3.  4.]   [ 5.  6.  7.  8.]]</p> <p>[[ 9. 10. 11. 12.]   [13. 14. 15. 16.]]] \"\"\"</p> <p>print(n0.sum()) \"\"\" 136.0 \"\"\"</p> <p>print(np.sum(n0)) \"\"\" 136.0 \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#aixs","title":"\u8bbe\u7f6eaixs","text":"<p>print(np.sum(n0, axis=0)) \"\"\" [[10. 12. 14. 16.]  [18. 20. 22. 24.]] \"\"\"</p> <p>print(np.sum(n0, axis=1)) \"\"\" [[ 6.  8. 10. 12.]  [22. 24. 26. 28.]] \"\"\"</p> <p>print(np.sum(n0, axis=2)) \"\"\" [[10. 26.]  [42. 58.]] \"\"\"</p> <p>print(np.sum(n0, axis=(0, 2))) \"\"\" [52. 84.] \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#keepdims","title":"\u8bbe\u7f6ekeepdims","text":"<p>print(np.sum(n0, axis=0, keepdims=False)) \"\"\" [[10. 12. 14. 16.]  [18. 20. 22. 24.]] \"\"\"</p> <p>print(np.sum(n0, axis=0, keepdims=True)) \"\"\" [[[10. 12. 14. 16.]   [18. 20. 22. 24.]]] \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#initial","title":"\u8bbe\u7f6einitial","text":"<p>print(np.sum(n0, axis=0, initial=2)) \"\"\" [[12. 14. 16. 18.]  [20. 22. 24. 26.]] \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#where","title":"\u8bbe\u7f6ewhere","text":"<p>print(np.sum(n0, axis=0, where=n0 &gt;= 3)) \"\"\" [[ 9. 10. 14. 16.]  [18. 20. 22. 24.]] \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#nansum","title":"nansum\u51fd\u6570","text":"<p>n0[0] = np.nan print(n0) \"\"\" [[[nan nan nan nan]   [nan nan nan nan]]</p> <p>[[ 9. 10. 11. 12.]   [13. 14. 15. 16.]]] \"\"\"</p> <p>print(np.sum(n0)) \"\"\" nan \"\"\"</p> <p>print(np.nansum(n0)) \"\"\" 100.0 \"\"\" <pre><code>55. `ndarray.cumsum(axis=None, dtype=None, out=None)`\n`cumsum(a, axis=None, dtype=None, out=None)`\n`nancumsum(a, axis=None, dtype=None, out=None)`\nnancumsum\u51fd\u6570\u5c06nan\u89c6\u4e3a0\n\n  1. **a**: \u5f85\u7d2f\u8ba1\u6c42\u548c\u7684\u6570\u7ec4\n\n  2. **axis**: \u7d2f\u8ba1\u6c42\u548c\u6240\u6cbf\u7684\u8f74\u3002\u9ed8\u8ba4\u4e3aNone\uff0c\u5373\u76f4\u63a5\u7d2f\u8ba1\u6c42\u548c\u6570\u7ec4\u6240\u6709\u5143\u7d20\u3002\u4e0d\u80fd\u6307\u5b9a\u591a\u4e2a\u8f74\n\n  3. dtype: \u540c\u4e0a\n\n  4. out: \u540c\u4e0a\n\n  ```Python\nn0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4)\nprint(n0)\n\"\"\"\n[[[ 1.  2.  3.  4.]\n  [ 5.  6.  7.  8.]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(n0.cumsum())\n\"\"\"\n[  1.   3.   6.  10.  15.  21.  28.  36.  45.  55.  66.  78.  91. 105. 120. 136.]\n\"\"\"\n\nprint(np.cumsum(n0))\n\"\"\"\n[  1.   3.   6.  10.  15.  21.  28.  36.  45.  55.  66.  78.  91. 105. 120. 136.]\n\"\"\"\n\nprint(np.cumsum(n0, axis=0))\n\"\"\"\n[[[ 1.  2.  3.  4.]\n  [ 5.  6.  7.  8.]]\n\n [[10. 12. 14. 16.]\n  [18. 20. 22. 24.]]]\n\"\"\"\n\nprint(np.cumsum(n0, axis=1))\n\"\"\"\n[[[ 1.  2.  3.  4.]\n  [ 6.  8. 10. 12.]]\n\n [[ 9. 10. 11. 12.]\n  [22. 24. 26. 28.]]]\n\"\"\"\n\nprint(np.cumsum(n0, axis=2))\n\"\"\"\n[[[ 1.  3.  6. 10.]\n  [ 5. 11. 18. 26.]]\n\n [[ 9. 19. 30. 42.]\n  [13. 27. 42. 58.]]]\n\"\"\"\n\n\n\n# nancumsum\u51fd\u6570\nn0[0] = np.nan\nprint(n0)\n\"\"\"\n[[[nan nan nan nan]\n  [nan nan nan nan]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(np.cumsum(n0))\n\"\"\"\n[nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan]\n\"\"\"\n\nprint(np.nancumsum(n0))\n\"\"\"\n[  0.   0.   0.   0.   0.   0.   0.   0.   9.  19.  30.  42.  55.  69. 84. 100.]\n\"\"\"\n</code></pre></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#prodcumprod","title":"\u6c42\u79ef(prod)\u4e0e\u7d2f\u8ba1\u6c42\u79ef(cumprod)","text":"<ol> <li> <p><code>ndarray.prod(axis=None, dtype=None, out=None, keepdims=np._NoValue, initial=np._NoValue, where=np._NoValue)</code> <code>prod(a, axis=None, dtype=None, out=None, keepdims=np._NoValue, initial=np._NoValue, where=np._NoValue)</code> <code>nanprod(a, axis=None, dtype=None, out=None, keepdims=np._NoValue, initial=np._NoValue, where=np._NoValue)</code> nanprod\u51fd\u6570\u5c06nan\u89c6\u4e3a1</p> </li> <li> <p>a: \u540c\u4e0a</p> </li> <li> <p>axis: \u540c\u4e0a\u3002\u53ef\u6307\u5b9a\u591a\u4e2a\u8f74</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>out: \u540c\u4e0a</p> </li> <li> <p>keepdims: \u540c\u4e0a</p> </li> <li> <p>initial: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3a1</p> </li> <li> <p>where: \u540c\u4e0a</p> </li> </ol> <p>```Python n0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4) print(n0) \"\"\" [[[ 1.  2.  3.  4.]   [ 5.  6.  7.  8.]]</p> <p>[[ 9. 10. 11. 12.]   [13. 14. 15. 16.]]] \"\"\"</p> <p>print(n0.prod()) \"\"\" 20922789888000.0 \"\"\"</p> <p>print(np.prod(n0)) \"\"\" 20922789888000.0 \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#aixs_1","title":"\u8bbe\u7f6eaixs","text":"<p>print(np.prod(n0, axis=0)) \"\"\" [[  9.  20.  33.  48.]  [ 65.  84. 105. 128.]] \"\"\"</p> <p>print(np.prod(n0, axis=1)) \"\"\" [[  5.  12.  21.  32.]  [117. 140. 165. 192.]] \"\"\"</p> <p>print(np.prod(n0, axis=2)) \"\"\" [[2.400e+01 1.680e+03]  [1.188e+04 4.368e+04]] \"\"\"</p> <p>print(np.prod(n0, axis=(0, 2))) \"\"\" [  285120. 73382400.] \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#keepdims_1","title":"\u8bbe\u7f6ekeepdims","text":"<p>print(np.prod(n0, axis=0, keepdims=False)) \"\"\" [[  9.  20.  33.  48.]  [ 65.  84. 105. 128.]] \"\"\"</p> <p>print(np.prod(n0, axis=0, keepdims=True)) \"\"\" [[[  9.  20.  33.  48.]   [ 65.  84. 105. 128.]]] \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#initial_1","title":"\u8bbe\u7f6einitial","text":"<p>print(np.prod(n0, axis=0, initial=2)) \"\"\" [[ 18.  40.  66.  96.]  [130. 168. 210. 256.]] \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#where_1","title":"\u8bbe\u7f6ewhere","text":"<p>print(np.prod(n0, axis=0, where=n0 &gt;= 3)) \"\"\" [[  9.  10.  33.  48.]  [ 65.  84. 105. 128.]] \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#nanprod","title":"nanprod\u51fd\u6570","text":"<p>n0[0] = np.nan print(n0) \"\"\" [[[nan nan nan nan]   [nan nan nan nan]]</p> <p>[[ 9. 10. 11. 12.]   [13. 14. 15. 16.]]] \"\"\"</p> <p>print(np.prod(n0)) \"\"\" nan \"\"\"</p> <p>print(np.nanprod(n0)) \"\"\" 518918400.0 \"\"\" <pre><code>57. `ndarray.cumprod(axis=None, dtype=None, out=None)`\n`cumprod(a, axis=None, dtype=None, out=None)`\n`nancumprod(a, axis=None, dtype=None, out=None)`\nnancumprod\u51fd\u6570\u5c06nan\u89c6\u4e3a1\n\n  1. **a**: \u540c\u4e0a\n\n  2. **axis**: \u540c\u4e0a\u3002\u4e0d\u53ef\u6307\u5b9a\u591a\u4e2a\u8f74\n\n  3. dtype: \u540c\u4e0a\n\n  4. out: \u540c\u4e0a\n\n  ```Python\nn0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4)\nprint(n0)\n\"\"\"\n[[[ 1.  2.  3.  4.]\n  [ 5.  6.  7.  8.]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(n0.cumprod())\n\"\"\"\n[1.00000000e+00 2.00000000e+00 6.00000000e+00 2.40000000e+01\n 1.20000000e+02 7.20000000e+02 5.04000000e+03 4.03200000e+04\n 3.62880000e+05 3.62880000e+06 3.99168000e+07 4.79001600e+08\n 6.22702080e+09 8.71782912e+10 1.30767437e+12 2.09227899e+13]\n\"\"\"\n\nprint(np.cumprod(n0))\n\"\"\"\n[1.00000000e+00 2.00000000e+00 6.00000000e+00 2.40000000e+01\n 1.20000000e+02 7.20000000e+02 5.04000000e+03 4.03200000e+04\n 3.62880000e+05 3.62880000e+06 3.99168000e+07 4.79001600e+08\n 6.22702080e+09 8.71782912e+10 1.30767437e+12 2.09227899e+13]\n\"\"\"\n\nprint(np.cumprod(n0, axis=0))\n\"\"\"\n[[[  1.   2.   3.   4.]\n  [  5.   6.   7.   8.]]\n\n [[  9.  20.  33.  48.]\n  [ 65.  84. 105. 128.]]]\n\"\"\"\n\nprint(np.cumprod(n0, axis=1))\n\"\"\"\n[[[  1.   2.   3.   4.]\n  [  5.  12.  21.  32.]]\n\n [[  9.  10.  11.  12.]\n  [117. 140. 165. 192.]]]\n\"\"\"\n\nprint(np.cumprod(n0, axis=2))\n\"\"\"\n[[[1.000e+00 2.000e+00 6.000e+00 2.400e+01]\n  [5.000e+00 3.000e+01 2.100e+02 1.680e+03]]\n\n [[9.000e+00 9.000e+01 9.900e+02 1.188e+04]\n  [1.300e+01 1.820e+02 2.730e+03 4.368e+04]]]\n\"\"\"\n\n\n\n# nancumprod\u51fd\u6570\nn0[0] = np.nan\nprint(n0)\n\"\"\"\n[[[nan nan nan nan]\n  [nan nan nan nan]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(np.cumprod(n0))\n\"\"\"\n[nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan]\n\"\"\"\n\nprint(np.nancumprod(n0))\n\"\"\"\n[1.000000e+00 1.000000e+00 1.000000e+00 1.000000e+00 1.000000e+00\n 1.000000e+00 1.000000e+00 1.000000e+00 9.000000e+00 9.000000e+01\n 9.900000e+02 1.188000e+04 1.544400e+05 2.162160e+06 3.243240e+07\n 5.189184e+08]\n\"\"\"\n</code></pre></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#mean","title":"\u6c42\u5747\u503c(mean)","text":"<p><code>ndarray.mean(axis=None, dtype=None, out=None, keepdims=np._NoValue, where=np._NoValue)</code> <code>mean(a, axis=None, dtype=None, out=None, keepdims=np._NoValue, where=np._NoValue)</code> <code>nanmean(a, axis=None, dtype=None, out=None, keepdims=np._NoValue, where=np._NoValue)</code> nanmean\u51fd\u6570\u5c06\u5ffd\u7565nan</p> <ol> <li> <p>a: \u540c\u4e0a</p> </li> <li> <p>axis: \u540c\u4e0a\u3002\u53ef\u6307\u5b9a\u591a\u4e2a\u8f74</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>out: \u540c\u4e0a</p> </li> <li> <p>keepdims: \u540c\u4e0a</p> </li> <li> <p>where: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4)\nprint(n0)\n\"\"\"\n[[[ 1.  2.  3.  4.]\n  [ 5.  6.  7.  8.]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(n0.mean())\n\"\"\"\n8.5\n\"\"\"\n\nprint(np.mean(n0))\n\"\"\"\n8.5\n\"\"\"\n\n\n\n# \u8bbe\u7f6eaixs\nprint(np.mean(n0, axis=0))\n\"\"\"\n[[ 5.  6.  7.  8.]\n [ 9. 10. 11. 12.]]\n\"\"\"\n\nprint(np.mean(n0, axis=1))\n\"\"\"\n[[ 3.  4.  5.  6.]\n [11. 12. 13. 14.]]\n\"\"\"\n\nprint(np.mean(n0, axis=2))\n\"\"\"\n[[ 2.5  6.5]\n [10.5 14.5]]\n\"\"\"\n\nprint(np.mean(n0, axis=(0, 2)))\n\"\"\"\n[ 6.5 10.5]\n\"\"\"\n\n\n\n# \u8bbe\u7f6ekeepdims\nprint(np.mean(n0, axis=0, keepdims=False))\n\"\"\"\n[[ 5.  6.  7.  8.]\n [ 9. 10. 11. 12.]]\n\"\"\"\n\nprint(np.mean(n0, axis=0, keepdims=True))\n\"\"\"\n[[[ 5.  6.  7.  8.]\n  [ 9. 10. 11. 12.]]]\n\"\"\"\n\n\n\n# \u8bbe\u7f6ewhere\nprint(np.mean(n0, axis=0, where=n0 &gt;= 3))\n\"\"\"\n[[ 9. 10.  7.  8.]\n [ 9. 10. 11. 12.]]\n\"\"\"\n\n\n\n# nanmean\u51fd\u6570\nn0[0] = np.nan\nprint(n0)\n\"\"\"\n[[[nan nan nan nan]\n  [nan nan nan nan]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(np.mean(n0))\n\"\"\"\nnan\n\"\"\"\n\nprint(np.nanmean(n0))\n\"\"\"\n12.5\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#average","title":"\u6c42\u52a0\u6743\u5747\u503c(average)","text":"<p><code>average(a, axis=None, weights=None, returned=False, keepdims=np._NoValue)</code></p> <ol> <li> <p>a: \u540c\u4e0a</p> </li> <li> <p>axis: \u540c\u4e0a\u3002\u53ef\u6307\u5b9a\u591a\u4e2a\u8f74</p> </li> <li> <p>weights: \u6743\u91cd\u3002\u82e5\u4e3a\u4e00\u7ef4\u6570\u7ec4\uff0c\u5219\u9700\u4e0ea\u7684\u7ed9\u5b9a\u8f74\u5927\u5c0f\u76f8\u7b49\uff1b\u5426\u5219\u5e94\u4e0ea\u5f62\u72b6\u76f8\u540c\u3002\u9ed8\u8ba4\u4e3aNone\uff0c\u5373\u6240\u6709\u5143\u7d20\u6743\u91cd\u4e3a1\uff0c\u6b64\u65f6\u7b49\u4ef7\u4e8emean\u51fd\u6570</p> </li> <li> <p>returned: \u662f\u5426\u540c\u65f6\u8fd4\u56de\u6743\u91cd\u548c\u3002\u9ed8\u8ba4\u4e3aFalse</p> </li> <li> <p>keepdims: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4)\nprint(n0)\n\"\"\"\n[[[ 1.  2.  3.  4.]\n  [ 5.  6.  7.  8.]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(np.average(n0, axis=0, weights=np.arange(1, 17).reshape(2, 2, 4)))\n\"\"\"\n[[ 8.2         8.66666667  9.28571429 10.        ]\n [10.77777778 11.6        12.45454545 13.33333333]]\n\"\"\"\n\nprint(np.average(n0, axis=0, weights=np.array([1, 2])))\n\"\"\"\n[[ 6.33333333  7.33333333  8.33333333  9.33333333]\n [10.33333333 11.33333333 12.33333333 13.33333333]]\n\"\"\"\n\nprint(np.average(n0, axis=0, weights=np.array([1, 2]), returned=True))\n\"\"\"\n(array([[ 6.33333333,  7.33333333,  8.33333333,  9.33333333], \n        [10.33333333, 11.33333333, 12.33333333, 13.33333333]]), \n array([[3., 3., 3., 3.], \n        [3., 3., 3., 3.]]))\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#median","title":"\u6c42\u4e2d\u4f4d\u6570(median)","text":"<p><code>median(a, axis=None, out=None, overwrite_input=False, keepdims=False)</code> <code>nanmedian(a, axis=None, out=None, overwrite_input=False, keepdims=np._NoValue)</code> nanmedian\u51fd\u6570\u5c06\u5ffd\u7565nan</p> <ol> <li> <p>a: \u540c\u4e0a</p> </li> <li> <p>axis: \u540c\u4e0a\u3002\u53ef\u6307\u5b9a\u591a\u4e2a\u8f74</p> </li> <li> <p>out: \u540c\u4e0a</p> </li> <li> <p>overwrite_input: \\</p> </li> <li> <p>keepdims: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4)\nprint(n0)\n\"\"\"\n[[[ 1.  2.  3.  4.]\n  [ 5.  6.  7.  8.]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(np.median(n0))\n\"\"\"\n8.5\n\"\"\"\n\nprint(np.median(n0, axis=0))\n\"\"\"\n[[ 5.  6.  7.  8.]\n [ 9. 10. 11. 12.]]\n\"\"\"\n\nprint(np.median(n0, axis=1))\n\"\"\"\n[[ 3.  4.  5.  6.]\n [11. 12. 13. 14.]]\n\"\"\"\n\nprint(np.median(n0, axis=2))\n\"\"\"\n[[ 2.5  6.5]\n [10.5 14.5]]\n\"\"\"\n\nprint(np.median(n0, axis=(0, 2)))\n\"\"\"\n[ 6.5 10.5]\n\"\"\"\n\n\n\n# nanmedian\u51fd\u6570\nn0[0] = np.nan\nprint(n0)\n\"\"\"\n[[[nan nan nan nan]\n  [nan nan nan nan]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(np.median(n0))\n\"\"\"\nnan\n\"\"\"\n\nprint(np.nanmedian(n0))\n\"\"\"\n12.5\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#var","title":"\u6c42\u65b9\u5dee(var)","text":"<p><code>ndarray.var(axis=None, dtype=None, out=None, ddof=0, keepdims=np._NoValue, where=np._NoValue)</code> <code>var(a, axis=None, dtype=None, out=None, ddof=0, keepdims=np._NoValue, where=np._NoValue)</code> <code>nanvar(a, axis=None, dtype=None, out=None, ddof=0, keepdims=np._NoValue, where=np._NoValue)</code> nanvar\u51fd\u6570\u5c06\u5ffd\u7565nan</p> <ol> <li> <p>a: \u540c\u4e0a</p> </li> <li> <p>axis: \u540c\u4e0a\u3002\u53ef\u6307\u5b9a\u591a\u4e2a\u8f74</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>out: \u540c\u4e0a</p> </li> <li> <p>ddof: \u81ea\u7531\u5ea6\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>keepdims: \u540c\u4e0a</p> </li> <li> <p>where: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4)\nprint(n0)\n\"\"\"\n[[[ 1.  2.  3.  4.]\n  [ 5.  6.  7.  8.]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(n0.var())\n\"\"\"\n21.25\n\"\"\"\n\nprint(np.var(n0))\n\"\"\"\n21.25\n\"\"\"\n\n\n\n# \u8bbe\u7f6eaixs\nprint(np.var(n0, axis=0))\n\"\"\"\n[[16. 16. 16. 16.]\n [16. 16. 16. 16.]]\n\"\"\"\n\nprint(np.var(n0, axis=1))\n\"\"\"\n[[4. 4. 4. 4.]\n [4. 4. 4. 4.]]\n\"\"\"\n\nprint(np.var(n0, axis=2))\n\"\"\"\n[[1.25 1.25]\n [1.25 1.25]]\n\"\"\"\n\nprint(np.var(n0, axis=(0, 2)))\n\"\"\"\n[17.25 17.25]\n\"\"\"\n\n\n\n# \u8bbe\u7f6eddof\nprint(np.var(n0, axis=0, ddof=1))\n\"\"\"\n[[32. 32. 32. 32.]\n [32. 32. 32. 32.]]\n\"\"\"\n\n\n\n# \u8bbe\u7f6ekeepdims\nprint(np.var(n0, axis=0, keepdims=False))\n\"\"\"\n[[16. 16. 16. 16.]\n [16. 16. 16. 16.]]\n\"\"\"\n\nprint(np.var(n0, axis=0, keepdims=True))\n\"\"\"\n[[[16. 16. 16. 16.]\n  [16. 16. 16. 16.]]]\n\"\"\"\n\n\n\n# \u8bbe\u7f6ewhere\nprint(np.var(n0, axis=0, where=n0 &gt;= 3))\n\"\"\"\n[[ 0.  0. 16. 16.]\n [16. 16. 16. 16.]]\n\"\"\"\n\n\n\n# nanvar\u51fd\u6570\nn0[0] = np.nan\nprint(n0)\n\"\"\"\n[[[nan nan nan nan]\n  [nan nan nan nan]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(np.var(n0))\n\"\"\"\nnan\n\"\"\"\n\nprint(np.nanvar(n0))\n\"\"\"\n5.25\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#std","title":"\u6c42\u6807\u51c6\u5dee(std)","text":"<p><code>ndarray.std(axis=None, dtype=None, out=None, ddof=0, keepdims=np._NoValue, where=np._NoValuev)</code> <code>std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=np._NoValue, where=np._NoValue)</code> <code>nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=np._NoValue, where=np._NoValue)</code> nanstd\u51fd\u6570\u5c06\u5ffd\u7565nan</p> <ol> <li> <p>a: \u540c\u4e0a</p> </li> <li> <p>axis: \u540c\u4e0a\u3002\u53ef\u6307\u5b9a\u591a\u4e2a\u8f74</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>out: \u540c\u4e0a</p> </li> <li> <p>ddof: \u540c\u4e0a</p> </li> <li> <p>keepdims: \u540c\u4e0a</p> </li> <li> <p>where: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4)\nprint(n0)\n\"\"\"\n[[[ 1.  2.  3.  4.]\n  [ 5.  6.  7.  8.]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(n0.std())\n\"\"\"\n4.6097722286464435\n\"\"\"\n\nprint(np.std(n0))\n\"\"\"\n4.6097722286464435\n\"\"\"\n\n\n\n# \u8bbe\u7f6eaixs\nprint(np.std(n0, axis=0))\n\"\"\"\n[[4. 4. 4. 4.]\n [4. 4. 4. 4.]]\n\"\"\"\n\nprint(np.std(n0, axis=1))\n\"\"\"\n[[2. 2. 2. 2.]\n [2. 2. 2. 2.]]\n\"\"\"\n\nprint(np.std(n0, axis=2))\n\"\"\"\n[[1.11803399 1.11803399]\n [1.11803399 1.11803399]]\n\"\"\"\n\nprint(np.std(n0, axis=(0, 2)))\n\"\"\"\n[4.15331193 4.15331193]\n\"\"\"\n\n\n\n# \u8bbe\u7f6eddof\nprint(np.std(n0, axis=0, ddof=1))\n\"\"\"\n[[5.65685425 5.65685425 5.65685425 5.65685425]\n [5.65685425 5.65685425 5.65685425 5.65685425]]\n\"\"\"\n\n\n\n# \u8bbe\u7f6ekeepdims\nprint(np.std(n0, axis=0, keepdims=False))\n\"\"\"\n[[4. 4. 4. 4.]\n [4. 4. 4. 4.]]\n\"\"\"\n\nprint(np.std(n0, axis=0, keepdims=True))\n\"\"\"\n[[[4. 4. 4. 4.]\n  [4. 4. 4. 4.]]]\n\"\"\"\n\n\n\n# \u8bbe\u7f6ewhere\nprint(np.std(n0, axis=0, where=n0 &gt;= 3))\n\"\"\"\n[[0. 0. 4. 4.]\n [4. 4. 4. 4.]]\n\"\"\"\n\n\n\n# nanstd\u51fd\u6570\nn0[0] = np.nan\nprint(n0)\n\"\"\"\n[[[nan nan nan nan]\n  [nan nan nan nan]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(np.std(n0))\n\"\"\"\nnan\n\"\"\"\n\nprint(np.nanstd(n0))\n\"\"\"\n2.29128784747792\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#maxargmax","title":"\u6c42\u6700\u5927\u503c(max)\u4e0e\u6700\u5927\u503c\u4f4d\u7f6e(argmax)","text":"<ol> <li> <p><code>ndarray.max(axis=None, out=None, keepdims=np._NoValue, initial=np._NoValue, where=np._NoValue)</code> <code>max(a, axis=None, out=None, keepdims=np._NoValue, initial=np._NoValue, where=np._NoValue)</code> <code>nanmax(a, axis=None, out=None, keepdims=np._NoValue, initial=np._NoValue, where=np._NoValue)</code> nanmax\u51fd\u6570\u5c06\u5ffd\u7565nan</p> </li> <li> <p>a: \u540c\u4e0a</p> </li> <li> <p>axis: \u540c\u4e0a\u3002\u53ef\u6307\u5b9a\u591a\u4e2a\u8f74</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>out: \u540c\u4e0a</p> </li> <li> <p>keepdims: \u540c\u4e0a</p> </li> <li> <p>initial: \u8bbe\u7f6e\u8f93\u51fa\u7ed3\u679c\u4e2d\u5143\u7d20\u7684\u6700\u5c0f\u503c</p> </li> <li> <p>where: \u540c\u4e0a\u3002\u5fc5\u987b\u540c\u65f6\u6307\u5b9ainitial\u53c2\u6570</p> </li> </ol> <p>```Python n0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4) print(n0) \"\"\" [[[ 1.  2.  3.  4.]   [ 5.  6.  7.  8.]]</p> <p>[[ 9. 10. 11. 12.]   [13. 14. 15. 16.]]] \"\"\"</p> <p>print(n0.max()) \"\"\" 16.0 \"\"\"</p> <p>print(np.max(n0)) \"\"\" 16.0 \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#aixs_2","title":"\u8bbe\u7f6eaixs","text":"<p>print(np.max(n0, axis=0)) \"\"\" [[ 9. 10. 11. 12.]  [13. 14. 15. 16.]] \"\"\"</p> <p>print(np.max(n0, axis=1)) \"\"\" [[ 5.  6.  7.  8.]  [13. 14. 15. 16.]] \"\"\"</p> <p>print(np.max(n0, axis=2)) \"\"\" [[ 4.  8.]  [12. 16.]] \"\"\"</p> <p>print(np.max(n0, axis=(0, 2))) \"\"\" [12. 16.] \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#keepdims_2","title":"\u8bbe\u7f6ekeepdims","text":"<p>print(np.max(n0, axis=0, keepdims=False)) \"\"\" [[ 9. 10. 11. 12.]  [13. 14. 15. 16.]] \"\"\"</p> <p>print(np.max(n0, axis=0, keepdims=True)) \"\"\" [[[ 9. 10. 11. 12.]   [13. 14. 15. 16.]]] \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#initialwhere","title":"\u8bbe\u7f6einitial\u548cwhere","text":"<p>print(np.max(n0, axis=0, initial=9)) \"\"\" [[ 9. 10. 11. 12.]  [13. 14. 15. 16.]] \"\"\"</p> <p>print(np.max(n0, axis=0, initial=9, where=n0 &lt;= 13)) \"\"\" [[ 9. 10. 11. 12.]  [13.  9.  9.  9.]] \"\"\"</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#nansum_1","title":"nansum\u51fd\u6570","text":"<p>n0[0] = np.nan print(n0) \"\"\" [[[nan nan nan nan]   [nan nan nan nan]]</p> <p>[[ 9. 10. 11. 12.]   [13. 14. 15. 16.]]] \"\"\"</p> <p>print(np.max(n0)) \"\"\" nan \"\"\"</p> <p>print(np.nanmax(n0)) \"\"\" 16.0 \"\"\" <pre><code>89. `ndarray.argmax(axis=None, out=None, keepdims=np._NoValue)`\n`argmax(a, axis=None, out=None, keepdims=np._NoValue)`\n\u8fd4\u56de\u6307\u5b9a\u8f74\u4e0a\u6700\u5927\u503c\u5728\u6307\u5b9a\u8f74\u4e0a\u7684\u7d22\u5f15\uff0c\u82e5\u6700\u5927\u503c\u6709\u91cd\u590d\uff0c\u5219\u53ea\u8fd4\u56de\u7b2c\u4e00\u4e2a\u7684\u4f4d\u7f6e\n\n  1. **a**: \u540c\u4e0a\n\n  2. **axis**: \u540c\u4e0a\u3002\u4e0d\u80fd\u6307\u5b9a\u591a\u4e2a\u8f74\n\n  3. out: \u540c\u4e0a\n\n  4. **keepdims**: \u540c\u4e0a\n\n  ```Python\nn0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4)\nprint(n0)\n\"\"\"\n[[[ 1.  2.  3.  4.]\n  [ 5.  6.  7.  8.]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(n0.argmax())\n\"\"\"\n15\n\"\"\"\n\nprint(np.argmax(n0))\n\"\"\"\n15\n\"\"\"\n\nprint(np.argmax(n0, axis=0))\n\"\"\"\n[[1 1 1 1]\n [1 1 1 1]]\n\"\"\"\n\nprint(np.argmax(n0, axis=1))\n\"\"\"\n[[1 1 1 1]\n [1 1 1 1]]\n\"\"\"\n\nprint(np.argmax(n0, axis=2))\n\"\"\"\n[[3 3]\n [3 3]]\n\"\"\"\n\nprint(np.argmax(n0, axis=0, keepdims=False))\n\"\"\"\n[[1 1 1 1]\n [1 1 1 1]]\n\"\"\"\n\nprint(np.argmax(n0, axis=0, keepdims=True))\n\"\"\"\n[[[1 1 1 1]\n  [1 1 1 1]]]\n\"\"\"\n</code></pre></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#minargmin","title":"\u6c42\u6700\u5c0f\u503c(min)\u4e0e\u6700\u5c0f\u503c\u4f4d\u7f6e(argmin)","text":"<ol> <li> <p><code>ndarray.min(axis=None, out=None, keepdims=np._NoValue, initial=np._NoValue, where=np._NoValue)</code> <code>min(a, axis=None, out=None, keepdims=np._NoValue, initial=np._NoValue, where=np._NoValue)</code> <code>nanmin(a, axis=None, out=None, keepdims=np._NoValue, initial=np._NoValue, where=np._NoValue)</code> nanmin\u51fd\u6570\u5c06\u5ffd\u7565nan</p> </li> <li> <p>a: \u540c\u4e0a</p> </li> <li> <p>axis: \u540c\u4e0a\u3002\u53ef\u6307\u5b9a\u591a\u4e2a\u8f74</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>out: \u540c\u4e0a</p> </li> <li> <p>keepdims: \u540c\u4e0a</p> </li> <li> <p>initial: \u8bbe\u7f6e\u8f93\u51fa\u7ed3\u679c\u4e2d\u5143\u7d20\u7684\u6700\u5927\u503c</p> </li> <li> <p>where: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4)\nprint(n0)\n\"\"\"\n[[[ 1.  2.  3.  4.]\n  [ 5.  6.  7.  8.]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(n0.max())\n\"\"\"\n1.0\n\"\"\"\n\nprint(np.max(n0))\n\"\"\"\n1.0\n\"\"\"\n\n\n\n# \u8bbe\u7f6eaixs\nprint(np.max(n0, axis=0))\n\"\"\"\n[[1. 2. 3. 4.]\n [5. 6. 7. 8.]]\n\"\"\"\n\nprint(np.max(n0, axis=1))\n\"\"\"\n[[ 1.  2.  3.  4.]\n [ 9. 10. 11. 12.]]\n\"\"\"\n\nprint(np.max(n0, axis=2))\n\"\"\"\n[[ 1.  5.]\n [ 9. 13.]]\n\"\"\"\n\nprint(np.max(n0, axis=(0, 2)))\n\"\"\"\n[1. 5.]\n\"\"\"\n\n\n\n# \u8bbe\u7f6ekeepdims\nprint(np.max(n0, axis=0, keepdims=False))\n\"\"\"\n[[1. 2. 3. 4.]\n [5. 6. 7. 8.]]\n\"\"\"\n\nprint(np.max(n0, axis=0, keepdims=True))\n\"\"\"\n[[[1. 2. 3. 4.]\n  [5. 6. 7. 8.]]]\n\"\"\"\n\n\n\n# \u8bbe\u7f6einitial\u548cwhere\nprint(np.min(n0, axis=0, initial=3))\n\"\"\"\n[[1. 2. 3. 3.]\n [3. 3. 3. 3.]]\n\"\"\"\n\nprint(np.min(n0, axis=0, initial=3, where=n0 &gt;= 3))\n\"\"\"\n[[3. 3. 3. 3.]\n [3. 3. 3. 3.]]\n\"\"\"\n\n\n\n# nansum\u51fd\u6570\nn0[0] = np.nan\nprint(n0)\n\"\"\"\n[[[nan nan nan nan]\n  [nan nan nan nan]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(np.max(n0))\n\"\"\"\nnan\n\"\"\"\n\nprint(np.nanmax(n0))\n\"\"\"\n9.0\n\"\"\"\n</code></pre> <ol> <li> <p><code>ndarray.argmin(axis=None, out=None, keepdims=np._NoValue)</code> <code>argmin(a, axis=None, out=None, keepdims=np._NoValue)</code> \u8fd4\u56de\u6307\u5b9a\u8f74\u4e0a\u6700\u5c0f\u503c\u5728\u6307\u5b9a\u8f74\u4e0a\u7684\u7d22\u5f15\uff0c\u82e5\u6700\u5c0f\u503c\u6709\u91cd\u590d\uff0c\u5219\u53ea\u8fd4\u56de\u7b2c\u4e00\u4e2a\u7684\u4f4d\u7f6e</p> </li> <li> <p>a: \u540c\u4e0a</p> </li> <li> <p>axis: \u540c\u4e0a\u3002\u4e0d\u80fd\u6307\u5b9a\u591a\u4e2a\u8f74</p> </li> <li> <p>out: \u540c\u4e0a</p> </li> <li> <p>keepdims: \u540c\u4e0a</p> </li> </ol> <p>```Python n0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4) print(n0) \"\"\" [[[ 1.  2.  3.  4.]   [ 5.  6.  7.  8.]]</p> <p>[[ 9. 10. 11. 12.]   [13. 14. 15. 16.]]] \"\"\"</p> <p>print(n0.argmin()) \"\"\" 0 \"\"\"</p> <p>print(np.argmin(n0)) \"\"\" 0 \"\"\"</p> <p>print(np.argmin(n0, axis=0)) \"\"\" [[0 0 0 0]  [0 0 0 0]] \"\"\"</p> <p>print(np.argmin(n0, axis=1)) \"\"\" [[0 0 0 0]  [0 0 0 0]] \"\"\"</p> <p>print(np.argmin(n0, axis=2)) \"\"\" [[0 0]  [0 0]] \"\"\"</p> <p>print(np.argmin(n0, axis=0, keepdims=False)) \"\"\" [[0 0 0 0]  [0 0 0 0]] \"\"\"</p> <p>print(np.argmin(n0, axis=0, keepdims=True)) \"\"\" [[[0 0 0 0]   [0 0 0 0]]] \"\"\" <pre><code>### \u6c42\u6781\u5dee(ptp)\n\n`ndarray.ptp(axis=None, out=None, keepdims=np._NoValue)`\n`ptp(a, axis=None, out=None, keepdims=np._NoValue)`\n\n92. **a**: \u540c\u4e0a\n\n93. **axis**: \u540c\u4e0a\u3002\u53ef\u6307\u5b9a\u591a\u4e2a\u8f74\n\n94. out: \u540c\u4e0a\n\n95. **keepdims**: \u540c\u4e0a\n\n```Python\nn0 = np.arange(1, 17, dtype=np.float_).reshape(2, 2, 4)\nprint(n0)\n\"\"\"\n[[[ 1.  2.  3.  4.]\n  [ 5.  6.  7.  8.]]\n\n [[ 9. 10. 11. 12.]\n  [13. 14. 15. 16.]]]\n\"\"\"\n\nprint(n0.ptp())\n\"\"\"\n15.0\n\"\"\"\n\nprint(np.ptp(n0))\n\"\"\"\n15.0\n\"\"\"\n\nprint(np.ptp(n0, axis=0))\n\"\"\"\n[[8. 8. 8. 8.]\n [8. 8. 8. 8.]]\n\"\"\"\n\nprint(np.ptp(n0, axis=1))\n\"\"\"\n[[4. 4. 4. 4.]\n [4. 4. 4. 4.]]\n\"\"\"\n\nprint(np.ptp(n0, axis=2))\n\"\"\"\n[[3. 3.]\n [3. 3.]]\n\"\"\"\n\nprint(np.ptp(n0, axis=(0, 2)))\n\"\"\"\n[11. 11.]\n\"\"\"\n\nprint(np.ptp(n0, axis=0, keepdims=False))\n\"\"\"\n[[8. 8. 8. 8.]\n [8. 8. 8. 8.]]\n\"\"\"\n\nprint(np.ptp(n0, axis=0, keepdims=True))\n\"\"\"\n[[[8. 8. 8. 8.]\n  [8. 8. 8. 8.]]]\n\"\"\"\n</code></pre></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/","title":"\u6570\u7ec4\u7684\u64cd\u4f5c","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_1","title":"\u5e38\u6570","text":"<ol> <li> <p>\u6b63\u65e0\u7a77\u5927: Inf\u3001Infinity\u3001PINF\u3001infty\u3001inf</p> </li> <li> <p>\u8d1f\u65e0\u7a77\u5927: NINF</p> </li> <li> <p>\u975e\u6570\u5b57: NAN\u3001NaN\u3001nan</p> </li> <li> <p>\u6b63\u96f6: PZERO</p> </li> <li> <p>\u8d1f\u96f6: NZERO</p> </li> <li> <p>\u81ea\u7136\u5e38\u6570e: e</p> </li> <li> <p>\u6b27\u62c9\u5e38\u6570\u03b3: euler_gamma</p> </li> <li> <p>\u03c0: pi</p> </li> <li> <p>None: newaxis\uff0c\u4e3b\u8981\u7528\u4e8e\u7d22\u5f15\u6570\u7ec4</p> </li> </ol> <pre><code>print(np.Inf, np.Infinity, np.PINF, np.infty, np.inf)\n\"\"\"\ninf inf inf inf inf\n\"\"\"\n\nprint(np.NINF)\n\"\"\"\n-inf\n\"\"\"\n\nprint(np.NAN, np.NaN, np.nan)\n\"\"\"\nnan nan nan\n\"\"\"\n\nprint(np.PZERO)\n\"\"\"\n0.0\n\"\"\"\n\nprint(np.NZERO)\n\"\"\"\n-0.0\n\"\"\"\n\nprint(np.e)\n\"\"\"\n2.718281828459045\n\"\"\"\n\nprint(np.euler_gamma)\n\"\"\"\n0.5772156649015329\n\"\"\"\n\nprint(np.pi)\n\"\"\"\n3.141592653589793\n\"\"\"\n\nprint(np.newaxis)\n\"\"\"\nNone\n\"\"\"\n\nn0 = np.array([1, 2, 3, 4])\nprint(n0[np.newaxis, :])\n\"\"\"\n[[1 2 3 4]]\n\"\"\"\n\nprint(n0[np.newaxis])\n\"\"\"\n[[1 2 3 4]]\n\"\"\"\n\nprint(n0[None])\n\"\"\"\n[[1 2 3 4]]\n\"\"\"\n\nprint(n0[:, np.newaxis])\n\"\"\"\n[[1]\n [2]\n [3]\n [4]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_2","title":"\u7c7b\u578b\u8f6c\u6362","text":"<p>\u5728\u4e0a\u4e00\u8282\u4e2d\u5173\u4e8edtype\u6709\u8be6\u7ec6\u4ecb\u7ecd\u3002\u5176\u4e2d\u7684\u7c7b\u578b\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7528\u4e8e\u6570\u636e\u7c7b\u578b\u8f6c\u6362</p> <pre><code>n = 3.14\nn_int8 = np.int8(n)\nprint(n_int8)\n\"\"\"\n3\n\"\"\"\n\nn_bool = np.bool_(n)\nprint(n_bool)\n\"\"\"\nTrue\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_3","title":"\u6570\u7ec4\u5c5e\u6027","text":"<ol> <li> <p>shape: \u5f62\u72b6</p> </li> <li> <p>dtype: \u6570\u636e\u7c7b\u578b</p> </li> <li> <p>ndim: \u7ef4\u5ea6</p> </li> <li> <p>base: \u57fa\u7c7b\u6570\u7ec4</p> </li> <li> <p>flat: \u4e00\u7ef4\u6570\u7ec4\u8fed\u4ee3\u5668</p> </li> <li> <p>imag:\u865a\u90e8</p> </li> <li> <p>real: \u5b9e\u90e8</p> </li> <li> <p>size: \u603b\u5143\u7d20\u6570=\u7ef4\u6570\u4e58\u79ef</p> </li> <li> <p>itemsize: \u6bcf\u4e2a\u5143\u7d20\u5360\u7684\u5b57\u8282\u6570</p> </li> <li> <p>nbytes: \u603b\u5143\u7d20\u5b57\u8282\u6570=size * itemsize</p> </li> <li> <p>strides:\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u8fdb\u5165\u5230\u4e0b\u4e00\u4e2a\u6570\u9700\u8981\u8de8\u8d8a\u7684\u5b57\u8282\u6570</p> </li> <li> <p>flags: \u5185\u5b58\u5e03\u5c40\u4fe1\u606f</p> </li> <li> <p>ctypes</p> </li> <li> <p>data</p> </li> </ol> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\nn1 = n0.reshape(3, 4)\nprint(n1)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\n# shape\u5c5e\u6027: \u5f62\u72b6\nprint(n1.shape)\n\"\"\"\n(3, 4)\n\"\"\"\n\n# dtype\u5c5e\u6027: \u6570\u636e\u7c7b\u578b\nprint(n1.dtype)\n\"\"\"\nint32\n\"\"\"\n\n# ndim\u5c5e\u6027: \u7ef4\u5ea6\nprint(n1.ndim)\n\"\"\"\n2\n\"\"\"\n\n# base\u5c5e\u6027: \u57fa\u7c7b\u6570\u7ec4\nprint(n1.base, n1.base is n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11] True\n\"\"\"\n\n# flat\u5c5e\u6027: \u4e00\u7ef4\u6570\u7ec4\u8fed\u4ee3\u5668\nprint(n1.flat, np.array(n1.flat))\n\"\"\"\n&lt;numpy.flatiter object at 0x000001F088E46760&gt; [ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\n# imag\u5c5e\u6027:\u865a\u90e8\nprint(n1.imag)\n\"\"\"\n[[0 0 0 0]\n [0 0 0 0]\n [0 0 0 0]]\n\"\"\"\n\n# real\u5c5e\u6027: \u5b9e\u90e8\nprint(n1.real)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\n# size\u5c5e\u6027: \u603b\u5143\u7d20\u6570=\u7ef4\u6570\u4e58\u79ef\nprint(n1.size)\n\"\"\"\n12\n\"\"\"\n\n# itemsize\u5c5e\u6027: \u6bcf\u4e2a\u5143\u7d20\u5360\u7684\u5b57\u8282\u6570\nprint(n1.itemsize)\n\"\"\"\n4\n\"\"\"\n\n# nbytes\u5c5e\u6027: \u603b\u5143\u7d20\u5b57\u8282\u6570=size * itemsize\nprint(n1.nbytes)\n\"\"\"\n48\n\"\"\"\n\n# strides\u5c5e\u6027:\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u8fdb\u5165\u5230\u4e0b\u4e00\u4e2a\u6570\u9700\u8981\u8de8\u8d8a\u7684\u5b57\u8282\u6570\nprint(n1.strides)\n\"\"\"\n(16, 4)\n\"\"\"\n\n# flags\u5c5e\u6027: \u5185\u5b58\u5e03\u5c40\u4fe1\u606f\nprint(n1.flags)\n\"\"\"\n  C_CONTIGUOUS : True\n  F_CONTIGUOUS : False\n  OWNDATA : False\n  WRITEABLE : True\n  ALIGNED : True\n  WRITEBACKIFCOPY : False\n\"\"\"\n\n# ctypes\u5c5e\u6027\nprint(n1.ctypes)\n\"\"\"\n&lt;numpy.core._internal._ctypes object at 0x00000203AF48EF00&gt;\n\"\"\"\n\n# data\u5c5e\u6027\nprint(n1.data)\n\"\"\"\n&lt;memory at 0x00000203AF4C0520&gt;\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_4","title":"\u6570\u7ec4\u8fd0\u7b97","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#add","title":"\u52a0\u6cd5\u8fd0\u7b97\uff08+\u3001add\u51fd\u6570\uff09","text":"<pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 + n2)\n\"\"\"\n[ 6  8 10 12]\n\"\"\"\n\nprint(n1 + n3)\n\"\"\"\n[[2 3 4 5]\n [6 7 8 9]]\n\"\"\"\n\nprint(n1 + n4)\n\"\"\"\n[[ 2  4  6  8]\n [ 6  8 10 12]]\n\"\"\"\n\nprint(n3 + n4)\n\"\"\"\n[[ 2  3  4  5]\n [10 11 12 13]]\n\"\"\"\n\nprint(np.add(n3, n4))\n\"\"\"\n[[ 2  3  4  5]\n [10 11 12 13]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#-subtract","title":"\u51cf\u6cd5\u8fd0\u7b97\uff08-\u3001subtract\u51fd\u6570\uff09","text":"<pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 - n2)\n\"\"\"\n[-4 -4 -4 -4]\n\"\"\"\n\nprint(n1 - n3)\n\"\"\"\n[[ 0  1  2  3]\n [-4 -3 -2 -1]]\n\"\"\"\n\nprint(n1 - n4)\n\"\"\"\n[[ 0  0  0  0]\n [-4 -4 -4 -4]]\n\"\"\"\n\nprint(n3 - n4)\n\"\"\"\n[[ 0 -1 -2 -3]\n [ 0 -1 -2 -3]]\n\"\"\"\n\nprint(np.subtract(n3, n4))\n\"\"\"\n[[ 0 -1 -2 -3]\n [ 0 -1 -2 -3]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#multiply","title":"\u4e58\u6cd5\u8fd0\u7b97\uff08*\u3001multiply\u51fd\u6570\uff09","text":"<pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 * n2)\n\"\"\"\n[ 5 12 21 32]\n\"\"\"\n\nprint(n1 * n3)\n\"\"\"\n[[ 1  2  3  4]\n [ 5 10 15 20]]\n\"\"\"\n\nprint(n1 * n4)\n\"\"\"\n[[ 1  4  9 16]\n [ 5 12 21 32]]\n\"\"\"\n\nprint(n3 * n4)\n\"\"\"\n[[ 1  2  3  4]\n [25 30 35 40]]\n\"\"\"\n\nprint(np.multiply(n3, n4))\n\"\"\"\n[[ 1  2  3  4]\n [25 30 35 40]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#dividetrue_divide","title":"\u9664\u6cd5\u8fd0\u7b97\uff08/\u3001divide\u51fd\u6570\u3001true_divide\u51fd\u6570\uff09","text":"<pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 / n2)\n\"\"\"\n[0.2        0.33333333 0.42857143 0.5       ]\n\"\"\"\n\nprint(n1 / n3)\n\"\"\"\n[[1.  2.  3.  4. ]\n [0.2 0.4 0.6 0.8]]\n\"\"\"\n\nprint(n1 / n4)\n\"\"\"\n[[1.         1.         1.         1.        ]\n [0.2        0.33333333 0.42857143 0.5       ]]\n\"\"\"\n\nprint(n3 / n4)\n\"\"\"\n[[1.         0.5        0.33333333 0.25      ]\n [1.         0.83333333 0.71428571 0.625     ]]\n\"\"\"\n\nprint(np.divide(n3, n4))\n\"\"\"\n[[1.         0.5        0.33333333 0.25      ]\n [1.         0.83333333 0.71428571 0.625     ]]\n\"\"\"\n\nprint(np.true_divide(n3, n4))\n\"\"\"\n[[1.         0.5        0.33333333 0.25      ]\n [1.         0.83333333 0.71428571 0.625     ]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#floor_divide","title":"\u6574\u9664\uff08\u5730\u677f\u9664\uff09\u8fd0\u7b97\uff08//\u3001floor_divide\u51fd\u6570\uff09","text":"<p>\u6ee1\u8db3a = a % b + b * (a // b)</p> <pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 // n2)\n\"\"\"\n[0 0 0 0]\n\"\"\"\n\nprint(n1 // n3)\n\"\"\"\n[[1 2 3 4]\n [0 0 0 0]]\n\"\"\"\n\nprint(n1 // n4)\n\"\"\"\n[[1 1 1 1]\n [0 0 0 0]]\n\"\"\"\n\nprint(n3 // n4)\n\"\"\"\n[[1 0 0 0]\n [1 0 0 0]]\n\"\"\"\n\nprint(np.floor_divide(n3, n4))\n\"\"\"\n[[1 0 0 0]\n [1 0 0 0]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#remaindermodfmoddivmod","title":"\u53d6\u4f59\uff08\u6a21\uff09\u8fd0\u7b97\uff08%\u3001remainder\u51fd\u6570\u3001mod\u51fd\u6570\u3001fmod\u51fd\u6570\u3001divmod\u51fd\u6570\uff09","text":"<ol> <li> <p>%\u3001remainder\u51fd\u6570\u3001mod\u51fd\u6570: \u6ee1\u8db3**a = a % b + b * (a // b)**</p> </li> <li> <p>fmod\u51fd\u6570\uff1a\u7ed3\u679c**\u7b26\u53f7\u4e0e\u88ab\u9664\u6570\u76f8\u540c**\u3002|\u7ed3\u679c| = |a| % |b|</p> </li> <li> <p>divmod\u51fd\u6570: \u540c\u65f6\u8fd4\u56de\u5546\u4e0e\u4f59\u6570</p> </li> </ol> <pre><code>n1 = np.array([1, -2, 3, -4])\nn2 = np.array([5, -6, -7, 8])\nn3 = np.array([[-1], [5]])\nn4 = np.array([[1, -2, 3, -4], [-5, -6, -7, 8]])\n\nprint(n1 % n2)\n\"\"\"\n[ 1 -2 -4  4]\n\"\"\"\n\nprint(n1 % n3)\n\"\"\"\n[[0 0 0 0]\n [1 3 3 1]]\n\"\"\"\n\nprint(n1 % n4)\n\"\"\"\n[[ 0  0  0  0]\n [-4 -2 -4  4]]\n\"\"\"\n\nprint(n3 % n4)\n\"\"\"\n[[ 0 -1  2 -1]\n [ 0 -1 -2  5]]\n\"\"\"\n\nprint(np.remainder(n3, n4))\n\"\"\"\n[[ 0 -1  2 -1]\n [ 0 -1 -2  5]]\n\"\"\"\n\nprint(np.mod(n3, n4))\n\"\"\"\n[[ 0 -1  2 -1]\n [ 0 -1 -2  5]]\n\"\"\"\n\nprint(np.fmod(n3, n4))\n\"\"\"\n[[ 0 -1 -1 -1]\n [ 0  5  5  5]]\n\"\"\"\n\nprint(np.divmod(n3, n4))\n\"\"\"\n(array([[-1,  0, -1,  0],\n       [-1, -1, -1,  0]]), \n array([[ 0, -1,  2, -1],\n       [ 0, -1, -2,  5]]))\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#matmuldot","title":"\u70b9\u79ef\u8fd0\u7b97\uff08@\u3001matmul\u51fd\u6570\u3001dot\u51fd\u6570\uff09","text":"<p>\u7b2c\u4e00\u4e2a\u6570\u7ec4\u5217\u6570\u5fc5\u987b\u4e0e\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u7684\u884c\u6570\u76f8\u540c\uff0c\u5bf9\u5e94\u884c\u5217\u4e58\u79ef\u76f8\u52a0\u7684\u7ed3\u679c\u4e3a\u8fd0\u7b97\u7ed3\u679c\u5bf9\u5e94\u884c\u5217\u7684\u5143\u7d20</p> <p>\u5373\u5f62\u72b6\u4e3a(m, k)\u7684\u6570\u7ec4\u4e0e\u5f62\u72b6\u4e3a(k, n)\u7684\u6570\u7ec4\u7684\u70b9\u79ef\u7ed3\u679c\u4e3a\u4e00\u4e2a\u5f62\u72b6\u4e3a(m, n)\u7684\u6570\u7ec4</p> <p>matmul\u51fd\u6570\u652f\u6301\u5e7f\u64ad\u673a\u5236\uff0c\u4e0d\u652f\u6301\u6807\u91cf\u4e58\u6cd5\u8fd0\u7b97</p> <p>dot\u51fd\u6570\u4e0d\u652f\u6301\u5e7f\u64ad\u673a\u5236\uff0c\u652f\u6301\u6807\u91cf\u4e58\u6cd5\u8fd0\u7b97</p> <p></p> <ol> <li> <p>\u7b2c\u4e00\u4e2a\u6570\u7ec4\u82e5\u4e3a\u4e00\u7ef4\uff0c\u5219\u5176\u5c06\u88ab\u63d0\u5347\u4e3a\u4e8c\u7ef4\uff0c\u5e76\u89c6\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u7684\u4e00\u884c\uff0c\u7ed3\u679c\u4ecd\u4e3a\u4e00\u7ef4\u6570\u7ec4</p> </li> <li> <p>\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u82e5\u4e3a\u4e00\u7ef4\uff0c\u5219\u5176\u5c06\u88ab\u63d0\u5347\u4e3a\u4e8c\u7ef4\uff0c\u5e76\u89c6\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u7684\u4e00\u5217\uff0c\u7ed3\u679c\u4ecd\u4e3a\u4e00\u7ef4\u6570\u7ec4</p> </li> </ol> <pre><code>n0 = np.array([1, 2, 3, 4])\nprint(n0)\n\"\"\"\n[1 2 3 4]\n\"\"\"\n\nn1 = np.array([5, 6, 7, 8])\nprint(n1)\n\"\"\"\n[5 6 7 8]\n\"\"\"\n\nn2 = np.arange(1, 17).reshape(4, 4)\nprint(n2)\n\"\"\"\n[[ 1  2  3  4]\n [ 5  6  7  8]\n [ 9 10 11 12]\n [13 14 15 16]]\n\"\"\"\n\nprint(n0 @ n1)\n\"\"\"\n70\n\"\"\"\n\nprint(n0 @ n2)\n\"\"\"\n[ 90 100 110 120]\n\"\"\"\n\nprint(n2 @ n0)\n\"\"\"\n[ 30  70 110 150]\n\"\"\"\n\nprint(n2 @ n2)\n\"\"\"\n[[ 90 100 110 120]\n [202 228 254 280]\n [314 356 398 440]\n [426 484 542 600]]\n\"\"\"\n\nprint(np.matmul(n2, n2))\n\"\"\"\n[[ 90 100 110 120]\n [202 228 254 280]\n [314 356 398 440]\n [426 484 542 600]]\n\"\"\"\n\nprint(np.dot(n2, n2))\n\"\"\"\n[[ 90 100 110 120]\n [202 228 254 280]\n [314 356 398 440]\n [426 484 542 600]]\n\"\"\"\n\nprint(np.dot(n2, 3))\n\"\"\"\n[[ 3  6  9 12]\n [15 18 21 24]\n [27 30 33 36]\n [39 42 45 48]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#powerfloat_power","title":"\u4e58\u65b9\u8fd0\u7b97\uff08**\u3001power\u51fd\u6570\u3001float_power\u51fd\u6570\uff09","text":"<p>\u8d1f\u6570\u7684\u975e\u6574\u6570\u5e42\u5c06\u8fd4\u56denan</p> <p>float_power\u51fd\u6570\u4e0epower\u51fd\u6570\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u6574\u6570\u3001float16 \u548c float32 \u88ab\u63d0\u5347\u4e3a\u6700\u5c0f\u7cbe\u5ea6\u4e3a float64 \u7684\u6d6e\u70b9\u6570\uff0c\u56e0\u6b64\u7ed3\u679c\u603b\u662f\u4e0d\u51c6\u786e\u7684</p> <p>power\u51fd\u6570\u4e0d\u652f\u6301\u6574\u6570\u7684\u8d1f\u6570\u5e42</p> <pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 ** n2)\n\"\"\"\n[    1    64  2187 65536]\n\"\"\"\n\nprint(n1 ** n3)\n\"\"\"\n[[   1    2    3    4]\n [   1   32  243 1024]]\n\"\"\"\n\nprint(n1 ** n4)\n\"\"\"\n[[    1     4    27   256]\n [    1    64  2187 65536]]\n\"\"\"\n\nprint(n3 ** n4)\n\"\"\"\n[[     1      1      1      1]\n [  3125  15625  78125 390625]]\n\"\"\"\n\nprint(np.power(n3, n4))\n\"\"\"\n[[     1      1      1      1]\n [  3125  15625  78125 390625]]\n\"\"\"\n\nprint(np.power(-1, 1.5))\n\"\"\"\nimeWarning: invalid value encountered in power\n  print(np.power(-1, 1.5))\nnan\n\"\"\"\n\nprint(np.float_power(1, -1))\n\"\"\"\n1.0\n\"\"\"\n\nprint(type(np.power(2, 2)), type(np.float_power(2, 2)))\n\"\"\"\n&lt;class 'numpy.int32'&gt; &lt;class 'numpy.float64'&gt;\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_5","title":"\u6bd4\u8f83\u8fd0\u7b97","text":"<ol> <li> <p>: greater\u51fd\u6570</p> </li> <li> <p>=: greater_equal\u51fd\u6570</p> </li> <li> <p>&lt;: less\u51fd\u6570</p> </li> <li> <p>&lt;=: less_equal\u51fd\u6570</p> </li> <li> <p>!=: not_equal\u51fd\u6570</p> </li> <li> <p>==: equal\u51fd\u6570</p> </li> <li> <p>\u6700\u5927\u503c: maximum\u51fd\u6570\uff08\u4e8c\u8005\u4e4b\u4e00\u4e3anan\u5219\u8fd4\u56denan\uff09\u3001fmax\uff08\u4e8c\u8005\u4e4b\u4e00\u4e3anan\u5219\u8fd4\u56de\u975enan\uff09\uff0c\u4e8c\u8005\u5747\u4e3anan\u5219\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08\u9002\u7528\u4e8e\u590d\u6570\uff0c\u590d\u6570\u81f3\u5c11\u5b9e\u90e8\u6216\u865a\u90e8\u4e4b\u4e00\u4e3anan\u5373\u4e3anan\uff09</p> </li> <li> <p>\u6700\u5c0f\u503c: minimum\u51fd\u6570\uff08\u4e8c\u8005\u4e4b\u4e00\u4e3anan\u5219\u8fd4\u56denan\uff09\u3001fmin\uff08\u4e8c\u8005\u4e4b\u4e00\u4e3anan\u5219\u8fd4\u56de\u975enan\uff09\uff0c\u4e8c\u8005\u5747\u4e3anan\u5219\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08\u9002\u7528\u4e8e\u590d\u6570\uff0c\u590d\u6570\u81f3\u5c11\u5b9e\u90e8\u6216\u865a\u90e8\u4e4b\u4e00\u4e3anan\u5373\u4e3anan\uff09</p> </li> </ol> <pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 &gt;= n2)\n\"\"\"\n[False False False False]\n\"\"\"\n\nprint(n1 &gt;= n3)\n\"\"\"\n[[ True  True  True  True]\n [False False False False]]\n\"\"\"\n\nprint(n1 &gt;= n4)\n\"\"\"\n[[ True  True  True  True]\n [False False False False]]\n\"\"\"\n\nprint(n3 &gt;= n4)\n\"\"\"\n[[ True False False False]\n [ True False False False]]\n\"\"\"\n\nprint(np.greater_equal(n3, n4))\n\"\"\"\n[[ True False False False]\n [ True False False False]]\n\"\"\"\n\nprint(np.maximum(n3, n4))\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]]\n\"\"\"\n\nprint(np.minimum(n3, n4))\n\"\"\"\n[[1 1 1 1]\n [5 5 5 5]]\n\"\"\"\n\nprint(np.fmax(n3, n4))\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]]\n\"\"\"\n\nprint(np.fmin(n3, n4))\n\"\"\"\n[[1 1 1 1]\n [5 5 5 5]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_6","title":"\u903b\u8f91\u8fd0\u7b97","text":"<ol> <li> <p>\u4e0e\u8fd0\u7b97: logical_and\u51fd\u6570</p> </li> <li> <p>\u6216\u8fd0\u7b97: logical_or\u51fd\u6570</p> </li> <li> <p>\u975e\u8fd0\u7b97: logical_not\u51fd\u6570</p> </li> <li> <p>\u5f02\u6216\u8fd0\u7b97: logical_xor\u51fd\u6570</p> </li> </ol> <pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(np.logical_and(n1, n2))\n\"\"\"\n[ True  True  True  True]\n\"\"\"\n\nprint(np.logical_and(n1, n3))\n\"\"\"\n[[ True  True  True  True]\n [ True  True  True  True]]\n\"\"\"\n\nprint(np.logical_and(n1, n4))\n\"\"\"\n[[ True  True  True  True]\n [ True  True  True  True]]\n\"\"\"\n\nprint(np.logical_and(n3, n4))\n\"\"\"\n[[ True  True  True  True]\n [ True  True  True  True]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_7","title":"\u6309\u4f4d\u8fd0\u7b97","text":"<ol> <li> <p>\u4e0e\u8fd0\u7b97: &amp;\u3001bitwise_and\u51fd\u6570</p> </li> <li> <p>\u6216\u8fd0\u7b97: |\u3001bitwise_or\u51fd\u6570</p> </li> <li> <p>\u5f02\u6216\u8fd0\u7b97: ^\u3001bitwise_xor\u51fd\u6570</p> </li> <li> <p>\u5de6\u79fb\u4f4d\u8fd0\u7b97: &lt;&lt;\u3001left_shift\u51fd\u6570</p> </li> <li> <p>\u53f3\u79fb\u4f4d\u8fd0\u7b97: &gt;&gt;\u3001right_shift\u51fd\u6570</p> </li> <li> <p>\u53d6\u53cd\u8fd0\u7b97: ~\u3001invert\u51fd\u6570</p> </li> </ol> <pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 &amp; n2)\n\"\"\"\n[1 2 3 0]\n\"\"\"\n\nprint(n1 &amp; n3)\n\"\"\"\n[[1 0 1 0]\n [1 0 1 4]]\n\"\"\"\n\nprint(n1 &amp; n4)\n\"\"\"\n[[1 2 3 4]\n [1 2 3 0]]\n\"\"\"\n\nprint(n3 &amp; n4)\n\"\"\"\n[[1 0 1 0]\n [5 4 5 0]]\n\"\"\"\n\nprint(np.bitwise_and(n3, n4))\n\"\"\"\n[[1 0 1 0]\n [5 4 5 0]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_8","title":"\u6807\u91cf\u8fd0\u7b97","text":"<p>\u5373\u4e0e\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u8fdb\u884c\u8fd0\u7b97\uff0c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u6570\u636e\u90fd\u4e0e\u8be5\u6570\u8fdb\u884c\u8fd0\u7b97</p> <pre><code>n0 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nprint(n0 * 2)\n\"\"\"\n[[ 2  4  6  8]\n [10 12 14 16]]\n\"\"\"\n\nn1 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nprint(n1 &gt; 2)\n\"\"\"\n[[False False  True  True]\n [ True  True  True  True]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_9","title":"\u6570\u7ec4\u7d22\u5f15\u4e0e\u5207\u7247","text":"<p>\u7c7b\u4f3c\u5217\u8868\u3001\u5143\u7ec4\u7b49\uff0c\u5bf9\u4e8e\u4e8c\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4\u6709\u5176\u72ec\u7279\u7684\u7d22\u5f15\u548c\u5207\u7247\u65b9\u5f0f\uff0c\u9010\u5c42\u7d22\u5f15 \u7ed3\u6784\u5316\u6570\u7ec4\u7684\u7d22\u5f15\u7c7b\u4f3c\u4e8e\u5b57\u5178</p> <ol> <li> <p>ndarray[n][m]...</p> </li> <li> <p>ndarray[n, m, ...]</p> </li> </ol> <pre><code># \u4e00\u7ef4\u6570\u7ec4\nn0 = np.arange(10)\nprint(n0)\n\"\"\"\n[0 1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nprint(n0[3])\n\"\"\"\n3\n\"\"\"\nprint(n0[:4])\n\"\"\"\n[0 1 2 3]\n\"\"\"\n\nprint(n0[2:])\n\"\"\"\n[2 3 4 5 6 7 8 9]\n\"\"\"\n\nprint(n0[1:9:2])\n\"\"\"\n[1 3 5 7]\n\"\"\"\n\nprint(n0[::-1])\n\"\"\"\n[9 8 7 6 5 4 3 2 1 0]\n\"\"\"\n\n\n\n# \u4e8c\u7ef4\u6570\u7ec4\nn1 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nprint(n1)\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]]\n\"\"\"\n\nprint(n1[1])\n\"\"\"\n[5 6 7 8]\n\"\"\"\n\nprint(n1[0][2])\n\"\"\"\n3\n\"\"\"\n\nprint(n1[0][1:])\n\"\"\"\n[2 3 4]\n\"\"\"\n\nprint(n1[1, ])\n\"\"\"\n[5 6 7 8]\n\"\"\"\n\nprint(n1[0, 2])\n\"\"\"\n3\n\"\"\"\n\nprint(n1[0, 1:])\n\"\"\"\n[2 3 4]\n\"\"\"\n\nprint(n1[0:, 2:])\n\"\"\"\n[[3 4]\n [7 8]]\n\"\"\"\n\n\n\n# \u4e09\u7ef4\u6570\u7ec4\nn2 = np.array([[[1, 2, 3, 4], [5, 6, 7, 8]], [[\"a\", \"b\", \"c\", \"d\"], [\"e\", \"f\", \"g\", \"h\"]]])\nprint(n2)\n\"\"\"\n[[['1' '2' '3' '4']\n  ['5' '6' '7' '8']]\n\n [['a' 'b' 'c' 'd']\n  ['e' 'f' 'g' 'h']]]\n\"\"\"\n\nprint(n2[1])\n\"\"\"\n[['a' 'b' 'c' 'd']\n ['e' 'f' 'g' 'h']]\n\"\"\"\n\nprint(n2[0][1])\n\"\"\"\n['5' '6' '7' '8']\n\"\"\"\n\nprint(n2[0][1][3])\n\"\"\"\n8\n\"\"\"\n\nprint(n2[0][0][2:])\n\"\"\"\n['3' '4']\n\"\"\"\n\nprint(n2[1, ])\n\"\"\"\n[['a' 'b' 'c' 'd']\n ['e' 'f' 'g' 'h']]\n\"\"\"\n\nprint(n2[0, 1])\n\"\"\"\n['5' '6' '7' '8']\n\"\"\"\n\nprint(n2[0, 1, 3])\n\"\"\"\n8\n\"\"\"\n\nprint(n2[0:, 1:, 2:])\n\"\"\"\n[[['7' '8']]\n\n [['g' 'h']]]\n\"\"\"\n\n\n\n# \u7ed3\u6784\u5316\u6570\u7ec4\ndtype = np.dtype([('name', 'S10'), ('age', int), ('height', float)])\ndata = np.array([('Alice', 25, 5.6), ('Bob', 30, 6.0)], dtype=dtype)\nprint(data)\n\"\"\"\n[(b'Alice', 25, 5.6) (b'Bob', 30, 6. )]\n\"\"\"\n\nprint(data[\"name\"])\n\"\"\"\n[b'Alice' b'Bob']\n\"\"\"\n\nprint(data[\"age\"])\n\"\"\"\n[25 30]\n\"\"\"\n\nprint(data[\"height\"])\n\"\"\"\n[5.6 6. ]\n\"\"\"\n\nprint(data[\"height\"][1:])\n\"\"\"\n[6.]\n\"\"\"\n\nprint(data[data[\"age\"] &gt; 26])\n\"\"\"\n[(b'Bob', 30, 6.)]\n\"\"\"\n\ndtype_nested = np.dtype([('info', [('name', 'S10'), ('age', int)]), ('height', float)])\ndata_nested = np.array([(('Alice', 25), 5.6), (('Bob', 30), 6.0)], dtype=dtype_nested)\nprint(data_nested)\n\"\"\"\n[((b'Alice', 25), 5.6) ((b'Bob', 30), 6. )]\n\"\"\"\n\nprint(data_nested[\"info\"])\n\"\"\"\n[(b'Alice', 25) (b'Bob', 30)]\n\"\"\"\n\nprint(data_nested[\"info\"][\"name\"])\n\"\"\"\n[b'Alice' b'Bob']\n\"\"\"\n\nprint(data_nested[\"info\"][\"age\"])\n\"\"\"\n[25 30]\n\"\"\"\n\nprint(data_nested[\"height\"])\n\"\"\"\n[5.6 6. ]\n\"\"\"\n\nprint(data_nested[\"height\"][1:])\n\"\"\"\n[6.]\n\"\"\"\n\nprint(data_nested[data_nested[\"info\"][\"age\"] &gt; 26])\n\"\"\"\n[((b'Bob', 30), 6.)]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#reshape","title":"\u6570\u7ec4\u91cd\u5851(reshape)","text":"<p>\u5373\u6539\u53d8\u6570\u7ec4\u7684\u5f62\u72b6\uff0c\u9700\u6ce8\u610f**\u6539\u53d8\u5f62\u72b6\u540e\u7684\u6570\u7ec4size\u5fc5\u987b\u4e0e\u539f\u6570\u7ec4size\u76f8\u540c**</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#reshape_1","title":"reshape\u65b9\u6cd5","text":"<p><code>ndarray.reshape(shape, order='C')</code></p> <ol> <li> <p>shape: \u65b0\u5f62\u72b6\uff0c\u53c2\u6570\u7684\u5143\u7d20\u53ef\u4f5c\u4e3a\u5355\u72ec\u7684\u53c2\u6570\u4f20\u5165</p> </li> <li> <p>order: \u8bfb\u53d6\u53ca\u5199\u5165\u7684\u987a\u5e8f\u3002\u53ef\u9009\"C\"\uff08\u6309\u884c\uff0c\u9ed8\u8ba4\uff09\u3001\"F\"\uff08\u6309\u5217\uff09</p> </li> </ol> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn1 = n0.reshape(3, 4)\nprint(n1)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\nn2 = n0.reshape([3, 4])\nprint(n2)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\nn3 = n0.reshape(3, 4, order=\"F\")\nprint(n3)\n\"\"\"\n[[ 0  3  6  9]\n [ 1  4  7 10]\n [ 2  5  8 11]]\n\"\"\"\n\nn4 = n3.reshape(2, 6, order=\"C\")\nprint(n4)\n\"\"\"\n[[ 0  3  6  9  1  4]\n [ 7 10  2  5  8 11]]\n\"\"\"\n\nn5 = n3.reshape(2, 6, order=\"F\")\nprint(n5)\n\"\"\"\n[[ 0  2  4  6  8 10]\n [ 1  3  5  7  9 11]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#reshape_2","title":"reshape\u51fd\u6570","text":"<p><code>reshape(a, newshape, order='C')</code></p> <ol> <li> <p>a: \u539f\u6570\u7ec4</p> </li> <li> <p>newshape: \u540c\u4e0a\uff0c\u4f46\u53c2\u6570\u7684\u5143\u7d20\u4e0d\u53ef\u4f5c\u4e3a\u5355\u72ec\u7684\u53c2\u6570\u4f20\u5165</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn6 = np.reshape(n0, [3, 4])\nprint(n6)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#transpose","title":"\u6570\u7ec4\u8f6c\u7f6e(transpose)","text":"<p>\u5373\u884c\u5217\u8f6c\u6362</p> <ol> <li> <p>\u4e00\u7ef4\u6570\u7ec4\u8f6c\u7f6e\u540e\u4ecd\u4e3a\u539f\u6570\u7ec4</p> </li> <li> <p>\u4e8c\u7ef4\u6570\u7ec4\u8f6c\u7f6e\u540e\u5373\u4e24\u4e2a\u8f74\u4e92\u6362</p> </li> <li> <p>\u4e09\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4\u8f6c\u7f6e\u53ef\u81ea\u5b9a\u4e49\u8f74\u7684\u987a\u5e8f</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#t","title":"T\u5c5e\u6027","text":"<p><code>ndarray.T</code></p> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn1 = np.arange(12).reshape(3, 4)\nprint(n1)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\nn2 = n0.T\nprint(n2)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn3 = n1.T\nprint(n3)\n\"\"\"\n[[ 0  4  8]\n [ 1  5  9]\n [ 2  6 10]\n [ 3  7 11]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#transpose_1","title":"transpose\u65b9\u6cd5","text":"<p><code>ndarray.transpose(*axes)</code></p> <ol> <li>axes: \u5373\u8f74\u7684\u987a\u5e8f\u3002\u8f74i\u5728\u7b2cj\u4e2a\u4f4d\u7f6e\uff0c\u8868\u793a\u5c06\u539f\u6570\u7ec4\u7684\u8f74i\u53d8\u4e3a\u8f6c\u7f6e\u6570\u7ec4\u7684\u8f74j\u3002\u82e5\u672a\u6307\u5b9a\uff0c\u5219\u76f4\u63a5\u9006\u8f6c\u8f74\u7684\u987a\u5e8f</li> </ol> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn1 = np.arange(12).reshape(3, 4)\nprint(n1)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\nn4 = n0.transpose()\nprint(n4)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn5 = n1.transpose()\nprint(n5)\n\"\"\"\n[[ 0  4  8]\n [ 1  5  9]\n [ 2  6 10]\n [ 3  7 11]]\n\"\"\"\n\nn6 = np.ones([3, 4, 5])    # \u8f740\u5927\u5c0f\u4e3a3\uff0c\u8f741\u5927\u5c0f\u4e3a4\uff0c \u8f742\u5927\u5c0f\u4e3a5\nprint(n6, n6.shape)\n\"\"\"\n[[[1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]]\n\n [[1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]]\n\n [[1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]]] (3, 4, 5)\n\"\"\"\n\n\nn7 = n6.transpose(2, 0, 1)    # \u8f742\u53d8\u8f740\uff0c\u73b0\u8f740\u5927\u5c0f\u4e3a5\uff1b\u8f740\u53d8\u8f741\uff0c\u73b0\u8f741\u5927\u5c0f\u4e3a3\uff1b\u8f741\u53d8\u8f742\uff0c\u73b0\u8f742\u5927\u5c0f\u4e3a4\nprint(n7, n7.shape)\n\"\"\"\n[[[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]] (5, 3, 4)\n\"\"\"\n\nn8 = n6.transpose()    # \u76f4\u63a5\u9006\u8f6c\u8f74\u7684\u987a\u5e8f\uff0c\u8f742\u53d8\u8f740\uff0c\u8f741\u53d8\u8f741\uff0c\u8f740\u53d8\u8f742\nprint(n8, n8.shape)\n\"\"\"\n[[[1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]]\n\n [[1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]]\n\n [[1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]]\n\n [[1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]]\n\n [[1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]]] (5, 4, 3)\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#transpose_2","title":"transpose\u51fd\u6570","text":"<p><code>transpose(a, axes=None)</code></p> <ol> <li> <p>a: \u539f\u6570\u7ec4</p> </li> <li> <p>axes: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn1 = np.arange(12).reshape(3, 4)\nprint(n1)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\nn9 = np.transpose(n0)\nprint(n9)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn10 = np.transpose(n1)\nprint(n10)\n\"\"\"\n[[ 0  4  8]\n [ 1  5  9]\n [ 2  6 10]\n [ 3  7 11]]\n\"\"\"\n\nn11 = np.transpose(np.ones([3, 4, 5]), axes=[2, 0, 1])\nprint(n11, n11.shape)\n\"\"\"\n[[[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]] (5, 3, 4)\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_10","title":"\u6570\u7ec4\u62fc\u63a5","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#concatenate","title":"concatenate\u51fd\u6570","text":"<p><code>concatenate(arrays, axis=0, out=None, dtype=None, casting=\"same_kind\")</code></p> <ol> <li> <p>arrays: **\u7ef4\u5ea6\uff08ndim\uff09\u76f8\u540c**\u7684\u6570\u7ec4\u5e8f\u5217\u3002\u8fd9\u4e9b\u6570\u7ec4\u9664\u4e86\u6307\u5b9aaxis\u65b9\u5411\uff0c\u5176\u5b83\u8f74\u65b9\u5411\u4e0a\u5927\u5c0f\u5fc5\u987b\u76f8\u540c</p> </li> <li> <p>axis: \u6cbf\u8be5**\u5df2\u6709\u7684\u8f74**\u8fdb\u884c\u62fc\u63a5\uff0c\u4e0d\u4f1a\u4ea7\u751f\u65b0\u7684\u8f74\u3002\u9ed8\u8ba4\u4e3a0\u3002\u82e5axis\u4e3aNone\uff0c\u5219\u6240\u6709\u6570\u7ec4\u5c06\u88ab\u89c6\u4e3a\u4e00\u7ef4\u6570\u7ec4</p> </li> <li> <p>out: \u653e\u7f6e\u7ed3\u679c\u7684\u76ee\u6807\u6570\u7ec4\u3002\u5f62\u72b6\u5fc5\u987b\u4e0e\u62fc\u63a5\u540e\u6570\u7ec4\u7684\u5f62\u72b6\u5339\u914d\u3002out\u6570\u7ec4\u7684\u6570\u636e\u7c7b\u578b\u51b3\u5b9a\u8f93\u51fa\u7ed3\u679c\u7684\u6570\u636e\u7c7b\u578b</p> </li> <li> <p>dtype: \u6570\u636e\u7c7b\u578b\u3002\u540c\u4e0a\u3002\u4e0d\u80fd\u4e0eout\u53c2\u6570\u540c\u65f6\u63d0\u4f9b</p> </li> <li> <p>casting: \u63a7\u5236\u53ef\u80fd\u53d1\u751f\u7684\u6570\u636e\u8f6c\u6362\u7c7b\u578b\u3002\u53ef\u9009'no'\u3001'equiv'\u3001'safe'\u3001'same_kind'\uff08\u9ed8\u8ba4\uff09\u3001'unsafe'</p> </li> </ol> <pre><code># \u4e8c\u7ef4\u6570\u7ec4\nn0 = np.array([[1, 2, 3, 4]])\nn1 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn2 = np.concatenate([n0, n1], axis=0)\nprint(n2)\n\"\"\"\n[[ 1  2  3  4]\n [11 12 13 14]\n [15 16 17 18]]\n\"\"\"\n\nn3 = np.array([[1, 2, 3, 4, 5], [5, 6, 7, 8, 9]])\nn4 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn5 = np.concatenate([n3, n4], axis=1)\nprint(n5)\n\"\"\"\n[[ 1  2  3  4  5 11 12 13 14]\n [ 5  6  7  8  9 15 16 17 18]]\n\"\"\"\n\nn6 = np.array([[1, 2, 3, 4, 5], [5, 6, 7, 8, 9]])\nn7 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn8 = np.concatenate([n6, n7], axis=None)\nprint(n8)\n\"\"\"\n[ 1  2  3  4  5  5  6  7  8  9 11 12 13 14 15 16 17 18]\n\"\"\"\n\nn9 = np.array([[1, 2, 3, 4, 5], [5, 6, 7, 8, 9]])\nn10 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn11 = np.concatenate([n9, n10], axis=1, out=np.ones([2, 9]))\nprint(n11)\n\"\"\"\n[[ 1.  2.  3.  4.  5. 11. 12. 13. 14.]\n [ 5.  6.  7.  8.  9. 15. 16. 17. 18.]]\n\"\"\"\n\n\n\n# \u4e00\u7ef4\u6570\u7ec4\nn12 = np.array([1, 2, 3, 4])\nn13 = np.array([11, 12, 13, 14])\nn14 = np.concatenate([n12, n13], axis=0)    # \u6ce8\u610f\u53ea\u6709\u8f740\uff0c\u4e14\u4e3a\u4e00\u7ef4\u6570\u7ec4\u7684\u5df2\u6709\u8f740\nprint(n14)\n\"\"\"\n[ 1  2  3  4 11 12 13 14]\n\"\"\"\nn15 = np.array([[1, 2, 3, 4]])\nn16 = np.array([[11, 12, 13, 14]])\nn17 = np.concatenate([n15, n16], axis=0)    # \u5747\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u7684\u4e00\u884c\u800c\u975e\u4e00\u7ef4\u6570\u7ec4\uff0c\u8f740\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u7684\u8f740\nprint(n17)\n\"\"\"\n[[ 1  2  3  4]\n [11 12 13 14]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#vstackrow_stack0","title":"vstack\uff08row_stack\uff09\u51fd\u6570\uff1a\u8f740(\u5782\u76f4)\u65b9\u5411","text":"<p><code>vstack(tup, dtype=None, casting=\"same_kind\")</code></p> <p>&lt;=&gt;<code>concatenate(arrays, axis=0)</code>\uff08\u4e00\u7ef4\u6570\u7ec4\u56e0\u65e0\u5782\u76f4\u65b9\u5411\uff0c\u9700\u8f6c\u5316\u4e3a\u4e00\u884c\u4e8c\u7ef4\u6570\u7ec4\uff09</p> <ol> <li> <p>tup: \u6570\u7ec4\u5e8f\u5217\u3002\u8fd9\u4e9b\u6570\u7ec4\u9664\u4e86\u8f740\u65b9\u5411\uff0c\u5176\u5b83\u8f74\u65b9\u5411\u4e0a\u5927\u5c0f\u5fc5\u987b\u76f8\u540c\uff08\u6ce8\u610f\u4e00\u7ef4\u6570\u7ec4\u8f74\u7684\u533a\u522b\uff09</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>casting: \u540c\u4e0a</p> </li> </ol> <pre><code>n18 = np.array([1, 2, 3, 4])\nn19 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn20 = np.vstack([n18, n19])\nprint(n20)\n\"\"\"\n[[ 1  2  3  4]\n [11 12 13 14]\n [15 16 17 18]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#hstack1","title":"hstack\u51fd\u6570\uff1a\u8f741(\u6c34\u5e73)\u65b9\u5411","text":"<p><code>hstack(tup, dtype=None, casting=\"same_kind\")</code></p> <p>\u4e00\u7ef4\u6570\u7ec4: &lt;=&gt;<code>concatenate(arrays, axis=0)</code></p> <p>\u4e8c\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4: &lt;=&gt;<code>concatenate(arrays, axis=1)</code></p> <ol> <li> <p>tup: \u540c\u4e0a\u3002\u8fd9\u4e9b\u6570\u7ec4\u9664\u4e86\u8f741\u65b9\u5411\uff0c\u5176\u5b83\u8f74\u65b9\u5411\u4e0a\u5927\u5c0f\u5fc5\u987b\u76f8\u540c\uff08\u6ce8\u610f\u4e00\u7ef4\u6570\u7ec4\u8f74\u7684\u533a\u522b\uff09</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>casting: \u540c\u4e0a</p> </li> </ol> <pre><code>n21 = np.array([[1, 2, 3, 4, 5], [5, 6, 7, 8, 9]])\nn22 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn23 = np.hstack([n21, n22])\nprint(n23)\n\"\"\"\n[[ 1  2  3  4  5 11 12 13 14]\n [ 5  6  7  8  9 15 16 17 18]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#dstack2","title":"dstack\u51fd\u6570\uff1a\u8f742\u65b9\u5411","text":"<p><code>dstack(tup, dtype=None, casting=\"same_kind\")</code></p> <p>&lt;=&gt;<code>concatenate(arrays, axis=2)</code>\uff08\u53ea\u6709\u4e09\u7ef4\u6570\u7ec4\u6709\u8f742\uff0c\u5747\u9700\u8f6c\u6362\u4e3a\u4e09\u7ef4\u6570\u7ec4\uff09</p> <ol> <li> <p>tup: \u540c\u4e0a\u3002\u8fd9\u4e9b\u6570\u7ec4\u9664\u4e86\u8f742\u65b9\u5411\uff0c\u5176\u5b83\u8f74\u65b9\u5411\u4e0a\u5927\u5c0f\u5fc5\u987b\u76f8\u540c\uff08\u6ce8\u610f\u4e00\u7ef4\u6570\u7ec4\u8f74\u7684\u533a\u522b\uff09</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>casting: \u540c\u4e0a</p> </li> </ol> <pre><code>n24 = np.array([1, 2, 3, 4])\nn25 = np.array([11, 12, 13, 14])\nn26 = np.dstack([n24, n25])\nprint(n26)\n\"\"\"\n[[[ 1 11]\n  [ 2 12]\n  [ 3 13]\n  [ 4 14]]]\n\"\"\"\n\nn27 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nn28 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn29 = np.dstack([n27, n28])\nprint(n29)\n\"\"\"\n[[[ 1 11]\n  [ 2 12]\n  [ 3 13]\n  [ 4 14]]\n\n [[ 5 15]\n  [ 6 16]\n  [ 7 17]\n  [ 8 18]]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#column_stack","title":"column_stack\u51fd\u6570","text":"<p>\u4e00\u7ef4\u6570\u7ec4\u5c06\u88ab\u8f6c\u53d8\u4e3a\u4e00\u5217\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u8fdb\u884c\u6c34\u5e73\u62fc\u63a5</p> <p><code>column_stack(tup)</code></p> <ol> <li>tup: \u540c\u4e0a\u3002\u6ce8\u610f\u5782\u76f4\u65b9\u5411\u4e0a\u5927\u5c0f\u5339\u914d</li> </ol> <pre><code>n30 = np.array([1, 2, 3, 4])\nn31 = np.array([11, 12, 13, 14])\nn32 = np.column_stack([n30, n31])\nprint(n32)\n\"\"\"\n[[ 1 11]\n [ 2 12]\n [ 3 13]\n [ 4 14]]\n\"\"\"\n\nn33 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nn34 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn35 = np.column_stack([n33, n34])\nprint(n35)\n\"\"\"\n[[ 1  2  3  4 11 12 13 14]\n [ 5  6  7  8 15 16 17 18]]\n\"\"\"\n\nn36 = np.array([1, 2])\nn37 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn38 = np.column_stack([n36, n37])\nprint(n38)\n\"\"\"\n[[ 1 11 12 13 14]\n [ 2 15 16 17 18]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_11","title":"\u6570\u7ec4\u5806\u53e0","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#stack","title":"stack\u51fd\u6570","text":"<p><code>stack(arrays, axis=0, out=None, dtype=None, casting=\"same_kind\")</code></p> <ol> <li> <p>arrays: **\u5f62\u72b6\u76f8\u540c**\u7684\u6570\u7ec4\u5e8f\u5217\u3002\u8fd9\u4e9b\u6570\u7ec4\u5f62\u72b6\u5fc5\u987b\u76f8\u540c\uff0c\u56e0\u6240\u6cbf\u7684\u8f74\u4e3a\u4e00\u4e2a\u65b0\u8f74</p> </li> <li> <p>axis: \u6307\u5b9a\u65b0\u8f74\u7684\u7d22\u5f15\uff0c\u5e76\u6cbf\u8be5**\u65b0\u8f74**\u8fdb\u884c\u5806\u53e0\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>out: \u540c\u4e0a</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>casting: \u540c\u4e0a</p> </li> </ol> <pre><code># \u4e00\u7ef4\u6570\u7ec4\nn39 = np.array([1, 2, 3, 4])\nn40 = np.array([11, 12, 13, 14])\nn41 = np.stack([n39, n40], axis=0)    # \u65b0\u8f74\u4e3a\u8f740\uff08\u6b64\u65f6\u6ce8\u610f\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u8f740\uff09\uff0c\u539f\u8f740\u53d8\u4e3a\u8f741\uff0c\u6cbf\u8f740\u5806\u53e0\nprint(n41)\n\"\"\"\n[[ 1  2  3  4]\n [11 12 13 14]]\n\"\"\"\n\nn42 = np.stack([n39, n40], axis=1)    # \u65b0\u8f74\u4e3a\u8f741\uff0c\u539f\u8f740\u4ecd\u4e3a\u8f740\uff08\u6b64\u65f6\u6ce8\u610f\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u8f740\uff09\uff0c\u6cbf\u8f741\u5806\u53e0\nprint(n42)\n\"\"\"\n[[ 1 11]\n [ 2 12]\n [ 3 13]\n [ 4 14]]\n\"\"\"\n\n\n\n# \u4e8c\u7ef4\u6570\u7ec4\nn43 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nn44 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn45 = np.stack([n43, n44], axis=0)    # \u65b0\u8f74\u4e3a\u8f740\uff0c\u539f\u8f740\u53d8\u4e3a\u8f741\uff0c\u539f\u8f741\u53d8\u4e3a\u8f742\uff0c\u6cbf\u8f740\u5806\u53e0\nprint(n45)\n\"\"\"\n[[[ 1  2  3  4]\n  [ 5  6  7  8]]\n\n [[11 12 13 14]\n  [15 16 17 18]]]\n\"\"\"\n\nn46 = np.stack([n43, n44], axis=1)    # \u65b0\u8f74\u4e3a\u8f741\uff0c\u539f\u8f740\u4ecd\u4e3a\u8f740\uff0c\u539f\u8f741\u53d8\u4e3a\u8f742\uff0c\u6cbf\u8f740\u5806\u53e0\nprint(n46)\n\"\"\"\n[[[ 1  2  3  4]\n  [11 12 13 14]]\n\n [[ 5  6  7  8]\n  [15 16 17 18]]]\n\"\"\"\n\nn47 = np.stack([n43, n44], axis=2)    # \u65b0\u8f74\u4e3a\u8f742\uff0c\u539f\u8f740\u4ecd\u4e3a\u8f740\uff0c\u539f\u8f741\u4ecd\u4e3a\u8f741\uff0c\u6cbf\u8f742\u5806\u53e0\nprint(n47)\n\"\"\"\n[[[ 1 11]\n  [ 2 12]\n  [ 3 13]\n  [ 4 14]]\n\n [[ 5 15]\n  [ 6 16]\n  [ 7 17]\n  [ 8 18]]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_12","title":"\u6570\u7ec4\u62c6\u5206","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#split","title":"split\u51fd\u6570","text":"<p><code>split(ary, indices_or_sections, axis=0)</code></p> <ol> <li> <p>ary: \u5f85\u62c6\u5206\u7684\u6570\u7ec4</p> </li> <li> <p>indices_or_sections: \u6574\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49\u3002\u5982\u679c\u662f\u4e00\u4e2a\u6574\u6570N\uff0c\u5c06\u6cbf\u8f74\u62c6\u5206\u6210N\u4e2a\u76f8\u7b49\u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u82e5\u4e0d\u80fd\u76f8\u7b49\u5c06\u62a5\u9519\uff1b\u5982\u679c\u4e3a\u5217\u8868\u3001\u6570\u7ec4\u7b49\uff0c\u5143\u7d20\u8868\u793a\u62c6\u5206\u7684\u4f4d\u7f6e\uff0c\u5982[2, 3]\u8868\u793a\u62c6\u5206\u4e3aary[:2]\u3001ary[2:3]\u3001ary[3:]\uff0c\u82e5\u8d85\u51fa\u7d22\u5f15\u5c06\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u5b50\u6570\u7ec4</p> </li> <li> <p>axis: \u62c6\u5206\u65f6\u6cbf\u7684\u8f74\u3002\u9ed8\u8ba4\u4e3a0</p> </li> </ol> <pre><code>n0 = np.arange(15)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14]\n\"\"\"\n\nn1 = np.split(n0, 5)\nprint(n1)\n\"\"\"\n[array([0, 1, 2]), array([3, 4, 5]), array([6, 7, 8]), array([ 9, 10, 11]), array([12, 13, 14])]\n\"\"\"\n\nn2 = np.split(n0, [3, 6, 7, 18])\nprint(n2)\n\"\"\"\n[array([0, 1, 2]), array([3, 4, 5]), array([6]), array([ 7,  8,  9, 10, 11, 12, 13, 14]), array([], dtype=int32)]\n\"\"\"\n\nn3 = np.arange(24).reshape([4, 6])\nprint(n3)\n\"\"\"\n[[ 0  1  2  3  4  5]\n [ 6  7  8  9 10 11]\n [12 13 14 15 16 17]\n [18 19 20 21 22 23]]\n\"\"\"\n\nn4 = np.split(n3, 2, axis=0)\nprint(n4)\n\"\"\"\n[array([[ 0,  1,  2,  3,  4,  5],\n       [ 6,  7,  8,  9, 10, 11]]), \n array([[12, 13, 14, 15, 16, 17],\n       [18, 19, 20, 21, 22, 23]])]\n\"\"\"\n\nn5 = np.split(n3, 2, axis=1)\nprint(n5)\n\"\"\"\n[array([[ 0,  1,  2],\n       [ 6,  7,  8],\n       [12, 13, 14],\n       [18, 19, 20]]), \n array([[ 3,  4,  5],\n       [ 9, 10, 11],\n       [15, 16, 17],\n       [21, 22, 23]])]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#vsplit0","title":"vsplit\u51fd\u6570\uff1a\u8f740\u65b9\u5411\u6216\u5782\u76f4\u65b9\u5411","text":"<p>\u4ec5\u7528\u4e8e\u4e8c\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4</p> <p><code>vsplit(ary, indices_or_sections)</code></p> <p>&lt;=&gt;<code>split(ary, indices_or_sections, axis=0)</code></p> <pre><code>n6 = np.arange(24).reshape([4, 6])\nprint(n6)\n\"\"\"\n[[ 0  1  2  3  4  5]\n [ 6  7  8  9 10 11]\n [12 13 14 15 16 17]\n [18 19 20 21 22 23]]\n\"\"\"\n\nn7 = np.vsplit(n6, 2)\nprint(n7)\n\"\"\"\n[array([[ 0,  1,  2,  3,  4,  5],\n       [ 6,  7,  8,  9, 10, 11]]), \n array([[12, 13, 14, 15, 16, 17],\n       [18, 19, 20, 21, 22, 23]])]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#hsplit1","title":"hsplit\u51fd\u6570\uff1a\u8f741\u65b9\u5411\u6216\u6c34\u5e73\u65b9\u5411","text":"<p>\u4e00\u7ef4\u6570\u7ec4\u6cbf\u8f740\u65b9\u5411\uff0c\u4e8c\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4\u6cbf\u8f741\u65b9\u5411</p> <p><code>hsplit(ary, indices_or_sections)</code></p> <p>\u4e00\u7ef4\u6570\u7ec4\uff1a&lt;=&gt;<code>split(ary, indices_or_sections, axis=0)</code></p> <p>\u4e8c\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4\uff1a&lt;=&gt;<code>split(ary, indices_or_sections, axis=1)</code></p> <pre><code>n8 = np.arange(15)\nprint(n8)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14]\n\"\"\"\n\nn9 = np.hsplit(n8, 5)\nprint(n9)\n\"\"\"\n[array([0, 1, 2]), array([3, 4, 5]), array([6, 7, 8]), array([ 9, 10, 11]), array([12, 13, 14])]\n\"\"\"\n\nn01 = np.arange(24).reshape([4, 6])\nprint(n10)\n\"\"\"\n[[ 0  1  2  3  4  5]\n [ 6  7  8  9 10 11]\n [12 13 14 15 16 17]\n [18 19 20 21 22 23]]\n\"\"\"\n\nn11 = np.hsplit(n10, 2)\nprint(n11)\n\"\"\"\n[array([[ 0,  1,  2],\n       [ 6,  7,  8],\n       [12, 13, 14],\n       [18, 19, 20]]), \n array([[ 3,  4,  5],\n       [ 9, 10, 11],\n       [15, 16, 17],\n       [21, 22, 23]])]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#dsplit2","title":"dsplit\u51fd\u6570\uff1a\u8f742\u65b9\u5411","text":"<p>\u4ec5\u7528\u4e8e\u4e09\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4</p> <p><code>dsplit(ary, indices_or_sections)</code></p> <p>&lt;=&gt;<code>split(ary, indices_or_sections, axis=2)</code></p> <pre><code>n12 = np.arange(16).reshape([2, 2, 4])\nprint(n12)\n\"\"\"\n[[[ 0  1  2  3]\n  [ 4  5  6  7]]\n\n [[ 8  9 10 11]\n  [12 13 14 15]]]\n\"\"\"\n\nn13 = np.dsplit(n12, 2)\nprint(n13)\n\"\"\"\n[array([[[ 0,  1],\n        [ 4,  5]],\n\n       [[ 8,  9],\n        [12, 13]]]), \n array([[[ 2,  3],\n        [ 6,  7]],\n\n       [[10, 11],\n        [14, 15]]])]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#array_split","title":"array_split\u51fd\u6570","text":"<p>\u4e0esplit\u51fd\u6570\u7c7b\u4f3c\uff0c\u533a\u522b\u662f\u5f53\u4e0d\u80fd\u5206\u6210\u76f8\u7b49\u5927\u5c0f\u7684\u5b50\u6570\u7ec4\u65f6\u4e0d\u4f1a\u62a5\u9519</p> <p><code>array_split(ary, indices_or_sections, axis=0)</code></p> <ol> <li> <p>ary: \u540c\u4e0a</p> </li> <li> <p>indices_or_sections: \u540c\u4e0a\u3002\u5728\u67d0\u4e00\u8f74\u4e0a\uff0c\u957f\u5ea6\u4e3aL\uff0c\u62c6\u5206\u6210N\u4e2a\u90e8\u5206\uff0c\u8fd4\u56deL%N\u4e2a\u8be5\u8f74\u4e0a\u957f\u5ea6\u4e3aL//N+1\u7684\u5b50\u6570\u7ec4\uff0c\u5176\u4f59\u5b50\u6570\u7ec4\u8be5\u8f74\u4e0a\u957f\u5ea6\u4e3aL//N</p> </li> <li> <p>axis: \u540c\u4e0a</p> </li> </ol> <pre><code>n14 = np.arange(15)\nprint(n14)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14]\n\"\"\"\n\nn15 = np.array_split(n14, 4)    #15%4=3\u4e2a\u957f\u5ea6\u4e3a15//4+1=4\u7684\u5b50\u6570\u7ec4\u548c4-3=1\u4e2a\u957f\u5ea6\u4e3a15//4=3\u7684\u5b50\u6570\u7ec4\nprint(n15)\n\"\"\"\n[array([0, 1, 2, 3]), array([4, 5, 6, 7]), array([ 8,  9, 10, 11]), array([12, 13, 14])]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_13","title":"\u6570\u7ec4\u5220\u9664","text":"<p>\u7b80\u5355\u7684\u65b9\u5f0f\u53ef\u901a\u8fc7\u7d22\u5f15\u548c\u5207\u7247\u9009\u53d6\u6240\u9700\u6570\u7ec4\u6216\u5143\u7d20\u5373\u53ef</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#delete","title":"delete\u51fd\u6570","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u5220\u9664\u4e86\u539f\u6570\u7ec4\u6cbf\u6307\u5b9a\u8f74\u6307\u5b9a\u7d22\u5f15\u7684\u6570\u7ec4</p> <p><code>delete(arr, obj, axis=None)</code></p> <ol> <li> <p>arr: \u5f85\u5220\u9664\u6570\u636e\u7684\u6570\u7ec4</p> </li> <li> <p>obj: \u6307\u5b9a\u6cbfaxis\u8981\u5220\u9664\u7684\u7d22\u5f15</p> </li> <li> <p>axis: \u6307\u5b9a\u5220\u9664\u65f6\u6240\u6cbf\u7684\u8f74\u3002\u82e5axis\u4e3aNone\uff0c\u5219\u5c06\u6570\u7ec4\u6574\u4f53\u89c6\u4e3a\u4e00\u7ef4\u6570\u7ec4\uff0c\u8fd4\u56de\u7ed3\u679c\u4e5f\u4e3a\u4e00\u7ef4\u6570\u7ec4</p> </li> </ol> <pre><code>n0 = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [11, 12, 13, 14], [15, 16, 17, 18]])\nprint(n0)\n\"\"\"\n[[ 1  2  3  4]\n [ 5  6  7  8]\n [11 12 13 14]\n [15 16 17 18]]\n\"\"\"\n\nn1 = np.delete(n0, 1, axis=0)    # \u5220\u9664\u7b2c2\u884c\nprint(n1)\n\"\"\"\n[[ 1  2  3  4]\n [11 12 13 14]\n [15 16 17 18]]\n\"\"\"\n\nn2 = np.delete(n0, 1, axis=1)    # \u5220\u9664\u7b2c2\u5217\nprint(n2)\n\"\"\"\n[[ 1  3  4]\n [ 5  7  8]\n [11 13 14]\n [15 17 18]]\n\"\"\"\n\nn3 = np.delete(n0, [0, 2], axis=1)    # \u5220\u9664\u7b2c1\u548c\u7b2c3\u5217\nprint(n3)\n\"\"\"\n[[ 2  4]\n [ 6  8]\n [12 14]\n [16 18]]\n\"\"\"\n\nn4 = np.delete(n0, [1, 3, 5, 7], axis=None)    # \u5220\u9664\u7b2c2\u30014\u30016\u30018\u4e2a\nprint(n4)\n\"\"\"\n[ 1  3  5  7 11 12 13 14 15 16 17 18]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_14","title":"\u6570\u7ec4\u4fee\u6539","text":"<p>\u76f4\u63a5\u7d22\u5f15\u6216\u5207\u7247\u540e\u8d4b\u503c\u5373\u53ef</p> <pre><code>n0 = np.arange(12).reshape(3, 4)\nprint(n0)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\nn0[2] = 20\nprint(n0)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [20 20 20 20]]\n\"\"\"\n\nn0[1, 2] = 60\nprint(n0)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5 60  7]\n [20 20 20 20]]\n\"\"\"\n\nn0[:2, 2:] = [[20, 30], [600, 70]]\nprint(n0)\n\"\"\"\n[[  0   1  20  30]\n [  4   5 600  70]\n [ 20  20  20  20]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_15","title":"\u6570\u7ec4\u67e5\u8be2","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#where","title":"where\u51fd\u6570","text":"<p><code>where(condition, x=None, y=None)</code></p> <ol> <li> <p>condition: \u6761\u4ef6\u3002\u5f53\u53ea\u6709\u8be5\u53c2\u6570\u65f6\uff0c\u7ed3\u679c\u8fd4\u56de\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\u6570\u7ec4\u5143\u7ec4</p> </li> <li> <p>x: \u5355\u4e00\u503c\u6216\u6570\u7ec4\u3002\u6761\u4ef6\u4e3aTrue\u7684\u503c\u7528x\u6216x\u4e2d\u5bf9\u5e94\u7684\u503c\u66ff\u6362\u3002\u9075\u5faa\u5e7f\u64ad\u673a\u5236</p> </li> <li> <p>y: \u5355\u4e00\u6570\u503c\u6216\u6570\u7ec4\u3002\u6761\u4ef6\u4e3aFalse\u7684\u503c\u7528y\u6216y\u4e2d\u5bf9\u5e94\u7684\u503c\u66ff\u6362\u3002\u9075\u5faa\u5e7f\u64ad\u673a\u5236</p> </li> </ol> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn1 = np.where(n0 &gt;= 5)\nprint(n1)\n\"\"\"\n(array([ 5,  6,  7,  8,  9, 10, 11], dtype=int64),)\n\"\"\"\n\nn1 = np.where(n0 &gt;= 5, n0, n0+5)\nprint(n1)\n\"\"\"\n[ 5  6  7  8  9  5  6  7  8  9 10 11]\n\"\"\"\n\nn2 = np.where(n0 &gt;= 5, 1, 0)\nprint(n2)\n\"\"\"\n[0 0 0 0 0 1 1 1 1 1 1 1]\n\"\"\"\n\nn3 = np.array([[0], [1], [2]])\nprint(n3)\n\"\"\"\n[[0]\n [1]\n [2]]\n\"\"\"\n\nn4 = np.array([0, 1, 2, 3])\nprint(n4)\n\"\"\"\n[0 1 2 3]\n\"\"\"\n\nn5 = np.where(n3 &lt; n4, 2 * n3, 10 + n4)\nprint(n5)\n\"\"\"\n[[10  0  0  0]\n [10 11  2  2]\n [10 11 12  4]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_16","title":"\u5bf9\u89d2\u63d0\u53d6","text":"<p>\u81f3\u5c11\u662f\u4e8c\u7ef4\u6570\u7ec4</p> <p>\u4e8c\u7ef4\u6570\u7ec4\uff1a\u76f4\u63a5\u63d0\u53d6\u5bf9\u89d2\uff0c\u5373a[i, i+offset]\uff08\u6ce8\u610f\u8f74\u7684\u6539\u53d8\uff09</p> <p>\u591a\u7ef4\u6570\u7ec4\uff1a\u5148\u6839\u636eaxis1\u548caxis2\u63d0\u53d6\u51fa\u591a\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u518d\u63d0\u53d6\u6bcf\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u7684\u5bf9\u89d2</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#diagonal","title":"diagonal\u65b9\u6cd5","text":"<p><code>ndarray.diagonal(offset=0, axis1=0, axis2=1)</code></p> <ol> <li> <p>offset: \u76f8\u5bf9\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u7684\u504f\u79fb\u91cf\u6216\u8005\u5bf9\u89d2\u7ebf\u7d22\u5f15\u3002\u9ed8\u8ba4\u4e3a0\uff0c\u5373\u4e3b\u5bf9\u89d2\u7ebf\uff1b+\u8868\u793a\u4e0a\u65b9\u5bf9\u89d2\u7ebf\uff0c-\u8868\u793a\u4e0b\u65b9\u5bf9\u89d2\u7ebf</p> </li> <li> <p>axis1: \u4f5c\u4e3a\u63d0\u53d6\u51fa\u7684\u4e8c\u7ef4\u6570\u7ec4\u7684\u8f740</p> </li> <li> <p>axis2: \u4f5c\u4e3a\u63d0\u53d6\u51fa\u7684\u4e8c\u7ef4\u6570\u7ec4\u7684\u8f741</p> </li> </ol> <pre><code># \u4e8c\u7ef4\u6570\u7ec4\nn0 = np.random.randint(1, 10, size=(5, 9))\nprint(n0)\n\"\"\"\n[[3 4 9 9 5 7 9 3 4]\n [3 7 1 5 8 6 2 5 9]\n [8 2 5 3 8 1 7 6 7]\n [3 5 4 2 3 5 5 2 6]\n [5 8 1 4 6 7 1 5 1]]\n\"\"\"\n\nn1 = n0.diagonal()\nprint(n1)\n\"\"\"\n[3 7 5 2 6]\n\"\"\"\n\nn2 = n0.diagonal(offset=1)\nprint(n2)\n\"\"\"\n[4 1 3 3 7]\n\"\"\"\n\nn3 = n0.diagonal(offset=-1)\nprint(n3)\n\"\"\"\n[3 2 4 4]\n\"\"\"\n\nn4 = n0.diagonal(offset=1, axis1=0, axis2=1)\nprint(n4)\n\"\"\"\n[4 1 3 3 7]\n\"\"\"\n\nn5 = n0.diagonal(offset=1, axis1=1, axis2=0)\nprint(n5)\n\"\"\"\n[3 2 4 4]\n\"\"\"\n\n\n\n# \u4e09\u7ef4\u6570\u7ec4\nn6 = np.random.randint(1, 10, size=(3, 4, 5))\nprint(n6)\n\"\"\"\n[[[4 9 6 8 8]\n  [4 6 3 4 4]\n  [6 8 4 2 7]\n  [3 3 6 8 5]]\n\n [[8 3 1 8 6]\n  [1 6 5 1 1]\n  [9 1 3 1 4]\n  [7 3 5 8 8]]\n\n [[1 1 4 1 7]\n  [2 1 6 3 6]\n  [4 5 6 9 9]\n  [1 5 5 7 4]]]\n\"\"\"\n\nn7 = n6.diagonal(axis1=2, axis2=1)\nprint(n7)\n\"\"\"\n[[4 6 4 8]\n [8 6 3 8]\n [1 1 6 7]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#diagonal_1","title":"diagonal\u51fd\u6570","text":"<p><code>diagonal(a, offset=0, axis1=0, axis2=1)</code></p> <ol> <li> <p>a: \u5f85\u63d0\u53d6\u7684\u6570\u7ec4\uff0c\u81f3\u5c11\u4e3a\u4e8c\u7ef4\u6570\u7ec4</p> </li> <li> <p>offset: \u540c\u4e0a</p> </li> <li> <p>axis1: \u540c\u4e0a</p> </li> <li> <p>axis2: \u540c\u4e0a</p> </li> </ol> <pre><code># \u4e8c\u7ef4\u6570\u7ec4\nn8 = np.random.randint(1, 10, size=(5, 9))\nprint(n8)\n\"\"\"\n[[7 4 3 7 1 2 3 1 4]\n [7 1 9 1 1 9 8 3 4]\n [3 8 4 8 2 8 3 4 4]\n [2 3 9 2 2 3 1 5 1]\n [5 5 2 2 7 4 9 7 3]]\n\"\"\"\n\nn9 = np.diagonal(n8)\nprint(n9)\n\"\"\"\n[7 1 4 2 7]\n\"\"\"\n\n\n\n# \u4e09\u7ef4\u6570\u7ec4\nn10 = np.random.randint(1, 10, size=(3, 4, 5))\nprint(n10)\n\"\"\"\n[[[2 2 9 2 6]\n  [2 2 4 5 5]\n  [9 2 1 5 3]\n  [8 5 7 3 9]]\n\n [[3 4 4 1 4]\n  [4 9 5 9 7]\n  [5 8 6 4 1]\n  [9 6 6 3 2]]\n\n [[2 1 1 6 3]\n  [4 6 6 4 7]\n  [8 9 2 5 9]\n  [1 8 7 8 9]]]\n\"\"\"\n\nn11 = np.diagonal(n10, axis1=2, axis2=1)\nprint(n11)\n\"\"\"\n[[2 2 1 3]\n [3 9 6 3]\n [2 6 2 8]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#diag","title":"diag\u51fd\u6570","text":"<p>\u89c1\u6570\u7ec4\u7684\u5bf9\u89d2\u521b\u5efa</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_17","title":"\u5bf9\u89d2\u4fee\u6539","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#fill_diagonal","title":"fill_diagonal\u51fd\u6570","text":"<p>\u4e3b\u5bf9\u89d2\u7ebf**a[i, i, ..., i]\u88ab\u4fee\u6539\u4e3aval\uff0c\u65e0\u8fd4\u56de\u503c\uff0c**\u76f4\u63a5\u4fee\u6539\u539f\u6570\u7ec4</p> <p><code>fill_diagonal(a, val, wrap=False)</code></p> <ol> <li> <p>a: \u5f85\u4fee\u6539\u6570\u7ec4\uff0c\u81f3\u5c11\u662f\u4e8c\u7ef4\u6570\u7ec4\u3002\u5bf9\u4e8e**\u591a\u7ef4\u6570\u7ec4\uff0c\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u5927\u5c0f\u5fc5\u9700\u90fd\u76f8\u540c**</p> </li> <li> <p>val: \u5982\u679cval\u662f\u5355\u4e00\u6570\u503c\uff0c\u8be5\u503c\u6cbf\u7740\u4e3b\u5bf9\u89d2\u7ebf\u91cd\u590d\u5199\u5165\uff1b\u5982\u679c\u4e3a\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u88ab\u8f6c\u5316\u4e3a\u4e00\u7ef4\u6570\u7ec4\u540e\u91cd\u590d\u5199\u5165\u4e3b\u5bf9\u89d2\u7ebf</p> </li> <li> <p>wrap: \u6ea2\u51fa\u662f\u5426\u6362\u884c\uff08\u4e00\u822c\u53ea\u6709\u9ad8\u7684\u4e8c\u7ef4\u6570\u7ec4\u4f1a\u6ea2\u51fa\uff09\u3002\u9ed8\u8ba4\u4e3aFalse</p> </li> </ol> <pre><code># \u4e8c\u7ef4\u6570\u7ec4\nn0 = np.zeros([10, 5])\nprint(n0)\n\"\"\"\n[[0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]]\n\"\"\"\n\nnp.fill_diagonal(n0, 5)\nprint(n0)\n\"\"\"\n[[5. 0. 0. 0. 0.]\n [0. 5. 0. 0. 0.]\n [0. 0. 5. 0. 0.]\n [0. 0. 0. 5. 0.]\n [0. 0. 0. 0. 5.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]]\n\"\"\"\n\nnp.fill_diagonal(n0, [1, 2, 3])\nprint(n0)\n\"\"\"\n[[1. 0. 0. 0. 0.]\n [0. 2. 0. 0. 0.]\n [0. 0. 3. 0. 0.]\n [0. 0. 0. 1. 0.]\n [0. 0. 0. 0. 2.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]]\n\"\"\"\n\nnp.fill_diagonal(n0, [[5, 6], [7, 8]])\nprint(n0)\n\"\"\"\n[[5. 0. 0. 0. 0.]\n [0. 6. 0. 0. 0.]\n [0. 0. 7. 0. 0.]\n [0. 0. 0. 8. 0.]\n [0. 0. 0. 0. 5.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]]\n\"\"\"\n\nnp.fill_diagonal(n0, 5, wrap=True)\nprint(n0)\n\"\"\"\n[[5. 0. 0. 0. 0.]\n [0. 5. 0. 0. 0.]\n [0. 0. 5. 0. 0.]\n [0. 0. 0. 5. 0.]\n [0. 0. 0. 0. 5.]\n [0. 0. 0. 0. 0.]\n [5. 0. 0. 0. 0.]\n [0. 5. 0. 0. 0.]\n [0. 0. 5. 0. 0.]\n [0. 0. 0. 5. 0.]]\n\"\"\"\n\n\n\n# \u4e09\u7ef4\u6570\u7ec4\nn1 = np.zeros([4, 4, 4])\nprint(n1)\n\"\"\"\n[[[0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]]\n\n [[0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]]\n\n [[0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]]\n\n [[0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]]]\n\"\"\"\n\nnp.fill_diagonal(n1, 5)\nprint(n1)\n\"\"\"\n[[[5. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]]\n\n [[0. 0. 0. 0.]\n  [0. 5. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]]\n\n [[0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 5. 0.]\n  [0. 0. 0. 0.]]\n\n [[0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 5.]]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_18","title":"\u5bf9\u89d2\u4e09\u89d2\u63d0\u53d6","text":"<p>\u4e00\u7ef4\u6570\u7ec4\uff1a\u5148\u6269\u5c55\u4e3a\u8f740\u548c\u8f741\u76f8\u540c\u5927\u5c0f\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u518d\u63d0\u53d6\u63d0\u53d6\u6307\u5b9a\u5bf9\u89d2\u7ebf\u4ee5\u4e0a\u6216\u4ee5\u4e0b\u90e8\u5206</p> <p>\u4e8c\u7ef4\u6570\u7ec4\uff1a\u63d0\u53d6\u6307\u5b9a\u5bf9\u89d2\u7ebf\u4ee5\u4e0a\u6216\u4ee5\u4e0b\u90e8\u5206\uff0c\u5176\u4f59\u90e8\u5206\u4e3a0</p> <p>\u591a\u7ef4\u6570\u7ec4\uff1a\u4ee5\u6700\u540e\u4e24\u4e2a\u8f74\u63d0\u53d6\u51fa\u591a\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u518d\u63d0\u53d6\u6bcf\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u6307\u5b9a\u5bf9\u89d2\u7ebf\u4ee5\u4e0a\u6216\u4ee5\u4e0b\u90e8\u5206</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#trillower","title":"tril\u51fd\u6570\uff1a\u5bf9\u89d2\u7ebf\u4ee5\u4e0b(lower)","text":"<p><code>tril(m, k=0)</code></p> <ol> <li> <p>m: \u5f85\u63d0\u53d6\u6570\u7ec4</p> </li> <li> <p>k: \u540coffset</p> </li> </ol> <pre><code># \u4e00\u7ef4\u6570\u7ec4\nn0 = np.arange(1, 10)\nprint(n0)\n\"\"\"\n[1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nn1 = np.tril(n0)\nprint(n1)\n\"\"\"\n[[1 0 0 0 0 0 0 0 0]\n [1 2 0 0 0 0 0 0 0]\n [1 2 3 0 0 0 0 0 0]\n [1 2 3 4 0 0 0 0 0]\n [1 2 3 4 5 0 0 0 0]\n [1 2 3 4 5 6 0 0 0]\n [1 2 3 4 5 6 7 0 0]\n [1 2 3 4 5 6 7 8 0]\n [1 2 3 4 5 6 7 8 9]]\n\"\"\"\n\n\n\n# \u4e8c\u7ef4\u6570\u7ec4\nn2 = np.random.randint(1, 10, size=(4, 5))\nprint(n2)\n\"\"\"\n[[4 3 2 9 1]\n [2 3 1 9 7]\n [8 9 3 4 1]\n [7 4 6 7 5]]\n\"\"\"\n\nn3 = np.tril(n2)\nprint(n3)\n\"\"\"\n[[4 0 0 0 0]\n [2 3 0 0 0]\n [8 9 3 0 0]\n [7 4 6 7 0]]\n\"\"\"\n\n\n\n# \u4e09\u7ef4\u6570\u7ec4\nn4 = np.random.randint(1, 10, size=(4, 5, 6))\nprint(n4)\n\"\"\"\n[[[3 6 8 8 4 5]\n  [4 8 1 8 5 3]\n  [7 1 7 7 6 8]\n  [7 5 7 4 4 6]\n  [4 2 1 5 9 5]]\n\n [[5 8 6 1 1 5]\n  [7 5 1 7 4 5]\n  [4 9 2 9 1 3]\n  [9 4 3 5 4 5]\n  [7 3 7 2 6 4]]\n\n [[9 9 7 4 1 7]\n  [9 4 4 9 7 8]\n  [5 8 4 9 7 4]\n  [7 7 2 9 3 9]\n  [5 2 8 1 9 1]]\n\n [[6 7 8 8 7 7]\n  [9 9 5 1 5 3]\n  [7 3 3 9 8 1]\n  [7 3 1 2 4 9]\n  [7 1 9 9 7 8]]]\n\"\"\"\n\nn5 = np.tril(n4)\nprint(n5)\n\"\"\"\n[[[3 0 0 0 0 0]\n  [4 8 0 0 0 0]\n  [7 1 7 0 0 0]\n  [7 5 7 4 0 0]\n  [4 2 1 5 9 0]]\n\n [[5 0 0 0 0 0]\n  [7 5 0 0 0 0]\n  [4 9 2 0 0 0]\n  [9 4 3 5 0 0]\n  [7 3 7 2 6 0]]\n\n [[9 0 0 0 0 0]\n  [9 4 0 0 0 0]\n  [5 8 4 0 0 0]\n  [7 7 2 9 0 0]\n  [5 2 8 1 9 0]]\n\n [[6 0 0 0 0 0]\n  [9 9 0 0 0 0]\n  [7 3 3 0 0 0]\n  [7 3 1 2 0 0]\n  [7 1 9 9 7 0]]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#triuupper","title":"triu\u51fd\u6570\uff1a\u5bf9\u89d2\u7ebf\u4ee5\u4e0a(upper)","text":"<p><code>triu(m, k=0)</code></p> <ol> <li> <p>m: \u5f85\u63d0\u53d6\u6570\u7ec4</p> </li> <li> <p>k: \u540coffset</p> </li> </ol> <pre><code># \u4e00\u7ef4\u6570\u7ec4\nn5 = np.arange(1, 10)\nprint(n5)\n\"\"\"\n[1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nn6 = np.triu(n5)\nprint(n6)\n\"\"\"\n[[1 2 3 4 5 6 7 8 9]\n [0 2 3 4 5 6 7 8 9]\n [0 0 3 4 5 6 7 8 9]\n [0 0 0 4 5 6 7 8 9]\n [0 0 0 0 5 6 7 8 9]\n [0 0 0 0 0 6 7 8 9]\n [0 0 0 0 0 0 7 8 9]\n [0 0 0 0 0 0 0 8 9]\n [0 0 0 0 0 0 0 0 9]]\n\"\"\"\n\n\n\n# \u4e8c\u7ef4\u6570\u7ec4\nn7 = np.random.randint(1, 10, size=(4, 5))\nprint(n7)\n\"\"\"\n[[3 9 7 8 5]\n [5 1 6 8 4]\n [1 6 8 8 1]\n [6 5 6 9 3]]\n\"\"\"\n\nn8 = np.triu(n7)\nprint(n8)\n\"\"\"\n[[3 9 7 8 5]\n [0 1 6 8 4]\n [0 0 8 8 1]\n [0 0 0 9 3]]\n\"\"\"\n\n\n\n# \u4e09\u7ef4\u6570\u7ec4\nn9 = np.random.randint(1, 10, size=(4, 5, 6))\nprint(n9)\n\"\"\"\n[[[3 7 9 2 5 3]\n  [6 5 3 1 7 7]\n  [2 1 8 8 8 1]\n  [3 1 6 6 5 4]\n  [6 4 3 8 2 9]]\n\n [[2 5 7 1 6 9]\n  [8 8 5 6 4 8]\n  [8 5 7 5 1 8]\n  [9 9 7 2 5 6]\n  [2 2 8 2 7 4]]\n\n [[7 9 1 4 8 3]\n  [2 1 9 6 5 6]\n  [8 5 8 2 9 7]\n  [5 1 5 6 6 8]\n  [5 5 7 3 5 2]]\n\n [[3 5 9 6 2 3]\n  [1 8 6 2 9 4]\n  [3 5 1 4 4 5]\n  [2 6 7 9 8 4]\n  [7 4 4 2 5 3]]]\n\"\"\"\n\nn10 = np.triu(n9)\nprint(n10)\n\"\"\"\n[[[3 7 9 2 5 3]\n  [0 5 3 1 7 7]\n  [0 0 8 8 8 1]\n  [0 0 0 6 5 4]\n  [0 0 0 0 2 9]]\n\n [[2 5 7 1 6 9]\n  [0 8 5 6 4 8]\n  [0 0 7 5 1 8]\n  [0 0 0 2 5 6]\n  [0 0 0 0 7 4]]\n\n [[7 9 1 4 8 3]\n  [0 1 9 6 5 6]\n  [0 0 8 2 9 7]\n  [0 0 0 6 6 8]\n  [0 0 0 0 5 2]]\n\n [[3 5 9 6 2 3]\n  [0 8 6 2 9 4]\n  [0 0 1 4 4 5]\n  [0 0 0 9 8 4]\n  [0 0 0 0 5 3]]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_19","title":"\u6570\u7ec4\u7ffb\u8f6c/\u65cb\u8f6c","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#flip","title":"flip\u51fd\u6570","text":"<p>\u9006\u8f6c\u6570\u7ec4\u6cbf\u7740\u6307\u5b9a\u8f74\u5143\u7d20\u7684\u987a\u5e8f\uff0c\u5373m[..., ::-1, ...]</p> <p><code>flip(m, axis=None)</code></p> <ol> <li> <p>m: \u5f85\u7ffb\u8f6c\u6570\u7ec4</p> </li> <li> <p>axis: \u6307\u5b9a\u8f74\uff0c\u53ef\u4ee5\u662f\u4e00\u6761\u8f74\u4e5f\u53ef\u4ee5\u662f\u591a\u6761\u8f74\u3002\u9ed8\u8ba4\u662fNone\uff0c\u5c06\u7ffb\u8f6c\u6570\u7ec4\u7684\u6240\u6709\u8f74</p> </li> </ol> <pre><code>n0 = np.random.randint(1, 10, size=(3, 4, 5))\nprint(n0)\n\"\"\"\n[[[1 7 8 7 7]\n  [6 2 8 8 3]\n  [8 1 1 5 1]\n  [1 8 4 8 9]]\n\n [[2 3 3 2 5]\n  [2 2 3 1 4]\n  [8 6 3 5 6]\n  [4 1 6 2 2]]\n\n [[8 2 1 4 2]\n  [4 1 7 8 2]\n  [9 5 2 7 3]\n  [1 8 4 5 1]]]\n\"\"\"\n\nn1 = np.flip(n0)\nprint(n1)\n\"\"\"\n[[[1 5 4 8 1]\n  [3 7 2 5 9]\n  [2 8 7 1 4]\n  [2 4 1 2 8]]\n\n [[2 2 6 1 4]\n  [6 5 3 6 8]\n  [4 1 3 2 2]\n  [5 2 3 3 2]]\n\n [[9 8 4 8 1]\n  [1 5 1 1 8]\n  [3 8 8 2 6]\n  [7 7 8 7 1]]]\n\"\"\"\n\nn2 = np.flip(n0, axis=0)\nprint(n2)\n\"\"\"\n[[[8 2 1 4 2]\n  [4 1 7 8 2]\n  [9 5 2 7 3]\n  [1 8 4 5 1]]\n\n [[2 3 3 2 5]\n  [2 2 3 1 4]\n  [8 6 3 5 6]\n  [4 1 6 2 2]]\n\n [[1 7 8 7 7]\n  [6 2 8 8 3]\n  [8 1 1 5 1]\n  [1 8 4 8 9]]]\n\"\"\"\n\nn3 = np.flip(n0, axis=1)\nprint(n3)\n\"\"\"\n[[[1 8 4 8 9]\n  [8 1 1 5 1]\n  [6 2 8 8 3]\n  [1 7 8 7 7]]\n\n [[4 1 6 2 2]\n  [8 6 3 5 6]\n  [2 2 3 1 4]\n  [2 3 3 2 5]]\n\n [[1 8 4 5 1]\n  [9 5 2 7 3]\n  [4 1 7 8 2]\n  [8 2 1 4 2]]]\n\"\"\"\n\nn4 = np.flip(n0, axis=2)\nprint(n4)\n\"\"\"\n[[[7 7 8 7 1]\n  [3 8 8 2 6]\n  [1 5 1 1 8]\n  [9 8 4 8 1]]\n\n [[5 2 3 3 2]\n  [4 1 3 2 2]\n  [6 5 3 6 8]\n  [2 2 6 1 4]]\n\n [[2 4 1 2 8]\n  [2 8 7 1 4]\n  [3 7 2 5 9]\n  [1 5 4 8 1]]]\n\"\"\"\n\nn5 = np.flip(n0, axis=(1, 2))\nprint(n5)\n\"\"\"\n[[[9 8 4 8 1]\n  [1 5 1 1 8]\n  [3 8 8 2 6]\n  [7 7 8 7 1]]\n\n [[2 2 6 1 4]\n  [6 5 3 6 8]\n  [4 1 3 2 2]\n  [5 2 3 3 2]]\n\n [[1 5 4 8 1]\n  [3 7 2 5 9]\n  [2 8 7 1 4]\n  [2 4 1 2 8]]]\n\"\"\"\n\nn6 = n0[:, ::-1, ::-1]    # \u4e0en5\u7b49\u4ef7\nprint(n6)\n\"\"\"\n[[[9 8 4 8 1]\n  [1 5 1 1 8]\n  [3 8 8 2 6]\n  [7 7 8 7 1]]\n\n [[2 2 6 1 4]\n  [6 5 3 6 8]\n  [4 1 3 2 2]\n  [5 2 3 3 2]]\n\n [[1 5 4 8 1]\n  [3 7 2 5 9]\n  [2 8 7 1 4]\n  [2 4 1 2 8]]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#fliplr","title":"fliplr\u51fd\u6570","text":"<p>\u5c06\u6570\u7ec4\uff08\u81f3\u5c11\u662f\u4e8c\u7ef4\u6570\u7ec4\uff09\u6cbf**\u8f741**\uff08\u4e8c\u7ef4\uff1aleft/right\uff09\u7ffb\u8f6c</p> <p><code>fliplr(m)</code></p> <p>&lt;=&gt;<code>flip(m, axis=1)</code></p> <p>&lt;=&gt;<code>m[:, ::-1]</code></p> <pre><code>n0 = np.random.randint(1, 10, size=(3, 4, 5))\nprint(n0)\n\"\"\"\n[[[1 4 5 2 3]\n  [7 3 7 8 9]\n  [2 1 6 3 7]\n  [9 6 3 1 1]]\n\n [[7 9 2 4 7]\n  [3 5 9 3 8]\n  [9 9 6 5 2]\n  [8 9 1 8 2]]\n\n [[9 9 1 7 6]\n  [7 1 2 8 5]\n  [8 1 2 2 4]\n  [4 5 6 2 4]]]\n\"\"\"\n\nn7 = np.fliplr(n0)\nprint(n7)\n\"\"\"\n[[[9 6 3 1 1]\n  [2 1 6 3 7]\n  [7 3 7 8 9]\n  [1 4 5 2 3]]\n\n [[8 9 1 8 2]\n  [9 9 6 5 2]\n  [3 5 9 3 8]\n  [7 9 2 4 7]]\n\n [[4 5 6 2 4]\n  [8 1 2 2 4]\n  [7 1 2 8 5]\n  [9 9 1 7 6]]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#flipud","title":"flipud\u51fd\u6570","text":"<p>\u5c06\u6570\u7ec4\uff08\u81f3\u5c11\u662f\u4e00\u7ef4\u6570\u7ec4\uff09\u6cbf**\u8f740**\uff08\u4e8c\u7ef4\uff1aup/down\uff09\u7ffb\u8f6c</p> <p><code>flipud(m)</code></p> <p>&lt;=&gt;<code>flip(m, axis=0)</code></p> <p>&lt;=&gt;<code>m[::-1, ...]</code></p> <pre><code>n0 = np.random.randint(1, 10, size=(3, 4, 5))\nprint(n0)\n\"\"\"\n[[[4 5 1 2 6]\n  [8 7 4 8 9]\n  [9 9 2 8 2]\n  [5 3 7 9 8]]\n\n [[3 8 5 3 2]\n  [4 2 3 2 3]\n  [2 5 7 3 6]\n  [8 3 9 9 3]]\n\n [[9 2 7 7 2]\n  [8 3 6 6 2]\n  [1 8 6 1 1]\n  [3 9 5 2 6]]]\n\"\"\"\n\nn8 = np.flipud(n0)\nprint(n8)\n\"\"\"\n[[[9 2 7 7 2]\n  [8 3 6 6 2]\n  [1 8 6 1 1]\n  [3 9 5 2 6]]\n\n [[3 8 5 3 2]\n  [4 2 3 2 3]\n  [2 5 7 3 6]\n  [8 3 9 9 3]]\n\n [[4 5 1 2 6]\n  [8 7 4 8 9]\n  [9 9 2 8 2]\n  [5 3 7 9 8]]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#rot90","title":"rot90\u51fd\u6570","text":"<p>\u5c06\u6570\u7ec4\uff08\u81f3\u5c11\u662f\u4e8c\u7ef4\u6570\u7ec4\uff09\u4ece\u7b2c\u4e00\u4e2a\u8f74\u5411\u7b2c\u4e8c\u4e2a\u8f74\u65cb\u8f6ck\u4e2a90\u00b0\u3002\u591a\u7ef4\u6570\u7ec4\u5373\u5c06\u591a\u7ef4\u6570\u7ec4\u4e2d\u6709\u6307\u5b9a\u4e24\u4e2a\u8f74\u7684\u4e8c\u7ef4\u6570\u7ec4\u8fdb\u884c\u65cb\u8f6c</p> <p><code>rot90(m, k=1, axes=(0, 1))</code></p> <ol> <li> <p>m: \u5f85\u65cb\u8f6c\u6570\u7ec4</p> </li> <li> <p>k: \u65cb\u8f6c\u6b21\u6570</p> </li> <li> <p>axes: \u8f74\u5e8f\u5217\u3002\u5fc5\u987b\u4e14\u53ea\u80fd\u662f\u6307\u5b9a\u4e24\u4e2a\u8f74\uff0c\u5e76\u4e14\u4e24\u4e2a\u8f74\u5fc5\u987b\u4e0d\u540c\u3002</p> </li> </ol> <p></p> <pre><code>n0 = np.random.randint(1, 10, size=(3, 4))\nprint(n0)\n\"\"\"\n[[7 6 1 6]\n [2 7 9 5]\n [2 8 7 4]]\n\"\"\"\n\nn9 = np.rot90(n0)\nprint(n9)\n\"\"\"\n[[6 5 4]\n [1 9 7]\n [6 7 8]\n [7 2 2]]\n\"\"\"\n\nn10 = np.rot90(n0, k=2)\nprint(n10)\n\"\"\"\n[[4 7 8 2]\n [5 9 7 2]\n [6 1 6 7]]\n\"\"\"\n\nn11 = np.rot90(n0, axes=(1, 0))\nprint(n11)\n\"\"\"\n[[2 2 7]\n [8 7 6]\n [7 9 1]\n [4 5 6]]\n\"\"\"\n\nn12 = np.random.randint(1, 10, size=(3, 4, 5))\nprint(n12)\n\"\"\"\n[[[4 9 8 3 8]\n  [6 2 3 8 1]\n  [7 9 5 3 8]\n  [1 5 6 5 7]]\n\n [[8 5 1 7 4]\n  [5 3 4 4 1]\n  [4 6 3 2 1]\n  [5 3 8 8 7]]\n\n [[1 8 2 2 3]\n  [9 1 9 2 4]\n  [2 1 3 9 5]\n  [3 5 5 8 5]]]\n\"\"\"\n\nn13 = np.rot90(n12, axes=(1, 2))\nprint(n13)\n\"\"\"\n[[[8 1 8 7]\n  [3 8 3 5]\n  [8 3 5 6]\n  [9 2 9 5]\n  [4 6 7 1]]\n\n [[4 1 1 7]\n  [7 4 2 8]\n  [1 4 3 8]\n  [5 3 6 3]\n  [8 5 4 5]]\n\n [[3 4 5 5]\n  [2 2 9 8]\n  [2 9 3 5]\n  [8 1 1 5]\n  [1 9 2 3]]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_20","title":"\u6570\u7ec4\u6392\u5e8f","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#sort","title":"sort\u65b9\u6cd5\u3001\u51fd\u6570","text":"<p><code>ndarray.sort(axis=-1, kind=None, order=None)</code> <code>sort(a, axis=-1, kind=None, order=None)</code> sort\u65b9\u6cd5\u5bf9\u539f\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u800csort\u51fd\u6570\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u526f\u672c</p> <ol> <li> <p>a: \u5f85\u6392\u5e8f\u7684\u6570\u7ec4</p> </li> <li> <p>axis: \u6392\u5e8f\u6307\u5b9a\u7684\u8f74\u3002\u9ed8\u8ba4\u4e3a-1\uff0c\u5373\u5bf9\u6700\u540e\u4e00\u4e2a\u8f74\u8fdb\u884c\u6392\u5e8f\u3002\u82e5\u4e3aNone\uff0c\u5219\u5c06\u6570\u7ec4\u89c6\u4e3a\u4e00\u7ef4\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f</p> </li> <li> <p>kind: \u6392\u5e8f\u7b97\u6cd5\u3002\u53ef\u9009'quicksort'\uff08\u9ed8\u8ba4\uff09\u3001'mergesort'\u3001 'heapsort'\u3001 'stable'</p> </li> <li> <p>order: \u6307\u5b9a\u6392\u5e8f\u7684\u5b57\u6bb5\u3002\u9002\u7528\u4e8e\u7ed3\u6784\u5316\u6570\u7ec4\u3002\u5f53\u6307\u5b9a\u591a\u4e2a\u5b57\u6bb5\u65f6\uff0c\u82e5\u524d\u4e00\u4e2a\u5b57\u6bb5\u6392\u5e8f\u65f6\u76f8\u540c\uff0c\u518d\u6839\u636e\u540e\u4e00\u4e2a\u5b57\u6bb5\u8fdb\u884c\u6392\u5e8f</p> </li> </ol> <pre><code>n0 = np.random.randint(1, 17, size=(2, 2, 4))\nprint(n0)\n\"\"\"\n[[[16  3  2 11]\n  [16  3  8 11]]\n\n [[ 5  5  2 11]\n  [14  8  8  9]]]\n\"\"\"\n\nn0.sort()\nprint(n0)\n\"\"\"\n[[[ 2  3 11 16]\n  [ 3  8 11 16]]\n\n [[ 2  5  5 11]\n  [ 8  8  9 14]]]\n\"\"\"\n\nn0 = np.random.randint(1, 17, size=(2, 2, 4))\nprint(n0)\n\"\"\"\n[[[ 1  7  4 11]\n  [ 8 12  5 11]]\n\n [[11  8  4 11]\n  [ 9 12  5 13]]]\n\"\"\"\n\nn2 = np.sort(n0)\nprint(n2)\n\"\"\"\n[[[ 1  4  7 11]\n  [ 5  8 11 12]]\n\n [[ 4  8 11 11]\n  [ 5  9 12 13]]]\n\"\"\"\n\nn3 = np.sort(n0, axis=0)\nprint(n3)\n\"\"\"\n[[[ 1  7  4 11]\n  [ 8 12  5 11]]\n\n [[11  8  4 11]\n  [ 9 12  5 13]]]\n\"\"\"\n\nn4 = np.sort(n0, axis=1)\nprint(n4)\n\"\"\"\n[[[ 1  7  4 11]\n  [ 8 12  5 11]]\n\n [[ 9  8  4 11]\n  [11 12  5 13]]]\n\"\"\"\n\nn5 = np.sort(n0, axis=2)\nprint(n5)\n\"\"\"\n[[[ 1  4  7 11]\n  [ 5  8 11 12]]\n\n [[ 4  8 11 11]\n  [ 5  9 12 13]]]\n\"\"\"\n\nn6 = np.sort(n0, axis=None)\nprint(n6)\n\"\"\"\n[ 1  4  4  5  5  7  8  8  9 11 11 11 11 12 12 13]\n\"\"\"\n\n\n\ndtype = [('name', 'S10'), ('height', float), ('age', int)]\nvalues = [('Arthur', 1.8, 41), ('Lancelot', 1.9, 38), ('Galahad', 1.7, 38)]\nn7 = np.array(values, dtype=dtype)\nprint(n7)\n\"\"\"\n[(b'Arthur', 1.8, 41) (b'Lancelot', 1.9, 38) (b'Galahad', 1.7, 38)]\n\"\"\"\n\nprint(np.sort(n7, order='height'))\n\"\"\"\n[(b'Galahad', 1.7, 38) (b'Arthur', 1.8, 41) (b'Lancelot', 1.9, 38)]\n\"\"\"\n\nprint(np.sort(n7, order=['age', 'height']))\n\"\"\"\n[(b'Galahad', 1.7, 38) (b'Lancelot', 1.9, 38) (b'Arthur', 1.8, 41)]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#argsort","title":"argsort\u65b9\u6cd5\u3001\u51fd\u6570","text":"<p>\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u5404\u5143\u7d20\u5728\u539f\u6570\u7ec4\u4e2d\u6cbf\u6307\u5b9a\u8f74\u7684\u4f4d\u7f6e\uff0c\u4f46\u5b9e\u9645\u5e76\u4e0d\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f</p> <p><code>ndarray.argsort(axis=-1, kind=None, order=None)</code> <code>argsort(a, axis=-1, kind=None, order=None)</code></p> <ol> <li> <p>a: \u540c\u4e0a</p> </li> <li> <p>axis: \u540c\u4e0a</p> </li> <li> <p>kind: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.random.randint(1, 17, size=(2, 2, 4))\nprint(n0)\n\"\"\"\n[[[ 6  5  6  7]\n  [16 10  9  1]]\n\n [[ 1 11  9  9]\n  [12  3  8  6]]]\n\"\"\"\n\nn1 = n0.argsort()\nprint(n1)\n\"\"\"\n[[[1 0 2 3]\n  [3 2 1 0]]\n\n [[0 2 3 1]\n  [1 3 2 0]]]\n\"\"\"\n\nn2 = np.argsort(n0)\nprint(n2)\n\"\"\"\n[[[1 0 2 3]\n  [3 2 1 0]]\n\n [[0 2 3 1]\n  [1 3 2 0]]]\n\"\"\"\n\nn3 = np.argsort(n0, axis=0)\nprint(n3)\n\"\"\"\n[[[1 0 0 0]\n  [1 1 1 0]]\n\n [[0 1 1 1]\n  [0 0 0 1]]]\n\"\"\"\n\nn4 = np.argsort(n0, axis=1)\nprint(n4)\n\"\"\"\n[[[0 0 0 1]\n  [1 1 1 0]]\n\n [[0 1 1 1]\n  [1 0 0 0]]]\n\"\"\"\n\nn5 = np.argsort(n0, axis=2)\nprint(n5)\n\"\"\"\n[[[1 0 2 3]\n  [3 2 1 0]]\n\n [[0 2 3 1]\n  [1 3 2 0]]]\n\"\"\"\n\nn6 = np.argsort(n0, axis=None)\nprint(n6)\n\"\"\"\n[ 7  8 13  1  0  2 15  3 14  6 10 11  5  9 12  4]\n\"\"\"\n\ndtype = [('name', 'S10'), ('height', float), ('age', int)]\nvalues = [('Arthur', 1.8, 41), ('Lancelot', 1.9, 38), ('Galahad', 1.7, 38)]\nn7 = np.array(values, dtype=dtype)\nprint(n7)\n\"\"\"\n[(b'Arthur', 1.8, 41) (b'Lancelot', 1.9, 38) (b'Galahad', 1.7, 38)]\n\"\"\"\n\nprint(np.argsort(n7, order='height'))\n\"\"\"\n[2 0 1]\n\"\"\"\n\nprint(np.argsort(n7, order=['age', 'height']))\n\"\"\"\n[2 1 0]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#lexsort","title":"lexsort\u51fd\u6570","text":"<p><code>lexsort(keys, axis=-1)</code> \u82e5\u4e3a\u591a\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u5148\u6839\u636e\u6700\u540e\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u5f53\u51fa\u73b0\u76f8\u540c\u65f6\u6839\u636e\u524d\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u7d22\u5f15 \u82e5\u4e3a\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5148\u6839\u636e\u6700\u540e\u4e00\u884c\u6392\u5e8f\uff0c\u5f53\u51fa\u73b0\u76f8\u540c\u65f6\u6839\u636e\u4e0a\u4e00\u884c\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u7d22\u5f15 \u82e5\u4e3a\u591a\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5219\u6bcf\u6b21\u6839\u636eaxis\u4ece\u6bcf\u4e2a\u6570\u7ec4\u4e2d\u53d6\u51fa\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u540e\uff0c\u5f7c\u6b64\u4e4b\u95f4\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u7d22\u5f15\u7ec4\u5408</p> <ol> <li> <p>keys: \u6392\u5e8f\u6570\u7ec4\u3002\u82e5\u6709\u591a\u4e2a\u6570\u7ec4\uff0c\u5219\u6bcf\u4e2a\u6570\u7ec4\u5fc5\u987b\u662f\u76f8\u540c\u5f62\u72b6\u3002\u9ed8\u8ba4\u6700\u540e\u4e00\u4e2a\u6570\u7ec4\u4f5c\u4e3a\u521d\u59cb\u6392\u5e8f\u6570\u7ec4\u3002</p> </li> <li> <p>aixs: \u82e5\u4e3a\u591a\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u53d6\u51fa\u4e00\u7ef4\u6570\u7ec4\u6240\u6cbf\u7684\u8f74\u3002\u9ed8\u8ba4\u4e3a-1\uff0c\u5373\u4f7f\u7528\u6700\u540e\u4e00\u4e2a\u8f74\uff081\uff09</p> </li> </ol> <pre><code>n0 = np.random.randint(1, 17, size=6)\nprint(n0)\n\"\"\"\n[ 3 15 13 16  9 13]\n\"\"\"\n\nn1 = np.random.randint(1, 17, size=6)\nprint(n1)\n\"\"\"\n[ 4 13  7 16 15  1]\n\"\"\"\n\nn2 = np.random.randint(1, 17, size=6)\nprint(n2)\n\"\"\"\n[15 12  5 13  7  7]\n\"\"\"\n\nn3 = np.lexsort((n0, n1, n2))\nprint(n3)\n\"\"\"\n[2 5 4 1 3 0]\n\"\"\"\n\nn4 = np.random.randint(1, 17, size=(4, 4))\nprint(n4)\n\"\"\"\n[[ 7  4 10 12]\n [15 12 12  8]\n [ 8  9 14  3]\n [ 5  2 16  1]]\n\"\"\"\n\nn5 = np.lexsort(n4)\nprint(n5)\n\"\"\"\n[3 1 0 2]\n\"\"\"\n\nn6 = np.random.randint(1, 17, size=(3, 4))\n\"\"\"\n[[16  2  9  5]\n [ 3  2  6  8]\n [ 1 12 11 14]]\n\"\"\"\n\nn7 = np.random.randint(1, 17, size=(3, 4))\n\"\"\"\n[[10  7 16 12]\n [ 7  1  5 11]\n [ 9  7  9 16]]\n\"\"\"\n\nn8 = np.lexsort((n6, n7), axis=1)\n\"\"\"\n[[1 0 3 2]\n [1 2 0 3]\n [1 0 2 3]]\n\"\"\"\n\nn9 = np.lexsort((n6, n7), axis=0)\n\"\"\"\n[[1 1 1 1]\n [2 0 2 0]\n [0 2 0 2]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#_21","title":"\u6570\u7ec4\u4e00\u7ef4\u5316","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#flatten","title":"flatten\u65b9\u6cd5","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u8fde\u7eed\u7684\u4e00\u7ef4\uff08\u6241\u5e73\uff09\u6570\u7ec4</p> <p><code>ndarray.flatten(order=\"C\")</code></p> <pre><code>n0 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n\"\"\"\n[[1 2 3]\n [4 5 6]\n [7 8 9]]\n\"\"\"\n\nn1 = n0.flatten(order=\"C\")\n\"\"\"\n[1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nn2 = n0.flatten(order=\"F\")\n\"\"\"\n[1 4 7 2 5 8 3 6 9]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C/#ravel","title":"ravel\u65b9\u6cd5\u3001\u51fd\u6570","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u8fde\u7eed\u7684\u4e00\u7ef4\uff08\u6241\u5e73\uff09\u6570\u7ec4</p> <p><code>ndarray.ravel(order=\"C\")</code></p> <p><code>ravel(a, order='C')</code></p> <ol> <li> <p>a\uff1a\u540c\u4e0a</p> </li> <li> <p>order\uff1a\u540c\u524d</p> </li> </ol> <pre><code>n0 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n\"\"\"\n[[1 2 3]\n [4 5 6]\n [7 8 9]]\n\"\"\"\n\nn1 = np.ravel(n0, order='C')\nn2 = n0.ravel(order='C')\n\"\"\"\n[1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nn3 = np.ravel(n0, order='F')\nn4 = n0.ravel(order='F')\n\"\"\"\n[1 4 7 2 5 8 3 6 9]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/","title":"\u6570\u7ec4\u7684\u6982\u5ff5\u53ca\u521b\u5efa","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#_2","title":"\u56fe\u89e3","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#ndarray","title":"\u6570\u7ec4\uff08ndarray\uff09","text":"<ol> <li>\u4e00\u7ef4\u6570\u7ec4\u3010\u5217\u8868\u3011</li> </ol> <p>\u7c7b\u4f3c\u5217\u8868\uff0c\u4f46\u6570\u7ec4\u5207\u7247\u9488\u5bf9\u539f\u59cb\u6570\u636e</p> <ol> <li>\u4e8c\u7ef4\u6570\u7ec4\uff08\u77e9\u9635\uff09\u3010\u5173\u4e8e\u4e00\u7ef4\u6570\u7ec4\u7684\u5217\u8868\u3011</li> </ol> <p>\u4ee5\u6570\u7ec4\u4e3a\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u5305\u62ec\u884c\u548c\u5217\uff0c\u7c7b\u4f3c\u8868\u683c</p> <ol> <li> <p>\u4e09\u7ef4\u6570\u7ec4\uff08\u77e9\u9635\u5217\u8868\uff09\u3010\u5173\u4e8e\u4e8c\u7ef4\u6570\u7ec4\u7684\u5217\u8868\u3011 \u6700\u5e38\u89c1\u7684\u591a\u7ef4\u6570\u7ec4\u3002\u6307\u7ef4\u6570\u4e3a3\u7684\u6570\u7ec4\u7ed3\u6784\uff0c\u53ef\u7528\u6765\u63cf\u8ff0\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u6216\u72b6\u6001</p> </li> <li> <p>\u7ed3\u6784\u5316\u6570\u7ec4 \u7528\u4e8e\u5904\u7406\u5f02\u8d28\u6570\u636e\u7684\u91cd\u8981\u5de5\u5177\uff0c\u901a\u8fc7\u5b9a\u4e49\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u521b\u5efa\u5177\u6709\u4e0d\u540c\u5b57\u6bb5\u7684\u6570\u7ec4\uff0c\u7c7b\u4f3c\u4e8e\u8868\u683c\u6216\u6570\u636e\u5e93\u4e2d\u7684\u884c\u3002\u7ed3\u6784\u5316\u6570\u7ec4\u63d0\u4f9b\u4e86\u8bbf\u95ee\u3001\u4fee\u6539\u3001\u6392\u5e8f\u548c\u6761\u4ef6\u7b5b\u9009\u6570\u636e\u7684\u7075\u6d3b\u6027\uff0c\u540c\u65f6\u4e5f\u65b9\u4fbf\u4e0e Pandas DataFrame \u8fdb\u884c\u4ea4\u4e92</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#axis","title":"\u8f74\uff08axis\uff09","text":"<p>\u6307\u5b9a\u6570\u7ec4\u7684\u67d0\u4e2a\u8f74\u53ef\u4ee5\u6cbf\u8be5\u8f74\u505a\u76f8\u5173\u64cd\u4f5c\uff08\u5177\u4f53\u5982\u4e0a\u56fe\uff09 \u5bf9\u4e8e\u4e00\u7ef4\u6570\u7ec4\uff0c\u7531\u4e8e\u65e0\u6cd5\u4ece\u4e0a\u81f3\u4e0b\u64cd\u4f5c\uff0c\u56e0\u6b64\u5176\u53ea\u6709\u6c34\u5e73\u8f74\uff0c\u5373\u5176\u8f740\u4e3a\u6c34\u5e73\u8f74\uff08\u5177\u4f53\u5982\u4e0a\u56fe\uff09</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#broadcast","title":"\u5e7f\u64ad\u673a\u5236\uff08broadcast\uff09","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#_3","title":"\u57fa\u7840\u521b\u5efa","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#array","title":"array\u51fd\u6570","text":"<p><code>array\uff08object, dtype=None, copy=True, ndmin=0, order=\"K\", subok=False, like=None\uff09</code></p> <ol> <li> <p>object: \u4efb\u4f55\u5177\u6709\u6570\u7ec4\u63a5\u53e3\u65b9\u6cd5\u7684\u5bf9\u8c61\uff08\u6570\u7ec4\u3001\u5217\u8868\u3001\u5143\u7ec4\u7b49\uff0c\u4e3b\u8981\u662f\u5217\u8868\u548c\u6570\u7ec4\uff09</p> </li> <li> <p>dtype: \u6570\u636e\u7c7b\u578b\u3002\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e0d\u540c\u5b57\u6bb5\u548c\u6570\u636e\u7c7b\u578b\u4ee5\u521b\u5efa\u7ed3\u6784\u5316\u6570\u7ec4</p> </li> </ol> <p># dtype</p> <ol> <li> <p>copy: \u662f\u5426\u590d\u5236\u539f\u6570\u7ec4\u3002\u9ed8\u8ba4\u4e3aTrue</p> </li> <li> <p>ndmin: \u6307\u5b9a\u6700\u5c0f\u7ef4\u5ea6</p> </li> <li> <p>subok: \u662f\u5426\u4ece\u5b50\u7c7b\u521b\u5efa\u6570\u7ec4\u3002\u9ed8\u8ba4\u4e3aFalse\uff0c\u5373\u5f3a\u5236\u521b\u5efa\u57fa\u7c7b\u6570\u7ec4</p> </li> <li> <p>order: \u5143\u7d20\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u50a8\u987a\u5e8f</p> </li> </ol> order object copy=False copy=True \"K\"\uff08\u9ed8\u8ba4\uff09 \u5747\u53ef \u5143\u7d20\u5728\u5185\u5b58\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f F &amp; C \u987a\u5e8f\u4fdd\u7559\uff0c\u5176\u5b83\u987a\u5e8f\u6700\u76f8\u4f3c \"A\" \u6570\u7ec4 \u539f\u987a\u5e8f \u5982\u679c\u8f93\u5165\u4e3a F \u4e14\u4e0d\u662f C\uff0c\u5219\u4e3a F \u987a\u5e8f\uff0c\u5426\u5219\u4e3a C \u987a\u5e8f \"C\" \u5747\u53ef C \u987a\u5e8f\uff08\u6309\u884c\uff09 C \u987a\u5e8f\uff08\u6309\u884c\uff09 \"F\" \u5747\u53ef F \u6392\u5e8f\uff08\u6309\u5217\uff09 F \u6392\u5e8f\uff08\u6309\u5217\uff09 <ol> <li>like: \u9ed8\u8ba4\u4e3aNone</li> </ol> <pre><code># \u7b80\u5355\u521b\u5efa\nn0 = np.array([1, 2, 3, 4])       # \u4e00\u7ef4\u6570\u7ec4\n\"\"\"\n[1 2 3 4]\n\"\"\"\n\nn1 = np.array([[1, 2], [3, 4]])   # \u4e8c\u7ef4\u6570\u7ec4\n\"\"\"\n[[1 2]\n [3 4]]\n \"\"\"\n\nn2 = np.array([[[1, 2, 3, 4], [5, 6, 7, 8]], [[\"a\", \"b\", \"c\", \"d\"], [\"e\", \"f\", \"g\", \"h\"]]])    # \u4e09\u7ef4\u6570\u7ec4\n\"\"\"\n[[['1' '2' '3' '4']\n  ['5' '6' '7' '8']]\n\n [['a' 'b' 'c' 'd']\n  ['e' 'f' 'g' 'h']]]\n\"\"\"\n\n\n\n# \u8bbe\u7f6edtype\nn3 = np.array([1, 2, 3, 4], dtype=np.float_)\nprint(n3, n3.dtype, type(n3[0]))\n\"\"\"\n[1. 2. 3. 4.] float64 &lt;class 'numpy.float64'&gt;\n\"\"\"\n\nn4 = np.array([1, 2, 3, 4], dtype=np.intp)\nprint(n4, n4.dtype, type(n4[0]))\n\"\"\"\n[1 2 3 4] int64 &lt;class 'numpy.int64'&gt;\n\"\"\"\n\nn5 = np.array([1, 2, 3, 4], dtype=np.complex_)\nprint(n5, n5.dtype, type(n5[0]))\n\"\"\"\n[1.+0.j 2.+0.j 3.+0.j 4.+0.j] complex128 &lt;class 'numpy.complex128'&gt;\n\"\"\"\n\n\n\n# \u8bbe\u7f6ecopy\nn0 = np.array([1, 2, 3, 4])\nn6 = np.array(n0, copy=True)    # \u590d\u5236\u539f\u6570\u7ec4\uff0c\u4e0e\u539f\u6570\u7ec4\u72ec\u7acb\nn6[0] = 0\nn0[1] = 20\nprint(n6, n0)\n\"\"\"\n[0 2 3 4] [ 1 20  3  4]\n\"\"\"\n\nn0 = np.array([1, 2, 3, 4])\nn7 = np.array(n0, copy=False)   # \u4e0d\u590d\u5236\u539f\u6570\u7ec4\uff0c\u4e0e\u539f\u6570\u7ec4\u5173\u8054\nn7[0] = 0\nn0[1] = 20\nprint(n7, n0)\n\"\"\"\n[ 0 20  3  4] [ 0 20  3  4]\n\"\"\"\n\n\n\n# \u8bbe\u7f6endmin\nn8 = np.array([[1, 2], [3, 4]], ndmin=2)    # \u4e8c\u7ef4\n\"\"\"\n[[1 2]\n [3 4]]\n\"\"\"\n\nn9 = np.array([[1, 2], [3, 4]], ndmin=3)    # \u4e09\u7ef4\n\"\"\"\n[[[1 2]\n  [3 4]]]\n\"\"\"\n\n# \u7ed3\u6784\u5316\u6570\u7ec4\u7684\u521b\u5efa\ndtype = np.dtype([('name', 'S10'), ('age', int), ('height', float)])\ndata = np.array([('Alice', 25, 5.6), ('Bob', 30, 6.0)], dtype=dtype)\n\"\"\"\n[(b'Alice', 25, 5.6) (b'Bob', 30, 6. )]\n\"\"\"\n\ndtype_nested = np.dtype([('info', [('name', 'S10'), ('age', int)]), ('height', float)])\ndata_nested = np.array([(('Alice', 25), 5.6), (('Bob', 30), 6.0)], dtype=dtype_nested)\n\"\"\"\n[((b'Alice', 25), 5.6) ((b'Bob', 30), 6. )]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#_4","title":"\u586b\u5145\u521b\u5efa","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#empty","title":"empty\u51fd\u6570","text":"<p>\u521b\u5efa\u6307\u5b9a\u5f62\u72b6\uff0c\u672a\u521d\u59cb\u5316\u7684\u6570\u7ec4\uff0c\u5143\u7d20\u4e3a\u968f\u673a\u503c</p> <p><code>empty(shape, dtype=numpy.float64, order=\"C\", like=None)</code></p> <ol> <li> <p>shape: \u521b\u5efa\u7684\u6570\u7ec4\u7684\u5f62\u72b6\u3002\u53ef\u4ee5\u662f\u6574\u6570\u6216\u6574\u6570\u5e8f\u5217</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3anumpy.float64</p> </li> <li> <p>order: \u540c\u4e0a\u3002\"C\"\u548c\"F\"\u53ef\u9009\uff0c\u9ed8\u8ba4\"C\"</p> </li> <li> <p>like: \u9ed8\u8ba4\u4e3aNone</p> </li> </ol> <pre><code>n10 = np.empty(5)\n\"\"\"\n[0.   0.25 0.5  0.75 1.  ]\n\"\"\"\n\nn11 = np.empty([4, 3])\n\"\"\"\n[[0. 0. 1.]\n [1. 1. 1.]\n [1. 1. 1.]\n [0. 0. 1.]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#zeros","title":"zeros\u51fd\u6570","text":"<p>\u521b\u5efa\u6307\u5b9a\u5f62\u72b6\uff0c\u4ee50\u586b\u5145\u7684\u6570\u7ec4</p> <p><code>zeros(shape, dtype=numpy.float64, order=\"C\", like=None)</code></p> <ol> <li> <p>shape: \u540c\u4e0a</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>like: \u9ed8\u8ba4\u4e3aNone</p> </li> </ol> <pre><code>n12 = np.zeros(5)\n\"\"\"\n[0. 0. 0. 0. 0.]\n\"\"\"\n\nn13 = np.zeros([4, 3])\n\"\"\"\n[[0. 0. 0.]\n [0. 0. 0.]\n [0. 0. 0.]\n [0. 0. 0.]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#ones","title":"ones\u51fd\u6570","text":"<p>\u521b\u5efa\u6307\u5b9a\u5f62\u72b6\uff0c\u4ee51\u586b\u5145\u7684\u6570\u7ec4</p> <p><code>ones(shape, dtype=numpy.float64, order=\"C\", like=None)</code></p> <ol> <li> <p>shape: \u540c\u4e0a</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>like: \u9ed8\u8ba4\u4e3aNone</p> </li> </ol> <pre><code>n14 = np.ones(5)\n\"\"\"\n[1. 1. 1. 1. 1.]\n\"\"\"\n\nn15 = np.ones([4, 3])\n\"\"\"\n[[1. 1. 1.]\n [1. 1. 1.]\n [1. 1. 1.]\n [1. 1. 1.]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#full","title":"full\u51fd\u6570","text":"<p>\u521b\u5efa\u6307\u5b9a\u5f62\u72b6\uff0c\u4ee5fill_value\u586b\u5145\u7684\u6570\u7ec4</p> <p><code>full(shape, fill_value, dtype=None, order=\"C\", like=None)</code></p> <ol> <li> <p>shape: \u540c\u4e0a</p> </li> <li> <p>fill_value: \u6307\u5b9a\u586b\u5145\u503c\u3002\u53ef\u4ee5\u662f\u5355\u4e00\u6570\u503c\u6216\u6570\u7ec4\u7b49</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3aNone\uff0c\u5373\u4e0e\u586b\u5145\u503c\u7c7b\u578b\u4e00\u81f4</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>like: \u9ed8\u8ba4\u4e3aNone</p> </li> </ol> <pre><code>n16 = np.full(5, fill_value=8)\n\"\"\"\n[8 8 8 8 8]\n\"\"\"\n\nn17 = np.full([4, 3], fill_value=8)\n\"\"\"\n[[8 8 8]\n [8 8 8]\n [8 8 8]\n [8 8 8]]\n\"\"\"\n\nn18 = np.full([6, 4], fill_value=[1, 2, 3, 4])\n\"\"\"\n[[1 2 3 4]\n [1 2 3 4]\n [1 2 3 4]\n [1 2 3 4]\n [1 2 3 4]\n [1 2 3 4]]\n\"\"\"\n\nn18 = np.full([6, 4], fill_value=[[1], [2], [3], [4], [5], [6]])\n\"\"\"\n[[1 1 1 1]\n [2 2 2 2]\n [3 3 3 3]\n [4 4 4 4]\n [5 5 5 5]\n [6 6 6 6]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#_5","title":"\u8303\u56f4\u521b\u5efa","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#arange","title":"arange\u51fd\u6570","text":"<p>\u7c7b\u4f3c\u4e8erange\u51fd\u6570\uff0c\u8303\u56f4\u4e3a**[start\uff0cstop)**\uff0c\u533a\u522b\u662f\u8be5\u51fd\u6570\u8fd4\u56de\u6570\u7ec4\u4ee5\u53ca\u8be5\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u4e3a\u4efb\u610f\u5b9e\u6570\u3002\u5efa\u8bae\u8be5\u51fd\u6570\u53c2\u6570\u4ec5\u4f7f\u7528\u6574\u6570\u7c7b\u578b</p> <p><code>arange(start=0, stop, step=1, dtype=None, like=None)</code></p> <ol> <li> <p>start: \u8d77\u59cb\u503c\u3002\u53ef\u4ee5\u662f\u6574\u6570\u6216\u5b9e\u6570\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>stop: \u7ec8\u6b62\u503c\u3002\u53ef\u4ee5\u662f\u6574\u6570\u6216\u5b9e\u6570</p> </li> <li> <p>step: \u6b65\u957f\u6216\u95f4\u9694\u3002\u53ef\u4ee5\u662f\u6574\u6570\u6216\u5b9e\u6570\u3002\u9ed8\u8ba4\u4e3a1</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3aNone\uff0c\u81ea\u52a8\u5224\u65ad\u6570\u636e\u7c7b\u578b</p> </li> <li> <p>like: \u9ed8\u8ba4\u4e3aNone</p> </li> </ol> <pre><code>n19 = np.arange(10)\n\"\"\"\n[0 1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nn20 = np.arange(1, 10)\n\"\"\"\n[1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nn21 = np.arange(1, 10, 2)\n\"\"\"\n[1 3 5 7 9]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#linspace","title":"linspace\u51fd\u6570","text":"<p>\u7528\u4e8e\u521b\u5efa**\u7b49\u5dee\u6570\u5217**\u6570\u7ec4\uff08\u5728start\u548cstop\u4e4b\u95f4\u4ea7\u751fnum\u4e2a\u5747\u5300\u7b49\u5dee\u6570\uff09</p> <p>\u5f53\u5305\u542bstop\uff08\u9ed8\u8ba4\uff09\u65f6\uff0c\u6b65\u957f\u4e3a\uff08stop-start\uff09/\uff08num-1\uff09\uff1b\u5f53\u4e0d\u5305\u542bstop\u65f6\uff0c\u6b65\u957f\u4e3a\uff08stop-start\uff09/num</p> <p><code>linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None, axis=0)</code></p> <ol> <li> <p>start: \u8d77\u59cb\u503c\u3002\u53ef\u4ee5\u662f\u4efb\u4e00\u5b9e\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49</p> </li> <li> <p>stop: \u7ec8\u6b62\u503c\u3002\u53ef\u4ee5\u662f\u4efb\u4e00\u5b9e\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49</p> </li> <li> <p>num: \u4ea7\u751f\u6837\u672c\u7684\u6570\u91cf\u3002\u9ed8\u8ba4\u4e3a50</p> </li> <li> <p>endpoint: \u662f\u5426\u5305\u542bstop\u53c2\u6570\u503c\u3002\u9ed8\u8ba4\u4e3aTrue</p> </li> <li> <p>retstep: \u662f\u5426\u4ee5\u5143\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u663e\u793a\u6b65\u957f\uff08\u7b49\u5dee\uff09\u3002\u9ed8\u8ba4\u4e3aFalse</p> </li> <li> <p>axis: \u4ec5\u5f53start\u6216stop\u4e3a\u5217\u8868\u6216\u6570\u7ec4\u7b49\u7c7b\u578b\u65f6\u6709\u6548\u3002\u8868\u793a\u6cbf\u7740\u8be5\u8f74\u4e3a\u7b49\u5dee\u6570\u5217\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> </ol> <pre><code># \u7b80\u5355\u521b\u5efa\nn22 = np.linspace(1, 10, 5)\n\"\"\"\n[ 1.    3.25  5.5   7.75 10.  ]\n\"\"\"\n\nn23 = np.linspace(1, [11, 12, 13, 14], 5)\n\"\"\"\n[[ 1.    1.    1.    1.  ]\n [ 3.5   3.75  4.    4.25]\n [ 6.    6.5   7.    7.5 ]\n [ 8.5   9.25 10.   10.75]\n [11.   12.   13.   14.  ]]\n\"\"\"\n\nn24 = np.linspace([1, 2, 3, 4], 11, 5)\n\"\"\"\n[[ 1.    2.    3.    4.  ]\n [ 3.5   4.25  5.    5.75]\n [ 6.    6.5   7.    7.5 ]\n [ 8.5   8.75  9.    9.25]\n [11.   11.   11.   11.  ]]\n\"\"\"\n\nn25 = np.linspace([1, 2, 3, 4], [11, 12, 13, 14], 5)\n\"\"\"\n[[ 1.   2.   3.   4. ]\n [ 3.5  4.5  5.5  6.5]\n [ 6.   7.   8.   9. ]\n [ 8.5  9.5 10.5 11.5]\n [11.  12.  13.  14. ]]\n\"\"\"\n\n\n\n# \u8bbe\u7f6eendpoint\nn26 = np.linspace(1, 10, 5, endpoint=False)\n\"\"\"\n[1.  2.8 4.6 6.4 8.2]\n\"\"\"\n\n\n\n# \u8bbe\u7f6eretstep\nn27 = np.linspace(1, 10, 5, retstep=True)\n\"\"\"\n(array([ 1.  ,  3.25,  5.5 ,  7.75, 10.  ]), 2.25)\n\"\"\"\n\n\n\n# \u8bbe\u7f6eaxis\nn28 = np.linspace([1, 2, 3, 4], [11, 12, 13, 14], 6, axis=0)\n\"\"\"\n[[ 1.  2.  3.  4.]\n [ 3.  4.  5.  6.]\n [ 5.  6.  7.  8.]\n [ 7.  8.  9. 10.]\n [ 9. 10. 11. 12.]\n [11. 12. 13. 14.]]\n\"\"\"\n\nn29 = np.linspace([1, 2, 3, 4], [11, 12, 13, 14], 6, axis=1)\n\"\"\"\n[[ 1.  3.  5.  7.  9. 11.]\n [ 2.  4.  6.  8. 10. 12.]\n [ 3.  5.  7.  9. 11. 13.]\n [ 4.  6.  8. 10. 12. 14.]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#logspace","title":"logspace\u51fd\u6570","text":"<p>\u7528\u4e8e\u521b\u5efa**\u7b49\u6bd4\u6570\u5217**\uff08\u5728base**start\u548cbase**stop\u4e4b\u95f4\u4ea7\u751fnum\u4e2a\u5747\u5300\u7b49\u6bd4\u6570\uff09</p> <p>\u7b49\u6bd4\u6570\u5217\u5728\u5bf9\u6570\u4e0a\u4e3a\u7b49\u5dee\u6570\u5217\uff0c\u6240\u4ee5\u6362\u79cd\u601d\u8def\u53ef\u7406\u89e3\u4e3a\uff1a\u5728start\u548cstop\u4e4b\u95f4\u751f\u6210num\u4e2a\u5747\u5300\u7b49\u5dee\u6570\u5217\uff08\u540clinspace\u51fd\u6570\uff09\uff0c\u518d\u5c06\u6bcf\u4e2a\u6570\u4ee5base\u4e3a\u5e95\u4f5c\u6307\u6570\u8fd0\u7b97</p> <p><code>logspace(start, stop, num=50, endpoint=True, base=10.0, dtype=None, axis=0)</code></p> <ol> <li> <p>start: \u540c\u4e0a\u3002\u4f46\u521d\u59cb\u503c\u4e3abase**start</p> </li> <li> <p>stop: \u540c\u4e0a\u3002\u4f46\u7ec8\u6b62\u503c\u4e3abase**stop</p> </li> <li> <p>num: \u540c\u4e0a</p> </li> <li> <p>endpoint: \u540c\u4e0a</p> </li> <li> <p>base: \u5e95\u6570\uff0c\u53ef\u4ee5\u4e3a\u4efb\u4e00\u5b9e\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49\u3002\u9ed8\u8ba4\u4e3a10.0</p> </li> <li> <p>axis: \u4ec5\u5f53start\u3001stop\u6216base\u4e3a\u5217\u8868\u6216\u6570\u7ec4\u7b49\u7c7b\u578b\u65f6\u6709\u6548\u3002\u8868\u793a\u6cbf\u7740\u8be5\u8f74\u4e3a\u7b49\u6bd4\u6570\u5217\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> </ol> <pre><code>n30 = np.logspace(1, 10, 10, base=2)\n\"\"\"\n[   2.    4.    8.   16.   32.   64.  128.  256.  512. 1024.]\n\"\"\"\n\nn31 = np.logspace(1, 4, 5, base=[2, 3, 4, 5])\n\"\"\"\n[[  2.           3.           4.           5.        ]\n [  3.36358566   6.83852117  11.3137085   16.71850762]\n [  5.65685425  15.58845727  32.          55.90169944]\n [  9.51365692  35.53399835  90.50966799 186.91859765]\n [ 16.          81.         256.         625.        ]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#_6","title":"\u968f\u673a\u521b\u5efa","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#randomrand","title":"random.rand\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u7ed9\u5b9a\u5f62\u72b6\u7684\u6570\u7ec4\uff0c\u5e76\u7528**[0\uff0c1)**\u4e0a\u5747\u5300\u5206\u5e03\u7684\u968f\u673a\u6837\u672c\u586b\u5145\u3002\u82e5\u672a\u7ed9\u5b9a\u53c2\u6570\uff0c\u5c06\u4ec5\u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u6570</p> <p><code>rand(d0, d1, ..., dn)</code></p> <pre><code>n32 = np.random.rand()\n\"\"\"\n0.9470660042118693\n\"\"\"\n\nn33 = np.random.rand(3)\n\"\"\"\n[0.88734261 0.88303211 0.76045189]\n\"\"\"\n\nn34 = np.random.rand(3, 4)\n\"\"\"\n[[0.38775125 0.56929663 0.82186919 0.3899654 ]\n [0.31936881 0.02693    0.75568994 0.286433  ]\n [0.42836783 0.36534623 0.93650673 0.69723928]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#randomrandn","title":"random.randn\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u7ed9\u5b9a\u5f62\u72b6\u7684\u6570\u7ec4\uff0c\u4ece\u201c\u6807\u51c6\u6b63\u6001\u201d\u5206\u5e03\uff08\u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u5dee\u4e3a1\uff09**\u968f\u673a\u8fd4\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\u6837\u672c \u670d\u4ece\u5747\u503c\u4e3a\u03bc\uff0c\u6807\u51c6\u5dee\u4e3a\u03c3\u7684\u6b63\u6001\u5206\u5e03\uff0c\u53ef\u7528\uff1a**\u03bc + \u03c3 * np.random.randn(...)    \u6765\u751f\u6210\u6570\u7ec4</p> <p><code>randn(d0, d1, ..., dn)</code></p> <pre><code>n35 = np.random.randn()\n\"\"\"\n-0.9634996081712404\n\"\"\"\n\nn36 = np.random.randn(3)\n\"\"\"\n[0.5043878  0.86713589 0.27525007]\n\"\"\"\n\nn37 = np.random.randn(3, 4)\n\"\"\"\n[[-0.1079871  -0.42197777  0.52599791  0.17754496]\n [ 0.47036527 -0.90796359 -0.22122957 -0.50120022]\n [-0.47200183  0.59749017  1.08836655  0.67734795]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#randomrandint","title":"random.randint\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u7ed9\u5b9a\u5f62\u72b6\u7684\u6570\u7ec4\uff0c\u7528**[low, high\uff09\u7684\u968f\u673a\u6574\u6570**\u6837\u672c\u586b\u5145\uff1b\u82e5**high\u672a\u6307\u5b9a\uff0c\u8303\u56f4\u4e3a[0, low)\u7684\u968f\u673a\u6574\u6570**</p> <p><code>randint(low, high=None, size=None, dtype=int)</code></p> <ol> <li> <p>low: \u8d77\u59cb\u503c\u3002\u53ef\u4e3a\u6574\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49</p> </li> <li> <p>high: \u7ec8\u6b62\u503c\u3002\u53ef\u4e3a\u6574\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49</p> </li> <li> <p>size: \u6307\u5b9a\u6570\u7ec4\u5f62\u72b6\u5927\u5c0f\u3002\u82e5\u4e0d\u6307\u5b9a\uff0c\u5219\u6839\u636e\u53c2\u6570\u7c7b\u578b\u51b3\u5b9a\u8fd4\u56de\u7c7b\u578b</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3aint</p> </li> </ol> <pre><code># high\u672a\u6307\u5b9a\uff0c\u8303\u56f4\u4e3a[0, low)\nn38 = np.random.randint(2, size=10)\n\"\"\"\n[1 0 1 0 0 0 1 1 1 0]\n\"\"\"\n\n\n\n# \u6307\u5b9ahigh\uff0c\u8303\u56f4\u4e3a[low, high)\nn39 = np.random.randint(1, 10, size=10)\n\"\"\"\n[7 1 6 7 6 7 5 9 1 6]\n\"\"\"\n\n\n\n# \u672a\u6307\u5b9asize\uff0c\u6839\u636e\u53c2\u6570\u7c7b\u578b\u51b3\u5b9asize\nn40 = np.random.randint(1, 10)\n\"\"\"\n8\n\"\"\"\n\nn41 = np.random.randint(1, [10, 11, 12, 13])         # \u8303\u56f4\u5206\u522b\u4e3a[1, 10)\u3001[1, 11)\u3001[1, 12)\u3001[1, 13)\n\"\"\"\n[ 8 10 11  4]\n\"\"\"\n\nn42 = np.random.randint([1, 3, 5, 7], [[10], [20]])\n\"\"\"\n[[1 5 9 8]\n [2 8 8 7]]\n\"\"\"\n\n\n\n# \u6307\u5b9asize\nn43 = np.random.randint(1, 10, size=[3, 4])\n\"\"\"\n[[4 1 7 9]\n [8 2 1 4]\n [4 2 4 7]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#randomnormal","title":"random.normal\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u7ed9\u5b9a\u5f62\u72b6\u7684\u6570\u7ec4\uff0c\u4ece**\u6b63\u6001\u5206\u5e03\uff08\u5747\u503c\u4e3aloc\uff0c\u6807\u51c6\u5dee\u4e3ascale\uff09**\u968f\u673a\u8fd4\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\u6837\u672c</p> <p><code>normal(loc=0.0, scale=1.0, size=None)</code></p> <ol> <li> <p>loc: \u5747\u503c\u3002\u53ef\u4e3a\u6d6e\u70b9\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49**\u3002**\u9ed8\u8ba4\u4e3a0.0</p> </li> <li> <p>scale: \u6807\u51c6\u5dee\u3002\u53ef\u4e3a\u6d6e\u70b9\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49,\u3002\u9ed8\u8ba4\u4e3a1.0</p> </li> <li> <p>size: \u540c\u4e0a</p> </li> </ol> <pre><code>n44 = np.random.normal(loc=2, scale=2)\n\"\"\"\n1.8403874883934772\n\"\"\"\n\nn45 = np.random.normal(loc=2, scale=2, size=[3, 4])\n\"\"\"\n[[ 1.89492021  1.82202719  2.46348908 -1.21728651]\n [-3.10725159  3.67963494  8.82440607 -1.18438998]\n [ 4.22737934  1.88183014  1.90411906  0.04398211]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#_7","title":"\u5176\u5b83\u521b\u5efa","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#asarray","title":"asarray\u51fd\u6570","text":"<p>\u7c7b\u4f3carray\u51fd\u6570\uff0c\u4f46\u9ed8\u8ba4\u4e0d\u590d\u5236\u539f\u6570\u636e\uff1b\u82e5\u8bbe\u7f6e\u4e86dtype\uff0c\u4ec5\u5f53\u6240\u8bbe\u7f6edtype\u4e0e\u539f\u6570\u636e\u4e0d\u5339\u914d\u65f6\u590d\u5236\u539f\u6570\u636e</p> <p><code>asarray(a, dtype=None, order='K', *, copy=None, like=None)</code></p> <ol> <li> <p>a: \u4efb\u4f55\u80fd\u8f6c\u6362\u4e3a\u6570\u7ec4\u7684\u5bf9\u8c61</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>copy\uff1a\u540c\u4e0a</p> </li> <li> <p>like: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.array([1, 2, 3, 4])\nn46 = np.asarray(n0)\nn0[0] = 10\nn46[1] = 20\nprint(n46, n0)\n\"\"\"\n[10 20  3  4] [10 20  3  4]\n\"\"\"\n\nn0 = np.array([1, 2, 3, 4])\nn47 = np.asarray(n0, dtype=np.float_)\nn0[0] = 10\nn47[1] = 20\nprint(n47, n0)\n\"\"\"\n[ 1. 20.  3.  4.] [10  2  3  4]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#frombuffer","title":"frombuffer\u51fd\u6570","text":"<p><code>frombuffer(buffer, count=-1, offset=0, dtype=None, like=None)</code></p> <ol> <li> <p>buffer: \u5177\u6709buffer\u63a5\u53e3\u7684\u5bf9\u8c61</p> </li> <li> <p>count: \u8bfb\u53d6\u7684\u6570\u91cf\u3002\u9ed8\u8ba4\u4e3a-1\uff0c\u8868\u793a\u8bfb\u53d6\u5168\u90e8\u6570\u636e</p> </li> <li> <p>offset: \u504f\u79fb\u91cf\u3002\u4ece\u6b64\u5f00\u59cb\u8bfb\u53d6\u7f13\u51b2\u533a(\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d)\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3afloat</p> </li> <li> <p>like: \u540c\u4e0a</p> </li> </ol> <pre><code>s = b'hello world'\nn48 = np.frombuffer(s, count=3, offset=2, dtype=\"S1\")\n\"\"\"\n[b'l' b'l' b'o']\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#fromiter","title":"fromiter\u51fd\u6570","text":"<p>\u4ece\u53ef\u8fed\u4ee3\u5bf9\u8c61\u521b\u5efa\u6570\u7ec4</p> <p><code>fromiter(iter, dtype, count=-1, like=None)</code></p> <ol> <li> <p>iter: \u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u5982\u5217\u8868\u3001\u5143\u7ec4\u7b49</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>count: \u540c\u4e0a</p> </li> <li> <p>like: \u540c\u4e0a</p> </li> </ol> <pre><code>n49 = np.fromiter([i for i in range(0, 10)], dtype=np.float_, count=6)\n\"\"\"\n[0. 1. 2. 3. 4. 5.]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#like","title":"like\u521b\u5efa","text":"<p>\u8be5\u7c7b\u521b\u5efa\u51fd\u6570\u7c7b\u4f3c\u4e8e\u524d\u8ff0\u586b\u5145\u521b\u5efa\u7684\u51fd\u6570\uff0c\u533a\u522b\u5728\u4e8e\u8be5\u7c7b\u51fd\u6570\u7684\u5f62\u72b6\u7531\u7ed9\u5b9a\u6570\u7ec4\u51b3\u5b9a</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#empty_like","title":"empty_like\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e0e\u7ed9\u5b9a\u6570\u7ec4\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b\u76f8\u540c\u7684\u672a\u521d\u59cb\u5316\u7684\u6570\u7ec4</p> <p><code>empty_like(prototype, dtype=None, order='K', subok=True, shape=None)</code></p> <ol> <li> <p>prototype: \u7ed9\u5b9a\u7684\u6570\u7ec4</p> </li> <li> <p>dtype: \u8986\u76d6\u7ed3\u679c\u7684\u6570\u636e\u7c7b\u578b\u3002\u540c\u4e0a</p> </li> <li> <p>order: \u8986\u76d6\u7ed3\u679c\u7684\u5185\u5b58\u6392\u5217\uff0c\u9ed8\u8ba4\u4e3a\"K\"\u3002\u540c\u4e0a</p> </li> <li> <p>subok: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3aTrue</p> </li> <li> <p>shape: \u8986\u76d6\u7ed3\u679c\u7684\u5f62\u72b6\u3002\u540c\u4e0a</p> </li> </ol> <pre><code>n50 = np.empty_like([[1, 2, 3, 4], [5, 6, 7, 8]])\n\"\"\"\n[[         0 1072693248          0 1077149696]\n [         0 1074266112          0 1074790400]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#zeros_like","title":"zeros_like\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e0e\u7ed9\u5b9a\u6570\u7ec4\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b\u76f8\u540c\u7684\u4ee50\u586b\u5145\u7684\u6570\u7ec4</p> <p><code>zeros_like(a, dtype=None, order='K', subok=True, shape=None)</code></p> <ol> <li> <p>a: \u7ed9\u5b9a\u7684\u6570\u7ec4</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>subok: \u540c\u4e0a</p> </li> <li> <p>shape: \u540c\u4e0a</p> </li> </ol> <pre><code>n51 = np.zeros_like([[1, 2, 3, 4], [5, 6, 7, 8]])\n\"\"\"\n[[0 0 0 0]\n [0 0 0 0]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#ones_like","title":"ones_like\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e0e\u7ed9\u5b9a\u6570\u7ec4\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b\u76f8\u540c\u7684\u4ee51\u586b\u5145\u7684\u6570\u7ec4</p> <p><code>ones_like(a, dtype=None, order='K', subok=True, shape=None)</code></p> <ol> <li> <p>a: \u7ed9\u5b9a\u7684\u6570\u7ec4</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>subok: \u540c\u4e0a</p> </li> <li> <p>shape: \u540c\u4e0a</p> </li> </ol> <pre><code>n52 = np.ones_like([[1, 2, 3, 4], [5, 6, 7, 8]])\n\"\"\"\n[[1 1 1 1]\n [1 1 1 1]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#full_like","title":"full_like\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e0e\u7ed9\u5b9a\u6570\u7ec4\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b\u76f8\u540c\u7684\u4ee5fill_value\u586b\u5145\u7684\u6570\u7ec4</p> <p><code>full_like(a, fill_value, dtype=None, order='K', subok=True, shape=None)</code></p> <ol> <li> <p>a: \u7ed9\u5b9a\u7684\u6570\u7ec4</p> </li> <li> <p>fill_value: \u6307\u5b9a\u586b\u5145\u503c\u3002\u540c\u4e0a</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>subok: \u540c\u4e0a</p> </li> <li> <p>shape: \u540c\u4e0a</p> </li> </ol> <pre><code>n53 = np.full_like([[1, 2, 3, 4], [5, 6, 7, 8]], fill_value=10)\n\"\"\"\n[[10 10 10 10]\n [10 10 10 10]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#_8","title":"\u5bf9\u89d2\u521b\u5efa","text":"<p>\u5bf9\u4e8e\u4e8c\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4\u624d\u6709\u5bf9\u89d2\u7ebf\uff0c\u4e00\u822c\u53ea\u63d0\u4e8c\u7ef4\u6570\u7ec4</p> <p>\u5bf9\u4e8e\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5176\u5bf9\u89d2\u7ebf\u662f\u6307**a[i, i+offset\u6216k]\uff0coffset\u6216k\u662f\u504f\u79fb\u91cf\uff0c\u5f53offset\u6216k=0\u65f6\uff0c\u8be5\u5bf9\u89d2\u7ebf\u4e3a\u4e3b\u5bf9\u89d2\u7ebf\uff0c\u5373**a[i, i]\uff0c\u8be5\u5bf9\u89d2\u7ebf\u5305\u542b\u7684\u5143\u7d20\u5305\u62eca[0, 0], a[1, 1], ..., a[i, i]\u3002</p> <p>\u5bf9\u4e8e\u591a\u7ef4\u6570\u7ec4\uff0c\u5176\u4e3b\u5bf9\u89d2\u7ebf\u4e3a**a[i, i, ..., i]**</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#eye","title":"eye\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a**\u5bf9\u89d2\u7ebf(i, i+k)\u4e3a1**\uff0c\u5176\u5b83\u4f4d\u7f6e\u4e3a0\u7684\u4e8c\u7ef4\u6570\u7ec4</p> <p><code>eye(N, M=N, k=0, dtype=float, order='C', like=None)</code></p> <ol> <li> <p>N: \u884c\u6570</p> </li> <li> <p>M: \u5217\u6570\u3002\u9ed8\u8ba4\u4e0eN\u76f8\u7b49</p> </li> <li> <p>k: \u76f8\u5bf9\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u7684\u504f\u79fb\u91cf\uff0c\u6216\u8005\u8bf4\u662f\u5bf9\u89d2\u7ebf\u7d22\u5f15\u3002\u9ed8\u8ba4\u4e3a0\uff0c\u5373\u4e3b\u5bf9\u89d2\u7ebf\uff1b+\u8868\u793a\u4e0a\u65b9\u5bf9\u89d2\u7ebf\uff0c-\u8868\u793a\u4e0b\u65b9\u5bf9\u89d2\u7ebf</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3afloat</p> </li> <li> <p>order: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3a\"C\"</p> </li> <li> <p>like: \u540c\u4e0a</p> </li> </ol> <pre><code>n54 = np.eye(5)\n\"\"\"\n[[1. 0. 0. 0. 0.]\n [0. 1. 0. 0. 0.]\n [0. 0. 1. 0. 0.]\n [0. 0. 0. 1. 0.]\n [0. 0. 0. 0. 1.]]\n\"\"\"\n\nn55 = np.eye(5, 7)\n\"\"\"\n[[1. 0. 0. 0. 0. 0. 0.]\n [0. 1. 0. 0. 0. 0. 0.]\n [0. 0. 1. 0. 0. 0. 0.]\n [0. 0. 0. 1. 0. 0. 0.]\n [0. 0. 0. 0. 1. 0. 0.]]\n\"\"\"\n\nn56 = np.eye(5, 7, k=1)\n\"\"\"\n[[0. 1. 0. 0. 0. 0. 0.]\n [0. 0. 1. 0. 0. 0. 0.]\n [0. 0. 0. 1. 0. 0. 0.]\n [0. 0. 0. 0. 1. 0. 0.]\n [0. 0. 0. 0. 0. 1. 0.]]\n\"\"\"\n\nn57 = np.eye(5, 7, k=-1)\n\"\"\"\n[[0. 0. 0. 0. 0. 0. 0.]\n [1. 0. 0. 0. 0. 0. 0.]\n [0. 1. 0. 0. 0. 0. 0.]\n [0. 0. 1. 0. 0. 0. 0.]\n [0. 0. 0. 1. 0. 0. 0.]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#identity","title":"identity\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2an x n\uff0c\u4e3b\u5bf9\u89d2\u7ebf\u4e3a1\u7684\u6570\u7ec4\u3002</p> <p><code>identity(n, dtype=None, *, like=None)</code></p> <ol> <li> <p>n\uff1a\u8f93\u51fa\u5f62\u72b6\u4e3an\u884cn\u5217</p> </li> <li> <p>dtype\uff1a\u540c\u4e0a</p> </li> <li> <p>like\uff1a\u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.identity(3)\n\"\"\"\n[[1. 0. 0.]\n [0. 1. 0.]\n [0. 0. 1.]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#diag","title":"diag\u51fd\u6570","text":"<p>\u63d0\u53d6\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u7684\u5bf9\u89d2\u6216\u8005\u521b\u5efa\u4e00\u4e2a\u5bf9\u89d2\u4e8c\u7ef4\u6570\u7ec4(\u5bf9\u89d2\u4e3a\u8be5\u4e00\u7ef4\u6570\u7ec4)</p> <p><code>diag(v, k=0)</code></p> <ol> <li> <p>v: \u6307\u5b9a\u6570\u7ec4\uff0c\u53ea\u80fd\u662f\u4e00\u7ef4\u6570\u7ec4\u6216\u4e8c\u7ef4\u6570\u7ec4</p> </li> <li> <p>k: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.random.randint(1, 10, size=(5, 7))\n\"\"\"\n[[3 2 6 9 2 4 8]\n [7 4 1 4 7 4 2]\n [4 3 5 1 6 8 9]\n [2 6 9 2 2 3 7]\n [1 5 7 4 3 5 6]]\n\"\"\"\n\nn58 = np.diag(n0)\n\"\"\"\n[3 4 5 2 3]\n\"\"\"\n\nn1 = np.array([1, 2, 3, 4])\nn59 = np.diag(n1)\n\"\"\"\n[[1 0 0 0]\n [0 2 0 0]\n [0 0 3 0]\n [0 0 0 4]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#diagflat","title":"diagflat\u51fd\u6570","text":"<p>\u5c06\u6570\u7ec4\u8f6c\u5316\u4e3a\u4e00\u7ef4\u6570\u7ec4\u540e\uff0c\u521b\u5efa\u4e00\u4e2a\u5bf9\u89d2\u4e8c\u7ef4\u6570\u7ec4\uff08\u5bf9\u89d2\u4e3a\u8be5\u8f6c\u5316\u540e\u7684\u4e00\u7ef4\u6570\u7ec4\uff09</p> <p><code>diagflat(v, k=0)</code></p> <ol> <li> <p>v: \u6307\u5b9a\u6570\u7ec4</p> </li> <li> <p>k: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.array([1, 2, 3, 4])\nn60 = np.diagflat(n0)\n\"\"\"\n[[1 0 0 0]\n [0 2 0 0]\n [0 0 3 0]\n [0 0 0 4]]\n\"\"\"\n\nn1 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nn61 = np.diagflat(n1)\n\"\"\"\n[[1 0 0 0 0 0 0 0]\n [0 2 0 0 0 0 0 0]\n [0 0 3 0 0 0 0 0]\n [0 0 0 4 0 0 0 0]\n [0 0 0 0 5 0 0 0]\n [0 0 0 0 0 6 0 0]\n [0 0 0 0 0 0 7 0]\n [0 0 0 0 0 0 0 8]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#_9","title":"\u5bf9\u89d2\u4e09\u89d2\u521b\u5efa","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#tri","title":"tri\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a**\u5bf9\u89d2\u7ebf(i, i+k)\u53ca\u4ee5\u4e0b\u90e8\u5206\u4e3a1**\uff0c\u5176\u5b83\u4f4d\u7f6e\u4e3a0\u7684\u4e8c\u7ef4\u6570\u7ec4</p> <p><code>tri(N, M=N, k=0, dtype=float, like=None)</code></p> <ol> <li> <p>N: \u884c\u6570</p> </li> <li> <p>M: \u5217\u6570\u3002\u9ed8\u8ba4\u4e0eN\u76f8\u7b49</p> </li> <li> <p>k: \u540c\u4e0a</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3afloat</p> </li> <li> <p>like: \u540c\u4e0a</p> </li> </ol> <pre><code>n62 = np.tri(5)\n\"\"\"\n[[1. 0. 0. 0. 0.]\n [1. 1. 0. 0. 0.]\n [1. 1. 1. 0. 0.]\n [1. 1. 1. 1. 0.]\n [1. 1. 1. 1. 1.]]\n\"\"\"\n\nn63 = np.tri(5, 7)\n\"\"\"\n[[1. 0. 0. 0. 0. 0. 0.]\n [1. 1. 0. 0. 0. 0. 0.]\n [1. 1. 1. 0. 0. 0. 0.]\n [1. 1. 1. 1. 0. 0. 0.]\n [1. 1. 1. 1. 1. 0. 0.]]\n\"\"\"\n\nn64 = np.tri(5, 7, k=1)\n\"\"\"\n[[1. 1. 0. 0. 0. 0. 0.]\n [1. 1. 1. 0. 0. 0. 0.]\n [1. 1. 1. 1. 0. 0. 0.]\n [1. 1. 1. 1. 1. 0. 0.]\n [1. 1. 1. 1. 1. 1. 0.]]\n\"\"\"\n\nn65 = np.tri(5, 7, k=-1)\n\"\"\"\n[[0. 0. 0. 0. 0. 0. 0.]\n [1. 0. 0. 0. 0. 0. 0.]\n [1. 1. 0. 0. 0. 0. 0.]\n [1. 1. 1. 0. 0. 0. 0.]\n [1. 1. 1. 1. 0. 0. 0.]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#_10","title":"\u5750\u6807\u7f51\u683c\u521b\u5efa","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA/#meshgrid","title":"meshgrid\u51fd\u6570","text":"<p>\u8fd4\u56de\u4ece\u5750\u6807\u5411\u91cf\u4e2d\u5f97\u5230\u7684\u5750\u6807\u77e9\u9635\u5143\u7ec4\u3002\u6839\u636e\u4e00\u7ef4\u5750\u6807\u6570\u7ec4 x1, x2,\u2026, xn\uff0c\u751f\u6210 N \u7ef4\u5750\u6807\u6570\u7ec4\uff0c\u7528\u4e8e\u5bf9 N \u7ef4\u7f51\u683c\u4e0a\u7684 N \u7ef4\u6807\u91cf/\u77e2\u91cf\u573a\u8fdb\u884c\u77e2\u91cf\u5316\u8bc4\u4f30\u3002</p> <p><code>meshgrid(*xi, copy=True, sparse=False, indexing='xy')</code></p> <ol> <li> <p>**x1, x2,\u2026, xn\uff1a**\u7f51\u683c\u5750\u6807\u7684\u4e00\u7ef4\u6570\u7ec4\u3002</p> </li> <li> <p>**indexing\uff1a**\u8f93\u51fa\u7684\u7b1b\u5361\u5c14\uff08<code>'xy'</code>\uff0c\u9ed8\u8ba4\uff09\u6216\u77e9\u9635\uff08<code>'ij'</code>\uff09\u7d22\u5f15\u3002</p> </li> </ol> <p>\u5bf9\u4e8e\u957f\u5ea6\u4e3a<code>Ni=len(xi)</code>\u7684\u5411\u91cf x1, x2\uff0c\u2026\uff0cxn\uff0c\u5982\u679c<code>indexing='ij'</code>\uff0c\u5219\u8fd4\u56de <code>(N1, N2, N3,..., Nn)</code> \u5f62\u72b6\u7684\u6570\u7ec4\uff1b\u5982\u679c<code>indexing='xy'</code>\uff0c\u5219\u8fd4\u56de <code>(N2, N1, N3,..., Nn)</code> \u5f62\u72b6\u7684\u6570\u7ec4\uff0c\u5176\u4e2dx1\u7684\u5143\u7d20\u6cbf\u7b2c\u4e00\u7ef4\u91cd\u590d\u4ee5\u586b\u5145\u77e9\u9635\uff0cx2\u5219\u6cbf\u7b2c\u4e8c\u7ef4\u4e3a\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002</p> <ol> <li> <p>**sparse\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u8fd4\u56de\u7684\u5750\u6807\u6570\u7ec4\u7684\u5f62\u72b6\u5728\u7ef4\u5ea6i\u4e0a\u4ece <code>(N1, ..., Ni, ... Nn)</code> \u51cf\u5c11\u5230 <code>(1, ..., 1, Ni, 1, ..., 1)</code> \u3002\u8fd9\u4e9b\u7a00\u758f\u5750\u6807\u7f51\u683c\u65e8\u5728\u4e0e\u5e7f\u64ad\u4e00\u8d77\u4f7f\u7528\u3002\u5f53\u6240\u6709\u5750\u6807\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u65f6\uff0c\u5e7f\u64ad\u4ecd\u7136\u4f1a\u5bfc\u81f4\u5168\u7ef4\u5ea6\u7684\u7ed3\u679c\u6570\u7ec4\u3002\u9ed8\u8ba4\u4e3a<code>False</code>\u3002</p> </li> <li> <p>**copy\uff1a**\u5982\u679c\u4e3a<code>False</code>\uff0c\u5219\u8fd4\u56de\u539f\u59cb\u6570\u7ec4\u7684\u89c6\u56fe\u4ee5\u8282\u7701\u5185\u5b58\u3002\u9ed8\u8ba4\u503c\u4e3a<code>True</code>\u3002\u8bf7\u6ce8\u610f\uff0c<code>sparse=False, copy=False</code>\u53ef\u80fd\u4f1a\u8fd4\u56de\u975e\u8fde\u7eed\u6570\u7ec4\u3002\u6b64\u5916\uff0c\u5e7f\u64ad\u6570\u7ec4\u7684\u591a\u4e2a\u5143\u7d20\u53ef\u80fd\u6307\u5411\u540c\u4e00\u4e2a\u4e2a\u5185\u5b58\u4f4d\u7f6e\u3002\u5982\u679c\u9700\u8981\u5199\u5165\u6570\u7ec4\uff0c\u8bf7\u5148\u8fdb\u884c\u590d\u5236\u3002</p> </li> </ol> <pre><code>x = [1, 2, 3, 4]\ny = [2, 4, 6, 8]\n\ngrid0 = np.meshgrid(x, y, indexing='xy')\n\"\"\"\n(array([[1, 2, 3, 4],\n        [1, 2, 3, 4],\n        [1, 2, 3, 4],\n        [1, 2, 3, 4]]), \n array([[2, 2, 2, 2],\n        [4, 4, 4, 4],\n        [6, 6, 6, 6],\n        [8, 8, 8, 8]]))\n\"\"\"\n\ngrid1 = np.meshgrid(x, y, indexing='ij')\n\"\"\"\n(array([[1, 1, 1, 1],\n        [2, 2, 2, 2],\n        [3, 3, 3, 3],\n        [4, 4, 4, 4]]), \n array([[2, 4, 6, 8],\n        [2, 4, 6, 8],\n        [2, 4, 6, 8],\n        [2, 4, 6, 8]]))\n\"\"\"\n</code></pre> <pre><code>import matplotlib.pyplot as plt\n\nx = [1, 2, 3, 4]\ny = [2, 4, 6, 8]\ngrid = np.meshgrid(x, y, indexing='xy')\nplt.plot(grid[0], grid[1], linestyle='', marker='o')\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E7%9F%A9%E9%98%B5%E7%9A%84%E5%88%9B%E5%BB%BA%E5%8F%8A%E6%93%8D%E4%BD%9C/","title":"\u77e9\u9635\u7684\u521b\u5efa\u53ca\u64cd\u4f5c","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E7%9F%A9%E9%98%B5%E7%9A%84%E5%88%9B%E5%BB%BA%E5%8F%8A%E6%93%8D%E4%BD%9C/#_1","title":"\u6982\u5ff5","text":"<p>\u77e9\u9635(matrix)\u662f\u6570\u7ec4\u7684\u5206\u652f\uff0c\u4e8c\u7ef4\u6570\u7ec4\u4e5f\u53eb\u77e9\u9635\uff0c\u4e24\u8005\u6709\u65f6\u5019\u53ef\u901a\u7528</p> <pre><code>m0 = np.matrix(np.array([[1, 2, 3, 4], [5, 6, 7, 8]]))\nprint(m0, type(m0))\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]] &lt;class 'numpy.matrix'&gt;\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E7%9F%A9%E9%98%B5%E7%9A%84%E5%88%9B%E5%BB%BA%E5%8F%8A%E6%93%8D%E4%BD%9C/#_2","title":"\u77e9\u9635\u521b\u5efa","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E7%9F%A9%E9%98%B5%E7%9A%84%E5%88%9B%E5%BB%BA%E5%8F%8A%E6%93%8D%E4%BD%9C/#matrix","title":"matrix\u5bf9\u8c61","text":"<p><code>matrix(data, dtype=None, copy=True)</code></p> <ol> <li> <p>data: \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216\u7c7b\u4f3c\u6570\u7ec4\u5bf9\u8c61\u3002\u5982\u679c\u662f\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u901a\u8fc7\",\"\u6216\" \"\u5206\u9694\u5217\uff0c\u901a\u8fc7\";\"\u5206\u9694\u884c</p> </li> <li> <p>dtype: \u540c\u6570\u7ec4</p> </li> <li> <p>copy: \u540c\u6570\u7ec4\u3002\u9ed8\u8ba4\u4e3aTrue</p> </li> </ol> <pre><code># \u57fa\u672c\u521b\u5efa\nm0 = np.matrix([1, 2, 3, 4])\nprint(m0)\n\"\"\"\n[[1 2 3 4]]\n\"\"\"\n\nm1 = np.matrix([[1, 2, 3, 4], [5, 6, 7, 8]])\nprint(m1)\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]]\n\"\"\"\n\nm2 = np.matrix(np.array([[1, 2, 3, 4], [5, 6, 7, 8]]))\nprint(m2)\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]]\n\"\"\"\n\nm3 = np.matrix(\"1 2 3 4;5 6 7 8\")\nprint(m3)\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]]\n\"\"\"\n\nm4 = np.matrix(\"1, 2, 3, 4;5, 6, 7, 8\")\nprint(m4)\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]]\n\"\"\"\n\n\n# \u8bbe\u7f6edtype\nm5 = np.matrix(\"1 2 3 4;5 6 7 8\", dtype=np.float64)\nprint(m5)\n\"\"\"\n[[1. 2. 3. 4.]\n [5. 6. 7. 8.]]\n\"\"\"\n\n\n\n# \u8bbe\u7f6ecopy\nn0 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nm6 = np.matrix(n0, copy=True)\nn0[0] = 10\nm6[1] = 20\nprint(n0, m6)\n\"\"\"\n[[10 10 10 10]\n [ 5  6  7  8]] \n\n[[ 1  2  3  4]\n [20 20 20 20]]\n\"\"\"\n\nn0 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nm7 = np.matrix(n0, copy=False)\nn0[0] = 10\nm7[1] = 20\nprint(n0, m7)\n\"\"\"\n[[10 10 10 10]\n [20 20 20 20]] \n\n[[10 10 10 10]\n [20 20 20 20]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E7%9F%A9%E9%98%B5%E7%9A%84%E5%88%9B%E5%BB%BA%E5%8F%8A%E6%93%8D%E4%BD%9C/#asmatrixmat","title":"asmatrix\u51fd\u6570\uff08mat\u51fd\u6570\uff09","text":"<p><code>asmatrix(data, dtype=None)</code></p> <p><code>mat(data, dtype=None)</code></p> <p>&lt;=&gt;<code>matrix(data, dtype=None, copy=False)</code></p> <pre><code>n0 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nm8 = np.asmatrix(n0)\nn0[0] = 10\nm8[1] = 20\nprint(n0, m8)\n\"\"\"\n[[10 10 10 10]\n [20 20 20 20]] \n\n[[10 10 10 10]\n [20 20 20 20]]\n\"\"\"\n\n\n\nn0 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nm9 = np.mat(n0)\nn0[0] = 10\nm9[1] = 20\nprint(n0, m9)\n\"\"\"\n[[10 10 10 10]\n [20 20 20 20]] \n\n[[10 10 10 10]\n [20 20 20 20]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E7%9F%A9%E9%98%B5%E7%9A%84%E5%88%9B%E5%BB%BA%E5%8F%8A%E6%93%8D%E4%BD%9C/#_3","title":"\u77e9\u9635\u5c5e\u6027","text":"<p>\u4e0e\u6570\u7ec4\u5bf9\u8c61\u5171\u6709\u76f8\u540c\u7684\u5c5e\u6027\uff0c\u540c\u65f6\u5c24\u5176\u72ec\u7279\u7684\u5c5e\u6027</p> <ol> <li> <p>A: \u8f6c\u6362\u4e3a\u6570\u7ec4</p> </li> <li> <p>A1: \u8f6c\u6362\u4e3a\u4e00\u7ef4\u6570\u7ec4</p> </li> <li> <p>H: \u8f6c\u7f6e\u540e\u6c42\u590d\u6570\u7684\u5171\u8f6d\u590d\u6570\uff0c\u82e5\u53ea\u6709\u5b9e\u90e8\u5219\u76f8\u5f53\u4e8e\u8f6c\u7f6e</p> </li> <li> <p>I: \u9006\u77e9\u9635\u3002\u77e9\u9635\u4e0e\u5176\u9006\u77e9\u9635\u76f8\u4e58\u7684\u7ed3\u679c\u662fnp.matrix(np.eye(self[0,:].size))\uff0c\u53ea\u662f\u6d6e\u70b9\u6570\u8ba1\u7b97\u5b58\u5728\u7cbe\u5ea6\u95ee\u9898</p> </li> </ol> <pre><code>m0 = np.matrix(np.array([[1, 2], [3, 4]]))\nprint(m0, type(m0))\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]] &lt;class 'numpy.matrix'&gt;\n\"\"\"\n\n# A: \u8f6c\u6362\u4e3a\u6570\u7ec4\nm1 = m0.A\nprint(m1, type(m1))\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]] &lt;class 'numpy.ndarray'&gt;\n\"\"\"\n\n\n\n# A1: \u8f6c\u6362\u4e3a\u4e00\u7ef4\u6570\u7ec4\nm2 = m0.A1\nprint(m2, type(m2))\n\"\"\"\n[1 2 3 4 5 6 7 8] &lt;class 'numpy.ndarray'&gt;\n\"\"\"\n\n\n\n# I: \u6c42\u9006\nm3 = m0.I\nprint(m3)\n\"\"\"\n[[-5.50000000e-01  2.50000000e-01]\n [-2.25000000e-01  1.25000000e-01]\n [ 1.00000000e-01 -2.10437669e-17]\n [ 4.25000000e-01 -1.25000000e-01]]\n\"\"\"\n\nm4 = m0 * m3\nprint(m4)\n\"\"\"\n[[ 1.00000000e+00 -2.77555756e-16]\n [ 1.33226763e-15  1.00000000e+00]]\n\"\"\"\n\n\n\n# H: \u8f6c\u7f6e\u540e\u6c42\u590d\u6570\u7684\u5171\u8f6d\u590d\u6570\uff0c\u82e5\u53ea\u6709\u5b9e\u90e8\u5219\u76f8\u5f53\u4e8e\u8f6c\u7f6e\nm4 = m0.H\nprint(m4)\n\"\"\"\n[[1 5]\n [2 6]\n [3 7]\n [4 8]]\n\"\"\"\n\nm5 = m0 + m0 * 1j\nprint(m5)\n\"\"\"\n[[1.+1.j 2.+2.j 3.+3.j 4.+4.j]\n [5.+5.j 6.+6.j 7.+7.j 8.+8.j]]\n\"\"\"\n\nm6 = m5.H\nprint(m6)\n\"\"\"\n[[1.-1.j 5.-5.j]\n [2.-2.j 6.-6.j]\n [3.-3.j 7.-7.j]\n [4.-4.j 8.-8.j]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Numpy/%E7%9F%A9%E9%98%B5%E7%9A%84%E5%88%9B%E5%BB%BA%E5%8F%8A%E6%93%8D%E4%BD%9C/#_4","title":"\u77e9\u9635\u8fd0\u7b97","text":"<p>\u4e0e\u6570\u7ec4\u8fd0\u7b97\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u5bf9\u4e8e\u77e9\u9635\u7684\u4e58\u6cd5\u8fd0\u7b97\u4e2d\uff0c* \u4e5f\u662f\u6267\u884c\u70b9\u79ef\u8fd0\u7b97\uff0c\u539f\u7406\u662f\u5c06\u4e24\u4e2a\u6570\u7ec4\u6216\u77e9\u9635\uff08\u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u77e9\u9635\uff09\u5747\u6267\u884casmatrix\u51fd\u6570\u540e\u518d\u6267\u884cdot\u51fd\u6570\u3002\uff08\u6ce8\u610f\uff1amultiply\u51fd\u6570\u4e0d\u53d1\u751f\u53d8\u5316\uff09</p> <pre><code>n0 = np.arange(1, 17).reshape(4, 4)\nprint(n0)\n\"\"\"\n[[ 1  2  3  4]\n [ 5  6  7  8]\n [ 9 10 11 12]\n [13 14 15 16]]\n\"\"\"\n\nn1 = np.array([1, 2, 3, 4])\nprint(n1)\n\"\"\"\n[1 2 3 4]\n\"\"\"\n\nprint(n0 * n1)\n\"\"\"\n[[ 1  4  9 16]\n [ 5 12 21 32]\n [ 9 20 33 48]\n [13 28 45 64]]\n\"\"\"\n\nprint(n1 * np.asmatrix(n0))\n\"\"\"\n[[ 90 100 110 120]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/","title":"\u56fe\u89e3","text":"<p>\u6bcf\u4e00\u5217\u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u4e2aSeries\u5bf9\u8c61\uff0c\u591a\u4e2aSeries\u5bf9\u8c61\u5408\u4e3aDataFrame\u5bf9\u8c61</p> <p></p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_2","title":"\u521b\u5efa","text":"<p><code>DataFrame(data=None, index=None, columns=None, dtype=None, copy=None)</code></p> <p>\u7c7b\u4f3cSeries\u5bf9\u8c61</p> <ol> <li> <p>data: \u6570\u636e\u3002\u53ef\u4ee5\u662fndarray\u6570\u7ec4\u3001series\u5bf9\u8c61\u3001\u5217\u8868\u3001\u5b57\u5178\u7b49</p> </li> <li> <p>index: \u884c\u7d22\u5f15\uff08\u6807\u7b7e\uff09</p> </li> <li> <p>columns: \u5217\u7d22\u5f15\uff08\u6807\u7b7e\uff09</p> </li> <li> <p>dtype: \u6bcf\u4e00\u5217\u6570\u636e\u7c7b\u578b</p> </li> </ol> Pandas\u6570\u636e\u7c7b\u578b Python\u6570\u636e\u7c7b\u578b object str int64 int float64 float bool bool datetime64 datetime64[ns] timedelta[ns] NA category NA <ol> <li>copy: \u7528\u4e8e\u590d\u5236\u6570\u636e</li> </ol> <pre><code>import pandas as pd\n\npd.set_option(\"display.unicode.east_asian_width\", True)  # \u8f93\u51fa\u5217\u540d\u5bf9\u9f50\npd.set_option(\"display.max_rows\", 1000)  # \u4fee\u6539\u6700\u5927\u884c\u6570\uff0c\u9632\u6b62\u884c\u663e\u793a\u4e0d\u5168\npd.set_option(\"display.max_columns\", 1000)  # \u4fee\u6539\u6700\u5927\u5217\u6570\uff0c\u9632\u6b62\u5217\u663e\u793a\u4e0d\u5168\n\n# \u4e8c\u7ef4\u6570\u7ec4\u521b\u5efa: \u884c\u4e3a\u5355\u4f4d\ndata = [[90, 70, 100], \n        [100, 80, 88], \n        [85, 90, 95]]\nindex = [\"\u5c0f\u660e\", \"\u5c0f\u7ea2\", \"\u5c0f\u4eae\"]\ncolumns = [\"\u8bed\u6587\", \"\u6570\u5b66\", \"\u82f1\u8bed\"]\ndf1 = pd.DataFrame(data=data, index=index, columns=columns)\nprint(df1)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    70   100\n\u5c0f\u7ea2   100    80    88\n\u5c0f\u4eae    85    90    95\n\"\"\"\ndata = [[90, 70, 100], \n        [100, 80, 88], \n        [85, None, 95]]\nindex = [\"\u5c0f\u660e\", \"\u5c0f\u7ea2\", \"\u5c0f\u4eae\"]\ndf2 = pd.DataFrame(data=data, index=index, columns=[1, 2, 3])\nprint(df2)\n\"\"\"\n        1     2    3\n\u5c0f\u660e   90  70.0  100\n\u5c0f\u7ea2  100  80.0   88\n\u5c0f\u4eae   85   NaN   95\n\"\"\"\n\n\n\n# \u5b57\u5178\u521b\u5efa: \u5217\u4e3a\u5355\u4f4d\ndata = {\n    \"\u8bed\u6587\": [90, 100, 85],\n    \"\u6570\u5b66\": [70, 80, 90],\n    \"\u82f1\u8bed\": [100, 88, 95],\n    \"\u73ed\u7ea7\": \"\u9ad8\u4e007\u73ed\"        # \u5355\u4e00\u6570\u636e\u81ea\u52a8\u586b\u5145\n}\nindex = [\"\u5c0f\u660e\", \"\u5c0f\u7ea2\", \"\u5c0f\u4eae\"]\ndf3 = pd.DataFrame(data=data, index=index)\nprint(df3)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed     \u73ed\u7ea7\n\u5c0f\u660e    90    70   100  \u9ad8\u4e007\u73ed\n\u5c0f\u7ea2   100    80    88  \u9ad8\u4e007\u73ed\n\u5c0f\u4eae    85    90    95  \u9ad8\u4e007\u73ed\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_3","title":"\u64cd\u4f5c","text":"<p>\u540cSeries\u5bf9\u8c61</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_4","title":"\u7d22\u5f15","text":"<ol> <li> <p>\u6807\u7b7e\u7d22\u5f15\uff1a\u884c\u6807\u7b7e\u3001\u5217\u6807\u7b7e</p> </li> <li> <p>\u4f4d\u7f6e\u7d22\u5f15\uff1a\u884c\u4f4d\u7f6e\u3001\u5217\u4f4d\u7f6e</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_5","title":"\u5355\u503c\u7d22\u5f15\uff1a\u7d22\u5f15\u5217","text":"<p>\u53ea\u80fd\u6807\u7b7e\u7d22\u5f15</p> <pre><code>print(df1.\u8bed\u6587)    # \u4e0d\u63a8\u8350\u4f7f\u7528\n\"\"\"\n\u5c0f\u660e     90\n\u5c0f\u7ea2    100\n\u5c0f\u4eae     90\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\nprint(df1[\"\u8bed\u6587\"]) # \u63a8\u8350\u4f7f\u7528\n\"\"\"\n\u5c0f\u660e     90\n\u5c0f\u7ea2    100\n\u5c0f\u4eae     90\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_6","title":"\u591a\u503c\u7d22\u5f15\uff1a\u7d22\u5f15\u5217","text":"<p>\u53ea\u80fd\u6807\u7b7e\u7d22\u5f15</p> <pre><code>print(df1[[\"\u8bed\u6587\", \"\u6570\u5b66\"]])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66\n\u5c0f\u660e    90    90\n\u5c0f\u7ea2   100    80\n\u5c0f\u4eae    90    90\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_7","title":"\u5207\u7247\u7d22\u5f15\uff1a\u7d22\u5f15\u884c","text":"<pre><code># \u6807\u7b7e\u5207\u7247\uff1a\u5305\u5934\u5305\u5c3e\nprint(df1[\"\u5c0f\u660e\":\"\u5c0f\u7ea2\"])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    90   100\n\u5c0f\u7ea2   100    80    80\n\"\"\"\n\n# \u4f4d\u7f6e\u5207\u7247\uff1a\u5305\u5934\u4e0d\u5305\u5c3e\nprint(df1[0:2])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    90   100\n\u5c0f\u7ea2   100    80    80\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_8","title":"\u6761\u4ef6\u7d22\u5f15","text":"<pre><code>print(df1[df1 &gt;= 90])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66   \u82f1\u8bed\n\u5c0f\u660e    90  90.0  100.0\n\u5c0f\u7ea2   100   NaN    NaN\n\u5c0f\u4eae    90  90.0    NaN\n\"\"\"\n\nprint(df1[df1[\"\u6570\u5b66\"] &gt;= 90])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    90   100\n\u5c0f\u4eae    90    90    80\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#locindex-column","title":"loc[index, column]\u6807\u7b7e\u7d22\u5f15","text":"<p>\u884c\u548c\u5217\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u7d22\u5f15</p> <ol> <li>\u5355\u503c\u7d22\u5f15</li> </ol> <p>```Python print(df1.loc[:, \"\u8bed\u6587\"]) # \u884c\u4f4d\u7f6e\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4ece\u5934\u5230\u5c3e\u7684\u5207\u7247 \"\"\" \u5c0f\u660e     90 \u5c0f\u7ea2    100 \u5c0f\u4eae     90 Name: \u8bed\u6587, dtype: int64 \"\"\"</p> <p>print(df1.loc[\"\u5c0f\u660e\"])    # \u7b49\u4ef7\u4e8edf1.loc[\"\u5c0f\u660e\", :] \"\"\" \u8bed\u6587     90 \u6570\u5b66     90 \u82f1\u8bed    100 Name: \u5c0f\u660e, dtype: int64 \"\"\"</p> <p>print(df1.loc[\"\u5c0f\u660e\", \"\u8bed\u6587\"]) \"\"\" 90 \"\"\" <pre><code>9. **\u591a\u503c\u7d22\u5f15**\n\n  ```Python\nprint(df1.loc[:, [\"\u8bed\u6587\", \"\u6570\u5b66\"]])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66\n\u5c0f\u660e    90    90\n\u5c0f\u7ea2   100    80\n\u5c0f\u4eae    90    90\n\"\"\"\n\nprint(df1.loc[[\"\u5c0f\u660e\", \"\u5c0f\u4eae\"]])    # \u7b49\u4ef7\u4e8edf1.loc[[\"\u5c0f\u660e\", \"\u5c0f\u4eae\"], :]\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    90   100\n\u5c0f\u4eae    90    90    80\n\"\"\"\n\nprint(df1.loc[[\"\u5c0f\u660e\", \"\u5c0f\u4eae\"], [\"\u8bed\u6587\", \"\u6570\u5b66\"]])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66\n\u5c0f\u660e    90    90\n\u5c0f\u4eae    90    90\n\"\"\"\n</code></pre></p> <ol> <li>\u5207\u7247\u7d22\u5f15\uff1a\u5305\u5934\u5305\u5c3e</li> </ol> <p>```Python print(df1.loc[:, \"\u6570\u5b66\":\"\u82f1\u8bed\"]) \"\"\"       \u6570\u5b66  \u82f1\u8bed \u5c0f\u660e    90   100 \u5c0f\u7ea2    80    80 \u5c0f\u4eae    90    80 \"\"\"</p> <p>print(df1.loc[\"\u5c0f\u7ea2\":\"\u5c0f\u4eae\"])    # \u7b49\u4ef7\u4e8edf1.loc[\"\u5c0f\u7ea2\":\"\u5c0f\u4eae\", :] \"\"\"       \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed \u5c0f\u7ea2   100    80    80 \u5c0f\u4eae    90    90    80 \"\"\"</p> <p>print(df1.loc[\"\u5c0f\u7ea2\":\"\u5c0f\u4eae\", \"\u6570\u5b66\":\"\u82f1\u8bed\"]) \"\"\"       \u6570\u5b66  \u82f1\u8bed \u5c0f\u7ea2    80    80 \u5c0f\u4eae    90    80 \"\"\" <pre><code>11. **\u6761\u4ef6\u7d22\u5f15**\n\n  ```Python\nprint(df1.loc[:, df1.loc[\"\u5c0f\u660e\"] &gt; 80])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    90   100\n\u5c0f\u7ea2   100    80    80\n\u5c0f\u4eae    90    90    80\n\"\"\"\n\nprint(df1.loc[df1[\"\u8bed\u6587\"] &gt; 90])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u7ea2   100    80    80\n\"\"\"\n\nprint(df1.loc[df1[\"\u8bed\u6587\"] &gt; 90, df1.loc[\"\u5c0f\u660e\"] &gt; 80])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u7ea2   100    80    80\n\"\"\"\n</code></pre></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#ilocindex-column","title":"iloc[index, column]\u4f4d\u7f6e\u7d22\u5f15","text":"<p>\u884c\u548c\u5217\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u7d22\u5f15</p> <ol> <li>\u5355\u503c\u7d22\u5f15</li> </ol> <p>```Python print(df1.iloc[:, 0]) \"\"\" \u5c0f\u660e     90 \u5c0f\u7ea2    100 \u5c0f\u4eae     90 Name: \u8bed\u6587, dtype: int64 \"\"\"</p> <p>print(df1.iloc[0])    # \u7b49\u4ef7\u4e8edf1.iloc[0, :] \"\"\" \u8bed\u6587     90 \u6570\u5b66     90 \u82f1\u8bed    100 Name: \u5c0f\u660e, dtype: int64 \"\"\"</p> <p>print(df1.iloc[0, 0]) \"\"\" 90 \"\"\" <pre><code>13. **\u591a\u503c\u7d22\u5f15**\n\n  ```Python\nprint(df1.iloc[:, [0, 1]])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66\n\u5c0f\u660e    90    90\n\u5c0f\u7ea2   100    80\n\u5c0f\u4eae    90    90\n\"\"\"\n\nprint(df1.iloc[[0, 2]])    # \u7b49\u4ef7\u4e8edf1.iloc[[0, 2], :]\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    90   100\n\u5c0f\u4eae    90    90    80\n\"\"\"\n\nprint(df1.iloc[[0, 2], [0, 1]])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66\n\u5c0f\u660e    90    90\n\u5c0f\u4eae    90    90\n\"\"\"\n</code></pre></p> <ol> <li>\u5207\u7247\u7d22\u5f15\uff1a\u5305\u5934\u4e0d\u5305\u5c3e</li> </ol> <p>```Python print(df1.iloc[:, :2]) \"\"\"       \u8bed\u6587  \u6570\u5b66 \u5c0f\u660e    90    90 \u5c0f\u7ea2   100    80 \u5c0f\u4eae    90    90 \"\"\"</p> <p>print(df1.iloc[:2])    # \u7b49\u4ef7\u4e8edf1.iloc[:2, :] \"\"\"       \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed \u5c0f\u660e    90    90   100 \u5c0f\u7ea2   100    80    80 \"\"\"</p> <p>print(df1.iloc[:2, :2]) \"\"\"       \u8bed\u6587  \u6570\u5b66 \u5c0f\u660e    90    90 \u5c0f\u7ea2   100    80 \"\"\" <pre><code>## iat[index, column]\u4f4d\u7f6e\u7d22\u5f15\n\n```Python\nprint(df1.iat[0, 0])\n\"\"\"\n90\n\"\"\"\n</code></pre></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_9","title":"\u5c5e\u6027","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#values","title":"values","text":"<p><code>df.values</code></p> <p>\u67e5\u770b\u6240\u6709\u6570\u636e</p> <pre><code>print(df1.values)\n\"\"\"\n[[ 90  70 100]\n [100  80  88]\n [ 85  90  95]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#dtypes","title":"dtypes","text":"<p><code>df.dtypes</code></p> <p>\u67e5\u770b\u6240\u6709\u6570\u636e\u7684\u7c7b\u578b</p> <pre><code>print(df1.dtypes)\n\"\"\"\n\u8bed\u6587    int64\n\u6570\u5b66    int64\n\u82f1\u8bed    int64\ndtype: object\n\"\"\"\n\nprint(df2.dtypes)\n\"\"\"\n1      int64\n2    float64\n3      int64\ndtype: object\n\"\"\"\n\nprint(df3.dtypes)\n\"\"\"\n\u8bed\u6587     int64\n\u6570\u5b66     int64\n\u82f1\u8bed     int64\n\u73ed\u7ea7    object\ndtype: object\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#index","title":"index","text":"<p><code>df.index</code></p> <p>\u67e5\u770b\u6240\u6709\u884c\u6807\u7b7e\uff0c\u8d4b\u503c\u53ef\u4fee\u6539</p> <pre><code>print(df1.index)\n\"\"\"\nIndex(['\u5c0f\u660e', '\u5c0f\u7ea2', '\u5c0f\u4eae'], dtype='object')\n\"\"\"\n\ndf1.index = [1, 2, 3]\nprint(df1)\nprint(df1.index)\n\"\"\"\n   \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n1    90    70   100\n2   100    80    88\n3    85    90    95\n\nIndex([1, 2, 3], dtype='int64')\n\"\"\"\n\ndf1.index = [\"\u5c0f\u660e\", \"\u5c0f\u7ea2\", \"\u5c0f\u4eae\"]\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#columns","title":"columns","text":"<p><code>df.columns</code></p> <p>\u67e5\u770b\u6240\u6709\u5217\u6807\u7b7e\uff0c\u8d4b\u503c\u53ef\u4fee\u6539</p> <pre><code>print(df1.columns)\n\"\"\"\nIndex(['\u8bed\u6587', '\u6570\u5b66', '\u82f1\u8bed'], dtype='object')\n\"\"\"\n\ndf1.columns = [1, 2, 3]\nprint(df1)\nprint(df1.columns)\n\"\"\"\n        1   2    3\n\u5c0f\u660e   90  70  100\n\u5c0f\u7ea2  100  80   88\n\u5c0f\u4eae   85  90   95\n\nIndex([1, 2, 3], dtype='int64')\n\"\"\"\n\ndf1.columns = [\"\u8bed\u6587\", \"\u6570\u5b66\", \"\u82f1\u8bed\"]\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#t","title":"T","text":"<p><code>df.T</code></p> <p>\u884c\u5217\u8f6c\u7f6e\uff0c\u8fd4\u56de\u526f\u672c</p> <pre><code>print(df1)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    70   100\n\u5c0f\u7ea2   100    80    88\n\u5c0f\u4eae    85    90    95\n\"\"\"\n\nprint(df1.T)\n\"\"\"\n      \u5c0f\u660e  \u5c0f\u7ea2  \u5c0f\u4eae\n\u8bed\u6587    90   100    85\n\u6570\u5b66    70    80    90\n\u82f1\u8bed   100    88    95\n\"\"\"\n\nprint(df1)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    70   100\n\u5c0f\u7ea2   100    80    88\n\u5c0f\u4eae    85    90    95\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#head","title":"head","text":"<p><code>df.head(n=5)</code></p> <p>\u7b49\u4ef7\u4e8e<code>df[:n]</code>\uff0cn\u9ed8\u8ba45\u3002n\u4e3a\u6b63\u6570\u65f6\u6307\u524dn\u884c\uff0cn\u4e3a\u8d1f\u6570\u65f6\u6307\u9664\u53bb\u540e|n|\u884c</p> <pre><code>print(df1.head())\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    70   100\n\u5c0f\u7ea2   100    80    88\n\u5c0f\u4eae    85    90    95\n\"\"\"\n\nprint(df1.head(2))\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    70   100\n\u5c0f\u7ea2   100    80    88\n\"\"\"\n\nprint(df1.head(-2))\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    70   100\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#tail","title":"tail","text":"<p><code>df.tail(n=5)</code></p> <p>\u7b49\u4ef7\u4e8e<code>df[-n:]</code>\uff0cn\u9ed8\u8ba45\u3002n\u4e3a\u6b63\u6570\u65f6\u6307\u540en\u884c\uff0cn\u4e3a\u8d1f\u6570\u65f6\u6307\u9664\u53bb\u524d|n|\u884c</p> <pre><code>print(df1.tail())\n\"\"\"\n       \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    70   100\n\u5c0f\u7ea2   100    80    88\n\u5c0f\u4eae    85    90    95\n\"\"\"\n\nprint(df1.tail(2))\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u7ea2   100    80    88\n\u5c0f\u4eae    85    90    95\n\"\"\"\n\nprint(df1.tail(-2))\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u4eae    85    90    95\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#shape","title":"shape","text":"<p><code>df.shape</code></p> <p>\u67e5\u770b\u884c\u6570\u548c\u5217\u6570</p> <pre><code>print(df1.shape)\n\"\"\"\n(3, 3)\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#info","title":"info","text":"<p><code>df.info()</code></p> <p>\u67e5\u770b\u7d22\u5f15\u3001\u6570\u636e\u7c7b\u578b\u548c\u5185\u5b58\u4fe1\u606f</p> <pre><code>print(df1.info())\n\"\"\"\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nIndex: 3 entries, \u5c0f\u660e to \u5c0f\u4eae\nData columns (total 3 columns):\n #   Column  Non-Null Count  Dtype\n---  ------  --------------  -----\n 0   \u8bed\u6587      3 non-null      int64\n 1   \u6570\u5b66      3 non-null      int64\n 2   \u82f1\u8bed      3 non-null      int64\ndtypes: int64(3)\nmemory usage: 204.0+ bytes\nNone\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_10","title":"\u589e\u52a0","text":"<p>\u7c7b\u4f3cSeries\u5bf9\u8c61\uff0c\u901a\u8fc7\u7d22\u5f15\u8d4b\u503c\u5b9e\u73b0\uff0c\u7d22\u5f15\u4e0d\u5b58\u5728\u5219\u589e\u52a0\u6570\u636e\uff0c\u7d22\u5f15\u5b58\u5728\u5219\u4fee\u6539\u6570\u636e\u3002\u6b64\u5916\u4e5f\u6709\u51fd\u6570\u5b9e\u73b0\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#insert","title":"insert","text":"<p><code>df.insert(loc, column, value, allow_duplicates=False)</code></p> <p>\u5728\u539fDataFrame\u5bf9\u8c61\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u4e00\u5217</p> <ol> <li> <p>loc: \u63d2\u5165\u7684\u4f4d\u7f6e</p> </li> <li> <p>column: \u63d2\u5165\u5217\u7684\u6807\u7b7e</p> </li> <li> <p>value: \u63d2\u5165\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u662f\u6570\u503c\u3001Series\u5bf9\u8c61\u3001\u6570\u7ec4</p> </li> <li> <p>allow_duplicates: \u662f\u5426\u5141\u8bb8\u5217\u6807\u7b7e\u91cd\u590d\uff0c\u9ed8\u8ba4False</p> </li> </ol> <pre><code>df_inserted = df1.copy()\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    70   100\n\u5c0f\u7ea2   100    80    88\n\u5c0f\u4eae    85    90    95\n\"\"\"\n\ndf_inserted.insert(1, \"\u5386\u53f2\", [90, 89, 97])\n\"\"\"\n      \u8bed\u6587  \u5386\u53f2  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    90    70   100\n\u5c0f\u7ea2   100    89    80    88\n\u5c0f\u4eae    85    97    90    95\n\"\"\"\n\ndf_inserted.insert(1, \"\u5386\u53f2\", [91, 79, 87], allow_duplicates=True)\n\"\"\"\n      \u8bed\u6587  \u5386\u53f2  \u5386\u53f2  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    91    90    70   100\n\u5c0f\u7ea2   100    79    89    80    88\n\u5c0f\u4eae    85    87    97    90    95\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#assign","title":"assign","text":"<p><code>df.assign(**kwargs)</code></p> <p>\u8ffd\u52a0\u4efb\u610f\u5217\uff0c\u8fd4\u56de\u526f\u672c\uff1b\u5217\u6807\u7b7e\u5b58\u5728\u5219\u6539\u5199\u539f\u6709\u5217</p> <pre><code>df_assigned = df1.assign(\u5386\u53f2=[91, 79, 87], \u653f\u6cbb=[90, 89, 97])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u5386\u53f2  \u653f\u6cbb\n\u5c0f\u660e    90    70   100    91    90\n\u5c0f\u7ea2   100    80    88    79    89\n\u5c0f\u4eae    85    90    95    87    97\n\"\"\"\n\ndf_assigned = df1.assign(\u5386\u53f2=[91, 79, 87], \u8bed\u6587=[90, 89, 97])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u5386\u53f2\n\u5c0f\u660e    90    90   100    91\n\u5c0f\u7ea2    89    80    80    79\n\u5c0f\u4eae    97    90    80    87\n\"\"\"\n\ndf_assigned = df1.assign(\u603b\u5206=df1[\"\u8bed\u6587\"]+df1[\"\u6570\u5b66\"]+df1[\"\u82f1\u8bed\"])\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u603b\u5206\n\u5c0f\u660e    90    70   100   260\n\u5c0f\u7ea2   100    80    88   268\n\u5c0f\u4eae    85    90    95   270\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_11","title":"\u4fee\u6539","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#rename","title":"rename","text":"<p><code>df.rename(mapper, axis=0, copy=True, inplace=False, level=None, errors=\"ignore\")</code> <code>df.rename(index=index_mapper, columns=columns_mapper, copy=True, inplace=False, level=None, errors=\"ignore\")</code></p> <p>\u6307\u5b9a\u4fee\u6539\u884c\u5217\u6807\u7b7e</p> <ol> <li> <p>mapper: \u89c4\u5b9a\u5982\u4f55\u4fee\u6539\uff0c\u53ef\u4ee5\u662f\u5b57\u5178\u6216\u8005\u51fd\u6570\uff0c\u9700\u642d\u914daxis\u6765\u786e\u5b9a\u4fee\u6539\u884c\u6216\u5217\u6807\u7b7e</p> </li> <li> <p>axis: 0\u6216\"index\"\u4fee\u6539\u884c\u6807\u7b7e\uff08\u9ed8\u8ba4\uff09\uff1b1\u6216\"columns\"\u4fee\u6539\u5217\u6807\u7b7e</p> </li> <li> <p>index: \u89c4\u5b9a\u5982\u4f55\u4fee\u6539\u884c\u6807\u7b7e &lt;=&gt; (mapper, axis=0)</p> </li> <li> <p>columns: \u89c4\u5b9a\u5982\u4f55\u4fee\u6539\u5217\u6807\u7b7e &lt;=&gt; (mapper, axis=1)</p> </li> <li> <p>copy: \u662f\u5426\u540c\u65f6\u590d\u5236\u57fa\u7840\u6570\u636e\u4f5c\u4e3a\u526f\u672c\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002\u82e5inplace=True\uff0c\u8be5\u53c2\u6570\u5c06\u88ab\u5ffd\u7565</p> </li> <li> <p>inplace: \u662f\u5426\u76f4\u63a5\u4fee\u6539\u539f\u5bf9\u8c61\uff0c\u5982\u679c\u4e3aFalse\uff0c\u5c06\u8fd4\u56de\u526f\u672c;\u5982\u679c\u4e3aTrue\u5219\u8fd4\u56deNone\uff0c\u76f4\u63a5\u4fee\u6539\u539f\u5bf9\u8c61\u3002\u9ed8\u8ba4False</p> </li> <li> <p>level: \u6307\u5b9a\u7d22\u5f15\u7ea7\u522b</p> </li> <li> <p>errors: \u5f53\u5b57\u5178\u7684\u952e\u5e76\u975e\u5df2\u5b58\u5728\u7684\u6807\u7b7e\u65f6\u662f\u5f15\u53d1\u62a5\u9519\u8fd8\u662f\u5ffd\u7565\uff0c\u53ef\u9009\"raise\"\u548c\"ignore\"\uff0c\u9ed8\u8ba4\u4e3a\"ignore\"</p> </li> </ol> <pre><code>df_rename = df1.copy()\nprint(df_rename)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    70   100\n\u5c0f\u7ea2   100    80    88\n\u5c0f\u4eae    85    90    95\n\"\"\"\n\ndf_rename_index = df_rename.rename(index={\"\u5c0f\u660e\": 1, \"\u5c0f\u4eae\": 3})\nprint(df_rename_index)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n1       90    70   100\n\u5c0f\u7ea2   100    80    88\n3       85    90    95\n\"\"\"\n\ndf_rename_columns = df_rename.rename(columns={\"\u8bed\u6587\": 1, \"\u6570\u5b66\": 2})\nprint(df_rename_columns)\n\"\"\"\n        1   2  \u82f1\u8bed\n\u5c0f\u660e   90  70   100\n\u5c0f\u7ea2  100  80    88\n\u5c0f\u4eae   85  90    95\n\"\"\"\n\ndf_rename_index = df_rename.rename(index=str.upper)\nprint(df_rename_index)\n\"\"\"\n   \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\nA    90    70   100\nB   100    80    88\nC    85    90    95\n\"\"\"\n\ndf_rename_columns = df_rename.rename(columns={\"\u8bed\u6587\": 1, \"\u6570\u5b66\": 2, \"\u5386\u53f2\": 10})\nprint(df_rename_columns)\n\"\"\"\n     1   2  \u82f1\u8bed\na   90  70   100\nb  100  80    88\nc   85  90    95\n\"\"\"\n\ndf_rename_columns = df_rename.rename(columns={\"\u8bed\u6587\": 1, \"\u6570\u5b66\": 2, \"\u5386\u53f2\": 10}, errors=\"raise\")\nprint(df_rename_columns)\n\"\"\"\nKeyError: \"['\u5386\u53f2'] not found in axis\"\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#set_index","title":"set_index","text":"<p><code>df.set_index(keys, *, drop=True, append=False, inplace=False, verify_integrity=False)</code></p> <p>\u5c06\u73b0\u6709\u5217\u6216\u8005\u65b0\u5e8f\u5217\u8bbe\u7f6e\u4e3a\u7d22\u5f15\u5217</p> <ol> <li> <p>keys\uff1a\u4e00\u4e2a\u6216\u591a\u4e2a\u73b0\u6709\u5217\u6216\u8005\u65b0\u5e8f\u5217</p> </li> <li> <p>drop\uff1a\u662f\u5426\u79fb\u9664\u4f5c\u4e3a\u65b0\u7d22\u5f15\u5217\u7684\u539f\u5217\u3002\u9ed8\u8ba4True</p> </li> <li> <p>append\uff1a\u662f\u5426\u4ec5\u5728\u539f\u7d22\u5f15\u5217\u540e\u8ffd\u52a0\u65b0\u7d22\u5f15\u5217\uff0c\u4e0d\u5220\u9664\u539f\u7d22\u5f15\u5217\u3002\u9ed8\u8ba4False</p> </li> <li> <p>inplace\uff1a\u662f\u5426\u6539\u53d8\u539f\u5bf9\u8c61\u3002\u9ed8\u8ba4False</p> </li> <li> <p>verify_integrity\uff1a\u662f\u5426\u68c0\u67e5\u7d22\u5f15\u5217\u91cd\u590d\u503c\uff0c\u91cd\u590d\u5219\u62a5\u9519\u3002\u9ed8\u8ba4False</p> </li> </ol> <pre><code>df_score = pd.DataFrame(data={\"\u59d3\u540d\": [\"\u5c0f\u90d1\", \"\u5c0f\u5f20\", \"\u5c0f\u6587\", \"\u5c0f\u7ea2\", \"\u5c0f\u660e\", \"\u5c0f\u660e\"],\n                              \"\u5b66\u53f72\": [\"07\", \"02\", \"08\", \"04\", \"01\", \"09\"],\n                              \"\u8bed\u6587\": [90, 95, 91, 90, 85, 89],\n                              \"\u6570\u5b66\": [91, 90, 85, 80, 99, 97],\n                              \"\u82f1\u8bed\": [95, 97, 98, 94, 92, 87],\n                              \"\u6392\u540d\": [7, 2, 8, 4, 1, 9]})\nprint(df_score)\n\"\"\"\n   \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d\n0  \u5c0f\u90d1    07    90    91    95     7\n1  \u5c0f\u5f20    02    95    90    97     2\n2  \u5c0f\u6587    08    91    85    98     8\n3  \u5c0f\u7ea2    04    90    80    94     4\n4  \u5c0f\u660e    01    85    99    92     1\n5  \u5c0f\u660e    09    89    97    87     9\n\"\"\"\n\nprint(df_score.set_index(\"\u59d3\u540d\"))\n\"\"\"\n     \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d\n\u59d3\u540d\n\u5c0f\u90d1    07    90    91    95     7\n\u5c0f\u5f20    02    95    90    97     2\n\u5c0f\u6587    08    91    85    98     8\n\u5c0f\u7ea2    04    90    80    94     4\n\u5c0f\u660e    01    85    99    92     1\n\u5c0f\u660e    09    89    97    87     9\n\"\"\"\n\nprint(df_score.set_index(\"\u59d3\u540d\", drop=False))\n\"\"\"\n      \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d\n\u59d3\u540d\n\u5c0f\u90d1  \u5c0f\u90d1    07    90    91    95     7\n\u5c0f\u5f20  \u5c0f\u5f20    02    95    90    97     2\n\u5c0f\u6587  \u5c0f\u6587    08    91    85    98     8\n\u5c0f\u7ea2  \u5c0f\u7ea2    04    90    80    94     4\n\u5c0f\u660e  \u5c0f\u660e    01    85    99    92     1\n\u5c0f\u660e  \u5c0f\u660e    09    89    97    87     9\n\"\"\"\n\nprint(df_score.set_index(\"\u59d3\u540d\", append=True))\n\"\"\"\n       \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d\n  \u59d3\u540d\n0 \u5c0f\u90d1    07    90    91    95     7\n1 \u5c0f\u5f20    02    95    90    97     2\n2 \u5c0f\u6587    08    91    85    98     8\n3 \u5c0f\u7ea2    04    90    80    94     4\n4 \u5c0f\u660e    01    85    99    92     1\n5 \u5c0f\u660e    09    89    97    87     9\n\"\"\"\n\nprint(df_score.set_index(\"\u59d3\u540d\", verify_integrity=True))\n\"\"\"\nValueError: Index has duplicate keys: Index(['\u5c0f\u660e'], dtype='object', name='\u59d3\u540d')\n\"\"\"\n\nprint(df_score.set_index([\"\u59d3\u540d\", \"\u5b66\u53f72\"]))\n\"\"\"\n            \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d\n\u59d3\u540d \u5b66\u53f72\n\u5c0f\u90d1 07       90    91    95     7\n\u5c0f\u5f20 02       95    90    97     2\n\u5c0f\u6587 08       91    85    98     8\n\u5c0f\u7ea2 04       90    80    94     4\n\u5c0f\u660e 01       85    99    92     1\n     09       89    97    87     9\n\"\"\"\n\nprint(df_score.set_index(pd.Series([1, 2, 3, 4, 5, 6])))\n\"\"\"\n   \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d\n1  \u5c0f\u90d1    07    90    91    95     7\n2  \u5c0f\u5f20    02    95    90    97     2\n3  \u5c0f\u6587    08    91    85    98     8\n4  \u5c0f\u7ea2    04    90    80    94     4\n5  \u5c0f\u660e    01    85    99    92     1\n6  \u5c0f\u660e    09    89    97    87     9\n\"\"\"\n\nprint(df_score.set_index([pd.Series([1, 2, 3, 4, 5, 6]), \"\u59d3\u540d\"]))\n\"\"\"\n       \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d\n  \u59d3\u540d\n1 \u5c0f\u90d1    07    90    91    95     7\n2 \u5c0f\u5f20    02    95    90    97     2\n3 \u5c0f\u6587    08    91    85    98     8\n4 \u5c0f\u7ea2    04    90    80    94     4\n5 \u5c0f\u660e    01    85    99    92     1\n6 \u5c0f\u660e    09    89    97    87     9\n\"\"\"\n\nprint(df_score.set_index([pd.Series([1, 2, 3, 4, 5, 6]), pd.Series([1, 2, 3, 4, 5, 6])*2]))\n\"\"\"\n      \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d\n1 2   \u5c0f\u90d1    07    90    91    95     7\n2 4   \u5c0f\u5f20    02    95    90    97     2\n3 6   \u5c0f\u6587    08    91    85    98     8\n4 8   \u5c0f\u7ea2    04    90    80    94     4\n5 10  \u5c0f\u660e    01    85    99    92     1\n6 12  \u5c0f\u660e    09    89    97    87     9\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#reset_index","title":"reset_index","text":"<p><code>df.reset_index(level=None, *, drop=False, inplace=False, col_level=0, col_fill='', allow_duplicates=&lt;no_default&gt;, names=None)</code></p> <p>\u91cd\u7f6e\u7d22\u5f15\u5217\uff0c\u5e76\u5c06\u539f\u7d22\u5f15\u5217\u63d2\u56de\u6570\u636e\u5217</p> <ol> <li> <p>level\uff1a\u6307\u5b9a\u91cd\u7f6e\u7684\u7d22\u5f15\u5c42\u7ea7\uff0c\u53ef\u4ee5\u662f\u6574\u6570\u3001\u5b57\u7b26\u4e32\u3001\u5143\u7ec4\u3001\u5217\u8868\u3002\u9ed8\u8ba4None\uff0c\u5373\u91cd\u7f6e\u6bcf\u4e00\u5c42\u7d22\u5f15</p> </li> <li> <p>drop\uff1a\u662f\u5426\u5220\u9664\u539f\u7d22\u5f15\u5217\u800c\u4e0d\u63d2\u56de\u539f\u5bf9\u8c61\u6570\u636e\u5217\u3002\u9ed8\u8ba4False\uff0c\u5373\u63d2\u56de\u6570\u636e\u5217</p> </li> <li> <p>inplace\uff1a\u540c\u4e0a</p> </li> <li> <p>col_level\uff1a\u82e5\u5217\u6807\u7b7e\u4e5f\u6709\u591a\u4e2a\u5c42\u7ea7\uff0c\u6307\u5b9a\u5c06\u5217\u6807\u7b7e\u63d2\u56de\u7684\u5c42\u7ea7\u3002\u9ed8\u8ba40\uff0c\u63d2\u56de\u7b2c\u4e00\u5c42</p> </li> <li> <p>col_fill\uff1a\u82e5\u5217\u6807\u7b7e\u4e5f\u6709\u591a\u4e2a\u5c42\u7ea7\uff0c\u5219\u786e\u5b9a\u63d2\u56de\u5217\u5176\u4ed6\u7ea7\u522b\u7684\u547d\u540d\u65b9\u5f0f\u3002\u9ed8\u8ba4\"\"\u3002\u5982\u679c None \uff0c\u5219\u91cd\u590d\u5176\u540d\u79f0</p> </li> <li> <p>allow_duplicates\uff1a\u91cd\u7f6e\u540e\uff0c\u662f\u5426\u5141\u8bb8\u51fa\u73b0\u91cd\u590d\u7684\u5217\u6807\u7b7e\u3002\u9ed8\u8ba4\u4e0d\u5141\u8bb8\u91cd\u590d</p> </li> <li> <p>names\uff1a\u91cd\u547d\u540d\u539f\u7d22\u5f15\u5c42\u7ea7\u518d\u63d2\u56de\u6570\u636e\u5217\uff0c\u957f\u5ea6\u9700\u4e0e\u7d22\u5f15\u5c42\u6570\u76f8\u540c</p> </li> </ol> <pre><code>df_info = pd.DataFrame(data={\"\u59d3\u540d\": [\"\u5c0f\u660e\", \"\u5c0f\u5f20\", \"\u5c0f\u4eae\", \"\u5c0f\u7ea2\", \"\u5c0f\u767d\", \"\u5c0f\u674e\"],\n                             \"\u6027\u522b\": [\"\u7537\", \"\u7537\", \"\u5973\", \"\u7537\", \"\u5973\", \"\u5973\"],\n                             \"\u5e74\u9f84\": [21, 22, 23, 20, 22, 25],\n                             \"\u5b66\u53f71\": [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\"],\n                             \"\u6392\u540d\": [1, 2, 3, 4, 5, 6]})\ndf_score = pd.DataFrame(data={\"\u59d3\u540d\": [\"\u5c0f\u90d1\", \"\u5c0f\u5f20\", \"\u5c0f\u6587\", \"\u5c0f\u7ea2\", \"\u5c0f\u660e\", \"\u5c0f\u660e\"],\n                              \"\u5b66\u53f72\": [\"07\", \"02\", \"08\", \"04\", \"01\", \"09\"],\n                              \"\u8bed\u6587\": [90, 95, 91, 90, 85, 89],\n                              \"\u6570\u5b66\": [91, 90, 85, 80, 99, 97],\n                              \"\u82f1\u8bed\": [95, 97, 98, 94, 92, 87],\n                              \"\u6392\u540d\": [7, 2, 8, 4, 1, 9]})\ndf_index = pd.concat([df_info, df_score], keys=[(\"\u88681\", \"info\"), (\"\u88682\", \"score\")], names=[\"\u8868\u540d\", \"content\", \"index\"])\nprint(df_index)\n\"\"\"\n                    \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u8868\u540d content index\n\u88681  info    0      \u5c0f\u660e   \u7537  21.0    01     1   NaN   NaN   NaN   NaN\n             1      \u5c0f\u5f20   \u7537  22.0    02     2   NaN   NaN   NaN   NaN\n             2      \u5c0f\u4eae   \u5973  23.0    03     3   NaN   NaN   NaN   NaN\n             3      \u5c0f\u7ea2   \u7537  20.0    04     4   NaN   NaN   NaN   NaN\n             4      \u5c0f\u767d   \u5973  22.0    05     5   NaN   NaN   NaN   NaN\n             5      \u5c0f\u674e   \u5973  25.0    06     6   NaN   NaN   NaN   NaN\n             6      \u5c0f\u5218   \u7537  23.0    10    10   NaN   NaN   NaN   NaN\n\u88682  score   0      \u5c0f\u90d1  NaN   NaN   NaN     7    07  90.0  91.0  95.0\n             1      \u5c0f\u5f20  NaN   NaN   NaN     2    02  95.0  90.0  97.0\n             2      \u5c0f\u6587  NaN   NaN   NaN     8    08  91.0  85.0  98.0\n             3      \u5c0f\u7ea2  NaN   NaN   NaN     4    04  90.0  80.0  94.0\n             4      \u5c0f\u660e  NaN   NaN   NaN     1    01  85.0  99.0  92.0\n             5      \u5c0f\u660e  NaN   NaN   NaN     9    09  89.0  97.0  87.0\n\"\"\"\n\nprint(df_index.reset_index())\n\"\"\"\n   \u8868\u540d content  index  \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n0   \u88681    info      0  \u5c0f\u660e   \u7537  21.0    01     1   NaN   NaN   NaN   NaN\n1   \u88681    info      1  \u5c0f\u5f20   \u7537  22.0    02     2   NaN   NaN   NaN   NaN\n2   \u88681    info      2  \u5c0f\u4eae   \u5973  23.0    03     3   NaN   NaN   NaN   NaN\n3   \u88681    info      3  \u5c0f\u7ea2   \u7537  20.0    04     4   NaN   NaN   NaN   NaN\n4   \u88681    info      4  \u5c0f\u767d   \u5973  22.0    05     5   NaN   NaN   NaN   NaN\n5   \u88681    info      5  \u5c0f\u674e   \u5973  25.0    06     6   NaN   NaN   NaN   NaN\n6   \u88681    info      6  \u5c0f\u5218   \u7537  23.0    10    10   NaN   NaN   NaN   NaN\n7   \u88682   score      0  \u5c0f\u90d1  NaN   NaN   NaN     7    07  90.0  91.0  95.0\n8   \u88682   score      1  \u5c0f\u5f20  NaN   NaN   NaN     2    02  95.0  90.0  97.0\n9   \u88682   score      2  \u5c0f\u6587  NaN   NaN   NaN     8    08  91.0  85.0  98.0\n10  \u88682   score      3  \u5c0f\u7ea2  NaN   NaN   NaN     4    04  90.0  80.0  94.0\n11  \u88682   score      4  \u5c0f\u660e  NaN   NaN   NaN     1    01  85.0  99.0  92.0\n12  \u88682   score      5  \u5c0f\u660e  NaN   NaN   NaN     9    09  89.0  97.0  87.0\n\"\"\"\n\nprint(df_index.reset_index(drop=True))\n\"\"\"\n    \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n0   \u5c0f\u660e   \u7537  21.0    01     1   NaN   NaN   NaN   NaN\n1   \u5c0f\u5f20   \u7537  22.0    02     2   NaN   NaN   NaN   NaN\n2   \u5c0f\u4eae   \u5973  23.0    03     3   NaN   NaN   NaN   NaN\n3   \u5c0f\u7ea2   \u7537  20.0    04     4   NaN   NaN   NaN   NaN\n4   \u5c0f\u767d   \u5973  22.0    05     5   NaN   NaN   NaN   NaN\n5   \u5c0f\u674e   \u5973  25.0    06     6   NaN   NaN   NaN   NaN\n6   \u5c0f\u5218   \u7537  23.0    10    10   NaN   NaN   NaN   NaN\n7   \u5c0f\u90d1  NaN   NaN   NaN     7    07  90.0  91.0  95.0\n8   \u5c0f\u5f20  NaN   NaN   NaN     2    02  95.0  90.0  97.0\n9   \u5c0f\u6587  NaN   NaN   NaN     8    08  91.0  85.0  98.0\n10  \u5c0f\u7ea2  NaN   NaN   NaN     4    04  90.0  80.0  94.0\n11  \u5c0f\u660e  NaN   NaN   NaN     1    01  85.0  99.0  92.0\n12  \u5c0f\u660e  NaN   NaN   NaN     9    09  89.0  97.0  87.0\n\"\"\"\n\nprint(df_index.reset_index(names=[\"sheet\", \"program\", \"column\"]))\n\"\"\"\n   sheet program  column  \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n0    \u88681    info       0  \u5c0f\u660e   \u7537  21.0    01     1   NaN   NaN   NaN   NaN\n1    \u88681    info       1  \u5c0f\u5f20   \u7537  22.0    02     2   NaN   NaN   NaN   NaN\n2    \u88681    info       2  \u5c0f\u4eae   \u5973  23.0    03     3   NaN   NaN   NaN   NaN\n3    \u88681    info       3  \u5c0f\u7ea2   \u7537  20.0    04     4   NaN   NaN   NaN   NaN\n4    \u88681    info       4  \u5c0f\u767d   \u5973  22.0    05     5   NaN   NaN   NaN   NaN\n5    \u88681    info       5  \u5c0f\u674e   \u5973  25.0    06     6   NaN   NaN   NaN   NaN\n6    \u88681    info       6  \u5c0f\u5218   \u7537  23.0    10    10   NaN   NaN   NaN   NaN\n7    \u88682   score       0  \u5c0f\u90d1  NaN   NaN   NaN     7    07  90.0  91.0  95.0\n8    \u88682   score       1  \u5c0f\u5f20  NaN   NaN   NaN     2    02  95.0  90.0  97.0\n9    \u88682   score       2  \u5c0f\u6587  NaN   NaN   NaN     8    08  91.0  85.0  98.0\n10   \u88682   score       3  \u5c0f\u7ea2  NaN   NaN   NaN     4    04  90.0  80.0  94.0\n11   \u88682   score       4  \u5c0f\u660e  NaN   NaN   NaN     1    01  85.0  99.0  92.0\n12   \u88682   score       5  \u5c0f\u660e  NaN   NaN   NaN     9    09  89.0  97.0  87.0\n\"\"\"\n\nprint(df_index.reset_index(names=[\"sheet\", \"sheet\", \"column\"], allow_duplicates=True))\n\"\"\"\n   sheet  sheet  column  \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n0    \u88681   info       0  \u5c0f\u660e   \u7537  21.0    01     1   NaN   NaN   NaN   NaN\n1    \u88681   info       1  \u5c0f\u5f20   \u7537  22.0    02     2   NaN   NaN   NaN   NaN\n2    \u88681   info       2  \u5c0f\u4eae   \u5973  23.0    03     3   NaN   NaN   NaN   NaN\n3    \u88681   info       3  \u5c0f\u7ea2   \u7537  20.0    04     4   NaN   NaN   NaN   NaN\n4    \u88681   info       4  \u5c0f\u767d   \u5973  22.0    05     5   NaN   NaN   NaN   NaN\n5    \u88681   info       5  \u5c0f\u674e   \u5973  25.0    06     6   NaN   NaN   NaN   NaN\n6    \u88681   info       6  \u5c0f\u5218   \u7537  23.0    10    10   NaN   NaN   NaN   NaN\n7    \u88682  score       0  \u5c0f\u90d1  NaN   NaN   NaN     7    07  90.0  91.0  95.0\n8    \u88682  score       1  \u5c0f\u5f20  NaN   NaN   NaN     2    02  95.0  90.0  97.0\n9    \u88682  score       2  \u5c0f\u6587  NaN   NaN   NaN     8    08  91.0  85.0  98.0\n10   \u88682  score       3  \u5c0f\u7ea2  NaN   NaN   NaN     4    04  90.0  80.0  94.0\n11   \u88682  score       4  \u5c0f\u660e  NaN   NaN   NaN     1    01  85.0  99.0  92.0\n12   \u88682  score       5  \u5c0f\u660e  NaN   NaN   NaN     9    09  89.0  97.0  87.0\n\"\"\"\n\nprint(df_index.reset_index(level=\"content\"))\nprint(df_index.reset_index(level=1))\n\"\"\"\n           content  \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u8868\u540d index\n\u88681  0        info  \u5c0f\u660e   \u7537  21.0    01     1   NaN   NaN   NaN   NaN\n     1        info  \u5c0f\u5f20   \u7537  22.0    02     2   NaN   NaN   NaN   NaN\n     2        info  \u5c0f\u4eae   \u5973  23.0    03     3   NaN   NaN   NaN   NaN\n     3        info  \u5c0f\u7ea2   \u7537  20.0    04     4   NaN   NaN   NaN   NaN\n     4        info  \u5c0f\u767d   \u5973  22.0    05     5   NaN   NaN   NaN   NaN\n     5        info  \u5c0f\u674e   \u5973  25.0    06     6   NaN   NaN   NaN   NaN\n     6        info  \u5c0f\u5218   \u7537  23.0    10    10   NaN   NaN   NaN   NaN\n\u88682  0       score  \u5c0f\u90d1  NaN   NaN   NaN     7    07  90.0  91.0  95.0\n     1       score  \u5c0f\u5f20  NaN   NaN   NaN     2    02  95.0  90.0  97.0\n     2       score  \u5c0f\u6587  NaN   NaN   NaN     8    08  91.0  85.0  98.0\n     3       score  \u5c0f\u7ea2  NaN   NaN   NaN     4    04  90.0  80.0  94.0\n     4       score  \u5c0f\u660e  NaN   NaN   NaN     1    01  85.0  99.0  92.0\n     5       score  \u5c0f\u660e  NaN   NaN   NaN     9    09  89.0  97.0  87.0\n\"\"\"\n\nprint(df_index.reset_index(level=[\"content\", \"index\"]))\n\"\"\"\n     content  index  \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u8868\u540d\n\u88681     info      0  \u5c0f\u660e   \u7537  21.0    01     1   NaN   NaN   NaN   NaN\n\u88681     info      1  \u5c0f\u5f20   \u7537  22.0    02     2   NaN   NaN   NaN   NaN\n\u88681     info      2  \u5c0f\u4eae   \u5973  23.0    03     3   NaN   NaN   NaN   NaN\n\u88681     info      3  \u5c0f\u7ea2   \u7537  20.0    04     4   NaN   NaN   NaN   NaN\n\u88681     info      4  \u5c0f\u767d   \u5973  22.0    05     5   NaN   NaN   NaN   NaN\n\u88681     info      5  \u5c0f\u674e   \u5973  25.0    06     6   NaN   NaN   NaN   NaN\n\u88681     info      6  \u5c0f\u5218   \u7537  23.0    10    10   NaN   NaN   NaN   NaN\n\u88682    score      0  \u5c0f\u90d1  NaN   NaN   NaN     7    07  90.0  91.0  95.0\n\u88682    score      1  \u5c0f\u5f20  NaN   NaN   NaN     2    02  95.0  90.0  97.0\n\u88682    score      2  \u5c0f\u6587  NaN   NaN   NaN     8    08  91.0  85.0  98.0\n\u88682    score      3  \u5c0f\u7ea2  NaN   NaN   NaN     4    04  90.0  80.0  94.0\n\u88682    score      4  \u5c0f\u660e  NaN   NaN   NaN     1    01  85.0  99.0  92.0\n\u88682    score      5  \u5c0f\u660e  NaN   NaN   NaN     9    09  89.0  97.0  87.0\n\"\"\"\n\n\n\n\ndf_index = pd.concat([df_info, df_score], axis=1, keys=[(\"\u88681\", \"info\"), (\"\u88682\", \"score\")], names=[\"\u8868\u540d\", \"content\", \"index\"])\nprint(df_index)\n\"\"\"\n\u8868\u540d      \u88681                        \u88682\ncontent  info                      score\nindex    \u59d3\u540d \u6027\u522b \u5e74\u9f84 \u5b66\u53f71 \u6392\u540d  \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed \u6392\u540d\n0        \u5c0f\u660e   \u7537   21    01    1  \u5c0f\u90d1    07  90.0  91.0  95.0  7.0\n1        \u5c0f\u5f20   \u7537   22    02    2  \u5c0f\u5f20    02  95.0  90.0  97.0  2.0\n2        \u5c0f\u4eae   \u5973   23    03    3  \u5c0f\u6587    08  91.0  85.0  98.0  8.0\n3        \u5c0f\u7ea2   \u7537   20    04    4  \u5c0f\u7ea2    04  90.0  80.0  94.0  4.0\n4        \u5c0f\u767d   \u5973   22    05    5  \u5c0f\u660e    01  85.0  99.0  92.0  1.0\n5        \u5c0f\u674e   \u5973   25    06    6  \u5c0f\u660e    09  89.0  97.0  87.0  9.0\n6        \u5c0f\u5218   \u7537   23    10   10   NaN   NaN   NaN   NaN   NaN  NaN\n\"\"\"\n\nprint(df_index.reset_index())\n\"\"\"\n\u8868\u540d    index   \u88681                        \u88682\ncontent        info                      score\nindex          \u59d3\u540d \u6027\u522b \u5e74\u9f84 \u5b66\u53f71 \u6392\u540d  \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed \u6392\u540d\n0           0  \u5c0f\u660e   \u7537   21    01    1  \u5c0f\u90d1    07  90.0  91.0  95.0  7.0\n1           1  \u5c0f\u5f20   \u7537   22    02    2  \u5c0f\u5f20    02  95.0  90.0  97.0  2.0\n2           2  \u5c0f\u4eae   \u5973   23    03    3  \u5c0f\u6587    08  91.0  85.0  98.0  8.0\n3           3  \u5c0f\u7ea2   \u7537   20    04    4  \u5c0f\u7ea2    04  90.0  80.0  94.0  4.0\n4           4  \u5c0f\u767d   \u5973   22    05    5  \u5c0f\u660e    01  85.0  99.0  92.0  1.0\n5           5  \u5c0f\u674e   \u5973   25    06    6  \u5c0f\u660e    09  89.0  97.0  87.0  9.0\n6           6  \u5c0f\u5218   \u7537   23    10   10   NaN   NaN   NaN   NaN   NaN  NaN\n\"\"\"\n\nprint(df_index.reset_index(col_level=1))\n\"\"\"\n\u8868\u540d            \u88681                        \u88682\ncontent index  info                      score\nindex          \u59d3\u540d \u6027\u522b \u5e74\u9f84 \u5b66\u53f71 \u6392\u540d  \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed \u6392\u540d\n0           0  \u5c0f\u660e   \u7537   21    01    1  \u5c0f\u90d1    07  90.0  91.0  95.0  7.0\n1           1  \u5c0f\u5f20   \u7537   22    02    2  \u5c0f\u5f20    02  95.0  90.0  97.0  2.0\n2           2  \u5c0f\u4eae   \u5973   23    03    3  \u5c0f\u6587    08  91.0  85.0  98.0  8.0\n3           3  \u5c0f\u7ea2   \u7537   20    04    4  \u5c0f\u7ea2    04  90.0  80.0  94.0  4.0\n4           4  \u5c0f\u767d   \u5973   22    05    5  \u5c0f\u660e    01  85.0  99.0  92.0  1.0\n5           5  \u5c0f\u674e   \u5973   25    06    6  \u5c0f\u660e    09  89.0  97.0  87.0  9.0\n6           6  \u5c0f\u5218   \u7537   23    10   10   NaN   NaN   NaN   NaN   NaN  NaN\n\"\"\"\n\nprint(df_index.reset_index(col_fill=None))\n\"\"\"\n\u8868\u540d    index   \u88681                        \u88682\ncontent index  info                      score\nindex   index  \u59d3\u540d \u6027\u522b \u5e74\u9f84 \u5b66\u53f71 \u6392\u540d  \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed \u6392\u540d\n0           0  \u5c0f\u660e   \u7537   21    01    1  \u5c0f\u90d1    07  90.0  91.0  95.0  7.0\n1           1  \u5c0f\u5f20   \u7537   22    02    2  \u5c0f\u5f20    02  95.0  90.0  97.0  2.0\n2           2  \u5c0f\u4eae   \u5973   23    03    3  \u5c0f\u6587    08  91.0  85.0  98.0  8.0\n3           3  \u5c0f\u7ea2   \u7537   20    04    4  \u5c0f\u7ea2    04  90.0  80.0  94.0  4.0\n4           4  \u5c0f\u767d   \u5973   22    05    5  \u5c0f\u660e    01  85.0  99.0  92.0  1.0\n5           5  \u5c0f\u674e   \u5973   25    06    6  \u5c0f\u660e    09  89.0  97.0  87.0  9.0\n6           6  \u5c0f\u5218   \u7537   23    10   10   NaN   NaN   NaN   NaN   NaN  NaN\n\"\"\"\n\nprint(df_index.reset_index(col_fill=1))\n\"\"\"\n\u8868\u540d    index   \u88681                        \u88682\ncontent     1  info                      score\nindex       1  \u59d3\u540d \u6027\u522b \u5e74\u9f84 \u5b66\u53f71 \u6392\u540d  \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed \u6392\u540d\n0           0  \u5c0f\u660e   \u7537   21    01    1  \u5c0f\u90d1    07  90.0  91.0  95.0  7.0\n1           1  \u5c0f\u5f20   \u7537   22    02    2  \u5c0f\u5f20    02  95.0  90.0  97.0  2.0\n2           2  \u5c0f\u4eae   \u5973   23    03    3  \u5c0f\u6587    08  91.0  85.0  98.0  8.0\n3           3  \u5c0f\u7ea2   \u7537   20    04    4  \u5c0f\u7ea2    04  90.0  80.0  94.0  4.0\n4           4  \u5c0f\u767d   \u5973   22    05    5  \u5c0f\u660e    01  85.0  99.0  92.0  1.0\n5           5  \u5c0f\u674e   \u5973   25    06    6  \u5c0f\u660e    09  89.0  97.0  87.0  9.0\n6           6  \u5c0f\u5218   \u7537   23    10   10   NaN   NaN   NaN   NaN   NaN  NaN\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_12","title":"\u7c7b\u578b\u7b5b\u9009","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#select_dtypes","title":"select_dtypes","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_13","title":"\u5224\u65ad","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#isnaisnull","title":"isna\u3001isnull","text":"<p><code>df.isnull()</code></p> <p><code>df.isna()</code></p> <p>\u68c0\u67e5\u7a7a\u503c\uff0c\u7a7a\u503c\u4e3aTrue\uff0c\u975e\u7a7a\u503c\u4e3aFalse</p> <pre><code>print(df2.isnull())\nprint(df2.isna())\n\"\"\"\n          1      2      3\n\u5c0f\u660e  False  False  False\n\u5c0f\u7ea2  False  False  False\n\u5c0f\u4eae  False   True  False\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#notnanotnull","title":"notna\u3001notnull","text":"<p><code>df.notnull()</code>\u7b49\u4ef7\u4e8e<code>~df.isnull()</code></p> <p><code>df.notna()</code>\u7b49\u4ef7\u4e8e<code>~df.isna()</code></p> <p>\u68c0\u67e5\u7a7a\u503c\uff0c\u975e\u7a7a\u503c\u4e3aTrue\uff0c\u7a7a\u503c\u4e3aFalse</p> <pre><code>print(df2.notnull())\nprint(df2.notna())\nprint(~df2.isnull())\nprint(~df2.isna())\n\"\"\"\n         1      2     3\n\u5c0f\u660e  True   True  True\n\u5c0f\u7ea2  True   True  True\n\u5c0f\u4eae  True  False  True\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#duplicated","title":"duplicated","text":"<p><code>df.duplicated(subset=None, keep=\"first\")</code></p> <p>\u5224\u65ad\u6bcf\u4e00\u884c\u6570\u636e\u662f\u5426\u91cd\u590d</p> <ol> <li> <p>subset: \u53ef\u9009\uff0c\u5217\u6807\u7b7e\u6216\u5217\u6807\u7b7e\u5217\u8868\uff0c\u6307\u5b9a\u67d0\u4e9b\u5217\u6765\u5224\u65ad\u91cd\u590d\uff0c\u9ed8\u8ba4\u4f7f\u7528\u6240\u6709\u5217\uff08\u5373\u6574\u884c\u91cd\u590d\uff09</p> </li> <li> <p>keep: \u6307\u5b9a\u4fdd\u7559\u7684\u91cd\u590d\u9879\uff0c\u6807\u8bb0\u4e3aFalse\uff0c\u5176\u4f59\u91cd\u590d\u9879\u6807\u8bb0\u4e3aTrue\u3002\"first\"\u6307\u4fdd\u7559\u7b2c\u4e00\u9879\uff0c\u4e3a\u9ed8\u8ba4\uff1b\"last\"\u6307\u4fdd\u7559\u6700\u540e\u4e00\u9879\uff1bFalse\u6307\u4e0d\u4fdd\u7559\uff0c\u5168\u90e8\u6807\u8bb0\u4e3aTrue</p> </li> </ol> <pre><code>df5 = pd.DataFrame({\n             'brand': ['Yum Yum', 'Yum Yum', 'Indomie', 'Indomie', 'Indomie'],\n             'style': ['cup', 'cup', 'cup', 'pack', 'pack'],\n             'rating': [4, 4, 3.5, 15, 5]\n         })\nprint(df5)\n\"\"\"\n     brand style  rating\n0  Yum Yum   cup     4.0\n1  Yum Yum   cup     4.0\n2  Indomie   cup     3.5\n3  Indomie  pack    15.0\n4  Indomie  pack     5.0\n\"\"\"\n\nis_duplicated = df5.duplicated()\nprint(is_duplicated)\n\"\"\"\n0    False\n1     True\n2    False\n3    False\n4    False\ndtype: bool\n\"\"\"\n\nis_duplicated = df5.duplicated(subset=\"brand\")\nprint(is_duplicated)\n\"\"\"\n0    False\n1     True\n2    False\n3     True\n4     True\ndtype: bool\n\"\"\"\n\nis_duplicated = df5.duplicated(subset=[\"brand\", \"style\"])\nprint(is_duplicated)\n\"\"\"\n0    False\n1     True\n2    False\n3    False\n4     True\ndtype: bool\n\"\"\"\n\nis_duplicated = df5.duplicated(keep=\"last\")\nprint(is_duplicated)\n\"\"\"\n0     True\n1    False\n2    False\n3    False\n4    False\ndtype: bool\n\"\"\"\n\nis_duplicated = df5.duplicated(keep=False)\nprint(is_duplicated)\n\"\"\"\n0     True\n1     True\n2    False\n3    False\n4    False\ndtype: bool\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#anyall","title":"any\u3001all","text":"<p><code>df.any(*, axis=0, bool_only=False, skipna=True, **kwargs)</code></p> <p>\u6cbfaxis\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u503c\u4e3aTrue\u6216\u5176\u7b49\u6548\u503c\uff08\u975e\u7a7a\u503c\u3001\u975e0\u503c\u7b49\uff09\u5219\u4e3aTrue\uff0c\u5426\u5219False</p> <p><code>df.all(*, axis=0, bool_only=False, skipna=True, **kwargs)</code></p> <p>\u6cbfaxis\uff0c\u6240\u6709\u503c\u4e3aTrue\u6216\u5176\u7b49\u6548\u503c\uff08\u975e\u7a7a\u503c\u3001\u975e0\u503c\u7b49\uff09\u5219\u4e3aTrue\uff0c\u5426\u5219False</p> <ol> <li> <p>axis\uff1a0\u6216\"index\"\u6bcf\u4e00\u5217\u8fdb\u884c\u5224\u65ad\uff08\u9ed8\u8ba4\uff09\uff1b1\u6216\"columns\"\u6bcf\u4e00\u884c\u8fdb\u884c\u5224\u65ad\uff1bNone\u5219\u5224\u65ad\u6240\u6709\u5143\u7d20</p> </li> <li> <p>bool_only\uff1a\u82e5\u4e3aTrue\uff0c\u5219\u4ec5\u5224\u65ad\u53ea\u6709bool\u7c7b\u578b\u7684\u884c\u6216\u5217\u3002\u9ed8\u8ba4False</p> </li> <li> <p>skipna\uff1a\u662f\u5426\u8df3\u8fc7NaN\uff0c\u4e0d\u8df3\u8fc7\u5219NaN\u89c6\u4e3aTrue\u3002\u9ed8\u8ba4\u4e3aTrue</p> </li> </ol> <pre><code>import random\nrandom.seed(2)\ndf1 = pd.DataFrame(data={\"a\": [random.randint(1, 100) for i in range(4)],\n                         \"b\": [random.randint(1, 100) for i in range(4)],\n                         \"c\": [random.randint(1, 100) for i in range(4)],\n                         \"d\": [random.randint(1, 100) for i in range(4)]}, index=[1, 2, 3, 4])\nprint(df1)\n\"\"\"\n    a   b   c   d\n1   8  22  33   5\n2  12  95  78  75\n3  11  86  28  88\n4  47  40  78  21\n\"\"\"\n\ndf2 = df1 % 5 == 0\nprint(df2)\n\"\"\"\n       a      b      c      d\n1  False  False  False   True\n2  False   True  False   True\n3  False  False  False  False\n4  False   True  False  False\n\"\"\"\n\nprint(df2.any())\n\"\"\"\na    False\nb     True\nc    False\nd     True\ndtype: bool\n\"\"\"\n\nprint(df2.any(axis=1))\n\"\"\"\n1     True\n2     True\n3    False\n4     True\ndtype: bool\n\"\"\"\n\nprint(df2.any(axis=None))\n\"\"\"\nTrue\n\"\"\"\n\ndf1.loc[:, \"a\"] = [False, True, False, False]\nprint(df1)\n\"\"\"\n       a   b   c   d\n1  False  22  33   5\n2   True  95  78  75\n3  False  86  28  88\n4  False  40  78  21\n\"\"\"\n\nprint(df1.any())\n\"\"\"\na    True\nb    True\nc    True\nd    True\ndtype: bool\n\"\"\"\n\nprint(df1.any(bool_only=True))\n\"\"\"\na    True\ndtype: bool\n\"\"\"\n\ndf2.loc[3, \"c\"] = np.nan\nprint(df2)\n\"\"\"\n       a      b      c      d\n1  False  False  False   True\n2  False   True  False   True\n3  False  False    NaN  False\n4  False   True  False  False\n\"\"\"\n\nprint(df2.any(skipna=False))\n\"\"\"\na    False\nb     True\nc     True\nd     True\ndtype: bool\n\"\"\"\"\n\ndf = pd.DataFrame(data={\"a\": [True, True, True, True],\n                        \"b\": [True, False, False, False],\n                        \"c\": [True, False, False, False],\n                        \"d\": [True, False, False, False]}, index=[1, 2, 3, 4])\nprint(df)\n\"\"\"\n      a      b      c      d\n1  True   True   True   True\n2  True  False  False  False\n3  True  False  False  False\n4  True  False  False  False\n\"\"\"\n\nprint(df.all())\n\"\"\"\na     True\nb    False\nc    False\nd    False\ndtype: bool\n\"\"\"\n\nprint(df.all(axis=1))\n\"\"\"\n1     True\n2    False\n3    False\n4    False\ndtype: bool\n\"\"\"\n\nprint(df.all(axis=None))\n\"\"\"\nFalse\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_14","title":"\u5220\u9664","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#drop","title":"drop","text":"<p><code>df.drop(labels, axis=0, inplace=False, level=None, errors=\"raise\")</code> <code>df.drop(index=index_labels, columns=columns_labels, inplace=False, level=None, errors=\"raise\")</code></p> <p>\u6307\u5b9a\u5220\u9664\u884c\u5217</p> <ol> <li> <p>labels: \u5f85\u5220\u9664\u884c\u6216\u5217\u7684\u6807\u7b7e\uff0c\u53ef\u4ee5\u662f\u5355\u6807\u7b7e\u6216\u6807\u7b7e\u5217\u8868\uff0c\u9700\u642d\u914daxis\u6765\u786e\u5b9a\u5220\u9664\u884c\u6216\u5217</p> </li> <li> <p>axis: 0\u6216\"index\"\u5220\u9664\u884c\uff1b1\u6216\"columns\"\u5220\u9664\u5217\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>index: \u5f85\u5220\u9664\u884c\u7684\u6807\u7b7e &lt;=&gt; (labels, axis=0)</p> </li> <li> <p>columns: \u5f85\u5220\u9664\u5217\u7684\u6807\u7b7e &lt;=&gt; (labels, axis=1)</p> </li> <li> <p>inplace: \u662f\u5426\u76f4\u63a5\u5bf9\u539f\u5bf9\u8c61\u8fdb\u884c\u5220\u9664\uff0c\u5982\u679c\u4e3aFalse\uff0c\u5c06\u8fd4\u56de\u526f\u672c;\u5982\u679c\u4e3aTrue\u5219\u8fd4\u56deNone\uff0c\u76f4\u63a5\u5bf9\u539f\u5bf9\u8c61\u8fdb\u884c\u5220\u9664\u3002\u9ed8\u8ba4False</p> </li> <li> <p>level: \u6307\u5b9a\u7d22\u5f15\u7ea7\u522b</p> </li> <li> <p>errors: \u5f53\u6240\u6307\u5b9a\u6807\u7b7e\u5e76\u975e\u5df2\u5b58\u5728\u7684\u6807\u7b7e\u65f6\u662f\u5f15\u53d1\u62a5\u9519\u8fd8\u662f\u5ffd\u7565\uff0c\u53ef\u9009\"raise\"\u548c\"ignore\"\uff0c\u9ed8\u8ba4\u4e3a\"raise\"</p> </li> </ol> <pre><code>df_drop = df1.copy()\nprint(df_drop)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    70   100\n\u5c0f\u7ea2   100    80    88\n\u5c0f\u4eae    85    90    95\n\"\"\"\n\ndf_drop_index = df_drop.drop(index=\"\u5c0f\u7ea2\")\nprint(df_drop_index)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    70   100\n\u5c0f\u4eae    85    90    95\n\"\"\"\n\ndf_drop_columns = df_drop.drop(columns=\"\u6570\u5b66\")\nprint(df_drop_columns)\n\"\"\"\n      \u8bed\u6587  \u82f1\u8bed\n\u5c0f\u660e    90   100\n\u5c0f\u7ea2   100    88\n\u5c0f\u4eae    85    95\n\"\"\"\n\ndf_drop_index = df_drop.drop(index=[\"\u5c0f\u660e\", \"\u5c0f\u4eae\"])\nprint(df_drop_index)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u7ea2   100    80    80\n\"\"\"\n\ndf_drop_index = df_drop.drop(index=[\"\u5c0f\u521a\", \"\u5c0f\u660e\"])\nprint(df_drop_index)\n\"\"\"\nKeyError: \"['\u5c0f\u521a'] not found in axis\"\n\"\"\"\n\ndf_drop_index = df_drop.drop(index=[\"\u5c0f\u521a\", \"\u5c0f\u660e\"], errors=\"ignore\")\nprint(df_drop_index)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u7ea2   100    80    80\n\u5c0f\u4eae    90    90    80\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#dropna","title":"dropna","text":"<p><code>df.dropna(axis=0, how=\"any\", thresh, subset, inplace=False, ignore_index=False)</code></p> <p>\u5220\u9664\u542b\u7a7a\u503c\u7684\u884c\u5217</p> <ol> <li> <p>axis: 0\u6216\"index\"\u5220\u9664\u542b\u7a7a\u503c\u7684\u884c\uff08\u9ed8\u8ba4\uff09\uff1b1\u6216\"columns\"\u5220\u9664\u542b\u7a7a\u503c\u7684\u5217</p> </li> <li> <p>how: \"any\"\u8868\u793a\u51fa\u73b0\u4efb\u4e00\u7a7a\u503c\u5373\u5220\u9664\u76f8\u5e94\u884c\u6216\u5217\uff1b\"all\"\u8868\u793a\u6574\u884c\u6216\u6574\u5217\u5747\u4e3a\u7a7a\u503c\u624d\u5220\u9664\u76f8\u5e94\u884c\u6216\u5217</p> </li> <li> <p>thresh: \u6307\u5b9a\u4ec5\u4fdd\u7559\u81f3\u5c11\u542b\u6709\u7279\u5b9a\u6570\u91cf\u975e\u7a7a\u503c\u7684\u884c\u6216\u5217\u3002\u4e0d\u80fd\u4e0ehow\u53c2\u6570\u540c\u65f6\u5b58\u5728</p> </li> <li> <p>subset: \u4ec5\u5220\u9664\u6307\u5b9a\u5217\u542b\u6709\u7a7a\u503c\u7684\u884c\uff08axis=0\uff09\u6216\u8005\u4ec5\u5220\u9664\u6307\u5b9a\u884c\u542b\u6709\u7a7a\u503c\u7684\u5217\uff08axis=1\uff09</p> </li> <li> <p>inplace: \u662f\u5426\u76f4\u63a5\u5bf9\u539f\u5bf9\u8c61\u8fdb\u884c\u5220\u9664\uff0c\u5982\u679c\u4e3aFalse\uff0c\u5c06\u8fd4\u56de\u526f\u672c;\u5982\u679c\u4e3aTrue\u5219\u8fd4\u56deNone\uff0c\u76f4\u63a5\u5bf9\u539f\u5bf9\u8c61\u8fdb\u884c\u5220\u9664\u3002\u9ed8\u8ba4False</p> </li> <li> <p>ignore_index: \u5982\u679c\u4e3aTrue\uff0c\u5c06\u5ffd\u89c6\u539f\u884c\u6807\u7b7e\uff0c\u4ee5\u4f4d\u7f6e\u7d22\u5f15\u66ff\u6362</p> </li> </ol> <pre><code>df_dropna = df2.copy()\nprint(df_dropna)\n\"\"\"\n        1     2    3\n\u5c0f\u660e   90  70.0  100\n\u5c0f\u7ea2  100  80.0   88\n\u5c0f\u4eae   85   NaN   95\n\"\"\"\n\ndf_dropna_index = df_dropna.dropna()\nprint(df_dropna_index)\n\"\"\"\n        1     2    3\n\u5c0f\u660e   90  70.0  100\n\u5c0f\u7ea2  100  80.0   88\n\"\"\"\n\ndf_dropna_columns = df_dropna.dropna(axis=1)\nprint(df_dropna_columns)\n\"\"\"\n        1    3\n\u5c0f\u660e   90  100\n\u5c0f\u7ea2  100   88\n\u5c0f\u4eae   85   95\n\"\"\"\n\ndf_dropna_index_all = df_dropna.dropna(how=\"all\")\nprint(df_dropna_index_all)\n\"\"\"\n        1     2    3\n\u5c0f\u660e   90  70.0  100\n\u5c0f\u7ea2  100  80.0   88\n\u5c0f\u4eae   85   NaN   95\n\"\"\"\n\ndf_dropna_index_thresh = df_dropna.dropna(thresh=3)\nprint(df_dropna_index_thresh)\ndf_dropna_index_thresh = df_dropna.dropna(thresh=1)\nprint(df_dropna_index_thresh)\n\"\"\"\n        1     2    3\n\u5c0f\u660e   90  70.0  100\n\u5c0f\u7ea2  100  80.0   88\n\n        1     2    3\n\u5c0f\u660e   90  70.0  100\n\u5c0f\u7ea2  100  80.0   88\n\u5c0f\u4eae   85   NaN   95\n\"\"\"\n\ndf_dropna_index_subset = df_dropna.dropna(subset=[1, 2])\nprint(df_dropna_index_subset)\ndf_dropna_index_subset = df_dropna.dropna(axis=1, subset=[\"\u5c0f\u660e\", \"\u5c0f\u4eae\"])\nprint(df_dropna_index_subset)\n\"\"\"\n        1     2    3\n\u5c0f\u660e   90  70.0  100\n\u5c0f\u7ea2  100  80.0   88\n\n        1    3\n\u5c0f\u660e   90  100\n\u5c0f\u7ea2  100   88\n\u5c0f\u4eae   85   95\n\"\"\"\n\ndf_dropna_index_ignore = df_dropna.dropna(ignore_index=True)\nprint(df_dropna_index_ignore)\n\"\"\"\n     1     2    3\n0   90  70.0  100\n1  100  80.0   88\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#drop_duplicates","title":"drop_duplicates","text":"<p><code>df.drop_duplicates(subset=None, keep=\"first\", inplace=False, ignore_index=False)</code></p> <p>\u6307\u5b9a\u5217\u5224\u65ad\u91cd\u590d\uff0c\u5e76\u5220\u9664\u91cd\u590d\u884c</p> <ol> <li> <p>subset: \u53ef\u9009\uff0c\u5217\u6807\u7b7e\u6216\u5217\u6807\u7b7e\u5217\u8868\uff0c\u6307\u5b9a\u67d0\u4e9b\u5217\u6765\u5224\u65ad\u91cd\u590d\uff0c\u9ed8\u8ba4\u4f7f\u7528\u6240\u6709\u5217\uff08\u5373\u6574\u884c\u91cd\u590d\uff09</p> </li> <li> <p>keep: \u6307\u5b9a\u4fdd\u7559\u7684\u91cd\u590d\u9879</p> </li> <li> <p>\"first\"\uff1a\u4fdd\u7559\u7b2c\u4e00\u9879\uff08\u9ed8\u8ba4\uff09</p> </li> <li> <p>\"last\"\uff1a\u4fdd\u7559\u6700\u540e\u4e00\u9879</p> </li> <li> <p>False\uff1a\u4e0d\u4fdd\u7559\uff0c\u5220\u9664\u6240\u6709\u91cd\u590d\u9879</p> </li> <li> <p>inplace: \u662f\u5426\u76f4\u63a5\u5bf9\u539f\u5bf9\u8c61\u8fdb\u884c\u5220\u9664\uff0c\u5982\u679c\u4e3aFalse\uff0c\u5c06\u8fd4\u56de\u526f\u672c;\u5982\u679c\u4e3aTrue\u5219\u8fd4\u56deNone\uff0c\u76f4\u63a5\u5bf9\u539f\u5bf9\u8c61\u8fdb\u884c\u5220\u9664\u3002\u9ed8\u8ba4False</p> </li> <li> <p>ignore_index: \u5982\u679c\u4e3aTrue\uff0c\u5c06\u5ffd\u89c6\u539f\u884c\u6807\u7b7e\uff0c\u4ee5\u4f4d\u7f6e\u7d22\u5f15\u66ff\u6362</p> </li> </ol> <pre><code>df5 = pd.DataFrame({\n             'brand': ['Yum Yum', 'Yum Yum', 'Indomie', 'Indomie', 'Indomie'],\n             'style': ['cup', 'cup', 'cup', 'pack', 'pack'],\n             'rating': [4, 4, 3.5, 15, 5]\n         })\nprint(df5)\n\"\"\"\n     brand style  rating\n0  Yum Yum   cup     4.0\n1  Yum Yum   cup     4.0\n2  Indomie   cup     3.5\n3  Indomie  pack    15.0\n4  Indomie  pack     5.0\n\"\"\"\n\ndf_drop_duplicates = df5.drop_duplicates()\nprint(df_drop_duplicates)\n\"\"\"\n     brand style  rating\n0  Yum Yum   cup     4.0\n2  Indomie   cup     3.5\n3  Indomie  pack    15.0\n4  Indomie  pack     5.0\n\"\"\"\n\ndf_drop_duplicates = df5.drop_duplicates(subset=\"brand\")\nprint(df_drop_duplicates)\n\"\"\"\n     brand style  rating\n0  Yum Yum   cup     4.0\n2  Indomie   cup     3.5\n\"\"\"\n\ndf_drop_duplicates = df5.drop_duplicates(subset=[\"brand\", \"style\"])\nprint(df_drop_duplicates)\n\"\"\"\n     brand style  rating\n0  Yum Yum   cup     4.0\n2  Indomie   cup     3.5\n3  Indomie  pack    15.0\n\"\"\"\n\ndf_drop_duplicates = df5.drop_duplicates(keep=\"last\")\nprint(df_drop_duplicates)\n\"\"\"\n     brand style  rating\n1  Yum Yum   cup     4.0\n2  Indomie   cup     3.5\n3  Indomie  pack    15.0\n4  Indomie  pack     5.0\n\"\"\"\n\ndf_drop_duplicates = df5.drop_duplicates(keep=False)\nprint(df_drop_duplicates)\n\"\"\"\n     brand style  rating\n2  Indomie   cup     3.5\n3  Indomie  pack    15.0\n4  Indomie  pack     5.0\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_15","title":"\u8ba1\u7b97","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#describe","title":"describe","text":"<p><code>df.describe(percentiles=[.25, .5, .75], include=None, exclude=None)</code></p> <p>\u67e5\u770b\u6bcf\u5217\u7684\u7edf\u8ba1\u6c47\u603b\u4fe1\u606f\uff0c\u201cNaN\u201d\u503c\u4e0d\u8ba1\u7b97\u5728\u5185</p> <ol> <li> <p>percentiles: \u8f93\u51fa\u4e2d\u8981\u5305\u542b\u7684\u767e\u5206\u4f4d\u6570\uff0c\u4ee5\u6570\u5b57\u5217\u8868\u8868\u793a\uff0c\u6bcf\u4e2a\u6570\u5b57\u90fd\u4ecb\u4e8e0~1\u4e4b\u95f4\uff0c\u9ed8\u8ba4\u4e3a\u56db\u5206\u4f4d\u6570([.25, .5, .75])</p> </li> <li> <p>include: \u8f93\u51fa\u7ed3\u679c\u4e2d\u5305\u542b\u7684\u6570\u636e\u7c7b\u578b\u3002\u9ed8\u8ba4\u5305\u542b\u5168\u90e8(None | \"all\")</p> </li> <li> <p>exclude: \u8f93\u51fa\u7ed3\u679c\u4e2d\u6392\u9664\u7684\u6570\u636e\u7c7b\u578b\u3002\u9ed8\u8ba4\u4e0d\u6392\u9664(None)</p> </li> </ol> <pre><code>print(df1.describe())\n\"\"\"\n             \u8bed\u6587  \u6570\u5b66        \u82f1\u8bed\ncount    3.000000   3.0    3.000000\nmean    91.666667  80.0   94.333333\nstd      7.637626  10.0    6.027714\nmin     85.000000  70.0   88.000000\n25%     87.500000  75.0   91.500000\n50%     90.000000  80.0   95.000000\n75%     95.000000  85.0   97.500000\nmax    100.000000  90.0  100.000000\n\"\"\"\n\nprint(df1.describe([.2, .4, .6, .8]))\n\"\"\"\n             \u8bed\u6587  \u6570\u5b66        \u82f1\u8bed\ncount    3.000000   3.0    3.000000\nmean    91.666667  80.0   94.333333\nstd      7.637626  10.0    6.027714\nmin     85.000000  70.0   88.000000\n20%     87.000000  74.0   90.800000\n40%     89.000000  78.0   93.600000\n50%     90.000000  80.0   95.000000\n60%     92.000000  82.0   96.000000\n80%     96.000000  86.0   98.000000\nmax    100.000000  90.0  100.000000\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#count","title":"count","text":"<p><code>df.count(axis=0, numeric_only=False)</code></p> <p>\u8fd4\u56de\u975e\u7a7a\u503c\u4e2a\u6570</p> <ol> <li> <p>axis: 0\u6216\"index\"\u8fd4\u56de\u6bcf\u4e00\u5217\u6c42\u7ed3\u679c\uff08\u9ed8\u8ba4\uff09\uff1b1\u6216\"columns\"\u8fd4\u56de\u6bcf\u4e00\u884c\u6c42\u7ed3\u679c</p> </li> <li> <p>numeric_only: \u662f\u5426\u4ec5\u8ba1\u7b97\u6570\u636e\u4e3a\u6570\u5b57\u7684\u5217\u6216\u884c\u3002\u9ed8\u8ba4\u4e3aFalse</p> </li> </ol> <pre><code>print(df1.count())\n\"\"\"\n\u8bed\u6587    3\n\u6570\u5b66    3\n\u82f1\u8bed    3\ndtype: int64\n\"\"\"\n\nprint(df1.count(axis=1))\n\"\"\"\n\u5c0f\u660e    3\n\u5c0f\u7ea2    3\n\u5c0f\u4eae    3\ndtype: int64\n\"\"\"\n\nprint(df3.count())\n\"\"\"\n\u8bed\u6587    3\n\u6570\u5b66    3\n\u82f1\u8bed    3\n\u73ed\u7ea7    3\ndtype: int64\n\"\"\"\n\nprint(df3.count(numeric_only=True))\n\"\"\"\n\u8bed\u6587    3\n\u6570\u5b66    3\n\u82f1\u8bed    3\ndtype: int64\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#sum","title":"sum","text":"<p><code>df.sum(axis=0, skipna=True, numericonly*=*False*,* min_count=0)</code></p> <p>\u6c42\u548c</p> <ol> <li> <p>axis: 0\u6216\"index\"\u6307\u6bcf\u4e00\u5217\u6c42\u7ed3\u679c\uff08\u9ed8\u8ba4\uff09\uff1b1\u6216\"columns\"\u6307\u6bcf\u4e00\u884c\u6c42\u7ed3\u679c</p> </li> <li> <p>skipna: \u662f\u5426\u7a7a\u503c\u81ea\u52a8\u8f6c\u6362\u4e3a0\u3002\u9ed8\u8ba4\u81ea\u52a8\u8f6c\u6362\uff0c\u82e5\u4e0d\u8f6c\u6362\u5c06\u5bfc\u81f4\u65e0\u6cd5\u8ba1\u7b97\uff0c\u7ed3\u679c\u4e5f\u4e3aNaN</p> </li> <li> <p>numeric_only: \u4ec5\u5305\u542b float\u3001int\u3001boolean \u5217\u3002\u9ed8\u8ba4\u4e3aFalse\uff0c\u5b57\u7b26\u4e32\u4e5f\u5c06\u76f8\u52a0</p> </li> <li> <p>min_count: \u6267\u884c\u64cd\u4f5c\u6240\u9700\u7684\u6700\u5c11\u6709\u6548\u503c\u6570\uff0c\u975eNaN\u503c\uff1cmin_count\u5219\u7ed3\u679c\u4e3aNaN</p> </li> </ol> <pre><code>print(df1.sum())\n\"\"\"\n\u8bed\u6587    280\n\u6570\u5b66    260\n\u82f1\u8bed    260\ndtype: int64\n\"\"\"\n\nprint(df1.sum(axis=1))\n\"\"\"\n\u5c0f\u660e    280\n\u5c0f\u7ea2    260\n\u5c0f\u4eae    260\ndtype: int64\n\"\"\"\n\nprint(df2.sum())\n\"\"\"\n1    275.0\n2    150.0\n3    283.0\ndtype: float64\n\"\"\"\n\nprint(df2.sum(skipna=False))\n\"\"\"\n1    275.0\n2      NaN\n3    283.0\ndtype: float64\n\"\"\"\n\nprint(df3.sum())\n\"\"\"\n\u8bed\u6587                      275\n\u6570\u5b66                      240\n\u82f1\u8bed                      283\n\u73ed\u7ea7    \u9ad8\u4e007\u73ed\u9ad8\u4e007\u73ed\u9ad8\u4e007\u73ed\ndtype: object\n\"\"\"\n\nprint(df3.sum(numeric_only=True))\n\"\"\"\n\u8bed\u6587    275\n\u6570\u5b66    240\n\u82f1\u8bed    283\ndtype: int64\n\"\"\"\n\nprint(df1.sum(min_count=4))\n\"\"\"\n\u8bed\u6587   NaN\n\u6570\u5b66   NaN\n\u82f1\u8bed   NaN\ndtype: float64\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#meanmedianvarstdmaxminidxmaxidxmin","title":"mean\u3001median\u3001var\u3001std\u3001max\u3001min\u3001idxmax\u3001idxmin","text":"<p><code>df.mean(axis=0, skipna=True, numeric_only=False)</code>\uff1a\u6c42\u5747\u503c</p> <p><code>df.median(axis=0, skipna=True, numeric_only=False)</code>\uff1a\u6c42\u4e2d\u4f4d\u6570</p> <p><code>df.var(axis=0, skipna=True, ddof=1, numeric_only=False)</code>\uff1a\u6c42\u65b9\u5dee</p> <p><code>df.std(axis=0, skipna=True, ddof=1, numeric_only=False)</code>\uff1a\u6c42\u6807\u51c6\u5dee</p> <p><code>df.max(axis=0, skipna=True, numeric_only=False)</code>\uff1a\u8fd4\u56de\u6700\u5927\u503c</p> <p><code>df.min(axis=0, skipna=True, numeric_only=False)</code>\uff1a\u8fd4\u56de\u6700\u5c0f\u503c</p> <p><code>df.idxmax(axis=0, skipna=True, numeric_only=False)</code>\uff1a\u8fd4\u56de\u6700\u5927\u503c\u6240\u5728\u7684\u7d22\u5f15\u6807\u7b7e</p> <p><code>df.idxmin(axis=0, skipna=True, numeric_only=False)</code>\uff1a\u8fd4\u56de\u6700\u5c0f\u503c\u6240\u5728\u7684\u7d22\u5f15\u6807\u7b7e</p> <ol> <li> <p>axis: 0\u6216\"index\"\u6bcf\u4e00\u5217\u6c42\u7ed3\u679c\uff08\u9ed8\u8ba4\uff09\uff1b1\u6216\"columns\"\u6bcf\u4e00\u884c\u6c42\u7ed3\u679c</p> </li> <li> <p>skipna: \u662f\u5426\u7a7a\u503c\u81ea\u52a8\u8f6c\u6362\u4e3a0\u3002\u9ed8\u8ba4\u81ea\u52a8\u8f6c\u6362\uff0c\u82e5\u4e0d\u8f6c\u6362\u5c06\u5bfc\u81f4\u65e0\u6cd5\u8ba1\u7b97\uff0c\u7ed3\u679c\u4e5f\u4e3aNaN\uff08idmax\u548cidmin\u672a\u6765\u7248\u672c\u5c06\u4f1a\u62a5\u9519\uff09</p> </li> <li> <p>ddof: \u81ea\u7531\u5ea6\uff0c\u9664\u6570=N-ddof\uff0cN\u4e3a\u5143\u7d20\u603b\u6570\u3002\u9ed8\u8ba4\u4e3a1</p> </li> <li> <p>numeric_only: \u4ec5\u5305\u542b float\u3001int\u3001boolean \u5217\u3002\u9ed8\u8ba4\u4e3aFalse\uff0c\u5b57\u7b26\u4e32\u4e5f\u53c2\u4e0e\u8ba1\u7b97</p> </li> </ol> <pre><code>print(pd.DataFrame({\"mean\": df1.mean(),\n                    \"median\": df1.median(),\n                    \"var\": df1.var(),\n                    \"std\": df1.std(),\n                    \"max\": df1.max(),\n                    \"min\": df1.min(),\n                    \"idmax\": df1.idxmax(),\n                    \"idmin\": df1.idxmin(),\n                    }))\n\"\"\"\n           mean  median         var        std  max  min idmax idmin\n\u8bed\u6587  93.333333    90.0   33.333333   5.773503  100   90  \u5c0f\u7ea2  \u5c0f\u660e\n\u6570\u5b66  86.666667    90.0   33.333333   5.773503   90   80  \u5c0f\u660e  \u5c0f\u7ea2\n\u82f1\u8bed  86.666667    80.0  133.333333  11.547005  100   80  \u5c0f\u660e  \u5c0f\u7ea2\n\"\"\"\n\nprint(pd.DataFrame({\"mean\": df1.mean(axis=1),\n                    \"median\": df1.median(axis=1),\n                    \"var\": df1.var(axis=1),\n                    \"std\": df1.std(axis=1),\n                    \"max\": df1.max(axis=1),\n                    \"min\": df1.min(axis=1),\n                    \"idmax\": df1.idxmax(axis=1),\n                    \"idmin\": df1.idxmin(axis=1),\n                    }))\n\"\"\"\n           mean  median         var        std  max  min idmax idmin\n\u5c0f\u660e  93.333333    90.0   33.333333   5.773503  100   90  \u82f1\u8bed  \u8bed\u6587\n\u5c0f\u7ea2  86.666667    80.0  133.333333  11.547005  100   80  \u8bed\u6587  \u6570\u5b66\n\u5c0f\u4eae  86.666667    90.0   33.333333   5.773503   90   80  \u8bed\u6587  \u82f1\u8bed\n\"\"\"\n\nprint(pd.DataFrame({\"mean\": df2.mean(),\n                    \"median\": df2.median(),\n                    \"var\": df2.var(),\n                    \"std\": df2.std(),\n                    \"max\": df2.max(),\n                    \"min\": df2.min(),\n                    \"idmax\": df2.idxmax(),\n                    \"idmin\": df2.idxmin(),\n                    }))\n\"\"\"\n        mean  median        var       std    max   min idmax idmin\n1  91.666667    90.0  58.333333  7.637626  100.0  85.0  \u5c0f\u7ea2  \u5c0f\u4eae\n2  75.000000    75.0  50.000000  7.071068   80.0  70.0  \u5c0f\u7ea2  \u5c0f\u660e\n3  94.333333    95.0  36.333333  6.027714  100.0  88.0  \u5c0f\u660e  \u5c0f\u7ea2\n\"\"\"\n\nprint(pd.DataFrame({\"mean\": df2.mean(skipna=False),\n                    \"median\": df2.median(skipna=False),\n                    \"var\": df2.var(skipna=False),\n                    \"std\": df2.std(skipna=False),\n                    \"max\": df2.max(skipna=False),\n                    \"min\": df2.min(skipna=False),\n                    \"idmax\": df2.idxmax(skipna=False),\n                    \"idmin\": df2.idxmin(skipna=False),\n                    }))\n\"\"\"\n        mean  median        var       std    max   min idmax idmin\n1  91.666667    90.0  58.333333  7.637626  100.0  85.0  \u5c0f\u7ea2  \u5c0f\u4eae\n2        NaN     NaN        NaN       NaN    NaN   NaN   NaN   NaN\n3  94.333333    95.0  36.333333  6.027714  100.0  88.0  \u5c0f\u660e  \u5c0f\u7ea2\n\"\"\"\n\nprint(pd.DataFrame({\"mean\": df3.mean(numeric_only=True),\n                    \"median\": df3.median(numeric_only=True),\n                    \"var\": df3.var(numeric_only=True),\n                    \"std\": df3.std(numeric_only=True),\n                    \"max\": df3.max(numeric_only=True),\n                    \"min\": df3.min(numeric_only=True),\n                    \"idmax\": df3.idxmax(numeric_only=True),\n                    \"idmin\": df3.idxmin(numeric_only=True),\n                    }))\n\"\"\"\n           mean  median         var        std  max  min idmax idmin\n\u8bed\u6587  91.666667    90.0   58.333333   7.637626  100   85  \u5c0f\u7ea2  \u5c0f\u4eae\n\u6570\u5b66  80.000000    80.0  100.000000  10.000000   90   70  \u5c0f\u4eae  \u5c0f\u660e\n\u82f1\u8bed  94.333333    95.0   36.333333   6.027714  100   88  \u5c0f\u660e  \u5c0f\u7ea2\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#corr","title":"corr","text":"<p><code>df.corr(method='pearson', min_periods=1, numeric_only=False)</code></p> <p>\u8ba1\u7b97DatFrame\u5bf9\u8c61\u5404\u5217\u7684\u4e24\u4e24\u76f8\u5173\u6027\uff0c\u6392\u9664 NA/\u7a7a\u503c</p> <ol> <li> <p>method\uff1a</p> </li> <li> <p>\"pearson\"\u3010\u9ed8\u8ba4\u3011\uff1a\u6807\u51c6\u76f8\u5173\u7cfb\u6570</p> </li> <li> <p>\"kendall\"\uff1aKendall-Tau\u76f8\u5173\u7cfb\u6570</p> </li> <li> <p>\"spearman\"\uff1aSpearman\u7b49\u7ea7\u76f8\u5173</p> </li> <li> <p>min_periods\uff1a\u6bcf\u5bf9\u5217\u6570\u636e\u5f97\u51fa\u6709\u6548\u7ed3\u679c\u6240\u9700\u7684\u6700\u5c0f\u89c2\u6d4b\u503c\u6570\u91cf\u3002\u76ee\u524d\u4ec5\u9002\u7528\u4e8e\"pearson\"\u548c\"spearman\"\u3002\u9ed8\u8ba4\u4e3a1</p> </li> <li> <p>numeric_only\uff1a\u540c\u4e0a</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#corrwith","title":"corrwith","text":"<p><code>df.corrwith(other, axis=0, drop=False, method='pearson', numeric_only=False)</code></p> <ol> <li> <p>other\uff1a\u5f85\u4e0e\u4e4b\u8ba1\u7b97\u76f8\u5173\u6027\u7684\u53e6\u4e00\u4e2aDataFrame\u5bf9\u8c61\u6216Series\u5bf9\u8c61</p> </li> <li> <p>axis\uff1a\u8ba1\u7b97\u4f7f\u7528\u7684\u8f74\u30020\u6216\"index\"\u6c42\u6210\u5bf9\u5217\u76f8\u5173\u6027\uff08\u9ed8\u8ba4\uff09\uff1b1\u6216\"columns\"\u6c42\u6210\u5bf9\u884c\u76f8\u5173\u6027</p> </li> <li> <p>drop\uff1a\u5220\u9664\u7ed3\u679c\u7f3a\u5931\u503c\u884c\u6216\u5217\u3002\u9ed8\u8ba4False</p> </li> <li> <p>method\uff1a\u540c\u4e0a</p> </li> <li> <p>numeric_only\uff1a\u540c\u4e0a</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_16","title":"\u5408\u5e76\u4e0e\u62fc\u63a5","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#merge","title":"merge","text":"<p><code>pd.merge(left, right, how='inner', on=None, sort=False, suffixes=('_x', '_y'), copy=None, indicator=False, validate=None)</code></p> <p><code>pd.merge(left, right, how='inner', left_on=None, right_on=None, sort=False, suffixes=('_x', '_y'), copy=None, indicator=False, validate=None)</code></p> <p><code>pd.merge(left, right, how='inner', left_index=False, right_index=False, sort=False, suffixes=('_x', '_y'), copy=None, indicator=False, validate=None)</code></p> <p><code>df.merge(right, how='inner', on=None, sort=False, suffixes=('_x', '_y'), copy=None, indicator=False, validate=None)</code></p> <p><code>df.merge(right, how='inner', left_on=None, right_on=None, sort=False, suffixes=('_x', '_y'), copy=None, indicator=False, validate=None)</code></p> <p><code>df.merge(right, how='inner', left_index=False, right_index=False, sort=False, suffixes=('_x', '_y'), copy=None, indicator=False, validate=None)</code></p> <p>\u6307\u5b9a\u8fde\u63a5\u952e\u5217\uff0c\u901a\u8fc7\u8fde\u63a5\u952e\u7d22\u5f15\u8fdb\u884c\u5217\uff08\u5de6\u53f3\uff09\u7684\u5408\u5e76</p> <p>\u8fde\u63a5\u952e\uff1a     \u7528\u4e8e\u7d22\u5f15\u4e24\u4e2aDataFrame\u5bf9\u8c61\u5bf9\u5e94\u7684\u884c\uff0c\u4ece\u800c\u5c06\u5176\u8fde\u63a5\u8d77\u6765\uff0c\u7d22\u5f15\u4e0d\u5230\u7684\u6570\u636e\u4ee5NaN\u586b\u5145</p> <ol> <li> <p>left\uff1a\u5de6\u4fa7\u5f85\u5408\u5e76\u7684DataFrame\u5bf9\u8c61\u6216\u5df2\u547d\u540d\u7684Series\u5bf9\u8c61</p> </li> <li> <p>right\uff1a\u53f3\u4fa7\u5f85\u5408\u5e76\u7684DataFrame\u5bf9\u8c61\u6216\u5df2\u547d\u540d\u7684Series\u5bf9\u8c61</p> </li> <li> <p>how</p> </li> <li> <p>\"left\"\uff1a\u4f7f\u7528\u5de6\u4fa7DataFrame\u5bf9\u8c61\u7684\u8fde\u63a5\u952e\u7d22\u5f15\uff08\u5de6\u4fa7\u8868\u4f18\u5148\uff09</p> </li> <li> <p>\"right\"\uff1a\u4f7f\u7528\u53f3\u4fa7DataFrame\u5bf9\u8c61\u7684\u8fde\u63a5\u952e\u7d22\u5f15\uff08\u53f3\u4fa7\u8868\u4f18\u5148\uff09</p> </li> <li> <p>\"outer\"\uff1a\u4f7f\u7528\u4e24\u4fa7DataFrame\u5bf9\u8c61\u7684\u8fde\u63a5\u952e\u7684\u5e76\u96c6\u7d22\u5f15\uff08\u90fd\u8981\uff09</p> </li> <li> <p>\"inner\"\uff08\u9ed8\u8ba4\uff09\uff1a\u4f7f\u7528\u4e24\u4fa7DataFrame\u5bf9\u8c61\u7684\u8fde\u63a5\u952e\u7684\u4ea4\u96c6\u7d22\u5f15\uff08\u53ea\u8981\u5171\u6709\u7684\uff09</p> </li> <li> <p>\"cross\"\uff1a\u4ece\u4e24\u4e2aDataFrame\u5bf9\u8c61\u521b\u5efa\u7b1b\u5361\u5c14\u79ef\uff0c\u4fdd\u7559\u5de6\u4fa7\u5bf9\u8c61\u7684\u987a\u5e8f\u3002\u4e0d\u53ef\u4f20\u9012on\u3001left_on\u3001right_on\u3001left_index\u3001right_index\u53c2\u6570\u3002</p> </li> <li> <p>on\uff1a\u6307\u5b9a\u4f5c\u4e3a\u8fde\u63a5\u952e\u5217\u7684\u5217\u540d\uff08\u4e0d\u4f1a\u91cd\u590d\uff09\uff0c\u8be5\u5217\u540d\u5fc5\u987b\u5728\u4e24\u4e2aDataFrame\u5bf9\u8c61\u4e2d\u90fd\u6709\u3002\u9ed8\u8ba4\u4e3a\u4e24\u4e2aDataFrame\u5bf9\u8c61\u5171\u540c\u7684\u5217</p> </li> <li> <p>left_on\uff1a\u5de6\u4fa7DataFrame\u5bf9\u8c61\u4e2d\u4f5c\u4e3a\u8fde\u63a5\u952e\u5217\u7684\u5217\u540d right_on\uff1a\u53f3\u4fa7DataFrame\u5bf9\u8c61\u4e2d\u4f5c\u4e3a\u8fde\u63a5\u952e\u5217\u7684\u5217\u540d</p> </li> <li> <p>left_index\uff1a\u4f7f\u7528\u5de6\u4fa7DataFrame\u5bf9\u8c61\u7684\u7d22\u5f15\u5217\u4f5c\u4e3a\u8fde\u63a5\u952e\u5217\uff0c\u9ed8\u8ba4\u4e3aFalse right_index\uff1a\u4f7f\u7528\u53f3\u4fa7DataFrame\u5bf9\u8c61\u7684\u7d22\u5f15\u5217\u4f5c\u4e3a\u8fde\u63a5\u952e\u5217\uff0c \u9ed8\u8ba4\u4e3aFalse</p> </li> <li> <p>sort\uff1a\u5728\u7ed3\u679c DataFrame\u5bf9\u8c61 \u4e2d\u6309\u5b57\u5178\u987a\u5e8f\u5bf9\u8fde\u63a5\u952e\u8fdb\u884c\u6392\u5e8f\u540e\u518d\u7d22\u5f15\u3002\u9ed8\u8ba4\u4e3a False\uff0c\u987a\u5e8f\u53d6\u51b3\u4e8ehow \u53c2\u6570</p> </li> <li> <p>suffixes\uff1a\u4e3a\u4e0d\u4f5c\u4e3a\u8fde\u63a5\u952e\u5217\u7684\u91cd\u590d\u5217\u540d\u6dfb\u52a0\u540e\u7f00\uff0c\u9700\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a2\u7684\u5e8f\u5217\uff0c\u5143\u7d20\u4e3a\u540e\u7f00\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u4e3a\uff08\"_x\", \"_y\"\uff09\u3002\u82e5\u4e0d\u4f20\u5b57\u7b26\u4e32\u800c\u662f\u4f20None\uff0c\u5219\u8868\u793a\u4fdd\u7559\u539f\u5217\u540d\uff0c\u4f46\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u4e3aNone\u3002</p> </li> <li> <p>copy\uff1a\u9ed8\u8ba4True</p> </li> <li> <p>indicator\uff1a\u5982\u679c\u4e3a True\uff0c\u5219\u5411\u8f93\u51fa DataFrame \u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a \u201c_merge\u201d \u7684\u5217\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173\u6bcf\u884c\u6765\u6e90\u4e8e\u54ea\u4e2aDataFrame\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u5b57\u7b26\u4e32\u4e3a\u8be5\u5217\u6307\u5b9a\u4e0d\u540c\u7684\u540d\u79f0\u3002\u9ed8\u8ba4\u4e3aFalse</p> </li> <li> <p>validate**\uff1a**\u68c0\u67e5\u8fde\u63a5\u952e\u7684\u552f\u4e00\u6027\uff0c\u4e0d\u7b26\u5408\u5219\u62a5\u9519</p> </li> <li> <p>\"**one_to_one\"\u3001\"1:1\"**\uff1a\u68c0\u67e5\u8fde\u63a5\u952e\u5728\u4e24\u4fa7DataFrame\u5bf9\u8c61\u4e2d\u662f\u5426\u552f\u4e00</p> </li> <li> <p>\"**one_to_many\"\u3001\"1:m\"**\uff1a\u68c0\u67e5\u8fde\u63a5\u952e\u5728\u5de6\u4fa7DataFrame\u5bf9\u8c61\u4e2d\u662f\u5426\u552f\u4e00</p> </li> <li> <p>\"**many_to_one\"\u3001\"m:1\"**\uff1a\u68c0\u67e5\u8fde\u63a5\u952e\u5728\u53f3\u4fa7DataFrame\u5bf9\u8c61\u4e2d\u662f\u5426\u552f\u4e00</p> </li> <li> <p>\"**many_to_many\"\u3001\"m:m\"**\uff1a\u4e0d\u68c0\u67e5\u552f\u4e00\u6027</p> </li> </ol> <pre><code>df_info = pd.DataFrame(data={\"\u59d3\u540d\": [\"\u5c0f\u660e\", \"\u5c0f\u5f20\", \"\u5c0f\u4eae\", \"\u5c0f\u7ea2\", \"\u5c0f\u767d\", \"\u5c0f\u674e\"],\n                             \"\u6027\u522b\": [\"\u7537\", \"\u7537\", \"\u5973\", \"\u7537\", \"\u5973\", \"\u5973\"],\n                             \"\u5e74\u9f84\": [21, 22, 23, 20, 22, 25],\n                             \"\u5b66\u53f71\": [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\"],\n                             \"\u6392\u540d\": [1, 2, 3, 4, 5, 6]})\ndf_score = pd.DataFrame(data={\"\u59d3\u540d\": [\"\u5c0f\u90d1\", \"\u5c0f\u5f20\", \"\u5c0f\u6587\", \"\u5c0f\u7ea2\", \"\u5c0f\u660e\", \"\u5c0f\u660e\"],\n                              \"\u5b66\u53f72\": [\"07\", \"02\", \"08\", \"04\", \"01\", \"09\"],\n                              \"\u8bed\u6587\": [90, 95, 91, 90, 85, 89],\n                              \"\u6570\u5b66\": [91, 90, 85, 80, 99, 97],\n                              \"\u82f1\u8bed\": [95, 97, 98, 94, 92, 87],\n                              \"\u6392\u540d\": [7, 2, 8, 4, 1, 9]})\nprint(df_info)\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d\n0  \u5c0f\u660e   \u7537    21    01     1\n1  \u5c0f\u5f20   \u7537    22    02     2\n2  \u5c0f\u4eae   \u5973    23    03     3\n3  \u5c0f\u7ea2   \u7537    20    04     4\n4  \u5c0f\u767d   \u5973    22    05     5\n5  \u5c0f\u674e   \u5973    25    06     6\n6  \u5c0f\u5218   \u7537    23    10    10\n\"\"\"\n\nprint(df_score)\n\"\"\"\n   \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d\n0  \u5c0f\u90d1    07    90    91    95     7\n1  \u5c0f\u5f20    02    95    90    97     2\n2  \u5c0f\u6587    08    91    85    98     8\n3  \u5c0f\u7ea2    04    90    80    94     4\n4  \u5c0f\u660e    01    85    99    92     1\n5  \u5c0f\u660e    09    89    97    87     9\n\"\"\"\n\nprint(pd.merge(df_info, df_score, on=\"\u59d3\u540d\", how=\"inner\"))\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d_x \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d_y\n0  \u5c0f\u660e   \u7537    21    01       1    01    85    99    92       1\n1  \u5c0f\u660e   \u7537    21    01       1    09    89    97    87       9\n2  \u5c0f\u5f20   \u7537    22    02       2    02    95    90    97       2\n3  \u5c0f\u7ea2   \u7537    20    04       4    04    90    80    94       4\n\"\"\"\n\nprint(pd.merge(df_info, df_score, on=\"\u59d3\u540d\", how=\"left\"))\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d_x \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d_y\n0  \u5c0f\u660e   \u7537    21    01       1    01  85.0  99.0  92.0     1.0\n1  \u5c0f\u660e   \u7537    21    01       1    09  89.0  97.0  87.0     9.0\n2  \u5c0f\u5f20   \u7537    22    02       2    02  95.0  90.0  97.0     2.0\n3  \u5c0f\u4eae   \u5973    23    03       3   NaN   NaN   NaN   NaN     NaN\n4  \u5c0f\u7ea2   \u7537    20    04       4    04  90.0  80.0  94.0     4.0\n5  \u5c0f\u767d   \u5973    22    05       5   NaN   NaN   NaN   NaN     NaN\n6  \u5c0f\u674e   \u5973    25    06       6   NaN   NaN   NaN   NaN     NaN\n7  \u5c0f\u5218   \u7537    23    10      10   NaN   NaN   NaN   NaN     NaN\n\"\"\"\n\nprint(pd.merge(df_info, df_score, on=\"\u59d3\u540d\", how=\"right\"))\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d_x \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d_y\n0  \u5c0f\u90d1  NaN   NaN   NaN     NaN    07    90    91    95       7\n1  \u5c0f\u5f20   \u7537  22.0    02     2.0    02    95    90    97       2\n2  \u5c0f\u6587  NaN   NaN   NaN     NaN    08    91    85    98       8\n3  \u5c0f\u7ea2   \u7537  20.0    04     4.0    04    90    80    94       4\n4  \u5c0f\u660e   \u7537  21.0    01     1.0    01    85    99    92       1\n5  \u5c0f\u660e   \u7537  21.0    01     1.0    09    89    97    87       9\n\"\"\"\n\nprint(pd.merge(df_info, df_score, on=\"\u59d3\u540d\", how=\"outer\"))\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d_x \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d_y\n0  \u5c0f\u660e   \u7537  21.0    01     1.0    01  85.0  99.0  92.0     1.0\n1  \u5c0f\u660e   \u7537  21.0    01     1.0    09  89.0  97.0  87.0     9.0\n2  \u5c0f\u5f20   \u7537  22.0    02     2.0    02  95.0  90.0  97.0     2.0\n3  \u5c0f\u4eae   \u5973  23.0    03     3.0   NaN   NaN   NaN   NaN     NaN\n4  \u5c0f\u7ea2   \u7537  20.0    04     4.0    04  90.0  80.0  94.0     4.0\n5  \u5c0f\u767d   \u5973  22.0    05     5.0   NaN   NaN   NaN   NaN     NaN\n6  \u5c0f\u674e   \u5973  25.0    06     6.0   NaN   NaN   NaN   NaN     NaN\n7  \u5c0f\u5218   \u7537  23.0    10    10.0   NaN   NaN   NaN   NaN     NaN\n8  \u5c0f\u90d1  NaN   NaN   NaN     NaN    07  90.0  91.0  95.0     7.0\n9  \u5c0f\u6587  NaN   NaN   NaN     NaN    08  91.0  85.0  98.0     8.0\n\"\"\"\n\nprint(pd.merge(df_info, df_score, how=\"cross\"))\n\"\"\"\n   \u59d3\u540d_x \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d_x \u59d3\u540d_y \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d_y\n0    \u5c0f\u660e   \u7537    21    01       1   \u5c0f\u90d1    07    90    91    95       7\n1    \u5c0f\u660e   \u7537    21    01       1   \u5c0f\u5f20    02    95    90    97       2\n2    \u5c0f\u660e   \u7537    21    01       1   \u5c0f\u6587    08    91    85    98       8\n3    \u5c0f\u660e   \u7537    21    01       1   \u5c0f\u7ea2    04    90    80    94       4\n4    \u5c0f\u660e   \u7537    21    01       1   \u5c0f\u660e    01    85    99    92       1\n5    \u5c0f\u660e   \u7537    21    01       1   \u5c0f\u660e    09    89    97    87       9\n6    \u5c0f\u5f20   \u7537    22    02       2   \u5c0f\u90d1    07    90    91    95       7\n7    \u5c0f\u5f20   \u7537    22    02       2   \u5c0f\u5f20    02    95    90    97       2\n8    \u5c0f\u5f20   \u7537    22    02       2   \u5c0f\u6587    08    91    85    98       8\n9    \u5c0f\u5f20   \u7537    22    02       2   \u5c0f\u7ea2    04    90    80    94       4\n10   \u5c0f\u5f20   \u7537    22    02       2   \u5c0f\u660e    01    85    99    92       1\n11   \u5c0f\u5f20   \u7537    22    02       2   \u5c0f\u660e    09    89    97    87       9\n12   \u5c0f\u4eae   \u5973    23    03       3   \u5c0f\u90d1    07    90    91    95       7\n13   \u5c0f\u4eae   \u5973    23    03       3   \u5c0f\u5f20    02    95    90    97       2\n14   \u5c0f\u4eae   \u5973    23    03       3   \u5c0f\u6587    08    91    85    98       8\n15   \u5c0f\u4eae   \u5973    23    03       3   \u5c0f\u7ea2    04    90    80    94       4\n16   \u5c0f\u4eae   \u5973    23    03       3   \u5c0f\u660e    01    85    99    92       1\n17   \u5c0f\u4eae   \u5973    23    03       3   \u5c0f\u660e    09    89    97    87       9\n18   \u5c0f\u7ea2   \u7537    20    04       4   \u5c0f\u90d1    07    90    91    95       7\n19   \u5c0f\u7ea2   \u7537    20    04       4   \u5c0f\u5f20    02    95    90    97       2\n20   \u5c0f\u7ea2   \u7537    20    04       4   \u5c0f\u6587    08    91    85    98       8\n21   \u5c0f\u7ea2   \u7537    20    04       4   \u5c0f\u7ea2    04    90    80    94       4\n22   \u5c0f\u7ea2   \u7537    20    04       4   \u5c0f\u660e    01    85    99    92       1\n23   \u5c0f\u7ea2   \u7537    20    04       4   \u5c0f\u660e    09    89    97    87       9\n24   \u5c0f\u767d   \u5973    22    05       5   \u5c0f\u90d1    07    90    91    95       7\n25   \u5c0f\u767d   \u5973    22    05       5   \u5c0f\u5f20    02    95    90    97       2\n26   \u5c0f\u767d   \u5973    22    05       5   \u5c0f\u6587    08    91    85    98       8\n27   \u5c0f\u767d   \u5973    22    05       5   \u5c0f\u7ea2    04    90    80    94       4\n28   \u5c0f\u767d   \u5973    22    05       5   \u5c0f\u660e    01    85    99    92       1\n29   \u5c0f\u767d   \u5973    22    05       5   \u5c0f\u660e    09    89    97    87       9\n30   \u5c0f\u674e   \u5973    25    06       6   \u5c0f\u90d1    07    90    91    95       7\n31   \u5c0f\u674e   \u5973    25    06       6   \u5c0f\u5f20    02    95    90    97       2\n32   \u5c0f\u674e   \u5973    25    06       6   \u5c0f\u6587    08    91    85    98       8\n33   \u5c0f\u674e   \u5973    25    06       6   \u5c0f\u7ea2    04    90    80    94       4\n34   \u5c0f\u674e   \u5973    25    06       6   \u5c0f\u660e    01    85    99    92       1\n35   \u5c0f\u674e   \u5973    25    06       6   \u5c0f\u660e    09    89    97    87       9\n36   \u5c0f\u5218   \u7537    23    10      10   \u5c0f\u90d1    07    90    91    95       7\n37   \u5c0f\u5218   \u7537    23    10      10   \u5c0f\u5f20    02    95    90    97       2\n38   \u5c0f\u5218   \u7537    23    10      10   \u5c0f\u6587    08    91    85    98       8\n39   \u5c0f\u5218   \u7537    23    10      10   \u5c0f\u7ea2    04    90    80    94       4\n40   \u5c0f\u5218   \u7537    23    10      10   \u5c0f\u660e    01    85    99    92       1\n41   \u5c0f\u5218   \u7537    23    10      10   \u5c0f\u660e    09    89    97    87       9\n\"\"\"\n\nprint(pd.merge(df_info, df_score, left_on=\"\u5b66\u53f71\", right_on=\"\u5b66\u53f72\"))\n\"\"\"\n  \u59d3\u540d_x \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d_x \u59d3\u540d_y \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d_y\n0   \u5c0f\u660e   \u7537    21    01       1   \u5c0f\u660e    01    85    99    92       1\n1   \u5c0f\u5f20   \u7537    22    02       2   \u5c0f\u5f20    02    95    90    97       2\n2   \u5c0f\u7ea2   \u7537    20    04       4   \u5c0f\u7ea2    04    90    80    94       4\n\"\"\"\n\nprint(pd.merge(df_info, df_score, left_index=True, right_index=True))\n\"\"\"\n  \u59d3\u540d_x \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d_x \u59d3\u540d_y \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d_y\n0   \u5c0f\u660e   \u7537    21    01       1   \u5c0f\u90d1    07    90    91    95       7\n1   \u5c0f\u5f20   \u7537    22    02       2   \u5c0f\u5f20    02    95    90    97       2\n2   \u5c0f\u4eae   \u5973    23    03       3   \u5c0f\u6587    08    91    85    98       8\n3   \u5c0f\u7ea2   \u7537    20    04       4   \u5c0f\u7ea2    04    90    80    94       4\n4   \u5c0f\u767d   \u5973    22    05       5   \u5c0f\u660e    01    85    99    92       1\n5   \u5c0f\u674e   \u5973    25    06       6   \u5c0f\u660e    09    89    97    87       9\n\"\"\"\n\nprint(pd.merge(df_info, df_score, how=\"outer\", left_on=\"\u5b66\u53f71\", right_on=\"\u5b66\u53f72\"))\n\"\"\"\n  \u59d3\u540d_x \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d_x \u59d3\u540d_y \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d_y\n0   \u5c0f\u660e   \u7537  21.0    01     1.0   \u5c0f\u660e    01  85.0  99.0  92.0     1.0\n1   \u5c0f\u5f20   \u7537  22.0    02     2.0   \u5c0f\u5f20    02  95.0  90.0  97.0     2.0\n2   \u5c0f\u4eae   \u5973  23.0    03     3.0    NaN   NaN   NaN   NaN   NaN     NaN\n3   \u5c0f\u7ea2   \u7537  20.0    04     4.0   \u5c0f\u7ea2    04  90.0  80.0  94.0     4.0\n4   \u5c0f\u767d   \u5973  22.0    05     5.0    NaN   NaN   NaN   NaN   NaN     NaN\n5   \u5c0f\u674e   \u5973  25.0    06     6.0    NaN   NaN   NaN   NaN   NaN     NaN\n6   \u5c0f\u5218   \u7537  23.0    10    10.0    NaN   NaN   NaN   NaN   NaN     NaN\n7    NaN  NaN   NaN   NaN     NaN   \u5c0f\u90d1    07  90.0  91.0  95.0     7.0\n8    NaN  NaN   NaN   NaN     NaN   \u5c0f\u6587    08  91.0  85.0  98.0     8.0\n9    NaN  NaN   NaN   NaN     NaN   \u5c0f\u660e    09  89.0  97.0  87.0     9.0\n\"\"\"\n\nprint(pd.merge(df_info, df_score, how=\"outer\", left_on=\"\u5b66\u53f71\", right_on=\"\u5b66\u53f72\", sort=True))\n\"\"\"\n  \u59d3\u540d_x \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d_x \u59d3\u540d_y \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d_y\n0   \u5c0f\u660e   \u7537  21.0    01     1.0   \u5c0f\u660e    01  85.0  99.0  92.0     1.0\n1   \u5c0f\u5f20   \u7537  22.0    02     2.0   \u5c0f\u5f20    02  95.0  90.0  97.0     2.0\n2   \u5c0f\u4eae   \u5973  23.0    03     3.0    NaN   NaN   NaN   NaN   NaN     NaN\n3   \u5c0f\u7ea2   \u7537  20.0    04     4.0   \u5c0f\u7ea2    04  90.0  80.0  94.0     4.0\n4   \u5c0f\u767d   \u5973  22.0    05     5.0    NaN   NaN   NaN   NaN   NaN     NaN\n5   \u5c0f\u674e   \u5973  25.0    06     6.0    NaN   NaN   NaN   NaN   NaN     NaN\n6    NaN  NaN   NaN   NaN     NaN   \u5c0f\u90d1    07  90.0  91.0  95.0     7.0\n7    NaN  NaN   NaN   NaN     NaN   \u5c0f\u6587    08  91.0  85.0  98.0     8.0\n8    NaN  NaN   NaN   NaN     NaN   \u5c0f\u660e    09  89.0  97.0  87.0     9.0\n9   \u5c0f\u5218   \u7537  23.0    10    10.0    NaN   NaN   NaN   NaN   NaN     NaN\n\"\"\"\n\nprint(pd.merge(df_info, df_score, on=\"\u59d3\u540d\"))\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d_x \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d_y\n0  \u5c0f\u660e   \u7537    21    01       1    01    85    99    92       1\n1  \u5c0f\u660e   \u7537    21    01       1    09    89    97    87       9\n2  \u5c0f\u5f20   \u7537    22    02       2    02    95    90    97       2\n3  \u5c0f\u7ea2   \u7537    20    04       4    04    90    80    94       4\n\"\"\"\n\nprint(pd.merge(df_info, df_score, on=\"\u59d3\u540d\", suffixes=(\"1\", \"2\")))\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d1 \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d2\n0  \u5c0f\u660e   \u7537    21    01      1    01    85    99    92      1\n1  \u5c0f\u660e   \u7537    21    01      1    09    89    97    87      9\n2  \u5c0f\u5f20   \u7537    22    02      2    02    95    90    97      2\n3  \u5c0f\u7ea2   \u7537    20    04      4    04    90    80    94      4\n\"\"\"\n\nprint(pd.merge(df_info, df_score, on=\"\u59d3\u540d\", suffixes=(None, \"1\")))\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d1\n0  \u5c0f\u660e   \u7537    21    01     1    01    85    99    92      1\n1  \u5c0f\u660e   \u7537    21    01     1    09    89    97    87      9\n2  \u5c0f\u5f20   \u7537    22    02     2    02    95    90    97      2\n3  \u5c0f\u7ea2   \u7537    20    04     4    04    90    80    94      4\n\"\"\"\n\nprint(pd.merge(df_info, df_score, on=\"\u59d3\u540d\", how=\"outer\", indicator=True))\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d_x \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d_y      _merge\n0  \u5c0f\u660e   \u7537  21.0    01     1.0    01  85.0  99.0  92.0     1.0        both\n1  \u5c0f\u660e   \u7537  21.0    01     1.0    09  89.0  97.0  87.0     9.0        both\n2  \u5c0f\u5f20   \u7537  22.0    02     2.0    02  95.0  90.0  97.0     2.0        both\n3  \u5c0f\u4eae   \u5973  23.0    03     3.0   NaN   NaN   NaN   NaN     NaN   left_only\n4  \u5c0f\u7ea2   \u7537  20.0    04     4.0    04  90.0  80.0  94.0     4.0        both\n5  \u5c0f\u767d   \u5973  22.0    05     5.0   NaN   NaN   NaN   NaN     NaN   left_only\n6  \u5c0f\u674e   \u5973  25.0    06     6.0   NaN   NaN   NaN   NaN     NaN   left_only\n7  \u5c0f\u90d1  NaN   NaN   NaN     NaN    07  90.0  91.0  95.0     7.0  right_only\n8  \u5c0f\u6587  NaN   NaN   NaN     NaN    08  91.0  85.0  98.0     8.0  right_only\n\"\"\"\n\nprint(pd.merge(df_info, df_score, on=\"\u59d3\u540d\", how=\"outer\", indicator=\"\u6765\u6e90\"))\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d_x \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d_y        \u6765\u6e90\n0  \u5c0f\u660e   \u7537  21.0    01     1.0    01  85.0  99.0  92.0     1.0        both\n1  \u5c0f\u660e   \u7537  21.0    01     1.0    09  89.0  97.0  87.0     9.0        both\n2  \u5c0f\u5f20   \u7537  22.0    02     2.0    02  95.0  90.0  97.0     2.0        both\n3  \u5c0f\u4eae   \u5973  23.0    03     3.0   NaN   NaN   NaN   NaN     NaN   left_only\n4  \u5c0f\u7ea2   \u7537  20.0    04     4.0    04  90.0  80.0  94.0     4.0        both\n5  \u5c0f\u767d   \u5973  22.0    05     5.0   NaN   NaN   NaN   NaN     NaN   left_only\n6  \u5c0f\u674e   \u5973  25.0    06     6.0   NaN   NaN   NaN   NaN     NaN   left_only\n7  \u5c0f\u90d1  NaN   NaN   NaN     NaN    07  90.0  91.0  95.0     7.0  right_only\n8  \u5c0f\u6587  NaN   NaN   NaN     NaN    08  91.0  85.0  98.0     8.0  right_only\n\"\"\"\n\nprint(pd.merge(df_info, df_score, on=\"\u59d3\u540d\", how=\"outer\", validate=\"m:1\"))\n\"\"\"\npandas.errors.MergeError: Merge keys are not unique in right dataset; not a many-to-one merge\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#concat","title":"concat","text":"<p><code>pd.concat(objs, *, axis=0, join='outer', ignore_index=False, keys=None, levels=None, names=None, verify_integrity=False, sort=False, copy=None)</code></p> <p>\u4ee5\u884c\u6216\u5217\u6807\u7b7e\u4f5c\u4e3a\u8fde\u63a5\u952e\uff0c\u901a\u8fc7\u7d22\u5f15\u8fdb\u884c\u5217\u6216\u884c\u7684\u5408\u5e76</p> <ol> <li> <p>objs\uff1a\u5f85\u5408\u5e76\u7684Series\u5bf9\u8c61\u6216DataFrame\u5bf9\u8c61\u7684\u5e8f\u5217\u6216\u5b57\u5178\uff08\u22652\u4e2a\u5bf9\u8c61\uff09\u3002\u82e5\u4e3a\u5b57\u5178\uff0c\u5219\u5b57\u5178\u7684\u952e\u5e8f\u5217\u5c06\u4f20\u7ed9keys\u53c2\u6570</p> </li> <li> <p>axis\uff1a0/\"index\"\uff08\u9ed8\u8ba4\uff09\u4ee5\u5217\u6807\u7b7e\u4f5c\u4e3a\u8fde\u63a5\u952e\u8fdb\u884c\u884c\uff08\u4e0a\u4e0b\uff09\u7684\u5408\u5e76\uff0c1/\"columns\"\u4ee5\u884c\u6807\u7b7e\u4f5c\u4e3a\u8fde\u63a5\u952e\u8fdb\u884c\u5217\uff08\u5de6\u53f3\uff09\u7684\u5408\u5e76</p> </li> <li> <p>join\uff1a\"inner\"\u3001\"outer\"\uff08\u9ed8\u8ba4\uff09\u3002\u610f\u4e49\u540c\u4e0a</p> </li> <li> <p>ignore_index\uff1a\u662f\u5426\u5ffd\u7565axis\u8f74\u4e0a\u539f\u6709\u6807\u7b7e\uff0c\u6309\u4f4d\u7f6e\u91cd\u65b0\u5b9a\u4e49\u7d22\u5f15\u3002\u9ed8\u8ba4False</p> </li> <li> <p>keys\uff1a\u4f20\u5165\u4e00\u4e2a\u5e8f\u5217\uff0c\u957f\u5ea6\u5e94\u4e0eobjs\u957f\u5ea6\u4e00\u81f4\u3002\u4e3a\u6bcf\u4e2a\u4f20\u5165\u7684\u5bf9\u8c61axis\u8f74\u5916\u5c42\u518d\u6dfb\u52a0\u4e00\u5c42\u7d22\u5f15\uff0c\u6dfb\u52a0\u591a\u5c42\u7d22\u5f15\u65f6\uff0c\u5e8f\u5217\u5143\u7d20\u5e94\u4e3a\u5143\u7ec4\u3002\u9ed8\u8ba4\u4e3aNone</p> </li> <li> <p>levels\uff1a\u7565</p> </li> <li> <p>names\uff1a\u4f20\u5165\u4e00\u4e2a\u5e8f\u5217\uff0c\u5e8f\u5217\u957f\u5ea6\u5e94\u2264axis\u8f74\u7d22\u5f15\u5c42\u6570\uff0c\u4e3a\u6bcf\u4e00\u5c42\u7d22\u5f15\u6807\u8bb0\u540d\u79f0\u3002\u9ed8\u8ba4\u4e3aNone</p> </li> <li> <p>verify_integrity\uff1a\u662f\u5426\u68c0\u67e5\u6cbfaxis\u8f74\u7684\u91cd\u590d\u7d22\u5f15\uff0c\u5e76\u62a5\u9519\u3002\u9ed8\u8ba4False</p> </li> <li> <p>sort\uff1a\u662f\u5426\u5bf9\u8fde\u63a5\u952e\u8fdb\u884c\u6392\u5e8f\u540e\u518d\u7d22\u5f15\u3002\u9ed8\u8ba4False</p> </li> <li> <p>copy\uff1a\u7565</p> </li> </ol> <pre><code>df_info = pd.DataFrame(data={\"\u59d3\u540d\": [\"\u5c0f\u660e\", \"\u5c0f\u5f20\", \"\u5c0f\u4eae\", \"\u5c0f\u7ea2\", \"\u5c0f\u767d\", \"\u5c0f\u674e\"],\n                             \"\u6027\u522b\": [\"\u7537\", \"\u7537\", \"\u5973\", \"\u7537\", \"\u5973\", \"\u5973\"],\n                             \"\u5e74\u9f84\": [21, 22, 23, 20, 22, 25],\n                             \"\u5b66\u53f71\": [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\"],\n                             \"\u6392\u540d\": [1, 2, 3, 4, 5, 6]})\ndf_score = pd.DataFrame(data={\"\u59d3\u540d\": [\"\u5c0f\u90d1\", \"\u5c0f\u5f20\", \"\u5c0f\u6587\", \"\u5c0f\u7ea2\", \"\u5c0f\u660e\", \"\u5c0f\u660e\"],\n                              \"\u5b66\u53f72\": [\"07\", \"02\", \"08\", \"04\", \"01\", \"09\"],\n                              \"\u8bed\u6587\": [90, 95, 91, 90, 85, 89],\n                              \"\u6570\u5b66\": [91, 90, 85, 80, 99, 97],\n                              \"\u82f1\u8bed\": [95, 97, 98, 94, 92, 87],\n                              \"\u6392\u540d\": [7, 2, 8, 4, 1, 9]})\nprint(df_info)\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d\n0  \u5c0f\u660e   \u7537    21    01     1\n1  \u5c0f\u5f20   \u7537    22    02     2\n2  \u5c0f\u4eae   \u5973    23    03     3\n3  \u5c0f\u7ea2   \u7537    20    04     4\n4  \u5c0f\u767d   \u5973    22    05     5\n5  \u5c0f\u674e   \u5973    25    06     6\n6  \u5c0f\u5218   \u7537    23    10    10\n\"\"\"\n\nprint(df_score)\n\"\"\"\n   \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d\n0  \u5c0f\u90d1    07    90    91    95     7\n1  \u5c0f\u5f20    02    95    90    97     2\n2  \u5c0f\u6587    08    91    85    98     8\n3  \u5c0f\u7ea2    04    90    80    94     4\n4  \u5c0f\u660e    01    85    99    92     1\n5  \u5c0f\u660e    09    89    97    87     9\n\"\"\"\n\nprint(pd.concat([df_info, df_score]))\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n0  \u5c0f\u660e   \u7537  21.0    01     1   NaN   NaN   NaN   NaN\n1  \u5c0f\u5f20   \u7537  22.0    02     2   NaN   NaN   NaN   NaN\n2  \u5c0f\u4eae   \u5973  23.0    03     3   NaN   NaN   NaN   NaN\n3  \u5c0f\u7ea2   \u7537  20.0    04     4   NaN   NaN   NaN   NaN\n4  \u5c0f\u767d   \u5973  22.0    05     5   NaN   NaN   NaN   NaN\n5  \u5c0f\u674e   \u5973  25.0    06     6   NaN   NaN   NaN   NaN\n6  \u5c0f\u5218   \u7537  23.0    10    10   NaN   NaN   NaN   NaN\n0  \u5c0f\u90d1  NaN   NaN   NaN     7    07  90.0  91.0  95.0\n1  \u5c0f\u5f20  NaN   NaN   NaN     2    02  95.0  90.0  97.0\n2  \u5c0f\u6587  NaN   NaN   NaN     8    08  91.0  85.0  98.0\n3  \u5c0f\u7ea2  NaN   NaN   NaN     4    04  90.0  80.0  94.0\n4  \u5c0f\u660e  NaN   NaN   NaN     1    01  85.0  99.0  92.0\n5  \u5c0f\u660e  NaN   NaN   NaN     9    09  89.0  97.0  87.0\n\"\"\"\n\nprint(pd.concat({\"\u88681\": df_info, \"\u88682\": df_score}))\nprint(pd.concat([df_info, df_score], keys=[\"\u88681\", \"\u88682\"]))\n\"\"\"\n       \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u88681 0  \u5c0f\u660e   \u7537  21.0    01     1   NaN   NaN   NaN   NaN\n    1  \u5c0f\u5f20   \u7537  22.0    02     2   NaN   NaN   NaN   NaN\n    2  \u5c0f\u4eae   \u5973  23.0    03     3   NaN   NaN   NaN   NaN\n    3  \u5c0f\u7ea2   \u7537  20.0    04     4   NaN   NaN   NaN   NaN\n    4  \u5c0f\u767d   \u5973  22.0    05     5   NaN   NaN   NaN   NaN\n    5  \u5c0f\u674e   \u5973  25.0    06     6   NaN   NaN   NaN   NaN\n    6  \u5c0f\u5218   \u7537  23.0    10    10   NaN   NaN   NaN   NaN\n\u88682 0  \u5c0f\u90d1  NaN   NaN   NaN     7    07  90.0  91.0  95.0\n    1  \u5c0f\u5f20  NaN   NaN   NaN     2    02  95.0  90.0  97.0\n    2  \u5c0f\u6587  NaN   NaN   NaN     8    08  91.0  85.0  98.0\n    3  \u5c0f\u7ea2  NaN   NaN   NaN     4    04  90.0  80.0  94.0\n    4  \u5c0f\u660e  NaN   NaN   NaN     1    01  85.0  99.0  92.0\n    5  \u5c0f\u660e  NaN   NaN   NaN     9    09  89.0  97.0  87.0\n\"\"\"\n\nprint(pd.concat([df_info, df_score], keys=[(\"\u88681\", \"info\"), (\"\u88682\", \"score\")]))\n\"\"\"\n             \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u88681 info  0  \u5c0f\u660e   \u7537  21.0    01     1   NaN   NaN   NaN   NaN\n          1  \u5c0f\u5f20   \u7537  22.0    02     2   NaN   NaN   NaN   NaN\n          2  \u5c0f\u4eae   \u5973  23.0    03     3   NaN   NaN   NaN   NaN\n          3  \u5c0f\u7ea2   \u7537  20.0    04     4   NaN   NaN   NaN   NaN\n          4  \u5c0f\u767d   \u5973  22.0    05     5   NaN   NaN   NaN   NaN\n          5  \u5c0f\u674e   \u5973  25.0    06     6   NaN   NaN   NaN   NaN\n          6  \u5c0f\u5218   \u7537  23.0    10    10   NaN   NaN   NaN   NaN\n\u88682 score 0  \u5c0f\u90d1  NaN   NaN   NaN     7    07  90.0  91.0  95.0\n          1  \u5c0f\u5f20  NaN   NaN   NaN     2    02  95.0  90.0  97.0\n          2  \u5c0f\u6587  NaN   NaN   NaN     8    08  91.0  85.0  98.0\n          3  \u5c0f\u7ea2  NaN   NaN   NaN     4    04  90.0  80.0  94.0\n          4  \u5c0f\u660e  NaN   NaN   NaN     1    01  85.0  99.0  92.0\n          5  \u5c0f\u660e  NaN   NaN   NaN     9    09  89.0  97.0  87.0\n\"\"\"\n\nprint(pd.concat([df_info, df_score], keys=[(\"\u88681\", \"info\"), (\"\u88682\", \"score\")], names=[\"\u8868\u540d\", \"content\", \"index\"]))\n\"\"\"\n                    \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u8868\u540d content index\n\u88681  info    0      \u5c0f\u660e   \u7537  21.0    01     1   NaN   NaN   NaN   NaN\n             1      \u5c0f\u5f20   \u7537  22.0    02     2   NaN   NaN   NaN   NaN\n             2      \u5c0f\u4eae   \u5973  23.0    03     3   NaN   NaN   NaN   NaN\n             3      \u5c0f\u7ea2   \u7537  20.0    04     4   NaN   NaN   NaN   NaN\n             4      \u5c0f\u767d   \u5973  22.0    05     5   NaN   NaN   NaN   NaN\n             5      \u5c0f\u674e   \u5973  25.0    06     6   NaN   NaN   NaN   NaN\n             6      \u5c0f\u5218   \u7537  23.0    10    10   NaN   NaN   NaN   NaN\n\u88682  score   0      \u5c0f\u90d1  NaN   NaN   NaN     7    07  90.0  91.0  95.0\n             1      \u5c0f\u5f20  NaN   NaN   NaN     2    02  95.0  90.0  97.0\n             2      \u5c0f\u6587  NaN   NaN   NaN     8    08  91.0  85.0  98.0\n             3      \u5c0f\u7ea2  NaN   NaN   NaN     4    04  90.0  80.0  94.0\n             4      \u5c0f\u660e  NaN   NaN   NaN     1    01  85.0  99.0  92.0\n             5      \u5c0f\u660e  NaN   NaN   NaN     9    09  89.0  97.0  87.0\n\"\"\"\n\nprint(pd.concat([df_info, df_score], axis=1))\n\"\"\"\n   \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d  \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u6392\u540d\n0  \u5c0f\u660e   \u7537    21    01     1  \u5c0f\u90d1    07  90.0  91.0  95.0   7.0\n1  \u5c0f\u5f20   \u7537    22    02     2  \u5c0f\u5f20    02  95.0  90.0  97.0   2.0\n2  \u5c0f\u4eae   \u5973    23    03     3  \u5c0f\u6587    08  91.0  85.0  98.0   8.0\n3  \u5c0f\u7ea2   \u7537    20    04     4  \u5c0f\u7ea2    04  90.0  80.0  94.0   4.0\n4  \u5c0f\u767d   \u5973    22    05     5  \u5c0f\u660e    01  85.0  99.0  92.0   1.0\n5  \u5c0f\u674e   \u5973    25    06     6  \u5c0f\u660e    09  89.0  97.0  87.0   9.0\n6  \u5c0f\u5218   \u7537    23    10    10   NaN   NaN   NaN   NaN   NaN   NaN\n\"\"\"\n\npd.concat([df_info, df_score], axis=1, keys=[(\"\u88681\", \"info\"), (\"\u88682\", \"score\")], names=[\"\u8868\u540d\", \"content\", \"index\"])\n\"\"\"\n\u8868\u540d      \u88681                        \u88682\ncontent  info                      score\nindex    \u59d3\u540d \u6027\u522b \u5e74\u9f84 \u5b66\u53f71 \u6392\u540d  \u59d3\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed \u6392\u540d\n0        \u5c0f\u660e   \u7537   21    01    1  \u5c0f\u90d1    07  90.0  91.0  95.0  7.0\n1        \u5c0f\u5f20   \u7537   22    02    2  \u5c0f\u5f20    02  95.0  90.0  97.0  2.0\n2        \u5c0f\u4eae   \u5973   23    03    3  \u5c0f\u6587    08  91.0  85.0  98.0  8.0\n3        \u5c0f\u7ea2   \u7537   20    04    4  \u5c0f\u7ea2    04  90.0  80.0  94.0  4.0\n4        \u5c0f\u767d   \u5973   22    05    5  \u5c0f\u660e    01  85.0  99.0  92.0  1.0\n5        \u5c0f\u674e   \u5973   25    06    6  \u5c0f\u660e    09  89.0  97.0  87.0  9.0\n6        \u5c0f\u5218   \u7537   23    10   10   NaN   NaN   NaN   NaN   NaN  NaN\n\"\"\"\n\nprint(pd.concat([df_info, df_score], join=\"inner\"))\n\"\"\"\n   \u59d3\u540d  \u6392\u540d\n0  \u5c0f\u660e     1\n1  \u5c0f\u5f20     2\n2  \u5c0f\u4eae     3\n3  \u5c0f\u7ea2     4\n4  \u5c0f\u767d     5\n5  \u5c0f\u674e     6\n6  \u5c0f\u5218    10\n0  \u5c0f\u90d1     7\n1  \u5c0f\u5f20     2\n2  \u5c0f\u6587     8\n3  \u5c0f\u7ea2     4\n4  \u5c0f\u660e     1\n5  \u5c0f\u660e     9\n\"\"\"\n\nprint(pd.concat([df_info, df_score], ignore_index=True))\n\"\"\"\n    \u59d3\u540d \u6027\u522b  \u5e74\u9f84 \u5b66\u53f71  \u6392\u540d \u5b66\u53f72  \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n0   \u5c0f\u660e   \u7537  21.0    01     1   NaN   NaN   NaN   NaN\n1   \u5c0f\u5f20   \u7537  22.0    02     2   NaN   NaN   NaN   NaN\n2   \u5c0f\u4eae   \u5973  23.0    03     3   NaN   NaN   NaN   NaN\n3   \u5c0f\u7ea2   \u7537  20.0    04     4   NaN   NaN   NaN   NaN\n4   \u5c0f\u767d   \u5973  22.0    05     5   NaN   NaN   NaN   NaN\n5   \u5c0f\u674e   \u5973  25.0    06     6   NaN   NaN   NaN   NaN\n6   \u5c0f\u5218   \u7537  23.0    10    10   NaN   NaN   NaN   NaN\n7   \u5c0f\u90d1  NaN   NaN   NaN     7    07  90.0  91.0  95.0\n8   \u5c0f\u5f20  NaN   NaN   NaN     2    02  95.0  90.0  97.0\n9   \u5c0f\u6587  NaN   NaN   NaN     8    08  91.0  85.0  98.0\n10  \u5c0f\u7ea2  NaN   NaN   NaN     4    04  90.0  80.0  94.0\n11  \u5c0f\u660e  NaN   NaN   NaN     1    01  85.0  99.0  92.0\n12  \u5c0f\u660e  NaN   NaN   NaN     9    09  89.0  97.0  87.0\n\"\"\"\n\nprint(pd.concat([df_info, df_score], sort=True))\n\"\"\"\n   \u59d3\u540d \u5b66\u53f71 \u5b66\u53f72  \u5e74\u9f84 \u6027\u522b  \u6392\u540d  \u6570\u5b66  \u82f1\u8bed  \u8bed\u6587\n0  \u5c0f\u660e    01   NaN  21.0   \u7537     1   NaN   NaN   NaN\n1  \u5c0f\u5f20    02   NaN  22.0   \u7537     2   NaN   NaN   NaN\n2  \u5c0f\u4eae    03   NaN  23.0   \u5973     3   NaN   NaN   NaN\n3  \u5c0f\u7ea2    04   NaN  20.0   \u7537     4   NaN   NaN   NaN\n4  \u5c0f\u767d    05   NaN  22.0   \u5973     5   NaN   NaN   NaN\n5  \u5c0f\u674e    06   NaN  25.0   \u5973     6   NaN   NaN   NaN\n6  \u5c0f\u5218    10   NaN  23.0   \u7537    10   NaN   NaN   NaN\n0  \u5c0f\u90d1   NaN    07   NaN  NaN     7  91.0  95.0  90.0\n1  \u5c0f\u5f20   NaN    02   NaN  NaN     2  90.0  97.0  95.0\n2  \u5c0f\u6587   NaN    08   NaN  NaN     8  85.0  98.0  91.0\n3  \u5c0f\u7ea2   NaN    04   NaN  NaN     4  80.0  94.0  90.0\n4  \u5c0f\u660e   NaN    01   NaN  NaN     1  99.0  92.0  85.0\n5  \u5c0f\u660e   NaN    09   NaN  NaN     9  97.0  87.0  89.0\n\"\"\"\n\n# print(pd.concat([df_info, df_score], verify_integrity=True))\n\"\"\"\nValueError: Indexes have overlapping values: Index([0, 1, 2, 3, 4, 5], dtype='int64')\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_17","title":"\u91cd\u5851","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#pivot","title":"pivot","text":"<p><code>df.pivot(index, columns, value)</code></p> <p>\u91cd\u5851DataFrame\u5bf9\u8c61\uff0c\u751f\u6210\u6570\u636e\u900f\u89c6\u8868\u3002\u4e0d\u5e94\u51fa\u73b0\u91cd\u590d\u7684\u884c-\u5217\u5bf9</p> <ol> <li> <p>index\uff1a\u91cd\u5851\u4e3a\u884c\u7684\u5217\u6807\u7b7e\u6216\u5217\u6807\u7b7e\u5217\u8868\uff08\u5f62\u6210\u591a\u7ea7\u6807\u7b7e\uff09</p> </li> <li> <p>columns\uff1a\u91cd\u5851\u4e3a\u5217\u7684\u5217\u6807\u7b7e\u6216\u5217\u6807\u7b7e\u5217\u8868\uff08\u5f62\u6210\u591a\u7ea7\u6807\u7b7e\uff09</p> </li> <li> <p>value\uff1a\u5c55\u793a\u7684\u6570\u636e</p> </li> </ol> <pre><code>df = pd.DataFrame({'foo': ['one', 'one', 'one', 'two', 'two','two'],\n                   'bar': ['A', 'B', 'C', 'A', 'B', 'C'],\n                   'baz': [1, 2, 3, 1, 2, 3],\n                   'zoo': ['x', 'y', 'z', 'q', 'w', 't']})\nprint(df)\n\"\"\"\n   foo bar  baz zoo\n0  one   A    1   x\n1  one   B    2   y\n2  one   C    3   z\n3  two   A    1   q\n4  two   B    2   w\n5  two   C    3   t\n\"\"\"\n\nprint(df.pivot(index=\"foo\", columns=\"bar\"))\n\"\"\"\n    baz       zoo\nbar   A  B  C   A  B  C\nfoo\none   1  2  3   x  y  z\ntwo   1  2  3   q  w  t\n\"\"\"\n\nprint(df.pivot(index=\"foo\", columns=\"bar\", values=\"baz\"))\nprint(df.pivot(index=\"foo\", columns=\"bar\")[\"baz\"])\n\"\"\"\nbar  A  B  C\nfoo\none  1  2  3\ntwo  1  2  3\n\"\"\"\n\nprint(df.pivot(index=[\"foo\", \"baz\"], columns=\"bar\"))\n\"\"\"\n         zoo\nbar        A    B    C\nfoo baz\none 1      x  NaN  NaN\n    2    NaN    y  NaN\n    3    NaN  NaN    z\ntwo 1      q  NaN  NaN\n    2    NaN    w  NaN\n    3    NaN  NaN    t\n\"\"\"\n\nprint(df.pivot(index=\"foo\", columns=[\"bar\", \"baz\"]))\n\"\"\"\n    zoo\nbar   A  B  C\nbaz   1  2  3\nfoo\none   x  y  z\ntwo   q  w  t\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_18","title":"\u5206\u7ec4","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#groupby","title":"groupby","text":"<p><code>df.groupby(by=None, axis=&lt;no_default&gt;, level=None, as_index=True, sort=True, group_keys=True, observed=&lt;no_default&gt;, dropna=True)</code></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_19","title":"\u6392\u5e8f","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#sort_values","title":"sort_values","text":"<p><code>df.sort_values(by, axis=0, ascending=True, inplace=False, kind=\"quiksort\", na_position=\"last\", ignore_index=False, key=None)</code></p> <p>\u6839\u636eaxis\u4e0a\u6307\u5b9a\u5217\u6807\u7b7e\u6216\u884c\u6807\u7b7e\u5bf9\u5e94\u7684\u5217\u6216\u884c\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f</p> <ol> <li> <p>by\uff1a\u6307\u5b9a\u5217\u6807\u7b7e\u6216\u884c\u6807\u7b7e</p> </li> <li> <p>axis\uff1a\u6240\u6cbf\u7684axis\u3002\u9ed8\u8ba4\"0/index\"</p> </li> <li> <p>ascending\uff1a\u5347\u5e8f\u3002\u9ed8\u8ba4True</p> </li> <li> <p>inplace\uff1a\u76f4\u63a5\u4fee\u6539\u539f\u5bf9\u8c61\u3002\u9ed8\u8ba4False</p> </li> <li> <p>kind\uff1a\u6392\u5e8f\u7c7b\u578b\u3002\u9ed8\u8ba4\"quiksort\"</p> </li> <li> <p>na_position\uff1aNaN\u503c\u7684\u4f4d\u7f6e\u3002\u9ed8\u8ba4\"last\"</p> </li> <li> <p>ignore_index\uff1a\u5ffd\u7565\u539f\u5bf9\u8c61\u4e2d\u7684index\u3002\u9ed8\u8ba4False</p> </li> <li> <p>key\uff1a</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#sort_index","title":"sort_index","text":"<p><code>df.sort_index(axis=0, level=None, ascending=True, inpace=False, kind=\"quicksort\", na_position=\"last\", sort_remaining=True, ignore_index=False, key=None)</code></p> <p>\u6cbfaxis\uff0c\u6839\u636e\u884c\u6216\u5217\u6807\u7b7e\u8fdb\u884c\u6392\u5e8f</p> <ol> <li> <p>axis\uff1a\u6240\u6cbf\u7684axis\u3002\u9ed8\u8ba4\"0/index\"</p> </li> <li> <p>level\uff1a\u7d22\u5f15\u7b49\u7ea7\u3002</p> </li> <li> <p>sort_remaining\uff1a</p> </li> <li> <p>ascending\u3001inplace\u3001kind\u3001na_position\u3001ignore_index\uff1a\u540c\u4e0a</p> </li> <li> <p>key\uff1a</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_20","title":"\u51fd\u6570\u6784\u9020","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#apply","title":"apply","text":"<p><code>df.apply(func, axis=0, raw=False, result_type=None, args=(), by_row='compat', engine='python', engine_kwargs=None, **kwargs)</code></p> <p>\u5bf9\u6bcf\u4e00\u884c\u6216\u6bcf\u4e00\u5217\u5e94\u7528\u51fd\u6570</p> <ol> <li> <p>func\uff1a\u5e94\u7528\u7684\u51fd\u6570</p> </li> <li> <p>axis\uff1a0/\"index\"\uff08\u9ed8\u8ba4\uff09\u6307\u51fd\u6570\u5e94\u7528\u4e8e\u6bcf\u4e00\u5217\uff1b1/\"column\"\u6307\u51fd\u6570\u5e94\u7528\u4e8e\u6bcf\u4e00\u884c</p> </li> <li> <p>raw\uff1aTrue\u5219\u6bcf\u884c\u6216\u6bcf\u5217\u4f5c\u4e3andarray\u5bf9\u8c61\u4f20\u5165\uff1bFalse\uff08\u9ed8\u8ba4\uff09\u5219\u6bcf\u884c\u6216\u6bcf\u5217\u4f5c\u4e3aSeries\u5bf9\u8c61\u4f20\u5165</p> </li> <li> <p>result_type\uff1a\u4ec5\u5728axis=1\u65f6\u8d77\u4f5c\u7528</p> </li> <li> <p>\"expand\"\uff1a</p> </li> <li> <p>\"reduce\"\uff1a</p> </li> <li> <p>\"broadcast\"\uff1a</p> </li> <li> <p>None</p> </li> <li> <p>args\uff1a\u989d\u5916\u8981\u4f20\u7ed9func\u7684\u4f4d\u7f6e\u53c2\u6570\u7ec4\u6210\u7684\u5143\u7ec4</p> </li> <li> <p>by_row\uff1a</p> </li> <li> <p>engine\uff1a\"numba\"\u6216\"python\"\uff08\u9ed8\u8ba4\uff09\u3002\u7565</p> </li> <li> <p>engine_kwargs\uff1a\u4f20\u9012\u7ed9engine\u7684\u5173\u952e\u5b57\u53c2\u6570\uff0c\u4ec5\u5f53engine=\"numba\"\u4f7f\u7528</p> </li> <li> <p>****kwargs**\uff1a\u989d\u5916\u8981\u4f20\u7ed9func\u7684\u5173\u952e\u5b57\u53c2\u6570\uff0c\u6ce8\u610f\u5e94\u5728\u5176\u5b83\u53c2\u6570\u4e4b\u540e\u4f20</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#_21","title":"\u6587\u4ef6\u8bfb\u5199","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#read_csvto_csv","title":"read_csv\u548cto_csv","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/DataFrame%E5%AF%B9%E8%B1%A1/#read_excelto_excel","title":"read_excel\u548cto_excel","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/","title":"\u5b9a\u4e49","text":"<p>Series\u5bf9\u8c61\u662f\u4e00\u7ef4\u6807\u7b7e\u6570\u7ec4\uff0c\u80fd\u591f\u4fdd\u5b58\u4efb\u4f55\u6570\u636e\u7c7b\u578b(\u6574\u6570\u3001\u5b57\u7b26\u4e32\u3001\u6d6e\u70b9\u6570\u3001Python\u5bf9\u8c61\u7b49)\u3002\u8f74\u6807\u7b7e\u7edf\u79f0\u4e3a\u7d22\u5f15\u3002\u7c7b\u4f3c\u4e8e\u5b57\u5178\uff0c\u5373\u7d22\u5f15\u6807\u7b7e\u76f8\u5f53\u4e8e\u952e\uff0c\u5b58\u5728\u6620\u5c04\u5173\u7cfb\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#_2","title":"\u56fe\u89e3","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#_3","title":"\u521b\u5efa","text":"<p><code>pd.Series(data=None, index=None, name=None, dtype=None, copy=None, fastpath=False)</code></p> <ol> <li> <p>data: \u6570\u636e\u3002\u652f\u6301\u6570\u7ec4\u3001\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5217\u8868\u3001\u5143\u7ec4\u3001range\u5bf9\u8c61\u7b49\uff09\u3001\u5b57\u5178\u3001\u5355\u4e00\u6570\u503c\u6216\u5b57\u7b26\u4e32</p> </li> <li> <p>index: \u8bbe\u7f6e\u7d22\u5f15\u6807\u7b7e\u3002\u957f\u5ea6\u5fc5\u987b\u4e0edata\u957f\u5ea6\u4e00\u81f4, \u5373\u4e00\u4e00\u5bf9\u5e94\uff08data\u4e3a\u5b57\u5178\u9664\u5916\uff09\uff1b\u5982\u672a\u8bbe\u7f6e\u5c06\u81ea\u52a8\u6309\u7d22\u5f15\u4f4d\u7f6e\u521b\u5efa\u6570\u503c\u7d22\u5f15\u3002</p> </li> <li> <p>name: \u8bbe\u7f6eSeries\u5bf9\u8c61\u7684\u540d\u79f0</p> </li> <li> <p>dtype: \u7565</p> </li> <li> <p>copy: \u662f\u5426\u590d\u5236\u539f\u6570\u636e\u3002\u9ed8\u8ba4\u4e3aFalse\u3002</p> </li> <li> <p>fastpath: \u7565</p> </li> </ol> <pre><code>import pandas as pd\n\n# \u6570\u636e\u4e3a\u6570\u7ec4\u3001\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5217\u8868\u3001\u5143\u7ec4\u3001range\u5bf9\u8c61\u7b49\uff09\u3002\ns0 = pd.Series([90, 100, 85])\nprint(s0)\n\"\"\"\n0     90\n1    100\n2     85\ndtype: int64\n\"\"\"\n\ns1 = pd.Series([90, 100, 85], name=\"\u8bed\u6587\")\nprint(s1)\n\"\"\"\n0     90\n1    100\n2     85\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\ns2 = pd.Series([90, 100, 85], index=[1, 2, 3], name=\"\u8bed\u6587\")\nprint(s2)\n\"\"\"\n1     90\n2    100\n3     85\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\ns3 = pd.Series([90, 100, 85], index=[\"\u5c0f\u660e\", \"\u5c0f\u7ea2\", \"\u5c0f\u4eae\"], name=\"\u8bed\u6587\")\nprint(s3)\n\"\"\"\n\u5c0f\u660e     90\n\u5c0f\u7ea2    100\n\u5c0f\u4eae     85\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\n\n\n# \u6570\u636e\u4e3a\u5b57\u5178\u3002\n# \u201c\u952e\u201d\u5373\u4e3a\u7d22\u5f15\u6807\u7b7e\u3002\u82e5\u8bbe\u7f6eindex\uff0c\u5c06\u6309index\u5185\u7d22\u5f15\u53d6\u503c\u521b\u5efa\uff0c\u65e0\u5bf9\u5e94\u503c\uff08\u5373\u975e\u5b57\u5178\u7684\u952e\uff09\u5219\u4e3aNaN\ns4 = pd.Series({\"\u5c0f\u660e\": 90, \"\u5c0f\u7ea2\": 100, \"\u5c0f\u4eae\": 85})\nprint(s4)\n\"\"\"\n\u5c0f\u660e     90\n\u5c0f\u7ea2    100\n\u5c0f\u4eae     85\ndtype: int64\n\"\"\"\n\ns5 = pd.Series({\"\u5c0f\u660e\": 90, \"\u5c0f\u7ea2\": 100, \"\u5c0f\u4eae\": 85}, index=[\"\u5c0f\u7ea2\", \"\u5c0f\u4eae\", \"\u5c0f\u660e\"])\nprint(s5)\n\"\"\"\n\u5c0f\u7ea2    100\n\u5c0f\u4eae     85\n\u5c0f\u660e     90\ndtype: int64\n\"\"\"\n\ns6 = pd.Series({\"\u5c0f\u660e\": 90, \"\u5c0f\u7ea2\": 100, \"\u5c0f\u4eae\": 85}, index=[\"\u5c0f\u7ea2\", \"\u5c0f\u660e\", 1, 2])\nprint(s6)\n\"\"\"\n\u5c0f\u7ea2    100.0\n\u5c0f\u660e     90.0\n1       NaN\n2       NaN\ndtype: float64\n\"\"\"\n\n\n\n# \u6570\u636e\u4e3a\u5355\u4e00\u6570\u503c\u6216\u5b57\u7b26\u4e32\u3002\n# \u82e5\u8bbe\u7f6e\u591a\u4e2a\u7d22\u5f15\u6807\u7b7e\uff0c\u8be5\u503c\u5c06\u88ab\u91cd\u590d\u5e76\u521b\u5efa\ns7 = pd.Series(5)\nprint(s7)\n\"\"\"\n0    5\ndtype: int64\n\"\"\"\n\ns8 = pd.Series(5, index=[1, 2, 3, 4, 5])\nprint(s8)\n\"\"\"\n1    5\n2    5\n3    5\n4    5\n5    5\ndtype: int64\n\"\"\"\n\ns9 = pd.Series(\"53\")\nprint(s9)\n\"\"\"\n0    53\ndtype: object\n\"\"\"\n\ns10 = pd.Series(\"53\", index=[1, 2, 3, 4, 5])\nprint(s10)\n\"\"\"\n1    53\n2    53\n3    53\n4    53\n5    53\ndtype: object\n\"\"\"\n\n\n\n# copy\u53c2\u6570\u7684\u8bbe\u7f6e\n# copy = True: Series\u5bf9\u8c61\u6539\u53d8\u65f6\uff0c\u65e0\u8bba\u539f\u6570\u636e\u4e3a\u4f55\u79cd\u7c7b\u578b\u90fd\u4e0d\u4f1a\u6539\u53d8\n# copy = False: Series\u5bf9\u8c61\u6539\u53d8\u65f6\uff0c\u4ec5\u5f53\u539f\u6570\u636e\u4e3a\u6570\u7ec4\u65f6\u4f1a\u53d1\u751f\u6539\u53d8\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#_4","title":"\u67e5\u8be2","text":"<pre><code>print(s1.index, s1.values, s1.name)\nprint(s2.index, s2.values, s2.name)\nprint(s3.index, s3.values, s3.name)\n\"\"\"\nRangeIndex(start=0, stop=3, step=1) [ 90 100  85] \u8bed\u6587\n\nIndex([1, 2, 3], dtype='int64') [ 90 100  85] \u8bed\u6587\n\nIndex(['\u5c0f\u660e', '\u5c0f\u7ea2', '\u5c0f\u4eae'], dtype='object') [ 90 100  85] \u8bed\u6587\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#_5","title":"\u64cd\u4f5c","text":"<p>\u5728Series\u5bf9\u8c61\u6574\u4f53\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd4\u56deSeries\u5bf9\u8c61\u526f\u672c</p> <pre><code>print(s3 + 2)\n\"\"\"\n\u5c0f\u660e     92\n\u5c0f\u7ea2    102\n\u5c0f\u4eae     87\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\nprint(s3 - 5)\n\"\"\"\n\u5c0f\u660e    85\n\u5c0f\u7ea2    95\n\u5c0f\u4eae    80\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\nprint(s3 &lt;= 90)          # \u6761\u4ef6\u5224\u65ad\u8fd4\u56de\u5e03\u5c14\u578bSeries\u5bf9\u8c61\n\"\"\"\n\u5c0f\u660e     True\n\u5c0f\u7ea2    False\n\u5c0f\u4eae     True\nName: \u8bed\u6587, dtype: bool\n\"\"\"\n\nimport numpy as np\nprint(np.log(s3))\n\"\"\"\n\u5c0f\u660e    4.499810\n\u5c0f\u7ea2    4.605170\n\u5c0f\u4eae    4.442651\nName: \u8bed\u6587, dtype: float64\n\"\"\"\n\nprint(s3)                 # \u4e0a\u8ff0\u64cd\u4f5c\u8fd4\u56de\u526f\u672c\uff0c\u539fSeries\u5bf9\u8c61\u5e76\u672a\u53d1\u751f\u4fee\u6539\n\"\"\"\n\u5c0f\u660e     90\n\u5c0f\u7ea2    100\n\u5c0f\u4eae     85\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#_6","title":"\u7d22\u5f15","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#_7","title":"\u5355\u503c\u7d22\u5f15[]","text":"<p>\u8fd4\u56de\u6570\u636e</p> <pre><code># \u4f4d\u7f6e\u7d22\u5f15\uff0c\u540c\u5e8f\u5217\u7d22\u5f15\nprint(s3[0], s3[1], s3[2], s3[-1])\n\"\"\"\n90 100 85 85\n\"\"\"\n\n# \u6807\u7b7e\u7d22\u5f15\nprint(s1[0], s1[1], s1[2])\nprint(s2[1], s2[2], s2[3])\nprint(s3[\"\u5c0f\u660e\"], s3[\"\u5c0f\u7ea2\"], s3[\"\u5c0f\u4eae\"])\n\"\"\"\n90 100 85\n\n90 100 85\n\n90 100 85\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#_8","title":"\u5207\u7247\u7d22\u5f15[:]","text":"<p>\u8fd4\u56deSeries\u5bf9\u8c61</p> <pre><code># \u4f4d\u7f6e\u5207\u7247\u7d22\u5f15\uff0c\u5305\u5934\u4e0d\u5305\u5c3e\nprint(s1[0:2])\nprint(s2[0:2])\nprint(s3[0:2])\n\"\"\"\n0     90\n1    100\ndtype: int64\n\n1     90\n2    100\ndtype: int64\n\n\u5c0f\u660e     90\n\u5c0f\u7ea2    100\ndtype: int64\n\"\"\"\n\n\n# \u6807\u7b7e\u5207\u7247\u7d22\u5f15\uff0c\u5305\u5934\u5305\u5c3e\nprint(s3[\"\u5c0f\u7ea2\": \"\u5c0f\u4eae\"])\n\"\"\"\n\u5c0f\u7ea2    100\n\u5c0f\u4eae     85\ndtype: int64\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#_9","title":"\u591a\u503c\u7d22\u5f15[[,]]","text":"<p>\u8fd4\u56deSeries\u5bf9\u8c61</p> <pre><code># \u591a\u503c\u7d22\u5f15\uff0c\u4f7f\u7528[[]]\u5305\u542b\u591a\u4e2a\u4f4d\u7f6e\u7d22\u5f15\u6216\u6807\u7b7e\u7d22\u5f15\uff0c\u65e0\u987a\u5e8f\u8981\u6c42\nprint(s1[[0, 1, 2]])\nprint(s2[[1, 2, 3]])\nprint(s3[[\"\u5c0f\u660e\", \"\u5c0f\u7ea2\", \"\u5c0f\u4eae\"]])\nprint(s3[[0, 1, 2]])\n\"\"\"\n0     90\n1    100\n2     85\ndtype: int64\n\n1     90\n2    100\n3     85\ndtype: int64\n\n\u5c0f\u660e     90\n\u5c0f\u7ea2    100\n\u5c0f\u4eae     85\ndtype: int64\n\n\u5c0f\u660e     90\n\u5c0f\u7ea2    100\n\u5c0f\u4eae     85\ndtype: int64\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#boolean-series","title":"\u6761\u4ef6\u7d22\u5f15[boolean Series]","text":"<p>\u901a\u8fc7\u4f20\u5165\u5e03\u5c14\u578bSeries\u5bf9\u8c61\u5b9e\u73b0\u3002\u6240\u4f20\u5165\u5e03\u5c14\u578bSeries\u5bf9\u8c61\u7684\u6570\u636e\u957f\u5ea6\u5fc5\u987b\u2265\u539fSeries\u5bf9\u8c61\u957f\u5ea6\uff0c\u4e14\u6240\u542b\u8f74\u6807\u7b7e\u5fc5\u987b\u5305\u542b\u539fSeries\u5bf9\u8c61\u6240\u6709\u8f74\u6807\u7b7e\uff0c\u987a\u5e8f\u968f\u610f\u3002\u4f20\u5165\u540e\uff0c\u6bd4\u5bf9\u539fSeries\u5bf9\u8c61\u548c\u5e03\u5c14\u578bSeries\u5bf9\u8c61\u5bf9\u5e94\u6807\u7b7e\u7684\u6570\u636e\uff0c\u6309\u539fSeries\u5bf9\u8c61\u6807\u7b7e\u987a\u5e8f\uff0c\u8f93\u51fa\u539fSeries\u5bf9\u8c61\u4e2d\u5bf9\u5e94\u5e03\u5c14\u578bSeries\u5bf9\u8c61\u4e2dTrue\u7684\u6570\u636e\u3002</p> <pre><code># \u4ee5\u8f93\u51fa\u5206\u6570\u226490\u7684\u6570\u636e\u4e3a\u4f8b\ns_bool = pd.Series([True, False, True], index=[\"\u5c0f\u660e\", \"\u5c0f\u7ea2\", \"\u5c0f\u4eae\"])    # \u7b49\u4ef7\u4e8es3 &lt;= 90\nprint(s3[s_bool])\n\"\"\"\n\u5c0f\u660e    90\n\u5c0f\u4eae    85\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\nprint(s3[s3 &lt;= 90])\n\"\"\"\n\u5c0f\u660e    90\n\u5c0f\u4eae    85\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\ns_bool = pd.Series([True, True, False, True], index=[\"\u5c0f\u767d\", \"\u5c0f\u4eae\", \"\u5c0f\u7ea2\", \"\u5c0f\u660e\"])\nprint(s3[s_bool])\n\"\"\"\n\u5c0f\u660e    90\n\u5c0f\u4eae    85\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#iatindex","title":"iat[index]\u4f4d\u7f6e\u7d22\u5f15","text":"<pre><code>print(s3.iat[1])\n\"\"\"\n100\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#_10","title":"\u4fee\u6539","text":"<p>\u7c7b\u4f3c\u5b57\u5178\uff0c\u76f4\u63a5\u5bf9\u539fSeries\u5bf9\u8c61\u8fdb\u884c\u4fee\u6539\uff0c\u65b0\u6570\u636e\uff08\u53ef\u4ee5\u662f\u5217\u8868\u3001\u5143\u7ec4\u3001\u6570\u7ec4\u3001Series\u5bf9\u8c61\u7b49\uff09\u7684\u957f\u5ea6\u5fc5\u987b\u4e0e\u7d22\u5f15\u53d6\u5f97\u7684\u539f\u6570\u636e\u957f\u5ea6\u4e00\u81f4\u6216\u8005\u662f\u5355\u503c\uff08\u5c06\u88ab\u590d\u5236\u91cd\u590d\u5e94\u7528\uff09\uff0c\u6216\u8005\u901a\u8fc7\u8d4b\u503c\u8fd0\u7b97\u8fdb\u884c\u4fee\u6539\u3002\u7d22\u5f15\u4e0d\u5b58\u5728\u5219\u6dfb\u52a0\u6570\u636e</p> <pre><code>s3[\"\u5c0f\u4eae\"] = 95\nprint(s3)\n\"\"\"\n\u5c0f\u660e     90\n\u5c0f\u7ea2    100\n\u5c0f\u4eae     95\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\ns3[\"\u5c0f\u7ea2\":\"\u5c0f\u4eae\"] = [90, 80]\nprint(s3)\n\"\"\"\n\u5c0f\u660e    90\n\u5c0f\u7ea2    90\n\u5c0f\u4eae    80\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\ns3[[\"\u5c0f\u660e\", \"\u5c0f\u4eae\"]] = [80, 99]\nprint(s3)\n\"\"\"\n\u5c0f\u660e    80\n\u5c0f\u7ea2    90\n\u5c0f\u4eae    99\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\ns3[s_bool] = [95, 90]\nprint(s3)\n\"\"\"\n\u5c0f\u660e     95\n\u5c0f\u7ea2    100\n\u5c0f\u4eae     90\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\ns3[[\"\u5c0f\u660e\", \"\u5c0f\u4eae\"]] = 60\nprint(s3)\n\"\"\"\n\u5c0f\u660e    60\n\u5c0f\u7ea2    90\n\u5c0f\u4eae    60\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\ns3[[\"\u5c0f\u660e\", \"\u5c0f\u4eae\"]] += 6\nprint(s3)\n\"\"\"\n\u5c0f\u660e    66\n\u5c0f\u7ea2    90\n\u5c0f\u4eae    66\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n\ns3[\"\u5c0f\u521a\"] = 80\nprint(s3)\n\"\"\"\n\u5c0f\u660e    66\n\u5c0f\u7ea2    90\n\u5c0f\u4eae    66\n\u5c0f\u521a    80\nName: \u8bed\u6587, dtype: int64\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#_11","title":"\u51fd\u6570","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#unique","title":"unique","text":"<p><code>Series.unique()</code></p> <p>\u5bf9Series\u5bf9\u8c61\u7684\u6570\u636e\u8fdb\u884c\u53bb\u91cd\uff0c\u8fd4\u56de\u53bb\u91cd\u540e\u6570\u636e\u7684\u6570\u7ec4</p> <pre><code>s = pd.Series([90, 100, 85, 90, 85])\nprint(s)\n\"\"\"\n0     90\n1    100\n2     85\n3     90\n4     85\ndtype: int64\n\"\"\"\n\nprint(s.unique())\n\"\"\"\n[ 90 100  85]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#value_counts","title":"value_counts","text":"<p><code>Series.value_counts(normalize=False, sort=True, ascending=False, bins=None, dropna=True)</code></p> <p>\u8fd4\u56de\u539fSeries\u5bf9\u8c61\u4e2d\u552f\u4e00\u6570\u636e\u53ca\u5176\u9891\u6570\u6216\u9891\u7387\u7ec4\u6210\u7684Series\u5bf9\u8c61\u3002</p> <ol> <li> <p>normalize\uff1a\u8ba1\u7b97\u65b9\u5f0f\u3002True\u5219\u8fd4\u56de\u9891\u7387\uff0c\u5426\u5219\u8fd4\u56de\u9891\u6570\uff08\u9ed8\u8ba4\uff09</p> </li> <li> <p>sort\uff1a\u662f\u5426\u6392\u5e8f\u3002True\uff08\u9ed8\u8ba4\uff09\u5219\u6309\u7167\u9891\u7387\u6216\u9891\u6570\u8fdb\u884c\u6392\u5e8f\uff0c\u5426\u5219\u4fdd\u7559\u539fSeries\u5bf9\u8c61\u4e2d\u552f\u4e00\u503c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u987a\u5e8f</p> </li> <li> <p>ascending\uff1a\u6392\u5e8f\u65b9\u5f0f\u3002True\u5219\u5347\u5e8f\uff0c\u5426\u5219\u964d\u5e8f\uff08\u9ed8\u8ba4\uff09</p> </li> <li> <p>bins\uff1a\u5206\u7ec4\u8ba1\u6570\u3002\u6307\u5b9a\u5206\u7ec4\u6570\uff08\u53ea\u80fd\u662f\u6574\u6570\uff09\uff0c\u5728\u6700\u5c0f\u503c\u5230\u6700\u5927\u503c\u8303\u56f4\u5185\u5e73\u5747\u5206\u4e3abins\u4e2a\u8303\u56f4\u7ec4\u8fdb\u884c\u8ba1\u6570</p> </li> <li> <p>dropna\uff1aNaN\u503c\u5904\u7406\u3002True\uff08\u9ed8\u8ba4\uff09\u5219\u7ed3\u679c\u4e0d\u5305\u542bNaN\u503c\uff0c\u5426\u5219\u5305\u542b</p> </li> </ol> <pre><code>import numpy as np\ns = pd.Series([85, 100, 90, np.nan, 90, 85, np.nan, 90])\nprint(s)\n\"\"\"\n0     85.0\n1    100.0\n2     90.0\n3      NaN\n4     90.0\n5     85.0\n6      NaN\n7     90.0\ndtype: float64\n\"\"\"\n\nprint(s.value_counts())\n\"\"\"\n90.0     3\n85.0     2\n100.0    1\nName: count, dtype: int64\n\"\"\"\n\nprint(s.value_counts(normalize=True))\n\"\"\"\n90.0     0.500000\n85.0     0.333333\n100.0    0.166667\nName: proportion, dtype: float64\n\"\"\"\n\nprint(s.value_counts(sort=False))\n\"\"\"\n85.0     2\n100.0    1\n90.0     3\nName: count, dtype: int64\n\"\"\"\n\nprint(s.value_counts(ascending=True))\n\"\"\"\n100.0    1\n85.0     2\n90.0     3\nName: count, dtype: int64\n\"\"\"\n\nprint(s.value_counts(bins=2))\n\"\"\"\n(84.984, 92.5]    5\n(92.5, 100.0]     1\nName: count, dtype: int64\n\"\"\"\n\nprint(s.value_counts(dropna=False))\n\"\"\"\n90.0     3\n85.0     2\nNaN      2\n100.0    1\nName: count, dtype: int64\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#dropna","title":"dropna","text":"<p><code>Series.dropna(axis=0, inplace=False, how=None, ignore_index=False)</code></p> <p>\u5220\u9664Series\u5bf9\u8c61\u4e2d\u7684NaN\u503c\uff0c\u9ed8\u8ba4\u8fd4\u56de\u526f\u672c</p> <ol> <li> <p>axis\uff1a\u4e0d\u4f7f\u7528</p> </li> <li> <p>inplace\uff1a\u662f\u5426\u5728\u539fSeries\u5bf9\u8c61\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u9ed8\u8ba4False</p> </li> <li> <p>how\uff1a\u4e0d\u4f7f\u7528</p> </li> <li> <p>ignore_index\uff1a\u662f\u5426\u5ffd\u7565\u539fSeries\u5bf9\u8c61\u7684\u7d22\u5f15\u6807\u7b7e\uff0c\u9ed8\u8ba4False</p> </li> </ol> <pre><code>label = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]\ns = pd.Series([85, 100, 90, np.nan, 90, 85, np.nan, 90], index=label)\nprint(s)\n\"\"\"\na     85.0\nb    100.0\nc     90.0\nd      NaN\ne     90.0\nf     85.0\ng      NaN\nh     90.0\ndtype: float64\n\"\"\"\n\nprint(s.dropna())\n\"\"\"\na     85.0\nb    100.0\nc     90.0\ne     90.0\nf     85.0\nh     90.0\ndtype: float64\n\"\"\"\n\nprint(s.dropna(ignore_index=True))\n\"\"\"\n0     85.0\n1    100.0\n2     90.0\n3     90.0\n4     85.0\n5     90.0\ndtype: float64\n\"\"\"\n\nprint(s)\n\"\"\"\na     85.0\nb    100.0\nc     90.0\nd      NaN\ne     90.0\nf     85.0\ng      NaN\nh     90.0\ndtype: float64\n\"\"\"\n\nprint(s.dropna(inplace=True))\n\"\"\"\nNone\n\"\"\"\n\nprint(s)\n\"\"\"\na     85.0\nb    100.0\nc     90.0\ne     90.0\nf     85.0\nh     90.0\ndtype: float64\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#map","title":"map","text":"<p><code>Series.map(arg, na_action=None)</code></p> <p>\u904d\u5386\u539fSeries\u5bf9\u8c61\uff0c\u6839\u636e\u5b57\u5178\u6216Series\u5bf9\u8c61\u7684\u6620\u5c04\uff0c\u6216\u5c06\u6570\u636e\u5e94\u7528\u4e8e\u51fd\u6570\uff0c\u5c06Series\u5bf9\u8c61\u7684\u6570\u636e\u8fdb\u884c\u66ff\u6362\uff0c\u8fd4\u56de\u66ff\u6362\u540e\u7684\u526f\u672c</p> <ol> <li> <p>arg\uff1a</p> </li> <li> <p>\u5b57\u5178\u6216Series\u5bf9\u8c61\uff1a\u6839\u636e\u6620\u5c04\u5173\u7cfb\u76f4\u63a5\u66ff\u6362\u6240\u6709\u76f8\u5e94\u6570\u636e\uff0c\u65e0\u5bf9\u5e94\u6620\u5c04\u5173\u7cfb\u5219\u66ff\u6362\u4e3aNaN</p> </li> <li> <p>\u51fd\u6570\uff1a\u5c06\u6570\u636e\u4f20\u5165\u51fd\u6570\uff0c\u7528\u8fd4\u56de\u7ed3\u679c\u66ff\u6362\u6570\u636e</p> </li> <li> <p>na_action\uff1a\u82e5\u4e3a\"ignore\"\uff0c\u5219NaN\u503c\u4e0d\u4f1a\u53c2\u4e0e\u6620\u5c04\u6216\u4f20\u53c2\u3002\u9ed8\u8ba4\u4e3aNone</p> </li> </ol> <pre><code>s = pd.Series(['cat', 'dog', np.nan, 'rabbit', 'cat'])\nprint(s)\n\"\"\"\n0       cat\n1       dog\n2       NaN\n3    rabbit\n4       cat\ndtype: object\n\"\"\"\n\nprint(s.map({'cat': 'kitten', 'dog': 'puppy'}))\n\"\"\"\n0    kitten\n1     puppy\n2       NaN\n3       NaN\n4    kitten\ndtype: object\n\"\"\"\n\nprint(s.map(pd.Series({'cat': 'kitten', 'dog': 'puppy'})))\n\"\"\"\n0    kitten\n1     puppy\n2       NaN\n3       NaN\n4    kitten\ndtype: object\n\"\"\"\n\nprint(s.map('This is a {}'.format))\n\"\"\"\n0       This is a cat\n1       This is a dog\n2       This is a nan\n3    This is a rabbit\n4       This is a cat\ndtype: object\n\"\"\"\n\nprint(s.map('This is a {}'.format, na_action=\"ignore\"))\n\"\"\"\n0       This is a cat\n1       This is a dog\n2                 NaN\n3    This is a rabbit\n4       This is a cat\ndtype: object\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#rename","title":"rename","text":"<p><code>Series.rename(index=None, axis=0, copy=True, inplace=False, level=None, errors=\"ignore\")</code></p> <p>\u6539\u53d8Series\u5bf9\u8c61\u7684\u7d22\u5f15\u6807\u7b7e\u6216\u540d\u79f0</p> <ol> <li> <p>index\uff1a</p> </li> <li> <p>\u6570\u503c\u3001\u5b57\u7b26\u4e32\u3001\u5143\u7ec4\uff1a\u6539\u53d8\u540d\u79f0</p> </li> <li> <p>\u5b57\u5178\u3001\u51fd\u6570\uff1a\u6539\u53d8\u7d22\u5f15\u6807\u7b7e</p> </li> <li> <p>axis\uff1a0 \u6216 'index'\uff0c\u4e0d\u9700\u4f7f\u7528</p> </li> <li> <p>copy\uff1a\u662f\u5426\u540c\u65f6\u590d\u5236\u57fa\u7840\u6570\u636e\u4f5c\u4e3a\u526f\u672c\uff0c\u9ed8\u8ba4\u4e3aTrue\u3002\u82e5inplace=True\uff0c\u8be5\u53c2\u6570\u5c06\u88ab\u5ffd\u7565</p> </li> <li> <p>inplace\uff1a\u662f\u5426\u5728\u539fSeries\u5bf9\u8c61\u4e0a\u8fdb\u884c\u4fee\u6539\u3002\u9ed8\u8ba4False</p> </li> <li> <p>level\uff1a\u6574\u6570\u6216\u7d22\u5f15\u7684\u5c42\u7ea7\u540d\u79f0\uff0c\u9002\u7528\u4e8e\u591a\u5c42\u7ea7\u7d22\u5f15</p> </li> <li> <p>**errors\uff1a**\u5f53\u5b57\u5178\u7684\u952e\u5e76\u975e\u5df2\u5b58\u5728\u7684\u6807\u7b7e\u65f6\u662f\u5f15\u53d1\u62a5\u9519\u8fd8\u662f\u5ffd\u7565</p> </li> <li> <p>'ignore'\uff08\u9ed8\u8ba4\uff09</p> </li> <li> <p>'raise'</p> </li> </ol> <pre><code>label = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\"]\ns = pd.Series([85, 97, 90, np.nan, np.nan, np.nan, 83, 85, np.nan, 76], index=label)\nprint(s)\n\"\"\"\na    85.0\nb    97.0\nc    90.0\nd     NaN\ne     NaN\nf     NaN\ng    83.0\nh    85.0\ni     NaN\nj    76.0\ndtype: float64\n\"\"\"\n\nprint(s.rename(\"test\"))\n\"\"\"\na    85.0\nb    97.0\nc    90.0\nd     NaN\ne     NaN\nf     NaN\ng    83.0\nh    85.0\ni     NaN\nj    76.0\nName: test, dtype: float64\n\"\"\"\n\nprint(s.rename({\"a\": \"A\", \"f\": \"F\", \"z\": \"Z\"}))\n\"\"\"\nA    85.0\nb    97.0\nc    90.0\nd     NaN\ne     NaN\nF     NaN\ng    83.0\nh    85.0\ni     NaN\nj    76.0\ndtype: float64\n\"\"\"\n\nprint(s.rename(lambda x: x.upper()))\n\"\"\"\nA    85.0\nB    97.0\nC    90.0\nD     NaN\nE     NaN\nF     NaN\nG    83.0\nH    85.0\nI     NaN\nJ    76.0\ndtype: float64\n\"\"\"\n\nprint(s.rename({\"a\": \"A\", \"f\": \"F\", \"z\": \"Z\"}, errors=\"raise\"))\n\"\"\"\nKeyError: \"['z'] not found in axis\"\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#isin","title":"isin","text":"<p><code>Series.isin(values)</code></p> <p>\u5224\u65adSeries\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u662f\u5426\u5728values\u4e2d\uff0c\u8fd4\u56de\u5e03\u5c14\u578bSeries\u5bf9\u8c61</p> <ol> <li>values\uff1a\u7528\u4e8e\u6d4b\u8bd5\u7684\u503c\u7684\u5e8f\u5217\u3002\u7c7b\u578b\u53ef\u4ee5\u662f\u96c6\u5408\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49\uff0c\u4e0d\u80fd\u662f\u5355\u4e2a\u5b57\u7b26\u4e32\u3002</li> </ol> <pre><code>s = pd.Series([85, 100, 90, np.nan, 90, 85, np.nan, 90])\nprint(s)\n\"\"\"\n0     85.0\n1    100.0\n2     90.0\n3      NaN\n4     90.0\n5     85.0\n6      NaN\n7     90.0\ndtype: float64\n\"\"\"\n\nprint(s.isin([85, 90]))\n\"\"\"\n0     True\n1    False\n2     True\n3    False\n4     True\n5     True\n6    False\n7     True\ndtype: bool\n\"\"\"\n\nprint(s.isin(range(80, 96)))\n\"\"\"\n0     True\n1    False\n2     True\n3    False\n4     True\n5     True\n6    False\n7     True\ndtype: bool\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#isnaisnull","title":"isna\u3001isnull","text":"<p><code>Series.isna()</code></p> <p><code>Series.isnull()</code></p> <p>\u5224\u65adSeries\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u662f\u5426\u4e3aNaN\uff0c\u8fd4\u56de\u5e03\u5c14\u578bSeries\u5bf9\u8c61</p> <pre><code>s = pd.Series([85, 100, 90, np.nan, 90, 85, np.nan, 90])\nprint(s)\n\"\"\"\n0     85.0\n1    100.0\n2     90.0\n3      NaN\n4     90.0\n5     85.0\n6      NaN\n7     90.0\ndtype: float64\n\"\"\"\n\nprint(s.isna())\nprint(s.isnull())\n\"\"\"\n0    False\n1    False\n2    False\n3     True\n4    False\n5    False\n6     True\n7    False\ndtype: bool\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/Series%E5%AF%B9%E8%B1%A1/#notnanotnull","title":"notna\u3001notnull","text":"<p><code>Series.notna()</code>\u7b49\u4ef7\u4e8e<code>~Series.isna()</code>\uff08~\u8868\u793a\u975e\u8fd0\u7b97\uff09</p> <p><code>Series.notnull()</code>\u7b49\u4ef7\u4e8e<code>~Series.isnull()</code>\uff08~\u8868\u793a\u975e\u8fd0\u7b97\uff09</p> <p>\u5224\u65adSeries\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u662f\u5426\u4e3aNaN\uff0c\u8fd4\u56de\u5e03\u5c14\u578bSeries\u5bf9\u8c61</p> <pre><code>s = pd.Series([85, 100, 90, np.nan, 90, 85, np.nan, 90])\nprint(s)\n\"\"\"\n0     85.0\n1    100.0\n2     90.0\n3      NaN\n4     90.0\n5     85.0\n6      NaN\n7     90.0\ndtype: float64\n\"\"\"\n\nprint(s.notna())\nprint(s.notnull())\nprint(~s.isna())\nprint(~s.isnull())\n\"\"\"\n0     True\n1     True\n2     True\n3    False\n4     True\n5     True\n6    False\n7     True\ndtype: bool\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/%E9%80%9A%E7%94%A8%E5%87%BD%E6%95%B0/","title":"\u901a\u7528\u51fd\u6570","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/%E9%80%9A%E7%94%A8%E5%87%BD%E6%95%B0/#fillnaffillbfill","title":"fillna\u3001ffill\u3001bfill","text":"<p><code>fillna(value=None, method=None, axis=0, inplace=False, limit=None, downcast=None)</code></p> <p>**\u6cbfaxis**\u6307\u5b9a\u586b\u5145\u7f3a\u5931\u6570\u636e <code>ffill(axis=0, inplace=False, limit=None, downcast=None)</code></p> <p>\u66ff\u4ee3df.pad()\uff0c\u7b49\u4ef7\u4e8e<code>fillna(method=\"ffill\")</code> <code>bfill(axis=0, inplace=False, limit=None, downcast=None)</code></p> <p>\u66ff\u4ee3df.backfill()\uff0c\u7b49\u4ef7\u4e8e<code>fillna(method=\"bfill\")</code></p> <ol> <li> <p>value:\u53ef\u9009\uff0c\u51b3\u5b9a\u586b\u5145\u7684\u6570\u636e, \u4e0d\u80fd\u4e0emethod\u53c2\u6570\u540c\u65f6\u6307\u5b9a\uff0c\u9ed8\u8ba4None</p> </li> <li> <p>\u6570\u503c\uff1a\u6839\u636elimit\u3010\u9ed8\u8ba4None\uff08\u6240\u6709\uff09\u3011\u586b\u5145\uff0c</p> </li> <li> <p>\u5b57\u5178\u3001Series\u5bf9\u8c61\uff1a\u5c06\u6307\u5b9a\u7d22\u5f15\u5bf9\u5e94\u7684\u7f3a\u5931\u6570\u636e\u586b\u5145\uff0c\u6b64\u65f6axis\u53ea\u80fd\u662f0\u6216\"index\"</p> </li> <li> <p>DataFrame\u5bf9\u8c61\uff1a\u4ee5\u5bf9\u5e94\u7d22\u5f15\u6570\u636e\u8fdb\u884c\u586b\u5145\uff0c\u4e0eaxis\u3001limit\u65e0\u5173\u3002\u53ea\u9002\u7528\u4e8eDataFrame\u5bf9\u8c61</p> </li> <li> <p>method\u3010\u5df2\u5f03\u7528\u3011: \u53ef\u9009\uff0c\u51b3\u5b9a\u586b\u5145\u7684\u6570\u636e, \u4e0d\u80fd\u4e0evalue\u53c2\u6570\u540c\u65f6\u6307\u5b9a\uff0c\u9ed8\u8ba4None</p> </li> <li> <p>'bfill'\u3001'backfill'\uff1a\u4ee5\u975e\u7a7a\u503c\u540e\u4e00\u4e2a\u503c\u8fdb\u884c\u586b\u5145</p> </li> <li> <p>'ffill'\uff1a\u4ee5\u975e\u7a7a\u503c\u524d\u4e00\u4e2a\u503c\u8fdb\u884c\u586b\u5145</p> </li> <li> <p>axis:</p> </li> <li> <p>\u5bf9\u4e8eSeries\u5bf9\u8c61\uff1a\u53ea\u80fd\u662f0\u6216\"index\"\uff08\u9ed8\u8ba4\uff09</p> </li> <li> <p>\u5bf9\u4e8eDateFrame\u5bf9\u8c61\uff1a\u53ef\u4ee5\u662f0\u6216\"index\"\uff08\u9ed8\u8ba4\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f1\u6216\"columns\"</p> </li> <li> <p>inplace: \u662f\u5426\u76f4\u63a5\u4fee\u6539\u539f\u5bf9\u8c61\uff0c\u5982\u679c\u4e3aFalse\uff08\u9ed8\u8ba4\uff09\uff0c\u5c06\u8fd4\u56de\u526f\u672c\uff1b\u5982\u679c\u4e3aTrue\u5219\u8fd4\u56deNone\uff0c\u76f4\u63a5\u4fee\u6539\u539f\u5bf9\u8c61</p> </li> <li> <p>limit: \u53ef\u9009None\u6216\u8005&gt;0\u7684\u6570</p> </li> <li> <p>method\u53c2\u6570\u672a\u6307\u5b9a\uff1a\u8868\u793a\u586b\u5145\u7f3a\u5931\u6570\u636e\u7684\u6700\u5927\u6570</p> </li> <li> <p>method\u53c2\u6570\u6307\u5b9a\uff1a\u8868\u793a\u5411\u524d\u6216\u5411\u540e\u586b\u5145\u7684\u8fde\u7eed\u7f3a\u5931\u6570\u636e\u7684\u6700\u5927\u6570</p> </li> <li> <p>downcast:</p> </li> </ol> <pre><code>label = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\"]\ns = pd.Series([85, 97, 90, np.nan, np.nan, np.nan, 83, 85, np.nan, 76], index=label)\nprint(s)\n\"\"\"\na    85.0\nb    97.0\nc    90.0\nd     NaN\ne     NaN\nf     NaN\ng    83.0\nh    85.0\ni     NaN\nj    76.0\ndtype: float64\n\"\"\"\n\nprint(s.fillna(value=0))\n\"\"\"\na    85.0\nb    97.0\nc    90.0\nd     0.0\ne     0.0\nf     0.0\ng    83.0\nh    85.0\ni     0.0\nj    76.0\ndtype: float64\n\"\"\"\n\nprint(s.fillna(value={\"a\": 1, \"d\": 0}))\n\"\"\"\na    85.0\nb    97.0\nc    90.0\nd     0.0\ne     NaN\nf     NaN\ng    83.0\nh    85.0\ni     NaN\nj    76.0\ndtype: float64\n\"\"\"\n\nprint(s.fillna(value=pd.Series({\"a\": 1, \"d\": 0})))\n\"\"\"\na    85.0\nb    97.0\nc    90.0\nd     0.0\ne     NaN\nf     NaN\ng    83.0\nh    85.0\ni     NaN\nj    76.0\ndtype: float64\n\"\"\"\n\nprint(s.fillna(method=\"bfill\"))\nprint(s.bfill())\n\"\"\"\na    85.0\nb    97.0\nc    90.0\nd    83.0\ne    83.0\nf    83.0\ng    83.0\nh    85.0\ni    76.0\nj    76.0\ndtype: float64\n\"\"\"\n\nprint(s.fillna(method=\"ffill\"))\nprint(s.ffill())\n\"\"\"\na    85.0\nb    97.0\nc    90.0\nd    90.0\ne    90.0\nf    90.0\ng    83.0\nh    85.0\ni    85.0\nj    76.0\ndtype: float64\n\"\"\"\n\nprint(s.fillna(value=0, limit=2))\n\"\"\"\na    85.0\nb    97.0\nc    90.0\nd     0.0\ne     0.0\nf     NaN\ng    83.0\nh    85.0\ni     NaN\nj    76.0\ndtype: float64\n\"\"\"\n\nprint(s.fillna(method=\"bfill\", limit=2))\nprint(s.bfill(limit=2))\n\"\"\"\na    85.0\nb    97.0\nc    90.0\nd     NaN\ne    83.0\nf    83.0\ng    83.0\nh    85.0\ni    76.0\nj    76.0\ndtype: float64\n\"\"\"\n\nprint(s.fillna(method=\"ffill\", limit=2))\nprint(s.ffill(limit=2))\n\"\"\"\na    85.0\nb    97.0\nc    90.0\nd    90.0\ne    90.0\nf     NaN\ng    83.0\nh    85.0\ni    85.0\nj    76.0\ndtype: float64\n\"\"\"\n</code></pre> <pre><code>data = {\"\u8bed\u6587\": [1, None, None, None],\n        \"\u6570\u5b66\": [1, 2, None, 4],\n        \"\u82f1\u8bed\": [None, None, None, 4],\n        \"\u5386\u53f2\": [1, None, 3, 4]\n}\nindex = [\"\u5c0f\u660e\", \"\u5c0f\u7ea2\", \"\u5c0f\u4eae\", \"\u5c0f\u521a\"]\ndf4 = pd.DataFrame(data=data, index=index)\nprint(df4)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u5386\u53f2\n\u5c0f\u660e   1.0   1.0   NaN   1.0\n\u5c0f\u7ea2   NaN   2.0   NaN   NaN\n\u5c0f\u4eae   NaN   NaN   NaN   3.0\n\u5c0f\u521a   NaN   4.0   4.0   4.0\n\"\"\"\n\ndf_fillna_limit = df4.fillna(value=0, limit=2)\nprint(df_fillna_limit)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u5386\u53f2\n\u5c0f\u660e   1.0   1.0   0.0   1.0\n\u5c0f\u7ea2   0.0   2.0   0.0   0.0\n\u5c0f\u4eae   0.0   0.0   NaN   3.0\n\u5c0f\u521a   NaN   4.0   4.0   4.0\n\"\"\"\n\ndf_fillna_limit = df4.fillna(value=0, axis=\"columns\", limit=2)\nprint(df_fillna_limit)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u5386\u53f2\n\u5c0f\u660e   1.0   1.0   0.0   1.0\n\u5c0f\u7ea2   0.0   2.0   0.0   NaN\n\u5c0f\u4eae   0.0   0.0   NaN   3.0\n\u5c0f\u521a   0.0   4.0   4.0   4.0\n\"\"\"\n\n\ndf_fillna_dict = df4.fillna(value={\"\u8bed\u6587\": 0, \"\u82f1\u8bed\": 1}, limit=2)\nprint(df_fillna_dict)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u5386\u53f2\n\u5c0f\u660e   1.0   1.0   1.0   1.0\n\u5c0f\u7ea2   0.0   2.0   1.0   NaN\n\u5c0f\u4eae   0.0   NaN   NaN   3.0\n\u5c0f\u521a   NaN   4.0   4.0   4.0\n\"\"\"\n\ndf = pd.DataFrame(data={\"\u8bed\u6587\": [0, 3], \"\u82f1\u8bed\": [0, 1]}, index=[\"\u5c0f\u660e\", \"\u5c0f\u7ea2\"])\nprint(df)\ndf_fillna_df = df4.fillna(value=df)\nprint(df_fillna_df)\n\"\"\"\n      \u8bed\u6587  \u82f1\u8bed\n\u5c0f\u660e     0     0\n\u5c0f\u7ea2     3     1\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u5386\u53f2\n\u5c0f\u660e   1.0   1.0   0.0   1.0\n\u5c0f\u7ea2   3.0   2.0   1.0   NaN\n\u5c0f\u4eae   NaN   NaN   NaN   3.0\n\u5c0f\u521a   NaN   4.0   4.0   4.0\n\"\"\"\n\n\n\ndf_ffill = df4.ffill(limit=2)\nprint(df_ffill)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u5386\u53f2\n\u5c0f\u660e   1.0   1.0   NaN   1.0\n\u5c0f\u7ea2   1.0   2.0   NaN   1.0\n\u5c0f\u4eae   1.0   2.0   NaN   3.0\n\u5c0f\u521a   NaN   4.0   4.0   4.0\n\"\"\"\n\ndf_ffill = df4.ffill(axis=1, limit=2)\nprint(df_ffill)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u5386\u53f2\n\u5c0f\u660e   1.0   1.0   1.0   1.0\n\u5c0f\u7ea2   NaN   2.0   2.0   2.0\n\u5c0f\u4eae   NaN   NaN   NaN   3.0\n\u5c0f\u521a   NaN   4.0   4.0   4.0\n\"\"\"\n\ndf_bfill = df4.bfill(limit=2)\nprint(df_bfill)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u5386\u53f2\n\u5c0f\u660e   1.0   1.0   NaN   1.0\n\u5c0f\u7ea2   NaN   2.0   4.0   3.0\n\u5c0f\u4eae   NaN   4.0   4.0   3.0\n\u5c0f\u521a   NaN   4.0   4.0   4.0\n\"\"\"\n\ndf_bfill = df4.bfill(axis=1, limit=2)\nprint(df_bfill)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed  \u5386\u53f2\n\u5c0f\u660e   1.0   1.0   1.0   1.0\n\u5c0f\u7ea2   2.0   2.0   NaN   NaN\n\u5c0f\u4eae   NaN   3.0   3.0   3.0\n\u5c0f\u521a   4.0   4.0   4.0   4.0\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Pandas/%E9%80%9A%E7%94%A8%E5%87%BD%E6%95%B0/#replace","title":"replace","text":"<p><code>Series.replace(to_replace=None, value=&lt;no_default&gt;, inplace=False, limit=None, regex=False, method=&lt;no_default&gt;)</code></p> <p>\u5c06Series\u5bf9\u8c61\u4e2d\u7684to_replace\u503c\u66ff\u6362\u4e3avalue\uff0c\u8fd4\u56de\u526f\u672c</p> <ol> <li> <p>to_replace\uff1a</p> </li> <li> <p>\u5355\u503c\uff1a\u5339\u914d\u540e\u76f4\u63a5\u66ff\u6362\u4e3avalue</p> </li> <li> <p>\u5217\u8868\uff1a\u82e5value\u4e5f\u4e3a\u5217\u8868\uff0c\u5219\u4e8c\u8005\u957f\u5ea6\u5fc5\u987b\u76f8\u540c\u3002\u82e5regex=True\uff0c\u5219\u5217\u8868\u4e2d\u6240\u6709\u5b57\u7b26\u4e32\u5c06\u88ab\u89e3\u91ca\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f</p> </li> <li> <p>\u5b57\u5178\uff1a\u901a\u8fc7\u6620\u5c04\u5173\u7cfb\u8fdb\u884c\u66ff\u6362\uff0c\u65e0\u6620\u5c04\u5173\u7cfb\u7684\u6570\u636e\u4ecd\u7136\u4fdd\u7559</p> <ol> <li> <p>Series\u5bf9\u8c61\uff1a\u4e0d\u5e94\u6307\u5b9avalue\u53c2\u6570</p> </li> <li> <p>DataFrame\u5bf9\u8c61\uff1a\u5728\u4e0d\u6307\u5b9avalue\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u6839\u636e\u5b57\u5178\u6620\u5c04\u8fdb\u884c\u66ff\u6362\uff1b\u6307\u5b9avalue\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u4e8c\u8005\u952e\u503c\u5bf9\u8868\u793a\u5bf9\u5e94\u5217\u4e0e\u5bf9\u5e94\u503c\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u6b64\u65f6value\u53c2\u6570\u53ea\u80fd\u6307\u5b9a\u4e3a\u5355\u503c\u6216\u5b57\u5178</p> </li> </ol> </li> <li> <p>None\uff1a\u6b64\u65f6regex\u5fc5\u987b\u6307\u5b9a</p> </li> <li> <p>value\uff1a\u7528\u6765\u66ff\u6362\u7684\u503c\u6216\u503c\u7684\u5217\u8868</p> </li> <li> <p>inplace\uff1a\u662f\u5426\u5728\u539fSeries\u5bf9\u8c61\u4e0a\u8fdb\u884c\u66ff\u6362\uff0c\u9ed8\u8ba4False</p> </li> <li> <p>limit\uff1a\u5df2\u5f03\u7528\uff0c\u672a\u6765\u7248\u672c\u5c06\u4f1a\u79fb\u9664</p> </li> <li> <p>regex\uff1a\u662f\u5426\u5c06to_replace\u548c/\u6216value\u89e3\u91ca\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u9ed8\u8ba4\u4e3aFalse\u3002\u6216\u8005\u53ef\u4ee5\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u5217\u8868\u3001\u5b57\u5178\u6216\u6570\u7ec4\uff0c\u6b64\u65f6to_replace\u5fc5\u987b\u4e3aNone</p> </li> <li> <p>method\uff1a\u5df2\u5f03\u7528\uff0c\u672a\u6765\u7248\u672c\u5c06\u4f1a\u79fb\u9664</p> </li> </ol> <pre><code>label = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]\ns = pd.Series([85, 100, 90, np.nan, 90, 85, np.nan, 90], index=label)\nprint(s)\n\"\"\"\na     85.0\nb    100.0\nc     90.0\nd      NaN\ne     90.0\nf     85.0\ng      NaN\nh     90.0\ndtype: float64\n\"\"\"\n\nprint(s.replace(np.nan, 0))\n\"\"\"\na     85.0\nb    100.0\nc     90.0\nd      0.0\ne     90.0\nf     85.0\ng      0.0\nh     90.0\ndtype: float64\n\"\"\"\n\nprint(s.replace([np.nan, 90, 85], 0))\n\"\"\"\na      0.0\nb    100.0\nc      0.0\nd      0.0\ne      0.0\nf      0.0\ng      0.0\nh      0.0\ndtype: float64\n\"\"\"\n\nprint(s.replace([np.nan, 90, 85], [0, 95, 90]))\n\"\"\"\na     90.0\nb    100.0\nc     95.0\nd      0.0\ne     95.0\nf     90.0\ng      0.0\nh     95.0\ndtype: float64\n\"\"\"\n\nprint(s.replace({np.nan: 0, 90: 95, 85: 90}))\n\"\"\"\na     90.0\nb    100.0\nc     95.0\nd      0.0\ne     95.0\nf     90.0\ng      0.0\nh     95.0\ndtype: float64\n\"\"\"\n</code></pre> <pre><code>data = [[90, 90, 100], [100, 80, 80], [90, 90, 80]]\nindex = [\"\u5c0f\u660e\", \"\u5c0f\u7ea2\", \"\u5c0f\u4eae\"]\ncolumns = [\"\u8bed\u6587\", \"\u6570\u5b66\", \"\u82f1\u8bed\"]\ndf1 = pd.DataFrame(data=data, index=index, columns=columns)\nprint(df1)\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    90    90   100\n\u5c0f\u7ea2   100    80    80\n\u5c0f\u4eae    90    90    80\n\"\"\"\n\nprint(df1.replace(90, 95))\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    95    95   100\n\u5c0f\u7ea2   100    80    80\n\u5c0f\u4eae    95    95    80\n\"\"\"\n\nprint(df1.replace([90, 80], 95))\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    95    95   100\n\u5c0f\u7ea2   100    95    95\n\u5c0f\u4eae    95    95    95\n\"\"\"\n\nprint(df1.replace([90, 80], [95, 85]))\nprint(df1.replace({90: 95, 80: 85}))\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    95    95   100\n\u5c0f\u7ea2   100    85    85\n\u5c0f\u4eae    95    95    85\n\"\"\"\n\nprint(df1.replace({\"\u8bed\u6587\": 90, \"\u6570\u5b66\": 80}, value=0))\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e     0    90   100\n\u5c0f\u7ea2   100     0    80\n\u5c0f\u4eae     0    90    80\n\"\"\"\n\nprint(df1.replace({\"\u8bed\u6587\": 90, \"\u6570\u5b66\": 80}, value={\"\u8bed\u6587\": 95, \"\u6570\u5b66\": 85}))\nprint(df1.replace({\"\u8bed\u6587\": {90: 95}, \"\u6570\u5b66\": {80: 85}}))\n\"\"\"\n      \u8bed\u6587  \u6570\u5b66  \u82f1\u8bed\n\u5c0f\u660e    95    90   100\n\u5c0f\u7ea2   100    85    80\n\u5c0f\u4eae    95    90    80\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/","title":"\u76f4\u65b9\u56fe\uff08hist\u3001hist2d\u3001histplot\uff09\u3001\u6838\u5bc6\u5ea6\u56fe\uff08kdeplot\uff09\u3001\u7d2f\u8ba1\u66f2\u7ebf\u56fe\uff08ecdfplot\uff09","text":"<p>\u76f4\u65b9\u56fe(Histogram)\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u56fe\u8868\u7c7b\u578b\uff0c\u7528\u4e8e\u5c55\u793a\u6570\u636e\u7684\u5206\u5e03\u60c5\u51b5\u3002\u5b83\u901a\u8fc7\u5c06\u6570\u636e\u8303\u56f4\u5206\u6210\u82e5\u5e72\u4e2a\u533a\u95f4(bi)\uff0c\u7136\u540e\u8ba1\u7b97\u6bcf\u4e2a\u533a\u95f4\u5185\u7684\u6570\u636e\u70b9\u6570\u91cf\uff0c\u5e76\u4ee5\u6761\u5f62\u7684\u9ad8\u5ea6\u8868\u793a\u6bcf\u4e2a\u533a\u95f4\u7684\u6570\u636e\u9891\u7387\u6216\u5bc6\u5ea6\u3002\u76f4\u65b9\u56fe\u80fd\u591f\u76f4\u89c2\u5730\u53cd\u6620\u51fa\u6570\u636e\u7684\u5206\u5e03\u7279\u70b9\uff0c\u5982\u96c6\u4e2d\u8d8b\u52bf\u3001\u504f\u659c\u7a0b\u5ea6\u3001\u79bb\u6563\u6027\u7b49\u3002</p> <p>iris.csv</p> <p></p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\niris = pd.read_csv('../Data/iris.csv')\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#matplotlibhist","title":"Matplotlib\uff1ahist","text":"<p>matplotlib.axes.Axes.hist \u2014 Matplotlib 3.7.0 documentation</p> <p>matplotlib.pyplot.hist \u2014 Matplotlib 3.10.1 documentation</p> <p><code>hist(x, bins=None, *, range=None, density=False, weights=None, cumulative=False, bottom=None, histtype='bar', align='mid', orientation='vertical', rwidth=None, log=False, color=None, label=None, stacked=False, data=None, **kwargs)</code></p> <p>\u8ba1\u7b97\u5e76\u7ed8\u5236\uff08\u5355\u53d8\u91cf\uff09\u76f4\u65b9\u56fe\uff08histogram\uff09\u3002\u6b64\u65b9\u6cd5\u4f7f\u7528<code>numpy.histogram</code>\u5bf9x\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u5206\u7bb1\u5e76\u8ba1\u7b97\u6bcf\u4e2a\u7bb1\uff08bin\uff09\u4e2d\u7684\u503c\u6570\u91cf\uff0c\u7136\u540e\u4ee5<code>BarContainer</code>\u6216<code>Polygon</code>\u7684\u5f62\u5f0f\u7ed8\u5236\u6570\u636e\u5206\u5e03\u3002<code>bins</code>\u3001<code>range</code>\u3001<code>density</code>\u548c<code>weights</code>\u53c2\u6570\u5c06\u4f20\u9012\u7ed9<code>numpy.histogram</code>\u3002\u4e0d\u652f\u6301\u63a9\u7801\u6570\u7ec4\u3002</p> <p>\u6570\u636e\u8f93\u5165<code>x</code>\u53ef\u4ee5\u662f\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u3001\u4e00\u4e2a\u53ef\u80fd\u4e0d\u540c\u957f\u5ea6\u7684\u4e00\u7ef4\u6570\u7ec4\u7684\u5e8f\u5217([x0, x1, ...])\uff0c\u6216\u8005\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff08\u6bcf\u4e00\u5217\u662f\u4e00\u4e2a\u6570\u636e\u96c6\uff09\u3002\u5982\u679c\u8f93\u5165\u662f\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5143\u7ec4<code>(n, bins, patches)</code>\uff1b\u5982\u679c\u8f93\u5165\u662f\u4e00\u7ef4\u6570\u7ec4\u5e8f\u5217\u6216\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5219\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5143\u7ec4<code>([n0, n1, ...], bins, [patches0, patches1, ...])</code>\u3002</p> <p>\u5982\u679c\u63d0\u4f9b<code>data</code>\u53c2\u6570\uff0c\u4ee5\u4e0b\u53c2\u6570\u4e5f\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32<code>s</code>\uff0c\u5982\u679c<code>s</code>\u662f<code>data</code>\u4e2d\u7684\u952e\uff0c\u5219\u89e3\u91ca\u4e3a<code>data[s]</code>\uff1ax, weights\u3002</p> <ol> <li> <p>**histtype\uff1a**\u8981\u7ed8\u5236\u7684\u76f4\u65b9\u56fe\u7c7b\u578b\u3002</p> </li> <li> <p>**'bar'\uff08\u9ed8\u8ba4\uff09\uff1a**\u4f20\u7edf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u3002\u5982\u679c\u63d0\u4f9b\u4e86\u591a\u4e2a\u6570\u636e\uff0c\u5219\u67f1\u4f1a\u5e76\u6392\u6392\u5217\u3002</p> </li> <li> <p>**'barstacked'\uff1a**\u4e00\u79cd\u591a\u4e2a\u6570\u636e\u5806\u53e0\u5728\u4e00\u8d77\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u3002</p> </li> <li> <p>**'step'\uff1a**\u751f\u6210\u9ed8\u8ba4\u4e0d\u586b\u5145\u7684\u7ebf\u56fe\u3002</p> </li> <li> <p>**'stepfilled'\uff1a**\u751f\u6210\u9ed8\u8ba4\u586b\u5145\u7684\u7ebf\u56fe\u3002</p> </li> <li> <p>**orientation\uff1a**\u5982\u679c\u4e3a<code>'horizontal'</code>\uff0c\u5219<code>barh</code>\u5c06\u7528\u4e8e\u67f1\u72b6\u76f4\u65b9\u56fe\u7684\u7ed8\u5236\uff0c\u4e14<code>bottom</code>\u53c2\u6570\u5c06\u662f\u5de6\u4fa7\u8fb9\u7f18\u3002\u9ed8\u8ba4<code>'vertical'</code>\u3002</p> </li> <li> <p>**align\uff1a**\u76f4\u65b9\u56fe\u67f1\u7684\u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f\u3002<code>'left'</code>\u8868\u793a\u67f1\u5c45\u4e2d\u4e8e\u7bb1\u5de6\u8fb9\u7f18\uff1b<code>'mid'</code>\uff08\u9ed8\u8ba4\uff09\u8868\u793a\u67f1\u5c45\u4e2d\u4e8e\u7bb1\u8fb9\u4e4b\u95f4\uff1b<code>'right'</code>\u8868\u793a\u67f1\u5c45\u4e2d\u4e8e\u7bb1\u53f3\u8fb9\u7f18\u3002</p> </li> <li> <p>bottom\uff1a\uff08\u6bcf\u4e2a\u7bb1\uff09\u7684\u5e95\u90e8\u4f4d\u7f6e\uff0c\u5373\u7bb1\u4ece<code>bottom</code>\u7ed8\u5236\u5230<code>bottom + hist(x, bins)</code>\u3002\u5982\u679c\u662f\u4e00\u4e2a\u6807\u91cf\uff0c\u5219\u6bcf\u4e2a\u7bb1\u7684\u5e95\u90e8\u90fd\u4f1a\u5411\u540c\u4e00\u65b9\u5411\u504f\u79fb\u76f8\u540c\u7684\u91cf\u3002\u5982\u679c\u662f\u4e00\u4e2a\u6570\u7ec4\uff08\u957f\u5ea6\u5fc5\u987b\u4e0e\u7bb1\u7684\u6570\u91cf\u5339\u914d\uff09\uff0c\u5219\u6bcf\u4e2a\u7bb1\u53ef\u4ee5\u72ec\u7acb\u504f\u79fb\u3002\u5982\u679c\u4e3a None\uff0c\u5219\u9ed8\u8ba4\u4e3a0\u3002</p> </li> <li> <p>**rwidth\uff1a**\u67f1\u5bbd\u5ea6\u76f8\u5bf9\u4e8e\u7bb1\u5bbd\u5ea6\u7684\u6bd4\u4f8b\u3002\u5982\u679c\u4e3a<code>None</code>\uff0c\u5219\u81ea\u52a8\u8ba1\u7b97\u3002\u5982\u679c<code>histtype</code>\u4e3a'step'\u6216'stepfilled'\uff0c\u5219\u5ffd\u7565\u8be5\u53c2\u6570\u3002</p> </li> <li> <p>**color\uff1a**\u989c\u8272\u6216\u989c\u8272\u5e8f\u5217\uff08\u6bcf\u4e2a\u6570\u636e\u96c6\u4e00\u4e2a\uff09\u3002\u9ed8\u8ba4\uff08<code>None</code>\uff09\u4f7f\u7528\u6807\u51c6\u7ebf\u989c\u8272\u5e8f\u5217\u3002</p> </li> <li> <p>**log\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u76f4\u65b9\u56fe\u8f74\u5c06\u88ab\u8bbe\u7f6e\u4e3a\u5bf9\u6570\u5c3a\u5ea6\u3002\u9ed8\u8ba4<code>False</code>\u3002</p> </li> <li> <p>**label\uff1a**\u5b57\u7b26\u4e32\u6216\u5b57\u7b26\u4e32\u5e8f\u5217\uff08\u5339\u914d\u6bcf\u4e2a\u6570\u636e\u96c6\uff09\u3002</p> </li> </ol> <p><code>**kwargs</code>\u5176\u5b83\u53c2\u6570\u4f20\u9012\u7ed9<code>Patch</code>\u7c7b\u3002\u4ee5\u4e0b\u5c5e\u6027\u8fd8\u63a5\u53d7\u4e0e<code>x</code>\u4e2d\u7684\u6570\u636e\u96c6\u5bf9\u5e94\u7684\u503c\u5e8f\u5217\uff1aedgecolor\u3001facecolor\u3001linewidth\u3001linestyle\u3001hatch\u3002</p> <p>\u5bf9\u4e8e\u5927\u91cf\u7bb1\uff08\u6570\u91cf&gt;1000\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528<code>stairs</code>\u6765\u7ed8\u5236\u9884\u8ba1\u7b97\u7684\u76f4\u65b9\u56fe\uff08<code>plt.stairs(*np.histogram(data))</code>\uff09\uff0c\u6216\u8005\u5c06 <code>histtype</code>\u8bbe\u7f6e\u4e3a'step'\u6216'stepfilled'\u800c\u4e0d\u662f'bar'\u6216'barstacked'\u6765\u663e\u8457\u52a0\u901f\u7ed8\u56fe\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.hist('sepal_length',\n        data=iris,\n\n        histtype='bar',\n        orientation='vertical',\n        align='mid',\n        bottom=5,\n        rwidth=1,\n        color='#00e8fd',\n        log=False,\n        label='sepal_length'\n        )\n\"\"\"\n(array([ 9., 23., 14., 27., 16., 26., 18.,  6.,  5.,  6.]),\n array([4.3 , 4.66, 5.02, 5.38, 5.74, 6.1 , 6.46, 6.82, 7.18, 7.54, 7.9 ]),\n &lt;BarContainer object of 10 artists&gt;)\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#_1","title":"\u5206\u7bb1\u4e0e\u8ba1\u6570","text":"<ol> <li> <p>**bins\uff1a**\u9ed8\u8ba4<code>rcParams[\"hist.bins\"]=10</code>\u3002</p> </li> <li> <p>\u5982\u679c\u662f\u4e00\u4e2a**\u6574\u6570**\uff0c\u5b83\u5b9a\u4e49\u4e86<code>range</code>\u8303\u56f4\u5185\u7684\u7b49\u5bbd\u7bb1\u6570\u91cf\u3002</p> </li> <li> <p>\u5982\u679c\u662f\u4e00\u4e2a**\u5e8f\u5217**\uff0c\u5b83\u5b9a\u4e49\u4e86\u7bb1\u8fb9\uff0c\u5305\u62ec\u7b2c\u4e00\u4e2a\u7bb1\u7684\u5de6\u4fa7\u8fb9\u548c\u6700\u540e\u4e00\u4e2a\u7bb1\u7684\u53f3\u4fa7\u8fb9\uff1b\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7bb1\u53ef\u80fd\u662f\u4e0d\u5747\u5300\u5206\u5e03\u7684\u3002\u9664\u4e86\u6700\u540e\u4e00\u4e2a\uff08\u6700\u53f3\u4fa7\uff09\u7bb1\u4e4b\u5916\uff0c\u6240\u6709\u7bb1\u90fd\u662f\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\u3002\u5373\uff0c\u5982\u679c<code>bins=[1, 2, 3, 4]</code>\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u7bb1\u662f [1, 2)\uff0c\u7b2c\u4e8c\u4e2a\u7bb1\u662f[2, 3)\u3002\u4f46\u6700\u540e\u4e00\u4e2a\u7bb1\u662f[3, 4] \u3002</p> </li> <li> <p>\u5982\u679c\u662f\u4e00\u4e2a**\u5b57\u7b26\u4e32**\uff0c\u5b83\u662f\u7531<code>numpy.histogram_bin_edges</code>\u652f\u6301\u7684\u5206\u7bb1\u7b56\u7565\u4e4b\u4e00\uff1a<code>'auto'</code>\u3001<code>'fd'</code>\u3001<code>'doane'</code>\u3001<code>'scott'</code>\u3001<code>'stone'</code>\u3001<code>'rice'</code>\u3001<code>'sturges'</code>\u3001<code>'sqrt'</code>\u3002</p> </li> <li> <p>**range\uff1a**\u7bb1\u7684\u4e0b\u9650\u548c\u4e0a\u9650\u8303\u56f4\u3002\u5ffd\u7565\u4e0b\u9650\u548c\u4e0a\u9650\u5916\u7684\u5f02\u5e38\u503c\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\uff0c\u5219\u9ed8\u8ba4\u4e3a\u6781\u503c<code>(x.min(), x.max())</code>\u3002\u5982\u679c<code>bins</code> \u662f\u4e00\u4e2a\u5e8f\u5217\uff0c\u5219\u8be5\u53c2\u6570\u6ca1\u6709\u6548\u679c\u3002\u5982\u679c<code>bins</code>\u662f\u4e00\u4e2a\u5e8f\u5217\u6216\u6307\u5b9a\u4e86\u8be5\u53c2\u6570\uff0c\u5219\u81ea\u52a8\u7f29\u653e\u662f\u57fa\u4e8e\u6307\u5b9a\u7684\u7bb1\u8303\u56f4\uff0c\u800c\u4e0d\u662f<code>x</code>\u7684\u8303\u56f4\u3002</p> </li> <li> <p>**weights\uff1a**\u4e0e<code>x</code>\u5f62\u72b6\u76f8\u540c\uff0c\u4e3a\u6bcf\u4e2a\u6570\u636e\u70b9\u7684\u8ba1\u6570\u6743\u91cd\u6570\u7ec4\u3002<code>x</code>\u4e2d\u7684\u6bcf\u4e2a\u503c\u5bf9\u7bb1\u8ba1\u6570\u53ea\u8d21\u732e\u5176\u5bf9\u5e94\u7684\u6743\u91cd\uff0c\u800c\u4e0d\u518d\u662f1\u3002</p> </li> </ol> <p>\u5982\u679c\u6570\u636e\u5df2\u7ecf\u88ab\u5206\u7bb1\u5e76\u8ba1\u6570\uff0c\u8bf7\u4f7f\u7528<code>bar</code>\u6216<code>stairs</code>\u6765\u7ed8\u5236\u5206\u5e03\uff1b\u6216\u8005\u4f7f\u7528<code>hist()</code>\uff0c\u901a\u8fc7\u5c06\u6bcf\u4e2a\u5206\u7bb1\u89c6\u4e3a\u4e00\u4e2a\u6743\u91cd\u7b49\u4e8e\u5176\u8ba1\u6570\u7684\u7684\u5355\u72ec\u70b9\u6765\u7ed8\u5236\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.hist('sepal_length',\n        data=iris,\n\n        bins=20,\n        range=(4.3, 7.9),\n        # bins = [4.3, 4.48, 4.66, 4.84, 5.02, 5.2, 5.38, 5.56, 5.74, 5.92, 6.1, 6.28, 6.46, 6.64, 6.82, 7., 7.18, 7.36, 7.54, 7.72, 7.9],\n        weights=np.full(150, fill_value=2),\n\n        histtype='bar',\n        orientation='vertical',\n        align='mid',\n        bottom=0,\n        rwidth=1,\n        color='#00e8fd',\n        log=False,\n        label='sepal_length'\n        )\n\"\"\"\n(array([ 8., 10., 14., 32., 18., 10., 26., 28., 20., 12., 20., 32., 14.,\n        22.,  8.,  4.,  8.,  2., 10.,  2.]),\n array([4.3 , 4.48, 4.66, 4.84, 5.02, 5.2 , 5.38, 5.56, 5.74, 5.92, 6.1 ,\n        6.28, 6.46, 6.64, 6.82, 7.  , 7.18, 7.36, 7.54, 7.72, 7.9 ]),\n &lt;BarContainer object of 20 artists&gt;)\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nbins = [4.3, 4.48, 4.66, 4.84, 5.02, 5.2, 5.38, 5.56, 5.74, 5.92, 6.1, 6.28, 6.46, 6.64, 6.82, 7., 7.18, 7.36, 7.54, 7.72, 7.9]\ncounts = [8., 10., 14., 32., 18., 10., 26., 28., 20., 12., 20., 32., 14., 22., 8., 4., 8., 2., 10., 2.]\n\nax.hist(bins[:-1],\n\n        bins=bins,\n        weights=counts,\n\n        histtype='bar',\n        orientation='vertical',\n        align='mid',\n        bottom=0,\n        rwidth=1,\n        color='#00e8fd',\n        log=False,\n        label='sepal_length'\n        )\n\"\"\"\n(array([ 8., 10., 14., 32., 18., 10., 26., 28., 20., 12., 20., 32., 14.,\n        22.,  8.,  4.,  8.,  2., 10.,  2.]),\n array([4.3 , 4.48, 4.66, 4.84, 5.02, 5.2 , 5.38, 5.56, 5.74, 5.92, 6.1 ,\n        6.28, 6.46, 6.64, 6.82, 7.  , 7.18, 7.36, 7.54, 7.72, 7.9 ]),\n &lt;BarContainer object of 20 artists&gt;)\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#_2","title":"\u6982\u7387\u5bc6\u5ea6\u4e0e\u7d2f\u8ba1","text":"<ol> <li> <p>density\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u7ed8\u5236\u5e76\u8fd4\u56de\u6982\u7387\u5bc6\u5ea6\uff1a\u6bcf\u4e2a\u7bb1\u5c06\u4ee5\u7bb1\u539f\u59cb\u8ba1\u6570\u9664\u4ee5\u603b\u8ba1\u6570\u548c\u7bb1\u5bbd\u5ea6\uff08<code>density=counts/(sum(counts)*np.diff(bins))</code>\uff09\u5c55\u793a\uff0c\u4f7f**\u76f4\u65b9\u56fe\u4e0b\u9762\u79ef\u548c\uff08\u79ef\u5206\uff09\u4e3a1\uff08<code>np.sum(density*np.diff(bins))==1</code>\uff09\u3002\u9ed8\u8ba4<code>False</code>\u3002</p> </li> <li> <p>cumulative\uff1a**\u5982\u679c<code>True</code> \uff0c\u5219\u6bcf\u4e2a\u7bb1\u7ed9\u51fa\u8be5\u7bb1\u53ca\u5176\u6240\u6709\u8f83\u5c0f\u503c\u7bb1\u7684\u8ba1\u6570\u603b\u548c\uff0c\u6700\u540e\u4e00\u4e2a\u7bb1\u7ed9\u51fa\u6570\u636e\u70b9\u7684\u603b\u6570\uff08**\u8ba1\u6570\u7d2f\u8ba1\uff09\u3002\u5982\u679c<code>density</code>\u53c2\u6570\u4e5f\u662f<code>True</code>\uff0c\u5219\u76f4\u65b9\u56fe\u5c06\u5f52\u4e00\u5316\uff0c\u4f7f\u5f97\u6700\u540e\u4e00\u4e2a\u7bb1\u7b49\u4e8e1\uff08\u6982\u7387\u7d2f\u8ba1\uff09\u3002\u5982\u679c\u8be5\u53c2\u6570\u662f\u4e00\u4e2a\u5c0f\u4e8e0\u7684\u6570\u5b57\uff08\u4f8b\u5982<code>-1</code>\uff09\uff0c\u5219\u7d2f\u79ef\u65b9\u5411\u76f8\u53cd\u3002\u9ed8\u8ba4<code>False</code>\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.hist('sepal_length',\n        data=iris,\n\n        bins=20,\n        range=(4.3, 7.9),\n        weights=np.full(150, fill_value=2),\n\n        density=True,\n        cumulative=False,\n\n        histtype='bar',\n        orientation='vertical',\n        align='mid',\n        bottom=0,\n        rwidth=1,\n        color='#00e8fd',\n        log=False,\n        label='sepal_length'\n        )\n\"\"\"\n(array([0.14814815, 0.18518519, 0.25925926, 0.59259259, 0.33333333,\n        0.18518519, 0.48148148, 0.51851852, 0.37037037, 0.22222222,\n        0.37037037, 0.59259259, 0.25925926, 0.40740741, 0.14814815,\n        0.07407407, 0.14814815, 0.03703704, 0.18518519, 0.03703704]),\n array([4.3 , 4.48, 4.66, 4.84, 5.02, 5.2 , 5.38, 5.56, 5.74, 5.92, 6.1 ,\n        6.28, 6.46, 6.64, 6.82, 7.  , 7.18, 7.36, 7.54, 7.72, 7.9 ]),\n &lt;BarContainer object of 20 artists&gt;)\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.hist('sepal_length',\n        data=iris,\n\n        bins=20,\n        range=(4.3, 7.9),\n        weights=np.full(150, fill_value=2),\n\n        density=True,\n        cumulative=True,\n\n        histtype='bar',\n        orientation='vertical',\n        align='mid',\n        bottom=0,\n        rwidth=1,\n        color='#00e8fd',\n        log=False,\n        label='sepal_length'\n        )\n\"\"\"\n(array([0.02666667, 0.06      , 0.10666667, 0.21333333, 0.27333333,\n        0.30666667, 0.39333333, 0.48666667, 0.55333333, 0.59333333,\n        0.66      , 0.76666667, 0.81333333, 0.88666667, 0.91333333,\n        0.92666667, 0.95333333, 0.96      , 0.99333333, 1.        ]),\n array([4.3 , 4.48, 4.66, 4.84, 5.02, 5.2 , 5.38, 5.56, 5.74, 5.92, 6.1 ,\n        6.28, 6.46, 6.64, 6.82, 7.  , 7.18, 7.36, 7.54, 7.72, 7.9 ]),\n &lt;BarContainer object of 20 artists&gt;)\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#_3","title":"\u591a\u6570\u636e\u96c6","text":"<p>\u5728\u591a\u6570\u636e\u96c6\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u6570\u636e\u96c6\u8ba1\u7b97\u7edf\u8ba1\u91cf\u4f7f\u7528\u7684\u662f**\u5171\u540c\u7684\u5206\u7bb1**\uff0c\u9ed8\u8ba4\u5206\u7bb1\u8303\u56f4\u662f<code>(x.min(), x.max())</code>\uff0c\u4ee5\u4fbf\u533a\u5206\u4e0d\u540c\u6570\u636e\u96c6\u5728\u540c\u4e00\u8303\u56f4\u5185\u7684\u96c6\u4e2d\u8d8b\u52bf\uff0c\u800c\u975e\u6bcf\u4e2a\u6570\u636e\u96c6\u53d6\u5404\u81ea\u7684\u6781\u503c\u8303\u56f4\uff0c\u540c\u65f6\u4e5f\u907f\u514d\u4e86\u4e0d\u540c\u6570\u636e\u96c6\u5206\u7bb1\u5bbd\u5ea6\u7684\u4e0d\u540c\u3002\u7d2f\u8ba1\u65f6\u5404\u81ea\u7d2f\u8ba1\u3002</p> <p>**stacked\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u591a\u4e2a\u6570\u636e\u5c06\u5806\u53e0\u5728\u4e00\u8d77\uff08\u5982\u679c\u6b64\u65f6<code>histtype='bar'</code>\uff0c\u5219\u7b49\u540c<code>histtype='barstacked'</code>\uff09\uff0c\u6b64\u65f6\u6bcf\u4e2a\u6570\u636e\u96c6\u7684\u5b9e\u9645\u7ed8\u5236\u7684\u7edf\u8ba1\u91cf\u4f1a\u53e0\u52a0\u524d\u9762\u6570\u636e\u96c6\u540c\u4e00\u7bb1\u533a\u95f4\u7684\u7edf\u8ba1\u91cf\uff0c\u4ee5\u4f7f\u56fe\u5f62\u5806\u53e0\u5728\u524d\u9762\u6570\u636e\u96c6\u7684\u56fe\u5f62\u4e4b\u4e0a\uff08\u6240\u4ee5\u56fe\u5f62\u5c55\u793a\u7684\u4e0d\u662f\u771f\u5b9e\u5206\u5e03\u60c5\u51b5\uff09\uff1b\u5982\u679c<code>False</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u591a\u4e2a\u6570\u636e\u5c06\u5e76\u6392\u6392\u5217\uff08<code>histtype='bar'</code>\uff09\u6216\u91cd\u53e0\u5728\u4e00\u8d77\uff08<code>histtype='step'</code>/<code>histtype='stepfilled'</code>\uff09\u3002</p> <p>\u8ba1\u7b97\u6982\u7387\u6216\u6982\u7387\u5bc6\u5ea6\uff08\u5f52\u4e00\u5316\uff09\u65f6\uff1a\u5728**\u5806\u53e0\u60c5\u51b5**\u4e0b\uff0c\u4f7f\u7528**\u5171\u540c\u7684\u603b\u8ba1\u6570**\uff0c\u4e3a\u6240\u6709\u6570\u636e\u96c6\u7684\u603b\u8ba1\u6570\u548c\uff0c\u800c\u975e\u6bcf\u4e2a\u6570\u636e\u96c6\u53d6\u5404\u81ea\u603b\u8ba1\u6570\uff0c\u6700\u7ec8\u4f7f\u5f97\u5806\u53e0\u56fe\u5f62\u603b\u9762\u79ef\u548c\u4e3a1\u3002\u800c**\u975e\u5806\u53e0\u60c5\u51b5**\u4e0b\uff0c\u5219\u4f7f\u7528**\u5404\u81ea\u603b\u8ba1\u6570**\uff0c\u4f7f\u6bcf\u4e2a\u6570\u636e\u96c6\u5404\u81ea\u7684\u56fe\u5f62\u9762\u79ef\u4e3a1\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.hist(iris[['sepal_length', 'sepal_width', 'petal_length', 'petal_width']],\n\n        bins=20,\n        density=True,\n\n        histtype='bar',\n        stacked=True,\n        orientation='vertical',\n        align='mid',\n        bottom=0,\n        rwidth=1,\n        color=['#00e8fd', '#e021fd', '#fd806a', '#d3fd03'],\n        log=False,\n        label=['sepal_length', 'sepal_width', 'petal_length', 'petal_width']\n        )\n\"\"\"\n(array([[0.        , 0.        , 0.        , 0.        , 0.        ,\n         0.        , 0.        , 0.        , 0.        , 0.        ,\n         0.0042735 , 0.04273504, 0.12820513, 0.07692308, 0.1025641 ,\n         0.10683761, 0.09401709, 0.03846154, 0.02136752, 0.02564103],\n        [0.        , 0.        , 0.        , 0.        , 0.0042735 ,\n         0.04273504, 0.15384615, 0.25641026, 0.11965812, 0.04700855,\n         0.01709402, 0.04700855, 0.12820513, 0.07692308, 0.1025641 ,\n         0.10683761, 0.09401709, 0.03846154, 0.02136752, 0.02564103],\n        [0.        , 0.        , 0.01709402, 0.17094017, 0.02991453,\n         0.04273504, 0.15384615, 0.26068376, 0.14102564, 0.06837607,\n         0.07692308, 0.13247863, 0.21794872, 0.11538462, 0.16239316,\n         0.13247863, 0.11111111, 0.04273504, 0.02136752, 0.02564103],\n        [0.20512821, 0.00854701, 0.08119658, 0.32905983, 0.13675214,\n         0.12820513, 0.16666667, 0.26068376, 0.14102564, 0.06837607,\n         0.07692308, 0.13247863, 0.21794872, 0.11538462, 0.16239316,\n         0.13247863, 0.11111111, 0.04273504, 0.02136752, 0.02564103]]),\n array([0.1 , 0.49, 0.88, 1.27, 1.66, 2.05, 2.44, 2.83, 3.22, 3.61, 4.  ,\n        4.39, 4.78, 5.17, 5.56, 5.95, 6.34, 6.73, 7.12, 7.51, 7.9 ]),\n &lt;a list of 4 BarContainer objects&gt;)\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.hist(iris[['sepal_length', 'sepal_width', 'petal_length', 'petal_width']],\n\n        bins=20,\n        density=True,\n\n        histtype='step',\n        stacked=False,\n        orientation='vertical',\n        align='mid',\n        bottom=0,\n        rwidth=1,\n        color=['#00e8fd', '#e021fd', '#fd806a', '#d3fd03'],\n        log=False,\n        label=['sepal_length', 'sepal_width', 'petal_length', 'petal_width']\n        )\n\"\"\"\n(array([[0.        , 0.        , 0.        , 0.        , 0.        ,\n         0.        , 0.        , 0.        , 0.        , 0.        ,\n         0.01709402, 0.17094017, 0.51282051, 0.30769231, 0.41025641,\n         0.42735043, 0.37606838, 0.15384615, 0.08547009, 0.1025641 ],\n        [0.        , 0.        , 0.        , 0.        , 0.01709402,\n         0.17094017, 0.61538462, 1.02564103, 0.47863248, 0.18803419,\n         0.05128205, 0.01709402, 0.        , 0.        , 0.        ,\n         0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.06837607, 0.68376068, 0.1025641 ,\n         0.        , 0.        , 0.01709402, 0.08547009, 0.08547009,\n         0.23931624, 0.34188034, 0.35897436, 0.15384615, 0.23931624,\n         0.1025641 , 0.06837607, 0.01709402, 0.        , 0.        ],\n        [0.82051282, 0.03418803, 0.25641026, 0.63247863, 0.42735043,\n         0.34188034, 0.05128205, 0.        , 0.        , 0.        ,\n         0.        , 0.        , 0.        , 0.        , 0.        ,\n         0.        , 0.        , 0.        , 0.        , 0.        ]]),\n array([0.1 , 0.49, 0.88, 1.27, 1.66, 2.05, 2.44, 2.83, 3.22, 3.61, 4.  ,\n        4.39, 4.78, 5.17, 5.56, 5.95, 6.34, 6.73, 7.12, 7.51, 7.9 ]),\n &lt;a list of 4 list[Polygon] objects&gt;)\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#matplotlibecdf","title":"Matplotlib\uff1aecdf","text":"<p>matplotlib.axes.Axes.ecdf \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.ecdf \u2014 Matplotlib 3.10.1 documentation</p> <p><code>ecdf(x, weights=None, *, complementary=False, orientation='vertical', compress=False, data=None, **kwargs)</code></p> <p>\u8ba1\u7b97\u5e76\u7ed8\u5236<code>x</code>\u7684**\u7ecf\u9a8c\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\uff08Empirical Cumulative Distribution Function\uff09\u3002ECDF\u56fe\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u4e2a\u7d2f\u79ef\u76f4\u65b9\u56fe\uff0c\u6bcf\u4e2a\u6570\u636e\u5bf9\u5e94\u4e00\u4e2a\u533a\u95f4\uff0c\u5373\u5b83\u62a5\u544a\u4e86\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u800c**\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u4efb\u610f\u7684\u533a\u95f4\u5212\u5206\u3002</p> <p>\u8f93\u5165\u6570\u636e<code>x</code>\u4e3a\u4e00\u7ef4\u6570\u7ec4\uff0c\u5176\u4e2d\u7684\u65e0\u9650\u9879\uff08<code>inf</code>\uff09\u5c06\u88ab\u4fdd\u7559\uff08\u5e76\u5c06 ecdf \u7684\u76f8\u5173\u7aef\u70b9\u4ece0/1\u79fb\u52a8\uff09\uff0c\u4f46<code>NaN</code>\u503c\u548c\u63a9\u7801\u503c\u662f\u9519\u8bef\u3002\u5982\u679c<code>x</code>\u5305\u542b<code>NaN</code>\u6216\u63a9\u7801\u6570\u636e\uff0c\u5219\u9996\u5148\u4ece\u6570\u7ec4\u4e2d\u5220\u9664\u5b83\u4eec\uff08\u5982\u679c\u5b83\u4eec\u4e0d\u5e94\u88ab\u8003\u8651\uff09\uff0c\u6216\u8005\u7528<code>-inf</code>\u6216<code>+inf</code>\u66ff\u6362\u5b83\u4eec\uff08\u5982\u679c\u5b83\u4eec\u5e94\u88ab\u6392\u5e8f\u5728\u6570\u7ec4\u7684\u5f00\u59cb\u6216\u7ed3\u675f\u5904\uff09\u3002</p> <p>\u5982\u679c\u63d0\u4f9b<code>data</code>\u53c2\u6570\uff0c\u4ee5\u4e0b\u53c2\u6570\u4e5f\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32<code>s</code>\uff0c\u5982\u679c<code>s</code>\u662f<code>data</code>\u4e2d\u7684\u952e\uff0c\u5219\u89e3\u91ca\u4e3a<code>data[s]</code> :x, weights\u3002</p> <ol> <li> <p>**weights\uff1a**\u5fc5\u987b\u4e0e<code>x</code>\u5177\u6709\u76f8\u540c\u7684\u5f62\u72b6\u3002\u5bf9\u5e94\u4e8eNaN\u6570\u636e\u70b9\u7684\u6743\u91cd\u5c06\u88ab\u4e22\u5f03\uff0c\u7136\u540e\u5269\u4f59\u7684\u6743\u91cd\u5c06\u88ab\u5f52\u4e00\u5316\uff0c\u4f7f\u5176\u603b\u548c\u4e3a 1\u3002\u5982\u679c\u672a\u8bbe\u7f6e\uff0c\u5219\u6240\u6709\u6570\u636e\u70b9\u5177\u6709\u76f8\u540c\u7684\u6743\u91cd\u3002</p> </li> <li> <p>**complementary\uff1a**\u662f\u5426\u7ed8\u5236\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4ece0\u589e\u52a0\u52301\uff08\u9ed8\u8ba4\uff0c<code>False</code>\uff09\uff0c\u6216\u8005\u7ed8\u5236\u8865\u5145\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4ece1\u51cf\u5c11\u52300\uff08<code>True</code>\uff09\u3002</p> </li> <li> <p>**compress\uff1a**\u662f\u5426\u5728\u7ed8\u56fe\u524d\u5c06\u5177\u6709\u76f8\u540c\u503c\u7684\u591a\u4e2a\u6761\u76ee\u5206\u7ec4\u5728\u4e00\u8d77\uff08\u6743\u91cd\u5c06\u603b\u548c\uff09\u3002\u8fd9\u5728<code>x</code>\u5305\u542b\u8bb8\u591a\u76f8\u540c\u6570\u636e\u70b9\u65f6\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u964d\u4f4e\u7ed8\u56fe\u6e32\u67d3\u7684\u590d\u6742\u6027\u3002\u5982\u679c<code>x</code>\u4e0d\u5305\u542b\u91cd\u590d\u70b9\uff0c\u5219\u6b64\u9009\u9879\u6ca1\u6709\u6548\u679c\uff0c\u53ea\u4f1a\u6d88\u8017\u4e00\u4e9b\u65f6\u95f4\u548c\u5185\u5b58\u3002\u9ed8\u8ba4<code>False</code>\u3002</p> </li> </ol> <p><code>**kwargs</code>\u5176\u5b83\u53c2\u6570\u4f20\u9012\u7ed9<code>Line2D</code>\u7c7b\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.hist('sepal_length',\n        data=iris,\n\n        bins=20,\n        density=True,\n        cumulative=True,\n\n        color='#00e8fd',\n        label='sepal_length'\n        )\nax.ecdf('sepal_length',\n        data=iris,\n\n        weights=None,\n        complementary=False,\n        compress=True,\n        orientation='vertical',\n\n        linestyle='--',\n        linewidth=2,\n        color='#fa6000',\n        label='ECDF'\n        )\n\"\"\"\n&lt;matplotlib.lines.Line2D at 0x1884453e7e0&gt;\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#matplotlibhist2d","title":"Matplotlib\uff1ahist2d","text":"<p>matplotlib.axes.Axes.hist2d \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.hist2d \u2014 Matplotlib 3.10.1 documentation</p> <p><code>hist2d(x, y, bins=10, *, range=None, density=False, weights=None, cmin=None, cmax=None, data=None, **kwargs)</code></p> <p>\u7ed8\u5236\u4e8c\u7ef4\uff08\u53cc\u53d8\u91cf\uff09\u76f4\u65b9\u56fe\uff0c\u8868\u793a\u5728<code>x</code>\u548c<code>y</code>\uff08\u957f\u5ea6\u4e00\u81f4\uff09\u6bcf\u4e2a\u5206\u7bb1\u4e2d\u7684\u8ba1\u6570\u77e9\u9635\u56fe\u3002\u800c\u5bf9\u4e8e\u6982\u7387\u5bc6\u5ea6\u5219\u4e3a\u539f\u59cb\u8ba1\u6570\u9664\u4ee5\u603b\u8ba1\u6570\uff08<code>x</code>\u6216<code>y</code>\u7684\u957f\u5ea6\uff09\u548c\u4e24\u4e2a\u5206\u7bb1\u5bbd\u5ea6\u3002</p> <p>2D\u76f4\u65b9\u56fe(2D histogram)\uff0c\u4e5f\u53eb\u505a\u6563\u70b9\u5bc6\u5ea6\u56fe\u3002\u5b83\u901a\u8fc7\u5c06\u6570\u636e\u5212\u5206\u4e3a\u591a\u4e2a\u533a\u57df\uff0c\u5e76\u7528\u4e0d\u540c\u7684\u989c\u8272\u8868\u793a\u6bcf\u4e2a\u533a\u57df\u5185\u7684\u5bc6\u5ea6\uff0c\u53ef\u4ee5\u6e05\u6670\u5730\u5c55\u793a\u6570\u636e\u7684\u96c6\u4e2d\u533a\u57df\u548c\u7a00\u758f\u533a\u57df\u3002\u5728\u6570\u636e\u5206\u6790\u4e2d\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u5927\u91cf\u6563\u70b9\u6570\u636e\u65f6\uff0c2D\u76f4\u65b9\u56fe\u80fd\u6709\u6548\u907f\u514d\u6563\u70b9\u56fe\u8fc7\u4e8e\u62e5\u6324\u7684\u95ee\u9898\uff0c\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u5730\u53d1\u73b0\u6570\u636e\u4e4b\u95f4\u7684\u6f5c\u5728\u5173\u7cfb\u3002</p> <p>\u4ece\u62bd\u8c61\u4e09\u7ef4\u7a7a\u95f4\u7406\u89e3\uff1a\u5bf9\u4e8e\u6570\u636e\u70b9(x, y)\uff0c\u843d\u5230<code>x</code>\u67d0\u4e2a\u5206\u7bb1\uff08\u5bbd=d1\uff09\u540c\u65f6\u843d\u5230<code>y</code>\u67d0\u4e2a\u5206\u7bb1\uff08\u5bbd=d2\uff09\u7684\u8ba1\u6570\u4e3an\uff0c\u5219\u7ed8\u5236d1 x d2 x n\u7684\u67f1\uff0c\u9ad8\u4e3an\uff1b\u4f46\u5728\u5b9e\u9645\u7ed8\u5236\u4e2d\uff0c\u9ad8n\u88ab\u6e32\u67d3\u4e3a\u67d0\u4e2a\u989c\u8272\u3002\u5728\u6700\u540e\u56fe\u7247\u4e2d\uff0c\u6bcf\u4e2a\u683c\u5b50\u4ee3\u8868\u4e0d\u540c\u7684<code>x</code>\u3001<code>y</code>\u5206\u7bb1\uff0c\u800c\u5176\u989c\u8272\u7684\u6df1\u6d45\u5dee\u5f02\u4ee3\u8868\u4e0d\u540c\u7684\u9ad8\u5ea6\uff08\u8ba1\u6570\uff09\u3002 \u5bf9\u6982\u7387\u5bc6\u5ea6\uff0c\u8fd9\u91cc\u7684\u76ee\u7684\u662f\u4f7f\u6240\u6709\u7684\u62bd\u8c61\u67f1\u4f53\u79ef\u548c\uff08\u79ef\u5206\uff09\u4e3a1\uff0c\u5373\u6bcf\u4e2a\u67f1\u7684\u4f53\u79ef\u4ee3\u8868\u6982\u7387\uff0c\u800c\u4e0d\u518d\u662f\u9762\u79ef\uff1b\u9ad8\u5219\u4ee3\u8868\u6982\u7387\u5bc6\u5ea6\uff0c\u5373\u4e0d\u540c\u989c\u8272\u4ee3\u8868\u4e0d\u540c\u6982\u7387\u5bc6\u5ea6\u3002\u6240\u4ee5\u6bcf\u4e2a\u7bb1\u7684\u6982\u7387\u5bc6\u5ea6=\u6982\u7387 \u00f7 \u5e95\u9762\u79ef=\uff08\u8ba1\u6570\u00f7\u603b\u8ba1\u6570\uff09\u00f7\uff08<code>x</code>\u5206\u7bb1\u5bbd \u00d7 <code>y</code>\u5206\u7bb1\u5bbd\uff09\u3002</p> <ol> <li> <p>**bins\uff1a**\u9ed8\u8ba4\u503c\u4e3a 10\u3002</p> </li> <li> <p>\u5982\u679c\u662f<code>int</code>\uff0c\u8868\u793a\u4e24\u4e2a\u7ef4\u5ea6\u7684bins\u6570\u91cf\uff08<code>nx = ny = bins</code>\uff09\u3002</p> </li> <li> <p>\u5982\u679c\u662f<code>[int, int]</code> \uff0c\u8868\u793a\u6bcf\u4e2a\u7ef4\u5ea6\u7684bins\u6570\u91cf\uff08<code>nx, ny = bins</code>\uff09\u3002</p> </li> <li> <p>\u5982\u679c\u662f\u4e00\u7ef4\u6570\u7ec4\uff0c\u8868\u793a\u4e24\u4e2a\u7ef4\u5ea6\u7684bins\u533a\u95f4\uff08<code>x_edges = y_edges = bins</code>\uff09\u3002</p> </li> <li> <p>\u5982\u679c\u662f<code>[array, array]</code> \uff0c\u8868\u793a\u6bcf\u4e2a\u7ef4\u5ea6\u7684bins\u533a\u95f4\uff08<code>x_edges, y_edges = bins</code>\uff09\u3002</p> </li> <li> <p>range\uff1a<code>[[xmin, xmax], [ymin, ymax]]</code>\uff0c\u8868\u793a\u6bcf\u4e2a\u7ef4\u5ea6\u7684bin\u7684\u5de6\u53f3\u8fb9\u754c\uff08\u5982\u679c\u672a\u5728<code>bins</code>\u53c2\u6570\u4e2d\u660e\u786e\u6307\u5b9a\uff09\u3002\u6240\u6709\u8d85\u51fa\u6b64\u8303\u56f4\u7684\u503c\u5c06\u88ab\u89c6\u4e3a\u5f02\u5e38\u503c\uff0c\u4e0d\u8ba1\u5165\u76f4\u65b9\u56fe\u4e2d\u3002</p> </li> <li> <p>**cmin, cmax\uff1a**\u6240\u6709\u8ba1\u6570\u5c0f\u4e8e <code>cmin</code> \u6216\u5927\u4e8e <code>cmax</code>\u7684bins\u5c06\u4e0d\u4f1a\u663e\u793a\uff08\u5728\u4f20\u9012\u7ed9<code>pcolormesh</code>\u4e4b\u524d\u8bbe\u7f6e\u4e3a NaN\uff09\u5e76\u4e14\u8fd9\u4e9b\u8ba1\u6570\u503c\u5728\u8fd4\u56de\u7684\u8ba1\u6570\u76f4\u65b9\u56fe\u4e2d\u4e5f\u5c06\u8bbe\u7f6e\u4e3a nan\u3002</p> </li> </ol> <p><code>**kwargs</code>\u9644\u52a0\u53c2\u6570\u4f20\u9012\u7ed9<code>pcolormesh</code>\u65b9\u6cd5\u548c<code>QuadMesh</code>\u6784\u9020\u51fd\u6570\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.hist2d('sepal_length', 'sepal_width',\n          data=iris,\n\n          bins=[20, 20],\n          range=[[4.3, 7.9], [2, 4.4]],\n          weights=None,\n          density=True,\n          cmin=None,\n          cmax=None,\n\n          cmap='viridis',\n          norm=mpl.colors.Normalize(vmin=0, vmax=1)\n          )\n\"\"\"\n(array([[0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.61728395, 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.30864198, 0.30864198, 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.61728395, 0.30864198, 0.61728395, 0.61728395, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.30864198, 0.        , 0.30864198, 0.30864198, 0.30864198, 0.        , 0.        , 0.        , 0.61728395, 0.61728395, 0.61728395, 0.61728395, 0.61728395, 0.61728395, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.        , 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.30864198, 0.61728395, 0.        , 1.2345679 , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.30864198, 0.        , 0.30864198, 0.        , 0.        , 0.30864198, 0.        , 0.        ],\n        [0.        , 0.        , 0.30864198, 0.61728395, 0.30864198, 0.30864198, 0.        , 0.        , 0.30864198, 0.        , 0.        , 0.61728395, 0.30864198, 0.        , 0.30864198, 0.61728395, 0.        , 0.        , 0.30864198, 0.        ],\n        [0.        , 0.        , 0.        , 0.        , 0.61728395, 0.61728395, 0.92592593, 0.61728395, 0.92592593, 0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.30864198],\n        [0.        , 0.        , 0.        , 0.        , 0.        , 1.54320988, 0.30864198, 0.        , 0.61728395, 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.        , 0.        , 0.        ],\n        [0.        , 0.61728395, 0.        , 0.        , 0.        , 0.30864198, 0.        , 0.30864198, 0.30864198, 0.        , 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.30864198, 0.        , 0.        , 0.        , 0.30864198, 0.92592593, 0.61728395, 0.61728395, 0.        , 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.30864198, 0.        , 0.61728395, 0.61728395, 0.92592593, 0.61728395, 0.        , 0.30864198, 1.2345679 , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.30864198, 1.2345679 , 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.        , 0.        , 0.30864198, 0.        , 0.30864198, 0.        , 0.92592593, 0.92592593, 0.92592593, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.92592593, 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.30864198, 0.        , 0.30864198, 0.        , 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.30864198, 0.        , 0.61728395, 0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        ],\n        [0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.        , 0.30864198, 0.        , 0.        , 0.        , 0.        , 0.        ]]),\n array([4.3 , 4.48, 4.66, 4.84, 5.02, 5.2 , 5.38, 5.56, 5.74, 5.92, 6.1 ,\n        6.28, 6.46, 6.64, 6.82, 7.  , 7.18, 7.36, 7.54, 7.72, 7.9 ]),\n array([2.  , 2.12, 2.24, 2.36, 2.48, 2.6 , 2.72, 2.84, 2.96, 3.08, 3.2 ,\n        3.32, 3.44, 3.56, 3.68, 3.8 , 3.92, 4.04, 4.16, 4.28, 4.4 ]),\n &lt;matplotlib.collections.QuadMesh at 0x1dc122f4500&gt;)\n\"\"\"\n\nax.scatter('sepal_length', 'sepal_width', data=iris, c='r')\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#seabornhistplot","title":"Seaborn\uff1ahistplot","text":"<p>seaborn.histplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.histplot(data=None, *, x=None, y=None, hue=None, weights=None, stat='count', bins='auto', binwidth=None, binrange=None, discrete=None, cumulative=False, common_bins=True, common_norm=True, multiple='layer', element='bars', fill=True, shrink=1, kde=False, kde_kws=None, line_kws=None, thresh=0, pthresh=None, pmax=None, cbar=False, cbar_ax=None, cbar_kws=None, palette=None, hue_order=None, hue_norm=None, color=None, log_scale=None, legend=True, ax=None, **kwargs)</code></p> <p>\u7ed8\u5236\u5355\u53d8\u91cf\u6216\u53cc\u53d8\u91cf\u76f4\u65b9\u56fe\u4ee5\u663e\u793a\u6570\u636e\u96c6\u7684\u5206\u5e03\u3002\u76f4\u65b9\u56fe\u662f\u4e00\u79cd\u7ecf\u5178\u7684\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u901a\u8fc7\u8ba1\u6570\u843d\u5728\u79bb\u6563\u533a\u95f4\u5185\u7684\u89c2\u6d4b\u503c\u6570\u91cf\u6765\u8868\u793a\u4e00\u4e2a\u6216\u591a\u4e2a\u53d8\u91cf\u7684\u5206\u5e03\u3002\u6b64\u51fd\u6570\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u7bb1\u5185\u8ba1\u7b97\u7684\u7edf\u8ba1\u91cf\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u4ee5\u4f30\u8ba1\u9891\u7387\u3001\u5bc6\u5ea6\u6216\u6982\u7387\u8d28\u91cf\uff0c\u5e76\u4e14\u53ef\u4ee5\u6dfb\u52a0\u4f7f\u7528\u6838\u5bc6\u5ea6\u4f30\u8ba1\u5f97\u5230\u7684\u5e73\u6ed1\u66f2\u7ebf\uff0c\u7c7b\u4f3c\u4e8e<code>kdeplot()</code>\u3002</p> <ol> <li> <p>stat\uff1a\u6bcf\u4e2a\u7bb1\u4e2d\u8ba1\u7b97\u7684\u805a\u5408\u7edf\u8ba1\u91cf\u3002</p> </li> <li> <p><code>'count'</code>\uff08\u9ed8\u8ba4\uff09\uff1a\u663e\u793a\u6bcf\u4e2a\u7bb1\u4e2d\u7684\u89c2\u6d4b\u503c\u6570\u91cf\uff08\u9891\u6570\uff09\u3002</p> </li> <li> <p><code>'frequency'</code>\uff1a\u663e\u793a\u6bcf\u4e2a\u7bb1\u4e2d\u7684\u89c2\u6d4b\u503c\u6570\u91cf\u9664\u4ee5\u7bb1\u5bbd\uff08\u5bc6\u5ea6\uff09\u3002</p> </li> <li> <p><code>'probability'</code>/<code>'proportion'</code> \uff1a\u5f52\u4e00\u5316\uff0c\u4f7f\u6761\u5f62\u9ad8\u5ea6\u4e4b\u548c\u4e3a1\uff08\u5373\u663e\u793a**\u5c0f\u6570\u6982\u7387**\uff09\u3002</p> </li> <li> <p><code>'percent'</code> \uff1a\u5f52\u4e00\u5316\uff0c\u4f7f\u6761\u5f62\u9ad8\u5ea6\u4e4b\u548c\u4e3a100\uff08\u5373\u663e\u793a**\u767e\u5206\u6bd4\u6982\u7387**\uff09\u3002</p> </li> <li> <p><code>'density'</code> \uff1a\u5f52\u4e00\u5316\uff0c\u4f7f\u76f4\u65b9\u56fe\u7684\u603b\u9762\u79ef\u4e3a1\uff08\u5373\u663e\u793a**\u6982\u7387\u5bc6\u5ea6**\uff09\u3002</p> </li> <li> <p>**binwidth\uff1a**\u6bcf\u4e2a\u5206\u7bb1\u7684\u5bbd\u5ea6\uff0c\u8986\u76d6<code>bins</code>\uff0c\u4f46\u53ef\u4ee5\u4e0e<code>binrange</code>\u4e00\u8d77\u4f7f\u7528\u3002\u53ef\u4ee5\u662f\u4e00\u4e2a\u6570\u5b57\uff08\u5355\u53d8\u91cf\uff09\u6216\u4e00\u5bf9\u6570\u5b57\uff08\u53cc\u53d8\u91cf\uff09\u3002</p> </li> <li> <p>**binrange\uff1a**\u548c<code>bins</code>\u6216<code>binwidth</code>\u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u786e\u5b9a\u5206\u7bb1\u3002\u9ed8\u8ba4\u4e3a\u6570\u636e\u6781\u503c\u3002\u540c\u4e0a<code>range</code>\u53c2\u6570\u3002</p> </li> <li> <p>common_bins\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u5219\u5728\u8bed\u4e49\u53d8\u91cf\u4ea7\u751f\u591a\u4e2a\u56fe\u8868\u65f6**\u4f7f\u7528\u76f8\u540c\u7684bins\u3002\u5982\u679c\u4f7f\u7528\u53c2\u8003\u89c4\u5219\u6765\u786e\u5b9abins\uff0c\u5b83\u5c06\u4f7f\u7528\u5b8c\u6574\u6570\u636e\u96c6\u8fdb\u884c\u8ba1\u7b97\u3002</p> </li> <li> <p>common_norm\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff08\u9ed8\u8ba4\uff09\u5e76\u4e14\u4f7f\u7528\u5f52\u4e00\u5316\u7edf\u8ba1\u91cf\uff0c\u5219**\u5f52\u4e00\u5316\u5c06\u5e94\u7528\u4e8e\u6574\u4e2a\u6570\u636e\u96c6\u3002\u5426\u5219\uff0c\u72ec\u7acb\u5730\u5bf9\u6bcf\u4e2a\u76f4\u65b9\u56fe\u8fdb\u884c\u5f52\u4e00\u5316\u3002</p> </li> </ol> <p><code>**kwargs</code>\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u5c06\u4f20\u9012\u7ed9\u4ee5\u4e0b matplotlib \u51fd\u6570\u4e4b\u4e00\uff1a<code>matplotlib.axes.Axes.bar()</code>\uff08\u5355\u53d8\u91cf\uff0c<code>element='bars'</code>\uff09</p> <p>\u3001<code>matplotlib.axes.Axes.fill_between()</code>\uff08\u5355\u53d8\u91cf\uff0c\u5176\u4ed6<code>element</code>\uff0c<code>fill=True</code>\uff09\u3001<code>matplotlib.axes.Axes.plot()</code>\uff08\u5355\u53d8\u91cf\uff0c\u5176\u4ed6<code>element</code>\uff0c<code>fill=False</code>\uff09\u3001<code>matplotlib.axes.Axes.pcolormesh()</code>\uff08\u53cc\u53d8\u91cf\uff09\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#_4","title":"\u5355\u53d8\u91cf","text":"<ol> <li> <p>element\uff1a**\u5206\u5e03\u7edf\u8ba1\u56fe\u7684\u53ef\u89c6\u5316\u8868\u793a\u3002**\u4ec5\u9002\u7528\u4e8e\u5355\u53d8\u91cf\u6570\u636e\u3002\u53ef\u9009<code>'bars'</code>\uff08\u9ed8\u8ba4\uff09, <code>'step'</code>, <code>'poly'</code>\u3002</p> </li> <li> <p>fill\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u5219\u586b\u5145\u76f4\u65b9\u56fe\u4e0b\u7684\u7a7a\u95f4\u3002**\u4ec5\u9002\u7528\u4e8e\u5355\u53d8\u91cf\u6570\u636e\u3002</p> </li> <li> <p>shrink\uff1a**\u5c06\u6bcf\u4e2a\u67f1\u7684\u5bbd\u5ea6\u76f8\u5bf9\u4e8e\u7bb1\u5bbd\u6309\u6b64\u56e0\u5b50\u7f29\u653e\u3002**\u4ec5\u9002\u7528\u4e8e\u5355\u53d8\u91cf\u6570\u636e\u3002\u540c\u4e0a<code>rwidth</code>\u53c2\u6570\u3002\u9ed8\u8ba4\u4e3a1\u3002</p> </li> <li> <p>kde\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u8ba1\u7b97\u6838\u5bc6\u5ea6\u4f30\u8ba1\u4ee5\u5e73\u6ed1\u5206\u5e03\uff0c\u5e76\u5728\u56fe\u4e2d\u4ee5\uff08\u4e00\u6761\u6216\u591a\u6761\uff09\u7ebf\u663e\u793a\u3002\u9ed8\u8ba4<code>False</code>\u3002**\u4ec5\u9002\u7528\u4e8e\u5355\u53d8\u91cf\u6570\u636e\u3002</p> </li> <li> <p>**kde_kws\uff1a**\u63a7\u5236KDE\u8ba1\u7b97\u7684\u53c2\u6570\u5b57\u5178\uff0c\u89c1<code>kdeplot()</code>\u3002</p> </li> <li> <p>**line_kws\uff1a**\u63a7\u5236KDE\u53ef\u89c6\u5316\u7684\u53c2\u6570\u5b57\u5178\uff0c\u4f20\u9012\u7ed9<code>matplotlib.axes.Axes.plot()</code>\u3002</p> </li> <li> <p>multiple\uff1a**\u89e3\u51b3\u5f53\u8bed\u4e49\u6620\u5c04\u521b\u5efa\u5b50\u96c6\u65f6\u591a\u4e2a\u5143\u7d20\u7684\u65b9\u6cd5\u3002**\u4ec5\u9002\u7528\u4e8e\u5355\u53d8\u91cf\u6570\u636e\u3002\u53ef\u9009<code>'layer'</code>\uff08\u9ed8\u8ba4\uff09, <code>'dodge'</code>, <code>'stack'</code>, <code>'fill'</code>\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.histplot(data=iris,\n             x=\"sepal_length\",\n             # y=\"sepal_length\",\n\n             stat=\"count\",\n             cumulative=False,\n\n             bins=20,\n             binwidth=None,\n             binrange=(4.3, 7.9),\n             weights=np.full(150, fill_value=2),\n\n             element='bars',\n             fill=True,\n             color='#9673f9',\n             shrink=1,\n\n             kde=True,\n             kde_kws=None,\n             line_kws={'linestyle': '--',\n                       'linewidth': 2},\n\n             log_scale=False,\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='sepal_length', ylabel='Count'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.histplot(data=iris,\n             x=\"sepal_length\",\n             # y=\"sepal_length\",\n\n             stat=\"density\",\n             cumulative=False,\n\n             hue=\"species\",\n             hue_order=[\"versicolor\", \"setosa\", \"virginica\"],\n             palette={\"versicolor\": '#9673f9', \"setosa\": '#00f9bb', \"virginica\": '#98f907'},\n             multiple=\"layer\",\n             common_bins=True,\n             common_norm=True,\n\n             bins=20,\n             binwidth=None,\n             binrange=None,\n             weights=None,\n\n             element='bars',\n             fill=True,\n             shrink=1,\n\n             kde=True,\n             kde_kws=None,\n             line_kws={'linestyle': '--',\n                       'linewidth': 2},\n\n             log_scale=False,\n             legend=True,\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='sepal_length', ylabel='Density'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#_5","title":"\u53cc\u53d8\u91cf","text":"<ol> <li> <p>thresh\uff1a**\u7edf\u8ba1\u91cf\u5c0f\u4e8e\u6216\u7b49\u4e8e\u6b64\u503c\u7684\u5355\u5143\u683c\u5c06\u53d8\u4e3a\u900f\u660e\u3002**\u4ec5\u9002\u7528\u4e8e\u53cc\u53d8\u91cf\u6570\u636e\u3002</p> </li> <li> <p>pthresh\uff1a**\u4e0e<code>thresh</code>\u76f8\u4f3c\uff0c\u4f46\u53d6\u503c[0, 1]\u533a\u95f4\u3002\u7edf\u8ba1\u91cf\u5c0f\u4e8e\u6216\u7b49\u4e8e\u603b\u548c\u7684\u8fd9\u4e00\u6bd4\u4f8b\u7684\u5355\u5143\u683c\u5c06\u53d8\u4e3a\u900f\u660e\u3002**\u4ec5\u9002\u7528\u4e8e\u53cc\u53d8\u91cf\u6570\u636e\u3002</p> </li> <li> <p>pmax\uff1a**\u4e00\u4e2a\u4f4d\u4e8e[0, 1]\u4e4b\u95f4\u7684\u503c\uff0c\u7528\u4e8e\u8bbe\u7f6e\u989c\u8272\u6620\u5c04\u7684\u9971\u548c\u5ea6\u70b9\uff0c\u4f7f\u5f97\u4f4e\u4e8e\u6b64\u503c\u7684\u5355\u5143\u683c\u6784\u6210\u7edf\u8ba1\u91cf\u603b\u548c\u7684\u6b64\u6bd4\u4f8b\u3002**\u4ec5\u9002\u7528\u4e8e\u53cc\u53d8\u91cf\u6570\u636e\u3002</p> </li> <li> <p>cbar\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u5728\u53cc\u53d8\u91cf\u56fe\u4e2d\u6dfb\u52a0\u989c\u8272\u6761\u4ee5\u6ce8\u91ca\u989c\u8272\u6620\u5c04\u3002\u6ce8\u610f\uff1a\u76ee\u524d\u4e0d\u652f\u6301\u5177\u6709<code>hue</code>\u53d8\u91cf\u7684\u56fe\u8868\u3002**\u4ec5\u9002\u7528\u4e8e\u53cc\u53d8\u91cf\u6570\u636e\u3002</p> </li> <li> <p>**cbar_ax\uff1a**\u9884\u5148\u5b58\u5728\u7684\u653e\u7f6e\u989c\u8272\u6761\u7684Axes\u3002</p> </li> <li> <p>**cbar_kws\uff1a**\u4f20\u9012\u7ed9<code>matplotlib.figure.Figure.colorbar()</code>\u7684\u9644\u52a0\u53c2\u6570\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.histplot(data=iris,\n             x=\"sepal_length\",\n             y=\"sepal_width\",\n\n             stat=\"density\",\n\n             bins=[20, 20],\n             binwidth=None,\n             binrange=None,\n             weights=None,\n\n             cmap='viridis',\n             vmin=0,\n             vmax=1,\n\n             thresh=0.30864198,\n             pthresh=None,\n             pmax=None,\n\n             cbar=True,\n             cbar_ax=None,\n             cbar_kws={'label': 'Density',\n                       'orientation': 'horizontal'},\n\n             log_scale=False,\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='sepal_length', ylabel='sepal_width'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.histplot(data=iris,\n             x=\"sepal_length\",\n             y=\"sepal_width\",\n\n             stat=\"density\",\n\n             hue=\"species\",\n             hue_order=[\"versicolor\", \"setosa\", \"virginica\"],\n             palette={\"versicolor\": '#9673f9', \"setosa\": '#00f9bb', \"virginica\": '#98f907'},\n             common_bins=True,\n             common_norm=True,\n\n             bins=[20, 20],\n             binwidth=None,\n             binrange=None,\n             weights=None,\n\n             vmin=0,\n             vmax=1,\n\n             thresh=0,\n             pthresh=None,\n             pmax=None,\n\n             cbar=True,\n             cbar_ax=None,\n             cbar_kws={'label': 'Density',\n                       'orientation': 'horizontal'},\n\n             log_scale=False,\n             legend=True,\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='sepal_length', ylabel='sepal_width'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#_6","title":"\u79bb\u6563\u53d8\u91cf","text":"<p>**discrete\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u9ed8\u8ba4<code>binwidth=1</code>\u5e76\u5c06\u6761\u5f62\u7ed8\u5236\u5728\u5176\u5bf9\u5e94\u6570\u636e\u70b9\u7684\u4e2d\u5fc3\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4f7f\u7528\u79bb\u6563\uff08\u6574\u6570\uff09\u6570\u636e\u65f6\u53ef\u80fd\u51fa\u73b0\u7684\u201c\u95f4\u9699\u201d\u3002\u53ef\u9002\u7528\u4e8e\u79bb\u6563\u5206\u5e03\uff0c\u5982\u4e8c\u9879\u5206\u5e03\u7684\u7ed8\u5236\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.histplot(x=np.linspace(0, 10, 11),\n\n             stat=\"count\",\n             cumulative=False,\n             discrete=True,\n\n             weights=[0.00097656, 0.00976563, 0.04394531, 0.1171875 , 0.20507812, 0.24609375, 0.20507812, 0.1171875 , 0.04394531, 0.00976563, 0.00097656],\n\n             element='bars',\n             fill=True,\n             color='#9673f9',\n             shrink=1,\n\n             kde=True,\n             kde_kws=None,\n             line_kws={'linestyle': '--',\n                       'linewidth': 2},\n\n             log_scale=False,\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: ylabel='Count'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#seabornkdeplot","title":"Seaborn\uff1akdeplot","text":"<p>seaborn.kdeplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.kdeplot(data=None, *, x=None, y=None, hue=None, weights=None, palette=None, hue_order=None, hue_norm=None, color=None, fill=None, multiple='layer', common_norm=True, common_grid=False, cumulative=False, bw_method='scott', bw_adjust=1, warn_singular=True, log_scale=None, levels=10, thresh=0.05, gridsize=200, cut=3, clip=None, legend=True, cbar=False, cbar_ax=None, cbar_kws=None, ax=None, **kwargs)</code></p> <p>\u4f7f\u7528\u6838\u5bc6\u5ea6\u4f30\u8ba1\u7ed8\u5236\u5355\u53d8\u91cf\u6216\u53cc\u53d8\u91cf\u5206\u5e03\u3002\u6838\u5bc6\u5ea6\u4f30\u8ba1\uff08KDE\uff09\u56fe\u662f\u4e00\u79cd\u53ef\u89c6\u5316\u6570\u636e\u96c6\u4e2d\u89c2\u6d4b\u503c\u5206\u5e03\u7684\u65b9\u6cd5\uff0c\u7c7b\u4f3c\u4e8e\u76f4\u65b9\u56fe\u3002KDE \u901a\u8fc7\u4e00\u4e2a\u6216\u591a\u4e2a\u7ef4\u5ea6\u7684\u8fde\u7eed\u6982\u7387\u5bc6\u5ea6\u66f2\u7ebf\u6765\u8868\u793a\u6570\u636e\u3002\u76f8\u5bf9\u4e8e\u76f4\u65b9\u56fe\uff0c\u6838\u5bc6\u5ea6\u4f30\u8ba1\uff08KDE\uff09\u53ef\u4ee5\u751f\u6210\u66f4\u6e05\u6670\u3001\u66f4\u6613\u7406\u89e3\u7684\u56fe\u8868\uff0c\u5c24\u5176\u662f\u5728\u7ed8\u5236\u591a\u4e2a\u5206\u5e03\u65f6\u3002\u4f46\u5982\u679c\u57fa\u7840\u5206\u5e03\u6709\u754c\u6216\u4e0d\u5e73\u6ed1\uff0c\u5219\u6709\u53ef\u80fd\u5f15\u5165\u626d\u66f2\u3002\u4e0e\u76f4\u65b9\u56fe\u4e00\u6837\uff0c\u8868\u793a\u8d28\u91cf\u4e5f\u53d6\u51b3\u4e8e\u9009\u62e9\u5408\u9002\u7684\u5e73\u6ed1\u53c2\u6570\u3002</p> <ol> <li> <p>**bw_method\uff1a**\u8ba1\u7b97\u4f30\u8ba1\u5e26\u5bbd\uff08bandwidth\uff09\u6240\u4f7f\u7528\u7684\u65b9\u6cd5\u540d\u79f0\u6216\u7f29\u653e\u56e0\u5b50\uff0c\u4f20\u9012\u7ed9<code>scipy.stats.gaussian_kde</code> \u3002\u5982\u679c\u662f\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u5219\u76f4\u63a5\u7528\u4f5c<code>kde.factor</code> \u3002\u5982\u679c\u662f\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u51fd\u6570\uff0c\u5219\u5b83\u5e94\u8be5\u53ea\u63a5\u53d7\u4e00\u4e2a <code>matplotlib.mlab.GaussianKDE</code>\u5b9e\u4f8b\u4f5c\u4e3a\u5176\u552f\u4e00\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6d6e\u70b9\u6570\u3002\u5b57\u7b26\u4e32\u53ef\u9009<code>'scott'</code>\uff08\u9ed8\u8ba4\uff09, <code>'silverman'</code>\u3002</p> </li> <li> <p>**cumulative\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u4f30\u8ba1\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\u3002</p> </li> <li> <p>**gridsize\uff1a**\u6bcf\u4e2a\u4f30\u8ba1\u7f51\u683c\u7ef4\u5ea6\u4e0a\u7684\u70b9\u6570\u3002</p> </li> <li> <p>**bw_adjust\uff1a**\u7528\u4e58\u6cd5\u5bf9\u4f7f\u7528<code>bw_method</code>\u6240\u9009\u62e9\u7684\u503c\u8fdb\u884c\u7f29\u653e\u7684\u56e0\u5b50\u3002\u589e\u52a0\u5c06\u4f7f\u66f2\u7ebf\u66f4\u5e73\u6ed1\u3002</p> </li> <li> <p>**cut\uff1a**\u4e58\u4ee5\u5e73\u6ed1\u5e26\u5bbd\u7684\u56e0\u5b50\uff0c\u51b3\u5b9a\u4e86\u4f30\u8ba1\u7f51\u683c\u5ef6\u4f38\u5230\u6781\u7aef\u6570\u636e\u70b9\u5916\u7684\u8ddd\u79bb\u3002\u5f53\u8bbe\u7f6e\u4e3a0\u65f6\uff0c\u5728\u6570\u636e\u9650\u5236\u5904\u622a\u65ad\u66f2\u7ebf\u3002</p> </li> <li> <p>**clip\uff1a**\u4f30\u8ba1\u4e0e\u7ed8\u5236\u8303\u56f4\u3002</p> </li> <li> <p>**fill\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u586b\u5145\u5355\u53d8\u91cf\u5bc6\u5ea6\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\u6216\u53cc\u53d8\u91cf\u8f6e\u5ed3\u4e4b\u95f4\u7684\u9762\u79ef\u3002\u5982\u679c\u4e3a<code>None</code>\uff0c\u5219\u9ed8\u8ba4\u503c\u53d6\u51b3\u4e8e<code>multiple</code>\u53c2\u6570\u3002</p> </li> <li> <p>**common_norm\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u5c06\u6bcf\u4e2a\u6761\u4ef6\u5bc6\u5ea6\u6309\u89c2\u6d4b\u6570\u7f29\u653e\uff0c\u4f7f\u5f97\u6240\u6709\u5bc6\u5ea6\u4e0b\u7684\u603b\u9762\u79ef\u52a0\u8d77\u6765\u4e3a1\u3002\u5426\u5219\uff0c\u72ec\u7acb\u5730\u5f52\u4e00\u5316\u6bcf\u4e2a\u5bc6\u5ea6\u3002</p> </li> <li> <p>**warn_singular\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u5728\u5c1d\u8bd5\u4f30\u8ba1\u5177\u6709\u96f6\u65b9\u5dee\u7684\u6570\u636e\u5bc6\u5ea6\u65f6\u53d1\u51fa\u8b66\u544a\u3002</p> </li> </ol> <p><code>**kwargs</code>\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u5c06\u4f20\u9012\u7ed9\u4ee5\u4e0b matplotlib \u51fd\u6570\u4e4b\u4e00\uff1a<code>matplotlib.axes.Axes.plot()</code>\uff08\u5355\u53d8\u91cf\uff0c<code>fill=False</code>\uff09\u3001<code>matplotlib.axes.Axes.fill_between()</code>\uff08\u5355\u53d8\u91cf\uff0c<code>fill=True</code>\uff09\u3001<code>matplotlib.axes.Axes.contour()</code>\uff08\u53cc\u53d8\u91cf\uff0c <code>fill=False</code>\uff09\u3001<code>matplotlib.axes.contourf()</code>\uff08\u53cc\u53d8\u91cf\uff0c<code>fill=True</code>\uff09\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#_7","title":"\u5355\u53d8\u91cf","text":"<ol> <li> <p>multiple\uff1a**\u89e3\u51b3\u5f53\u8bed\u4e49\u6620\u5c04\u521b\u5efa\u5b50\u96c6\u65f6\u591a\u4e2a\u5143\u7d20\u7684\u65b9\u6cd5\u3002**\u4ec5\u9002\u7528\u4e8e\u5355\u53d8\u91cf\u6570\u636e\u3002\u53ef\u9009<code>'layer'</code>\uff08\u9ed8\u8ba4\uff09, <code>'stack'</code>, <code>'fill'</code>\u3002</p> </li> <li> <p>common_grid\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u5bf9\u6bcf\u4e2a\u6838\u5bc6\u5ea6\u4f30\u8ba1\u4f7f\u7528\u76f8\u540c\u7684\u4f30\u8ba1\u7f51\u683c\u3002**\u4ec5\u9002\u7528\u4e8e\u5355\u53d8\u91cf\u6570\u636e\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.histplot(data=iris,\n             x=\"sepal_length\",\n             # y=\"sepal_length\",\n\n             stat=\"density\",\n             bins=20,\n             color='#9673f9',\n             ax=ax\n             )\nsns.kdeplot(data=iris,\n            x=\"sepal_length\",\n            # y=\"sepal_length\",\n\n            bw_method='scott',\n            cumulative=False,\n            gridsize=1000,\n            weights=None,\n            bw_adjust=0.5,\n            cut=0,\n            clip=None,\n\n            fill=True,\n            color='#9673f9',\n\n            warn_singular=True,\n            log_scale=False,\n            ax=ax\n            )\n\"\"\"\n&lt;Axes: xlabel='sepal_length', ylabel='Density'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.histplot(data=iris,\n             x=\"sepal_length\",\n             # y=\"sepal_length\",\n\n             hue=\"species\",\n             hue_order=[\"versicolor\", \"setosa\", \"virginica\"],\n             palette={\"versicolor\": '#9673f9', \"setosa\": '#00f9bb', \"virginica\": '#98f907'},\n\n             stat=\"density\",\n             bins=20,\n             ax=ax\n             )\nsns.kdeplot(data=iris,\n            x=\"sepal_length\",\n            # y=\"sepal_length\",\n\n            bw_method='scott',\n            cumulative=False,\n            gridsize=1000,\n            weights=None,\n            bw_adjust=0.5,\n            cut=0,\n            clip=None,\n\n            hue=\"species\",\n            hue_order=[\"versicolor\", \"setosa\", \"virginica\"],\n            palette={\"versicolor\": '#9673f9', \"setosa\": '#00f9bb', \"virginica\": '#98f907'},\n            multiple='layer',\n            common_norm=True,\n            common_grid=False,\n\n            fill=True,\n\n            warn_singular=True,\n            log_scale=False,\n            legend=True,\n            ax=ax\n            )\n\"\"\"\n&lt;Axes: xlabel='sepal_length', ylabel='Density'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#_8","title":"\u53cc\u53d8\u91cf","text":"<p>\u53cc\u53d8\u91cf\u7684\u6838\u5bc6\u5ea6\u4f30\u8ba1\u56fe\u62df\u5408\u7684\u662f\u6982\u7387\u5bc6\u5ea6\u7684\u7b49\u9ad8\u7ebf\uff08\u7b49\u5bc6\u5ea6\uff09\u56fe\u3002\u7ed3\u5408\u524d\u9762\u5bf9\u53cc\u53d8\u91cf\u76f4\u65b9\u56fe\u7684\u62bd\u8c61\u4e09\u7ef4\u7a7a\u95f4\u7406\u89e3\uff0c\u8fd9\u91cc\u5c31\u662f\u5bf9\u4e09\u7ef4\u7a7a\u95f4\u67f1\u7ed8\u5236\u7684\u7b49\u9ad8\u7ebf\u56fe\uff0c\u5c31\u50cf\u5730\u7406\u4e0a\u5bf9\u5c71\u4e18\u7b49\u7ed8\u5236\u7684\u6d77\u62d4\u7b49\u9ad8\u7ebf\u56fe\uff0c\u800c\u8fd9\u91cc\u6bcf\u6761\u7b49\u9ad8\u7ebf\u4ee3\u8868\u7684\u662f\u540c\u4e00\u6982\u7387\u5bc6\u5ea6\uff08\u4e09\u7ef4\u7a7a\u95f4\u67f1\u7684\u9ad8\u5ea6\uff09\u3002\u53cc\u53d8\u91cf\u5bc6\u5ea6\u7b49\u9ad8\u7ebf\u7684\u542b\u4e49\u4e0d\u592a\u76f4\u89c2\u3002\u56e0\u4e3a\u5bc6\u5ea6\u4e0d\u80fd\u76f4\u63a5\u89e3\u91ca\uff0c\u7b49\u9ad8\u7ebf\u7ed8\u5236\u5728\u5bc6\u5ea6\u7684\u7b49\u6bd4\u4f8b\u5904\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u6761\u7b49\u9ad8\u7ebf\u90fd\u8868\u793a\u4e00\u4e2a\u7b49\u503c\u9762\uff0c\u8be5\u6bd4\u4f8b\u662f\u8be5\u7b49\u9ad8\u9762\u4ee5\u4e0b\u7684\u4f53\u79ef\u603b\u548c\uff08\u6982\u7387\uff09\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u7b49\u6bd4\u4f8b\u6c34\u5e730.05\u7684\u7b49\u9ad8\u7ebf\uff0c\u5176\u9ad8\u5ea6\u503c\u4e3a\u5bf9\u5e94\u7684\u6982\u7387\u5bc6\u5ea6\uff0c\u800c\u8be5\u9ad8\u5ea6\u4ee5\u4e0b\u7684\u4f53\u79ef\u603b\u548c\u4e3a0.05\uff0c\u4ee5\u4e0a\u4e3a0.95\uff0c\u4ece\u4e8c\u7ef4\u5e73\u9762\u6765\u770b\uff0c\u53ef\u4ee5\u8fd1\u4f3c\u4e8e\u8ba4\u4e3a\uff0c\u7b49\u9ad8\u7ebf\u5916\u6570\u636e\u5206\u5e03\u53605%\uff0c\u800c\u7ebf\u5185\u536095%\u3002</p> <ol> <li> <p>levels\uff1a**\u7b49\u9ad8\u7ebf\u6c34\u5e73\u6570\u91cf\u6216\u8981\u7ed8\u5236\u7684\u7b49\u9ad8\u7ebf\u7b49\u6bd4\u4f8b\u6c34\u5e73\u5411\u91cf\uff08\u5fc5\u987b\u5728[0, 1]\u8303\u56f4\u5185\u9012\u589e\uff09\u3002**\u4ec5\u9002\u7528\u4e8e\u53cc\u53d8\u91cf\u6570\u636e\u3002</p> </li> <li> <p>thresh\uff1a**\u7ed8\u5236\u7b49\u9ad8\u7ebf\u7684\u6700\u4f4e\u7b49\u6bd4\u4f8b\u6c34\u5e73\u3002\u5f53<code>levels</code>\u4e3a\u5411\u91cf\u65f6\u5c06\u88ab\u5ffd\u7565\u3002**\u4ec5\u9002\u7528\u4e8e\u53cc\u53d8\u91cf\u6570\u636e\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\na = sns.kdeplot(data=iris,\n                x=\"sepal_length\",\n                y=\"sepal_width\",\n\n                bw_method='scott',\n                cumulative=False,\n                gridsize=500,\n                weights=None,\n                bw_adjust=1,\n                cut=3,\n                clip=None,\n\n                levels=10,\n                thresh=0.05,\n                cbar=True,\n                cbar_ax=None,\n                cbar_kws={'label': 'Density',\n                          'orientation': 'horizontal'},\n\n                fill=True,\n                cmap='viridis',\n                norm=mpl.colors.Normalize(vmin=0, vmax=0.5),\n\n                warn_singular=True,\n                log_scale=False,\n                ax=ax\n                )\n\"\"\"\n&lt;Axes: xlabel='sepal_length', ylabel='sepal_width'&gt;\n\"\"\"\nsns.scatterplot(data=iris, x=\"sepal_length\", y=\"sepal_width\", ax=ax)\n\nax.clabel(a.get_children()[0],\n          fontsize=10,\n          colors='r',\n          inline=False,\n          inline_spacing=5,\n          fmt=lambda x: f'{x:.2f}',\n          rightside_up=True,\n          )\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\na = sns.kdeplot(data=iris,\n                x=\"sepal_length\",\n                y=\"sepal_width\",\n\n                bw_method='scott',\n                cumulative=False,\n                gridsize=500,\n                weights=None,\n                bw_adjust=1,\n                cut=3,\n                clip=None,\n\n                hue=\"species\",\n                hue_order=[\"versicolor\", \"setosa\", \"virginica\"],\n                palette={\"versicolor\": '#9673f9', \"setosa\": '#00f9bb', \"virginica\": '#98f907'},\n                common_norm=True,\n                common_grid=False,\n\n                levels=10,\n                thresh=0.05,\n                cbar=True,\n                cbar_ax=None,\n                cbar_kws={'label': 'Density',\n                          'orientation': 'horizontal'},\n\n                fill=True,\n                alpha=0.5,\n\n                warn_singular=True,\n                log_scale=False,\n                legend=True,\n                ax=ax\n                )\n\"\"\"\n&lt;Axes: xlabel='sepal_length', ylabel='sepal_width'&gt;\n\"\"\"\nsns.scatterplot(data=iris, x=\"sepal_length\", y=\"sepal_width\",\n                hue='species',\n                hue_order=[\"versicolor\", \"setosa\", \"virginica\"],\n                palette={\"versicolor\": '#9673f9', \"setosa\": '#00f9bb', \"virginica\": '#98f907'},\n                ax=ax)\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%9B%B4%E6%96%B9%E5%9B%BE%EF%BC%88hist%E3%80%81hist2d%E3%80%81histplot%EF%BC%89%E3%80%81%E6%A0%B8%E5%AF%86%E5%BA%A6%E5%9B%BE%EF%BC%88kdeplot%EF%BC%89%E3%80%81%E7%B4%AF%E8%AE%A1%E6%9B%B2%E7%BA%BF%E5%9B%BE%EF%BC%88ecdfplot%EF%BC%89/#seabornecdfplot","title":"Seaborn\uff1aecdfplot","text":"<p>seaborn.ecdfplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.ecdfplot(data=None, *, x=None, y=None, hue=None, weights=None, stat='proportion', complementary=False, palette=None, hue_order=None, hue_norm=None, log_scale=None, legend=True, ax=None, **kwargs)</code></p> <p>\u7ed8\u5236\u7ecf\u9a8c\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\u3002ECDF \u8868\u793a\u843d\u5728\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u552f\u4e00\u503c\u4ee5\u4e0b\u7684\u89c2\u6d4b\u503c\u7684\u6bd4\u4f8b\u6216\u8ba1\u6570\u3002\u4e0e\u76f4\u65b9\u56fe\u6216\u5bc6\u5ea6\u56fe\u76f8\u6bd4\uff0c\u5b83\u7684\u4f18\u70b9\u662f\u6bcf\u4e2a\u89c2\u6d4b\u503c\u90fd\u76f4\u63a5\u53ef\u89c6\u5316\uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u9700\u8981\u8c03\u6574\u4efb\u4f55\u5206\u7bb1\u6216\u5e73\u6ed1\u53c2\u6570\u3002\u5b83\u8fd8\u6709\u52a9\u4e8e\u76f4\u63a5\u6bd4\u8f83\u591a\u4e2a\u5206\u5e03\u3002\u7f3a\u70b9\u662f\uff0c\u56fe\u8868\u7684\u5916\u89c2\u4e0e\u5206\u5e03\u7684\u57fa\u672c\u5c5e\u6027\uff08\u5982\u4e2d\u5fc3\u8d8b\u52bf\u3001\u65b9\u5dee\u548c\u662f\u5426\u5b58\u5728\u53cc\u5cf0\u6027\uff09\u4e4b\u95f4\u7684\u5173\u7cfb\u53ef\u80fd\u4e0d\u90a3\u4e48\u76f4\u89c2\u3002</p> <p>**stat\uff1a**\u8981\u8ba1\u7b97\u7684\u5206\u5e03\u7edf\u8ba1\u91cf\u3002\u53ef\u9009<code>\"proportion\"</code>\uff08\u9ed8\u8ba4\uff09\uff0c<code>\"percent\"</code>\uff0c<code>\"count\"</code>\u3002</p> <p><code>**kwargs</code>\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9 <code>matplotlib.axes.Axes.plot()</code> \u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.ecdfplot(data=iris,\n             x=\"sepal_length\",\n             # y=\"sepal_length\",\n\n             stat='proportion',\n             weights=None,\n             complementary=False,\n\n             hue=\"species\",\n             hue_order=[\"versicolor\", \"setosa\", \"virginica\"],\n             palette={\"versicolor\": '#9673f9', \"setosa\": '#00f9bb', \"virginica\": '#98f907'},\n\n             log_scale=False,\n             legend=True,\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='sepal_length', ylabel='Proportion'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%BB%BC%E5%90%88%EF%BC%88displot%EF%BC%89/","title":"\u7efc\u5408\uff08displot\uff09","text":"<p>tips.csv</p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\ntips = pd.read_csv('../Data/tips.csv')\n</code></pre> <p></p> <p>seaborn.displot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.displot(data=None, *, x=None, y=None, hue=None, row=None, col=None, weights=None, kind='hist', rug=False, rug_kws=None, log_scale=None, legend=True, palette=None, hue_order=None, hue_norm=None, color=None, col_wrap=None, row_order=None, col_order=None, height=5, aspect=1, facet_kws=None, **kwargs)</code></p> <p>\u7528\u4e8e\u5728FacetGrid\u4e0a\u7ed8\u5236Figure\u7ea7\u5206\u5e03\u5173\u7cfb\u56fe\u7ed8\u56fe\u51fd\u6570\u3002\u6b64\u51fd\u6570\u63d0\u4f9b\u4e86\u8bbf\u95ee\u591a\u79cd\u53ef\u89c6\u5316\u5355\u53d8\u91cf\u6216\u53cc\u53d8\u91cf\u6570\u636e\u5206\u5e03\u7684\u65b9\u6cd5\uff0c\u5305\u62ec\u7531\u8bed\u4e49\u6620\u5c04\u5b9a\u4e49\u7684\u6570\u636e\u5b50\u96c6\u4ee5\u53ca\u8de8\u591a\u4e2a\u5b50\u56fe\u7684\u5206\u9762\u3002<code>kind</code>\u53c2\u6570\u7528\u4e8e\u9009\u62e9\u8981\u4f7f\u7528\u7684\u5e95\u5c42Axes\u7ea7\u51fd\u6570\uff1a</p> <ol> <li> <p><code>histplot()</code>\uff08<code>kind=\"hist\"</code>\uff0c\u9ed8\u8ba4\uff09</p> </li> <li> <p><code>kdeplot()</code>\uff08<code>kind=\"kde\"</code>\uff09</p> </li> <li> <p><code>ecdfplot()</code>\uff08<code>kind='ecdf'</code>\uff0c\u4ec5\u9650\u5355\u53d8\u91cf\uff09</p> </li> </ol> <p>\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u5411\u4efb\u4f55\u7c7b\u578b\u7684\u56fe\u8868\u4e2d\u6dfb\u52a0<code>rugplot()</code>\u4ee5\u663e\u793a\u5355\u4e2a\u89c2\u6d4b\u503c\u3002\u989d\u5916\u7684\u5173\u952e\u5b57\u53c2\u6570<code>**kwargs</code>\u4f1a\u88ab\u4f20\u9012\u7ed9\u8fd9\u4e9b\u5e95\u5c42\u51fd\u6570\u3002\u7ed8\u56fe\u540e\uff0c\u8fd4\u56de\u4e0e\u7ed8\u56fe\u76f8\u5173\u7684<code>FacetGrid</code>\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u8c03\u6574\u8f85\u52a9\u7ed8\u56fe\u7ec6\u8282\u6216\u6dfb\u52a0\u5176\u4ed6\u5c42\u3002</p> <ol> <li> <p>**rug\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u7528<code>rugplot()</code>\u663e\u793a\u6bcf\u4e2a\u89c2\u6d4b\u503c\u3002</p> </li> <li> <p>rug_kws\uff1a<code>rugplot()</code>\u53c2\u6570\u5b57\u5178\u3002</p> </li> </ol> <pre><code>sns.displot(data=tips,\n            x='total_bill',\n            # y='total_bill',\n            kind='hist',\n            stat='density',\n            kde=True,\n            rug=True,\n\n            hue='smoker',\n            hue_order=['Yes', 'No'],\n            palette={\"Yes\": \"#facc87\", \"No\": \"#b1fa87\"},\n\n            row='time',\n            row_order=[\"Lunch\", \"Dinner\"],\n            col='sex',\n            col_order=['Female', 'Male'],\n\n            height=6,\n            aspect=1.5,\n            facet_kws={'sharex': True,\n                       'sharey': True,\n                       'margin_titles': True,\n                       'legend_out': True,\n                       'despine': True}\n            )\n\"\"\"\n&lt;seaborn.axisgrid.FacetGrid at 0x1f6dc19e030&gt;\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E8%BD%B4%E9%A1%BB%E5%9B%BE%EF%BC%88eventplot%E3%80%81rugplot%EF%BC%89/","title":"\u8f74\u987b\u56fe\uff08eventplot\u3001rugplot\uff09","text":"<p>iris.csv</p> <p></p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\niris = pd.read_csv('../Data/iris.csv')\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E8%BD%B4%E9%A1%BB%E5%9B%BE%EF%BC%88eventplot%E3%80%81rugplot%EF%BC%89/#matplotlibeventplot","title":"Matplotlib\uff1aeventplot","text":"<p>matplotlib.axes.Axes.eventplot \u2014 Matplotlib 3.10.1 documentation</p> <p><code>eventplot(positions, *, orientation='horizontal', lineoffsets=1, linelengths=1, linewidths=None, colors=None, alpha=None, linestyles='solid', data=None, **kwargs)</code></p> <p>\u5728\u7ed9\u5b9a\u4f4d\u7f6e\u7ed8\u5236\u76f8\u540c\u7684\u5e73\u884c\u7ebf\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u56fe\u8868\u5728\u795e\u7ecf\u79d1\u5b66\u4e2d\u5e38\u7528\u4e8e\u8868\u793a\u795e\u7ecf\u4e8b\u4ef6\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u5c16\u5cf0\u9635\u5217\u3001\u70b9\u9635\u5217\u6216\u9635\u5217\u56fe\u3002\u7136\u800c\uff0c\u5728\u4efb\u4f55\u9700\u8981\u5c55\u793a\u591a\u7ec4\u79bb\u6563\u4e8b\u4ef6\u7684\u65f6\u673a\u6216\u4f4d\u7f6e\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u90fd\u662f\u6709\u7528\u7684\uff0c\u4f8b\u5982\u5c55\u793a\u4eba\u4eec\u5728\u6bcf\u4e2a\u6708\u6bcf\u5929\u5230\u8fbe\u5546\u5bb6\u7684\u5230\u8fbe\u65f6\u95f4\u6216\u4e0a\u4e2a\u4e16\u7eaa\u6bcf\u5e74\u98d3\u98ce\u7684\u65e5\u671f\u3002</p> <p>\u5982\u679c\u63d0\u4f9b<code>data</code>\u53c2\u6570\uff0c\u4ee5\u4e0b\u53c2\u6570\u4e5f\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32<code>s</code>\uff0c\u5982\u679c<code>s</code>\u662f<code>data</code>\u4e2d\u7684\u952e\uff0c\u5219\u89e3\u91ca\u4e3a<code>data[s]</code>\uff1apositions, lineoffsets, linelengths, linewidths, colors, linestyles\u3002</p> <ol> <li> <p>**positions\uff1a**\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u7684\u4f4d\u7f6e\u3002\u53ef\u4ee5\u5c06\u591a\u4e2a\u4e8b\u4ef6\u7ec4\u4f5c\u4e3a\u6570\u7ec4\u7c7b\u578b\u5bf9\u8c61\u7684\u5217\u8868\u4f20\u9012\u3002\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u503c\u5217\u8868\u7ed9<code>lineoffsets</code>\u3001<code>linelengths</code>\u3001<code>linewidths</code>\u3001<code>colors</code>\u548c <code>linestyles</code>\u6765\u72ec\u7acb\u5730\u8bbe\u7f6e\u6bcf\u4e2a\u7ec4\u7684\u6837\u5f0f\u3002\u6ce8\u610f\uff0c\u8be5\u53c2\u6570\u53ef\u4ee5\u662f\u4e8c\u7ef4\u6570\u7ec4\uff0c\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u7531\u4e8e\u4e0d\u540c\u7684\u4e8b\u4ef6\u7ec4\u901a\u5e38\u5177\u6709\u4e0d\u540c\u7684\u6570\u91cf\uff0c\u56e0\u6b64\u901a\u5e38\u4f1a\u4f7f\u7528\u4e0d\u540c\u957f\u5ea6\u7684\u6570\u7ec4\u5217\u8868\u800c\u4e0d\u662f\u4e8c\u7ef4\u6570\u7ec4\u3002</p> </li> <li> <p>**orientation\uff1a**\u4e8b\u4ef6\u5e8f\u5217\u7684\u65b9\u5411\u3002<code>'horizontal'</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u4e8b\u4ef6\u6c34\u5e73\u6392\u5217\uff0c\u6307\u793a\u7ebf\u5782\u76f4\uff1b<code>'vertical'</code>:\uff0c\u4e8b\u4ef6\u5782\u76f4\u6392\u5217\uff0c\u6307\u793a\u7ebf\u6c34\u5e73\u3002</p> </li> <li> <p>**lineoffsets\uff1a**\u7ebf\u7684\u4e2d\u5fc3\u5728\u5782\u76f4\u4e8e<code>orientation</code>\u7684\u65b9\u5411\u4e0a\u7684\u504f\u79fb\u91cf\u3002\u5982\u679c<code>positions</code>\u662f\u4e8c\u7ef4\u7684\uff0c\u5219\u8fd9\u53ef\u4ee5\u662f\u4e00\u4e2a\u4e0e<code>positions</code>\u957f\u5ea6\u5339\u914d\u7684\u5e8f\u5217\u3002\u9ed8\u8ba4\u4e3a1\u3002</p> </li> <li> <p>**linestyles\uff1a**\u7ebf\u578b\u3002\u5982\u679c<code>positions</code>\u662f\u4e8c\u7ef4\u7684\uff0c\u5219\u8fd9\u53ef\u4ee5\u662f\u4e00\u4e2a\u4e0e<code>positions</code>\u957f\u5ea6\u5339\u914d\u7684\u5e8f\u5217\u3002\u9ed8\u8ba4\u4e3a<code>'solid'</code>\u3002</p> </li> <li> <p>**linelengths\uff1a**\u7ebf\u7684\u603b\u9ad8\u5ea6\uff08\u5373\u7ebf\u4ece<code>lineoffset - linelength/2</code>\u5ef6\u4f38\u5230<code>lineoffset + linelength/2</code>\uff09\u3002\u5982\u679c<code>positions</code>\u662f\u4e8c\u7ef4\u7684\uff0c\u5219\u8fd9\u53ef\u4ee5\u662f\u4e00\u4e2a\u4e0e<code>positions</code>\u957f\u5ea6\u5339\u914d\u7684\u5e8f\u5217\u3002\u9ed8\u8ba4\u4e3a1\u3002</p> </li> <li> <p>**linewidths\uff1a**\u7ebf\u5bbd\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09\u3002\u5982\u679c<code>positions</code>\u662f\u4e8c\u7ef4\u7684\uff0c\u5219\u8fd9\u53ef\u4ee5\u662f\u4e00\u4e2a\u4e0e<code>positions</code>\u957f\u5ea6\u5339\u914d\u7684\u5e8f\u5217\u3002\u9ed8\u8ba4<code>rcParams[\"lines.linewidth\"]=1.5</code>\u3002</p> </li> <li> <p>**colors\uff1a**\u7ebf\u7684\u989c\u8272\u3002\u5982\u679c<code>positions</code>\u662f\u4e8c\u7ef4\u7684\uff0c\u5219\u8fd9\u53ef\u4ee5\u662f\u4e00\u4e2a\u4e0e<code>positions</code>\u957f\u5ea6\u5339\u914d\u7684\u5e8f\u5217\u3002\u9ed8\u8ba4<code>rcParams[\"lines.color\"]='C0'</code>\u3002</p> </li> <li> <p>**alpha\uff1a**\u7ebf\u7684\u900f\u660e\u5ea6\u3002\u5982\u679c<code>positions</code>\u662f\u4e8c\u7ef4\u7684\uff0c\u5219\u8fd9\u53ef\u4ee5\u662f\u4e00\u4e2a\u4e0e<code>positions</code>\u957f\u5ea6\u5339\u914d\u7684\u5e8f\u5217\u3002\u9ed8\u8ba4\u4e3a1\u3002</p> </li> </ol> <p><code>**kwargs</code>\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9<code>matplotlib.collections.LineCollection()</code>\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\na = ax.eventplot([iris['sepal_length'], iris['sepal_width'], iris['petal_length'], iris['petal_width']],\n\n                 orientation='horizontal',\n                 lineoffsets=[1, 2, 3, 4],\n                 linestyles=['-', '--', '-.', ':'],\n                 linelengths=[0.1, 0.2, 0.3, 0.4],\n                 linewidths=[1, 2, 3, 4],\n                 colors=['r', 'g', 'b', 'y'],\n                 alpha=[0.3, 0.4, 0.5, 0.6],\n                 )\n\"\"\"\n[&lt;matplotlib.collections.EventCollection at 0x1674502ee40&gt;,\n &lt;matplotlib.collections.EventCollection at 0x16745060d10&gt;,\n &lt;matplotlib.collections.EventCollection at 0x16745062c60&gt;,\n &lt;matplotlib.collections.EventCollection at 0x16745078d70&gt;]\n\"\"\"\na[0].set_label('sepal length')\na[1].set_label('sepal width')\na[2].set_label('petal length')\na[3].set_label('petal width')\nax.legend()\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E5%B8%83%E5%85%B3%E7%B3%BB%E5%9B%BE/%E8%BD%B4%E9%A1%BB%E5%9B%BE%EF%BC%88eventplot%E3%80%81rugplot%EF%BC%89/#seabornrugplot","title":"Seaborn\uff1arugplot","text":"<p>seaborn.rugplot \u2014 seaborn 0.13.2 documentation</p> <p><code>rugplot(data=None, *, x=None, y=None, hue=None, height=0.025, expand_margins=True, palette=None, hue_order=None, hue_norm=None, legend=True, ax=None, **kwargs)</code></p> <p>\u901a\u8fc7\u5728 x \u8f74\u548c y \u8f74\u4e0a\u7ed8\u5236\u523b\u5ea6\u6765\u7ed8\u5236\u8fb9\u7f18\u5206\u5e03\u56fe\u3002\u6b64\u51fd\u6570\u65e8\u5728\u901a\u8fc7\u4ee5\u4e0d\u663e\u773c\u7684\u65b9\u5f0f\u663e\u793a\u5355\u4e2a\u89c2\u6d4b\u503c\u7684\u4f4d\u7f6e\u6765\u8865\u5145\u5176\u4ed6\u56fe\u8868\u3002</p> <ol> <li> <p>**height\uff1a**\u6bcf\u4e2arug\u5143\u7d20\u8986\u76d6\u7684\u8f74\u8303\u56f4\u6bd4\u4f8b\u3002\u53ef\u4ee5\u662f\u8d1f\u6570\u3002</p> </li> <li> <p>**expand_margins\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u901a\u8fc7rug\u7684\u9ad8\u5ea6\u589e\u52a0Axes\u7684\u8fb9\u8ddd\uff0c\u4ee5\u907f\u514d\u4e0e\u5176\u4ed6\u5143\u7d20\u91cd\u53e0\u3002</p> </li> </ol> <p><code>**kwargs</code>\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9<code>matplotlib.collections.LineCollection()</code>\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.rugplot(data=iris,\n            x='sepal_length',\n            y='sepal_width',\n\n            hue=\"species\",\n            hue_order=[\"versicolor\", \"setosa\", \"virginica\"],\n            palette={\"versicolor\": '#9673f9', \"setosa\": '#00f9bb', \"virginica\": '#98f907'},\n\n            height=0.025,\n            expand_margins=False,\n\n            ax=ax\n            )\n\"\"\"\n&lt;Axes: xlabel='sepal_length', ylabel='sepal_width'&gt;\n\"\"\"\nsns.scatterplot(data=iris,\n                x='sepal_length',\n                y='sepal_width',\n\n                hue=\"species\",\n                hue_order=[\"versicolor\", \"setosa\", \"virginica\"],\n                palette={\"versicolor\": '#9673f9', \"setosa\": '#00f9bb', \"virginica\": '#98f907'},\n\n                ax=ax\n                )\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%88%86%E7%BB%84%E6%98%BE%E8%91%97%E6%80%A7%E6%B3%A8%E9%87%8A%EF%BC%88statannotations%EF%BC%89/","title":"\u5206\u7ec4\u663e\u8457\u6027\u6ce8\u91ca\uff08statannotations\uff09","text":"<p>statannotations-tutorials/Tutorial_1/Statannotations-Tutorial-1.ipynb at main \u00b7 trevismd/statannotations-tutorials</p> <p>tips.csv</p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\nfrom statannotations.Annotator import Annotator\n\ntips = pd.read_csv('../Data/tips.csv')\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%88%86%E7%BB%84%E6%98%BE%E8%91%97%E6%80%A7%E6%B3%A8%E9%87%8A%EF%BC%88statannotations%EF%BC%89/#_1","title":"\u81ea\u5b9a\u4e49\u6ce8\u91ca","text":"<p><code>Annotator</code>\u7c7b\u76f4\u63a5\u63a5\u53d7seaborn\u5bf9\u5e94\u7ed8\u56fe\u51fd\u6570\u7684\u53c2\u6570\uff0c\u6700\u91cd\u8981\u7684\u662f\u6570\u636e\u3001\u5206\u7ec4\u3001\u4e9a\u5206\u7ec4\u53ca\u5206\u7ec4\u987a\u5e8f\u76f8\u5173\u7684\u53c2\u6570\uff0c\u5373<code>data</code>\u3001<code>x</code>\u3001<code>y</code>\u3001<code>order</code>\u3001<code>hue</code>\u3001<code>hue_order</code>\u4ee5\u53ca\u5b50\u56fe<code>ax</code>\u53c2\u6570\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nplot_params = {'data': tips,\n               'x': 'day',\n               'y': 'total_bill',\n               'order': ['Thur', 'Fri', 'Sat', 'Sun'],\n               'hue': 'day',\n               'palette': ['#ffa200', '#c8ff00', '#00ffe5', '#ee00ff'],\n               'width': 0.5,\n               'linecolor': 'k',\n               'linewidth': 2,\n               'ax': ax,\n               }\npairs = [('Thur', 'Fri'),\n         ('Thur', 'Sat'),\n         ('Thur', 'Sun'),\n         ('Fri', 'Sat'),\n         ('Fri', 'Sun'),\n         ('Sat', 'Sun')]\ncustom_annotations = [f\"pvalue={p:.2e}\" for p in [6.477e-01, 1.276e-01, 3.585e-01, 4.690e-02, 2.680e-02, 5.363e-03]]\n\nsns.boxplot(**plot_params)\n\nannotator = Annotator(pairs=pairs,                # \u6bd4\u5bf9\u7684\u7ec4\n                      engine='seaborn',           # \u7ed8\u56fe\u5f15\u64ce\uff0c\u76ee\u524d\u4ec5\u652f\u6301seaborn\n                      plot='boxplot',             # \u7ed8\u56fe\u7c7b\u578b\n                      verbose=True,               # \u662f\u5426\u6253\u5370\u65e5\u5fd7\n                      **plot_params               # seaborn\u51fd\u6570\u7ed8\u56fe\u53c2\u6570\n                      )\nannotator.configure(color='r',                    # \u7ebf\u6761\u989c\u8272\n                    line_height=0.02,             # \u7ebf\u6761\u9ad8\u5ea6\n                    line_width=1,                 # \u7ebf\u6761\u5bbd\u5ea6\n                    loc='inside',                 # 'inside'\u7ed8\u5236\u5728Axes\u5185; 'outside'\u7ed8\u5236\u5728Axes\u5916\n                    text_offset=1,                # \u6587\u672c\u5782\u76f4\u504f\u79fb\u91cf\n                    fontsize=15,                  # \u5b57\u4f53\u5927\u5c0f\n                    verbose=True\n                    )\nannotator.set_custom_annotations(custom_annotations)\nannotator.annotate()\n# annotator.annotate_custom_annotations(custom_annotations)\n\"\"\"\np-value annotation legend:\n      ns: 5.00e-02 &lt; p &lt;= 1.00e+00\n       *: 1.00e-02 &lt; p &lt;= 5.00e-02\n      **: 1.00e-03 &lt; p &lt;= 1.00e-02\n     ***: 1.00e-04 &lt; p &lt;= 1.00e-03\n    ****: p &lt;= 1.00e-04\n\nThur vs. Fri: pvalue=6.48e-01\nFri vs. Sat: pvalue=4.69e-02\nSat vs. Sun: pvalue=5.36e-03\nThur vs. Sat: pvalue=1.28e-01\nFri vs. Sun: pvalue=2.68e-02\nThur vs. Sun: pvalue=3.58e-01\n\n(&lt;Axes: xlabel='day', ylabel='total_bill'&gt;,\n [&lt;statannotations.Annotation.Annotation at 0x1afb5a57980&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x1afbff4b530&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x1afc0867830&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x1afc0831130&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x1afc0951910&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x1afc11f8950&gt;])\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%88%86%E7%BB%84%E6%98%BE%E8%91%97%E6%80%A7%E6%B3%A8%E9%87%8A%EF%BC%88statannotations%EF%BC%89/#p","title":"\u81ea\u52a8\u683c\u5f0f\u5316p\u503c","text":"<p>p\u503c\u7684\u683c\u5f0f\u5316\u6709\u4e09\u79cd\u5f62\u5f0f\uff1a<code>'full'</code>, <code>'simple'</code>, <code>'star'</code>\u3002\u901a\u8fc7<code>text_format</code>\u53c2\u6570\u8bbe\u7f6e\u3002</p> <ol> <li> <p><code>'full'</code>\uff1a\u6ce8\u91ca\u683c\u5f0f\u4e3a**'\u68c0\u9a8c\u65b9\u6cd5\u540d p = \u8f93\u5165p\u503c\u7684\u683c\u5f0f\u5316\u5f62\u5f0f'**\u3002\u8f93\u5165p\u503c\u7684\u683c\u5f0f\u5316\u5f62\u5f0f\u901a\u8fc7<code>pvalue_format_string</code>\u53c2\u6570\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a<code>'{:.3e}'</code>\u3002</p> </li> <li> <p><code>'simple'</code>\uff1a\u5bf9\u4e8e\u5c0f\u4e8e\u6216\u7b49\u4e8e\u67d0\u4e2a\u503c\uff08\u9608\u503c\uff09\u7684p\u503c\u6ce8\u91ca\u683c\u5f0f\u4e3a**'p \u2264 \u8bbe\u5b9a\u683c\u5f0f'\uff0c\u800c\u5bf9\u4e8e\u5927\u4e8e\u6240\u8bbe\u7f6e\u9608\u503c\u7684\u6700\u5927\u503c\u7684p\u503c\u6ce8\u91ca\u683c\u5f0f\u4e3a'p = \u8f93\u5165p\u503c\u7684\u683c\u5f0f\u5316\u5f62\u5f0f'**\u3002\u9608\u503c\u53ca\u5bf9\u5e94\u683c\u5f0f\u901a\u8fc7<code>pvalue_thresholds</code>\u53c2\u6570\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a<code>[[1e-5, \"1e-5\"], [1e-4, \"1e-4\"], [1e-3, \"0.001\"], [1e-2, \"0.01\"], [5e-2, \"0.05\"]]</code>\uff0c\u4e00\u822c\u4f7f\u7528\u9ed8\u8ba4\u503c\u5373\u53ef\u3002\u8f93\u5165p\u503c\u7684\u683c\u5f0f\u5316\u5f62\u5f0f\u901a\u8fc7<code>pvalue_format_string</code>\u53c2\u6570\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a<code>'{:.2f}'</code>\u3002</p> </li> <li> <p><code>'star'</code>\uff08\u9ed8\u8ba4\uff09\uff1a\u5bf9\u4e8e\u5c0f\u4e8e\u6216\u7b49\u4e8e\u67d0\u4e2a\u503c\uff08\u9608\u503c\uff09\u7684p\u503c\u6ce8\u91ca\u683c\u5f0f\u4e3a**'\u8bbe\u5b9a\u683c\u5f0f'**\uff0c\u800c\u5bf9\u4e8e\u5927\u4e8e\u6240\u8bbe\u7f6e\u9608\u503c\u7684\u6700\u5927\u503c\u7684p\u503c\u5219\u4e0d\u6ce8\u91ca\u3002\u9608\u503c\u53ca\u5bf9\u5e94\u683c\u5f0f\u901a\u8fc7<code>pvalue_thresholds</code>\u53c2\u6570\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a<code>[[1e-4, \"****\"], [1e-3, \"***\"], [1e-2, \"**\"], [0.05, \"*\"], [1, \"ns\"]]</code>\uff0c\u4e00\u822c\u4f7f\u7528\u9ed8\u8ba4\u503c\u5373\u53ef\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nplot_params = {'data': tips,\n               'x': 'day',\n               'y': 'total_bill',\n               'order': ['Thur', 'Fri', 'Sat', 'Sun'],\n               'hue': 'day',\n               'palette': ['#ffa200', '#c8ff00', '#00ffe5', '#ee00ff'],\n               'width': 0.5,\n               'linecolor': 'k',\n               'linewidth': 2,\n               'ax': ax,\n               }\npairs = [('Thur', 'Fri'),\n         ('Thur', 'Sat'),\n         ('Thur', 'Sun'),\n         ('Fri', 'Sat'),\n         ('Fri', 'Sun'),\n         ('Sat', 'Sun')]\npvalues = [6.477e-01, 1.276e-01, 3.585e-01, 4.690e-02, 2.680e-02, 5.363e-03]\n\nsns.boxplot(**plot_params)\n\nannotator = Annotator(pairs=pairs, **plot_params)\nannotator.configure(fontsize=15, \n\n                    text_format='simple',\n                    pvalue_thresholds=[[1e-5, \"1e-5\"], [1e-4, \"1e-4\"], [1e-3, \"0.001\"], [1e-2, \"0.01\"], [5e-2, \"0.05\"]],\n                    pvalue_format_string='{:.2f}',\n\n                    alpha=0.05,                       # \u663e\u8457\u6027\u9608\u503c\n                    hide_non_significant=False,       # \u9690\u85cf\u65e0\u663e\u8457\u6027\u7684\u7ec4\u95f4\u6ce8\u91ca\n                    p_capitalized=True,               # p\u5b57\u6bcd\u662f\u5426\u5927\u5199\n                    p_separators=(\" \", \" \"),          # \u7b49\u53f7\u524d\u540e\u95f4\u9694\u7b26\u53f7\uff1a'both'(True)==(\" \", \" \"), 'after'==(\"\", \" \"), 'none'(False)==(\"\", \"\")\n\n                    test_short_name='M.W.W'           # \u8ba1\u7b97p\u503c\u6240\u4f7f\u7528\u7684\u68c0\u9a8c\u65b9\u6cd5\u540d\u79f0\n                    )\nannotator.set_pvalues(pvalues)\nannotator.annotate()\n# annotator.set_pvalues_and_annotate(pvalues)\n\"\"\"\nThur vs. Fri: Custom statistical test, P_val:6.477e-01\nFri vs. Sat: Custom statistical test, P_val:4.690e-02\nSat vs. Sun: Custom statistical test, P_val:5.363e-03\nThur vs. Sat: Custom statistical test, P_val:1.276e-01\nFri vs. Sun: Custom statistical test, P_val:2.680e-02\nThur vs. Sun: Custom statistical test, P_val:3.585e-01\n\n(&lt;Axes: xlabel='day', ylabel='total_bill'&gt;,\n [&lt;statannotations.Annotation.Annotation at 0x2651bdb1280&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651b4d98b0&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651b4cd7f0&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651b4cd190&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651bda3cb0&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651bda37a0&gt;])\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%88%86%E7%BB%84%E6%98%BE%E8%91%97%E6%80%A7%E6%B3%A8%E9%87%8A%EF%BC%88statannotations%EF%BC%89/#hue","title":"\u5e26\u4e9a\u7ec4\uff08hue\uff09\u7684\u6ce8\u91ca","text":"<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nplot_params = {'data': tips,\n               'x': 'sex',\n               'y': 'total_bill',\n               'order': ['Female', 'Male'],\n               'hue': 'day',\n               'hue_order': ['Thur', 'Fri', 'Sat', 'Sun'],\n               'palette': ['#ffa200', '#c8ff00', '#00ffe5', '#ee00ff'],\n               'width': 0.5,\n               'linecolor': 'k',\n               'linewidth': 2,\n               'ax': ax,\n               }\npairs = [[('Female', 'Thur'), ('Female', 'Fri')],\n         [('Female', 'Thur'), ('Female', 'Sat')],\n         [('Female', 'Thur'), ('Female', 'Sun')],\n         [('Female', 'Fri'), ('Female', 'Sat')],\n         [('Female', 'Fri'), ('Female', 'Sun')],\n         [('Female', 'Sat'), ('Female', 'Sun')],\n         [('Male', 'Thur'), ('Male', 'Fri')],\n         [('Male', 'Thur'), ('Male', 'Sat')],\n         [('Male', 'Thur'), ('Male', 'Sun')],\n         [('Male', 'Fri'), ('Male', 'Sat')],\n         [('Male', 'Fri'), ('Male', 'Sun')],\n         [('Male', 'Sat'), ('Male', 'Sun')]]\npvalues = [5.287e-01, 6.087e-02, 1.059e-01, 8.600e-02, 4.768e-02, 9.372e-01, 9.378e-01, 4.740e-01, 1.131e-01, 7.916e-01, 3.587e-01, 3.211e-01]\n\nsns.boxplot(**plot_params)\n\nannotator = Annotator(pairs=pairs, **plot_params)\nannotator.configure(fontsize=15, text_format='simple', test_short_name='M.W.W')\nannotator.set_pvalues_and_annotate(pvalues)\n\"\"\"\nFemale_Thur vs. Female_Fri: Custom statistical test, P_val:5.287e-01\nFemale_Fri vs. Female_Sat: Custom statistical test, P_val:8.600e-02\nFemale_Sat vs. Female_Sun: Custom statistical test, P_val:9.372e-01\nMale_Thur vs. Male_Fri: Custom statistical test, P_val:9.378e-01\nMale_Fri vs. Male_Sat: Custom statistical test, P_val:7.916e-01\nMale_Sat vs. Male_Sun: Custom statistical test, P_val:3.211e-01\nFemale_Thur vs. Female_Sat: Custom statistical test, P_val:6.087e-02\nFemale_Fri vs. Female_Sun: Custom statistical test, P_val:4.768e-02\nMale_Thur vs. Male_Sat: Custom statistical test, P_val:4.740e-01\nMale_Fri vs. Male_Sun: Custom statistical test, P_val:3.587e-01\nFemale_Thur vs. Female_Sun: Custom statistical test, P_val:1.059e-01\nMale_Thur vs. Male_Sun: Custom statistical test, P_val:1.131e-01\n\n(&lt;Axes: xlabel='sex', ylabel='total_bill'&gt;,\n [&lt;statannotations.Annotation.Annotation at 0x265190c3530&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651b4b6480&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651bd71490&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651be640b0&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651be65d30&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651cf6d190&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651d79c9b0&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651a8cc0e0&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651cf1af30&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651aa2e090&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651a99c080&gt;,\n  &lt;statannotations.Annotation.Annotation at 0x2651923ef60&gt;])\n\"\"\"\n\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%88%86%E7%BB%84%E6%98%BE%E8%91%97%E6%80%A7%E6%B3%A8%E9%87%8A%EF%BC%88statannotations%EF%BC%89/#_2","title":"\u81ea\u52a8\u5e94\u7528\u5047\u8bbe\u68c0\u9a8c","text":"<p>\u652f\u6301\u7684\u68c0\u9a8c\u65b9\u6cd5\u5305\u62ec\uff1a</p> <p>\"Brunner-Munzel\"</p> <ol> <li> <p>Mann-Whitney\uff1a<code>\"Mann-Whitney\"</code>\u3001<code>\"Mann-Whitney-gt\"</code>\u3001<code>\"Mann-Whitney-1s\"</code></p> </li> <li> <p>t-test\uff1a<code>\"t-test_ind\"</code>\u3001<code>\"t-test_paired\"</code></p> </li> <li> <p>Welch's t-test\uff1a<code>\"t-test_welch\"</code></p> </li> <li> <p>Levene test\uff1a<code>\"Levene\"</code></p> </li> <li> <p>Wilcoxon test\uff1a<code>\"Wilcoxon\"</code></p> </li> <li> <p>Kruskal-Wallis test\uff1a<code>\"Kruskal\"</code></p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nplot_params = {'data': tips,\n               'x': 'sex',\n               'y': 'total_bill',\n               'order': ['Female', 'Male'],\n               'hue': 'day',\n               'hue_order': ['Thur', 'Fri', 'Sat', 'Sun'],\n               'palette': ['#ffa200', '#c8ff00', '#00ffe5', '#ee00ff'],\n               'width': 0.5,\n               'linecolor': 'k',\n               'linewidth': 2,\n               'ax': ax,\n               }\npairs = [[('Female', 'Thur'), ('Female', 'Fri')],\n         [('Female', 'Thur'), ('Female', 'Sat')],\n         [('Female', 'Thur'), ('Female', 'Sun')],\n         [('Female', 'Fri'), ('Female', 'Sat')],\n         [('Female', 'Fri'), ('Female', 'Sun')],\n         [('Female', 'Sat'), ('Female', 'Sun')],\n         [('Male', 'Thur'), ('Male', 'Fri')],\n         [('Male', 'Thur'), ('Male', 'Sat')],\n         [('Male', 'Thur'), ('Male', 'Sun')],\n         [('Male', 'Fri'), ('Male', 'Sat')],\n         [('Male', 'Fri'), ('Male', 'Sun')],\n         [('Male', 'Sat'), ('Male', 'Sun')],]\n\nsns.boxplot(**plot_params)\n\nannotator = Annotator(pairs=pairs, **plot_params)\nannotator.configure(fontsize=15, text_format='simple',\n                    test='Mann-Whitney',\n                    show_test_name=True\n                    )\nannotator.apply_test()    # \u53ef\u4ee5\u4f20\u5165\u5e76\u8bbe\u7f6escipy\u5bf9\u5e94\u5047\u8bbe\u68c0\u9a8c\u51fd\u6570\u7684\u5bf9\u5e94\u53c2\u6570\nannotator.annotate()\n# annotator.apply_and_annotate()\n\nannotator.new_plot(pairs=[('Female', 'Male')], data=tips, x='sex', y='total_bill', order=['Female', 'Male'], ax=ax)\nannotator.apply_and_annotate()\n\"\"\"\nFemale_Thur vs. Female_Fri: Mann-Whitney-Wilcoxon test two-sided, P_val:5.287e-01 U_stat=1.645e+02\nFemale_Fri vs. Female_Sat: Mann-Whitney-Wilcoxon test two-sided, P_val:8.600e-02 U_stat=7.700e+01\nFemale_Sat vs. Female_Sun: Mann-Whitney-Wilcoxon test two-sided, P_val:9.372e-01 U_stat=2.480e+02\nMale_Thur vs. Male_Fri: Mann-Whitney-Wilcoxon test two-sided, P_val:9.378e-01 U_stat=1.470e+02\nMale_Fri vs. Male_Sat: Mann-Whitney-Wilcoxon test two-sided, P_val:7.916e-01 U_stat=2.790e+02\nMale_Sat vs. Male_Sun: Mann-Whitney-Wilcoxon test two-sided, P_val:3.211e-01 U_stat=1.528e+03\nFemale_Thur vs. Female_Sat: Mann-Whitney-Wilcoxon test two-sided, P_val:6.087e-02 U_stat=3.210e+02\nFemale_Fri vs. Female_Sun: Mann-Whitney-Wilcoxon test two-sided, P_val:4.768e-02 U_stat=4.200e+01\nMale_Thur vs. Male_Sat: Mann-Whitney-Wilcoxon test two-sided, P_val:4.740e-01 U_stat=8.020e+02\nMale_Fri vs. Male_Sun: Mann-Whitney-Wilcoxon test two-sided, P_val:3.587e-01 U_stat=2.365e+02\nFemale_Thur vs. Female_Sun: Mann-Whitney-Wilcoxon test two-sided, P_val:1.059e-01 U_stat=2.075e+02\nMale_Thur vs. Male_Sun: Mann-Whitney-Wilcoxon test two-sided, P_val:1.131e-01 U_stat=6.895e+02\nFemale vs. Male: Mann-Whitney-Wilcoxon test two-sided, P_val:2.135e-02 U_stat=5.614e+03\n\n(&lt;Axes: xlabel='sex', ylabel='total_bill'&gt;,\n [&lt;statannotations.Annotation.Annotation at 0x26521f06480&gt;])\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%88%86%E7%BB%84%E6%98%BE%E8%91%97%E6%80%A7%E6%B3%A8%E9%87%8A%EF%BC%88statannotations%EF%BC%89/#p_1","title":"\u591a\u91cd\u68c0\u9a8cp\u503c\u6821\u6b63","text":"<p>\u652f\u6301\u7684\u6821\u6b63\u65b9\u6cd5\u5305\u62ec\uff1a</p> <ol> <li> <p>Bonferroni (\"bonf\")</p> </li> <li> <p>Benjamini-Hochberg (\"BH\")</p> </li> <li> <p>Holm-Bonferroni (\"HB\")</p> </li> <li> <p>Benjamini-Yekutieli (\"BY\")</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nplot_params = {'data': tips,\n               'x': 'sex',\n               'y': 'total_bill',\n               'order': ['Female', 'Male'],\n               'hue': 'day',\n               'hue_order': ['Thur', 'Fri', 'Sat', 'Sun'],\n               'palette': ['#ffa200', '#c8ff00', '#00ffe5', '#ee00ff'],\n               'width': 0.5,\n               'linecolor': 'k',\n               'linewidth': 2,\n               'ax': ax,\n               }\npairs = [[('Female', 'Thur'), ('Female', 'Fri')],\n         [('Female', 'Thur'), ('Female', 'Sat')],\n         [('Female', 'Thur'), ('Female', 'Sun')],\n         [('Female', 'Fri'), ('Female', 'Sat')],\n         [('Female', 'Fri'), ('Female', 'Sun')],\n         [('Female', 'Sat'), ('Female', 'Sun')],\n         [('Male', 'Thur'), ('Male', 'Fri')],\n         [('Male', 'Thur'), ('Male', 'Sat')],\n         [('Male', 'Thur'), ('Male', 'Sun')],\n         [('Male', 'Fri'), ('Male', 'Sat')],\n         [('Male', 'Fri'), ('Male', 'Sun')],\n         [('Male', 'Sat'), ('Male', 'Sun')]]\n\nsns.boxplot(**plot_params)\n\nannotator = Annotator(pairs=pairs, **plot_params)\nannotator.configure(fontsize=15, text_format='simple',\n                    test='Mann-Whitney',\n                    show_test_name=True,\n\n                    comparisons_correction=\"bonferroni\"\n                    )\nannotator.apply_and_annotate()\n\nannotator.new_plot(pairs=[('Female', 'Male')], data=tips, x='sex', y='total_bill', order=['Female', 'Male'], ax=ax)\nannotator.apply_and_annotate()\n\"\"\"\nFemale_Thur vs. Female_Fri: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:1.000e+00 U_stat=1.645e+02\nFemale_Fri vs. Female_Sat: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:1.000e+00 U_stat=7.700e+01\nFemale_Sat vs. Female_Sun: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:1.000e+00 U_stat=2.480e+02\nMale_Thur vs. Male_Fri: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:1.000e+00 U_stat=1.470e+02\nMale_Fri vs. Male_Sat: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:1.000e+00 U_stat=2.790e+02\nMale_Sat vs. Male_Sun: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:1.000e+00 U_stat=1.528e+03\nFemale_Thur vs. Female_Sat: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:7.305e-01 U_stat=3.210e+02\nFemale_Fri vs. Female_Sun: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:5.721e-01 U_stat=4.200e+01\nMale_Thur vs. Male_Sat: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:1.000e+00 U_stat=8.020e+02\nMale_Fri vs. Male_Sun: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:1.000e+00 U_stat=2.365e+02\nFemale_Thur vs. Female_Sun: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:1.000e+00 U_stat=2.075e+02\nMale_Thur vs. Male_Sun: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:1.000e+00 U_stat=6.895e+02\nFemale vs. Male: Mann-Whitney-Wilcoxon test two-sided with Bonferroni correction, P_val:2.135e-02 U_stat=5.614e+03\n\n(&lt;Axes: xlabel='sex', ylabel='total_bill'&gt;,\n [&lt;statannotations.Annotation.Annotation at 0x26523cd4260&gt;])\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%B0%8F%E6%8F%90%E7%90%B4%E5%9B%BE%EF%BC%88violinplot%E3%80%81violin%EF%BC%89/","title":"\u5c0f\u63d0\u7434\u56fe\uff08violinplot\u3001violin\uff09","text":"<p>zhuanlan.zhihu.com</p> <p>\u8bfb\u6587\u732e\u5148\u8bfb\u56fe\uff1a\u5c0f\u63d0\u7434\u56fe\u600e\u4e48\u770b\uff1f</p> <p>\u5c0f\u63d0\u7434\u56fe\u662f\u4e00\u79cd\u7ed8\u5236\u8fde\u7eed\u578b\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u7bb1\u5f62\u56fe\u4e0e\u6838\u5bc6\u5ea6\u56fe\uff08KDE\uff09\u7684\u7ed3\u5408\u4f53\u3002\u4e0e\u7bb1\u5f62\u56fe\u76f8\u6bd4\uff0c\u5c0f\u63d0\u7434\u56fe\u7684\u4f18\u52bf\u5728\u4e8e\uff1a\u9664\u4e86\u663e\u793a\u7edf\u8ba1\u6570\u636e\u5916\uff0c\u5b83\u8fd8\u663e\u793a\u4e86\u6570\u636e\u7684\u6574\u4f53\u5206\u5e03\u3002\u8fd9\u4e2a\u5dee\u5f02\u70b9\u5f88\u6709\u610f\u4e49\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u591a\u6a21\u6001\u6570\u636e\u65f6\uff0c\u5373\u6709\u591a\u5cf0\u503c\u7684\u5206\u5e03\u3002</p> <p>penguins.csv</p> <p></p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\npenguins = pd.read_csv('../Data/penguins.csv')\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%B0%8F%E6%8F%90%E7%90%B4%E5%9B%BE%EF%BC%88violinplot%E3%80%81violin%EF%BC%89/#matplotlibviolinplot","title":"Matplotlib\uff1aviolinplot","text":"<p>matplotlib.axes.Axes.violinplot \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.violinplot \u2014 Matplotlib 3.10.1 documentation</p> <p><code>violinplot(dataset, positions=None, *, orientation='vertical', widths=0.5, showmeans=False, showextrema=True, showmedians=False, quantiles=None, points=100, bw_method=None, side='both', data=None)</code></p> <p>\u7ed8\u5236\u5c0f\u63d0\u7434\u56fe\u3002\u4e3a\u6570\u636e\u96c6\u7684\u6bcf\u4e00\u5217\u6216\u5e8f\u5217\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u5411\u91cf\uff08\u540c\u7bb1\u7ebf\u56fe\uff09\u7ed8\u5236\u5c0f\u63d0\u7434\u56fe\u3002\u586b\u5145\u533a\u57df\u5ef6\u4f38\u4ee5\u8868\u793a\u6574\u4e2a\u6570\u636e\u8303\u56f4\uff0c\u53ef\u9009\u5730\u663e\u793a\u5747\u503c\u3001\u4e2d\u4f4d\u6570\u3001\u6700\u5c0f\u503c\u3001\u6700\u5927\u503c\u548c\u7528\u6237\u6307\u5b9a\u7684\u5206\u4f4d\u6570\u3002\u5982\u679c\u63d0\u4f9b<code>data</code>\u53c2\u6570\uff0c\u4ee5\u4e0b\u53c2\u6570\u4e5f\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32<code>s</code>\uff0c\u5982\u679c<code>s</code>\u662f<code>data</code>\u4e2d\u7684\u952e\uff0c\u5219\u89e3\u91ca\u4e3a<code>data[s]</code>\uff1adataset\u3002</p> <ol> <li> <p>side\uff1a<code>'both'</code>\uff08\u9ed8\u8ba4\uff09\u7ed8\u5236\u6807\u51c6\u5c0f\u63d0\u7434\u56fe\u3002<code>'low'</code>/<code>'high'</code>\u4ec5\u7ed8\u5236<code>positions</code>\u53c2\u6570\u503c\u4ee5\u4e0b/\u4ee5\u4e0a\u7684\u4fa7\u9762\u3002</p> </li> <li> <p>**showmeans\uff1a**\u662f\u5426\u7528\u7ebf\u6761\u663e\u793a\u5e73\u5747\u503c\u3002\u9ed8\u8ba4<code>False</code>\u3002</p> </li> <li> <p>**showextrema\uff1a**\u662f\u5426\u7528\u7ebf\u6761\u663e\u793a\u6781\u503c\u3002\u9ed8\u8ba4<code>True</code>\u3002</p> </li> <li> <p>**showmedians\uff1a**\u662f\u5426\u7528\u7ebf\u6761\u663e\u793a\u4e2d\u4f4d\u6570\u3002\u9ed8\u8ba4<code>False</code>\u3002</p> </li> <li> <p>**quantiles\uff1a**\u5982\u679c\u4e0d\u4e3a <code>None</code>\uff0c\u5219\u4e3a\u6bcf\u4e2a\u5c0f\u63d0\u7434\u8bbe\u7f6e\u4e00\u4e2a\u8303\u56f4\u5728[0, 1]\u7684\u6d6e\u70b9\u6570\u5217\u8868\uff0c\u4ee3\u8868\u8be5\u5c0f\u63d0\u7434\u5c06\u6e32\u67d3\u7684\u5206\u4f4d\u6570\u3002</p> </li> <li> <p>**points\uff1a**\u5728\u6bcf\u4e2a\u9ad8\u65af\u6838\u5bc6\u5ea6\u4f30\u8ba1\u4e2d\u8bc4\u4f30\u7684\u70b9\u6570\u3002\u9ed8\u8ba4<code>100</code>\u3002\u5f71\u54cd\u66f2\u7ebf\u7684\u5e73\u6ed1\u5ea6\u3002</p> </li> <li> <p>**bw_method\uff1a**\u8ba1\u7b97\u4f30\u8ba1\u5e26\u5bbd\u6240\u4f7f\u7528\u7684\u65b9\u6cd5\u540d\u79f0\u6216\u7f29\u653e\u56e0\u5b50\u3002\u5982\u679c\u662f\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u5219\u76f4\u63a5\u7528\u4f5c<code>kde.factor</code> \u3002\u5982\u679c\u662f\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u51fd\u6570\uff0c\u5219\u5b83\u5e94\u8be5\u53ea\u63a5\u53d7\u4e00\u4e2a <code>matplotlib.mlab.GaussianKDE</code>\u5b9e\u4f8b\u4f5c\u4e3a\u5176\u552f\u4e00\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6d6e\u70b9\u6570\u3002\u5b57\u7b26\u4e32\u53ef\u9009<code>'scott'</code>\uff08\u9ed8\u8ba4\uff09, <code>'silverman'</code>\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nnp.random.seed(10)\ndata = np.random.normal((3, 5, 4), (1.25, 1.00, 1.25), (100, 3))\n\nax.violinplot(data,\n              positions=[1, 2, 3],\n              widths=[0.2, 0.5, 0.8],\n              orientation='vertical',\n              side='low',\n\n              showmeans=True,\n              showextrema=True,\n              showmedians=True,\n              quantiles=[[0.25, 0.75], [0.25, 0.75], [0.25, 0.75]],\n\n              points=100,\n              bw_method='scott'\n              )\n\"\"\"\n{'bodies': [&lt;matplotlib.collections.FillBetweenPolyCollection at 0x1b1c8babd70&gt;,\n            &lt;matplotlib.collections.FillBetweenPolyCollection at 0x1b1c87bd160&gt;,\n            &lt;matplotlib.collections.FillBetweenPolyCollection at 0x1b1c8a03b30&gt;],\n 'cmeans': &lt;matplotlib.collections.LineCollection at 0x1b1c8bab620&gt;,\n 'cmaxes': &lt;matplotlib.collections.LineCollection at 0x1b1cb3e6330&gt;,\n 'cmins': &lt;matplotlib.collections.LineCollection at 0x1b1c88d3e00&gt;,\n 'cbars': &lt;matplotlib.collections.LineCollection at 0x1b1cb40f4d0&gt;,\n 'cmedians': &lt;matplotlib.collections.LineCollection at 0x1b1cb35fb00&gt;,\n 'cquantiles': &lt;matplotlib.collections.LineCollection at 0x1b1cb390230&gt;}\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%B0%8F%E6%8F%90%E7%90%B4%E5%9B%BE%EF%BC%88violinplot%E3%80%81violin%EF%BC%89/#matplotlibviolin","title":"Matplotlib\uff1aviolin","text":"<p>matplotlib.axes.Axes.violin \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.cbook \u2014 Matplotlib 3.10.1 documentation</p> <p><code>violin(vpstats, positions=None, *, orientation='vertical', widths=0.5, showmeans=False, showextrema=True, showmedians=False, side='both')</code></p> <p>\u4ece\u5df2\u7ecf\u8ba1\u7b97\u597d\u7684\u7edf\u8ba1\u6570\u636e\u4e2d\u7ed8\u5236\u5c0f\u63d0\u7434\u56fe\u3002</p> <p>**vpstats**\u662f\u4e00\u4e2a\u5305\u542b\u6bcf\u4e2a\u5c0f\u63d0\u7434\u56fe\u7edf\u8ba1\u4fe1\u606f\u7684\u5b57\u5178\u5217\u8868\u3002\u53ef\u4ee5\u901a\u8fc7<code>matplotlib.cbook.violin_stats</code>\u51fd\u6570\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u8ba1\u7b97\u3002</p> <p>\u5fc5\u9700\u7684\u952e\u5305\u62ec\uff1a</p> <ol> <li> <p><code>coords</code> : \u5305\u542b\u5c0f\u63d0\u7434\u6838\u5bc6\u5ea6\u4f30\u8ba1\u8bc4\u4f30\u5750\u6807\u7684\u6807\u91cf\u5217\u8868\u3002</p> </li> <li> <p><code>vals</code> : \u5305\u542b\u5728<code>coords</code>\u7ed9\u51fa\u7684\u6bcf\u4e2a\u5750\u6807\u5904\u7684\u6838\u5bc6\u5ea6\u4f30\u8ba1\u503c\u7684\u6807\u91cf\u5217\u8868\u3002</p> </li> <li> <p><code>mean</code> : \u8be5\u5c0f\u63d0\u7434\u6570\u636e\u96c6\u7684\u5e73\u5747\u503c\u3002</p> </li> <li> <p><code>min</code> : \u8be5\u5c0f\u63d0\u7434\u6570\u636e\u96c6\u7684\u6700\u5c0f\u503c\u3002</p> </li> <li> <p><code>max</code> : \u8be5\u5c0f\u63d0\u7434\u6570\u636e\u96c6\u7684\u6700\u5927\u503c\u3002</p> </li> </ol> <p>\u53ef\u9009\u952e\u5305\u62ec\uff1a</p> <ol> <li><code>quantiles</code> \uff1a\u5305\u542b\u6b64\u5c0f\u63d0\u7434\u6570\u636e\u96c6\u5206\u4f4d\u6570\u503c\u7684\u6807\u91cf\u5217\u8868\u3002</li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%B0%8F%E6%8F%90%E7%90%B4%E5%9B%BE%EF%BC%88violinplot%E3%80%81violin%EF%BC%89/#seabornviolinplot","title":"Seaborn\uff1aviolinplot","text":"<p>seaborn.violinplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.violinplot(data=None, *, x=None, y=None, hue=None, order=None, hue_order=None, orient=None, color=None, palette=None, saturation=0.75, fill=True, inner='box', split=False, width=0.8, dodge='auto', gap=0, linewidth=None, linecolor='auto', cut=2, gridsize=100, bw_method='scott', bw_adjust=1, density_norm='area', common_norm=False, hue_norm=None, formatter=None, log_scale=None, native_scale=False, legend='auto', inner_kws=None, ax=None, **kwargs)</code></p> <ol> <li> <p>**inner\uff1a**\u5c0f\u63d0\u7434\u5185\u90e8\u6570\u636e\u7684\u8868\u793a\u3002<code>\"box\"</code>\uff08\u9ed8\u8ba4\uff09\u7ed8\u5236\u4e00\u4e2a\u5fae\u578b\u7bb1\u7ebf\u56fe\uff1b<code>\"quart\"</code>\u663e\u793a\u6570\u636e\u7684\u56db\u5206\u4f4d\u6570\uff1b<code>\"point\"</code>\u6216<code>\"stick\"</code>\u663e\u793a\u6bcf\u4e2a\u89c2\u6d4b\u503c\u3002</p> </li> <li> <p>**inner_kws\uff1a**\u7528\u4e8e\u201c\u5185\u90e8\u201d\u56fe\u7ed8\u5236\u7684\u5173\u952e\u8bcd\u53c2\u6570\u5b57\u5178\uff0c\u4f20\u9012\u7ed9\u4ee5\u4e0b\u4e4b\u4e00\uff1a<code>matplotlib.collections.LineCollection</code>(<code>inner=\"stick\"</code>)\u3001<code>matplotlib.axes.Axes.scatter()</code>(<code>inner=\"point\"</code>)\u3001<code>matplotlib.axes.Axes.plot()</code>(<code>inner=\"quart\"</code>\u6216<code>inner=\"box\"</code>)\u3002\u6b64\u5916\uff0c\u5f53\u4f7f\u7528 <code>inner=\"box\"</code> \u65f6\uff0c\u5173\u952e\u8bcd<code>box_width</code> \u3001<code>whis_width</code>\u548c<code>marker</code>\u5728\u201c\u7bb1\u7ebf\u56fe\u201d\u7684\u7ec4\u6210\u90e8\u5206\u4e2d\u4f1a\u5f97\u5230\u7279\u6b8a\u5904\u7406\u3002</p> </li> <li> <p>split\uff1a**\u4f7f\u7528 <code>hue</code> \u65f6\u663e\u793a\u975e\u955c\u50cf\u5206\u5e03\uff0c**\u4ea4\u66ff\u663e\u793a\u4e24\u4fa7\u3002\u9ed8\u8ba4False\u3002</p> </li> <li> <p>cut\uff1a**\u5728\u5e26\u5bbd\u5355\u4f4d\u4e2d\uff0c\u6269\u5c55\u5bc6\u5ea6**\u8d85\u8fc7\u6781\u7aef\u6570\u636e\u70b9\u7684\u8ddd\u79bb\u3002\u9ed8\u8ba4\u4e3a2\u3002\u8bbe\u7f6e\u4e3a 0 \u4ee5\u9650\u5236\u5c0f\u63d0\u7434\u56fe\u5728\u6570\u636e\u8303\u56f4\u5185\u3002</p> </li> <li> <p>**gridsize\uff1a**\u7528\u4e8e\u8bc4\u4f30\u6838\u5bc6\u5ea6\u4f30\u8ba1\uff08KDE\uff09\u7684\u79bb\u6563\u7f51\u683c\u4e2d\u7684\u70b9\u6570\uff08\u540c\u4e0a<code>points</code>\u53c2\u6570\uff09\u3002</p> </li> <li> <p>bw_adjust\uff1a**\u7f29\u653e\u5e26\u5bbd\u7684\u56e0\u5b50\uff0c\u7528\u4e8e**\u8c03\u6574\u5e73\u6ed1\u5ea6\u3002\u9ed8\u8ba4\u4e3a1\u3002</p> </li> <li> <p>**density_norm\uff1a**\u7528\u4e8e\u5c06\u6bcf\u4e2a\u5bc6\u5ea6\u5f52\u4e00\u5316\u7684\u65b9\u6cd5\uff0c\u4ee5\u786e\u5b9a\u5c0f\u63d0\u7434\u7684\u5bbd\u5ea6\u3002\u5982\u679c\u4e3a<code>'area'</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u5219\u6bcf\u4e2a\u5c0f\u63d0\u7434\u5c06\u5177\u6709\u76f8\u540c\u7684\u9762\u79ef\u3002\u5982\u679c\u4e3a<code>'count'</code>\uff0c\u5219\u5bbd\u5ea6\u5c06\u4e0e\u89c2\u5bdf\u503c\u7684\u6570\u91cf\u6210\u6bd4\u4f8b\u3002\u5982\u679c\u4e3a<code>'width'</code>\uff0c\u5219\u6bcf\u4e2a\u5c0f\u63d0\u7434\u5c06\u5177\u6709\u76f8\u540c\u7684\u5bbd\u5ea6\u3002</p> </li> <li> <p>**common_norm\uff1a**\u5f53 <code>True</code> \u65f6\uff0c\u5bf9\u6240\u6709\u5c0f\u63d0\u7434\u7684\u5bc6\u5ea6\u8fdb\u884c\u5f52\u4e00\u5316\u3002\u9ed8\u8ba4False\u3002</p> </li> </ol> <p><code>**kwargs</code>\u5176\u5b83\u7528\u4e8e\u5c0f\u63d0\u7434\u56fe\u5757\u7684\u5173\u952e\u8bcd\u53c2\u6570\u4f20\u9012\u7ed9<code>matplotlib.axes.Axes.fill_between()</code>\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.violinplot(data=penguins,\n               x='species',\n               y='body_mass_g',\n               orient=\"x\",\n               order=['Gentoo', 'Chinstrap', 'Adelie'],\n               formatter=lambda x: x+\" penguins\",\n\n               hue='sex',\n               hue_order=['FEMALE', 'MALE'],\n               fill=True,\n               palette={\"FEMALE\": \"#facc87\", \"MALE\": \"#b1fa87\"},\n               saturation=0.75,\n\n               width=0.5,\n               dodge='auto',\n               gap=0.3,\n\n               linecolor='k',\n               linewidth=1.5,\n               inner='box',\n               inner_kws={'marker': '*',\n                          'markersize': 10,\n                          'color': 'r',\n                          'box_width': 5,\n                          'whis_width': 1},\n               split=True,\n               cut=0,\n               gridsize=100,\n               bw_method='scott',\n               bw_adjust=1,\n               density_norm='count',\n               common_norm=False,\n\n               log_scale=False,\n               native_scale=True,\n\n               ax=ax\n               )\n\"\"\"\n&lt;Axes: xlabel='species', ylabel='body_mass_g'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%8A%96%E5%8A%A8%E6%95%A3%E7%82%B9%E5%9B%BE%EF%BC%88stripplot%EF%BC%89%E4%B8%8E%E8%9C%82%E7%BE%A4%E5%9B%BE%EF%BC%88swarmplot%EF%BC%89/","title":"\u6296\u52a8\u6563\u70b9\u56fe\uff08stripplot\uff09\u4e0e\u8702\u7fa4\u56fe\uff08swarmplot\uff09","text":"<p>penguins.csv</p> <p></p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\npenguins = pd.read_csv('../Data/penguins.csv')\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%8A%96%E5%8A%A8%E6%95%A3%E7%82%B9%E5%9B%BE%EF%BC%88stripplot%EF%BC%89%E4%B8%8E%E8%9C%82%E7%BE%A4%E5%9B%BE%EF%BC%88swarmplot%EF%BC%89/#seabornstripplot","title":"Seaborn\uff1astripplot","text":"<p>seaborn.stripplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.stripplot(data=None, *, x=None, y=None, hue=None, order=None, hue_order=None, jitter=True, dodge=False, orient=None, color=None, palette=None, size=5, edgecolor=&lt;default&gt;, linewidth=0, hue_norm=None, log_scale=None, native_scale=False, formatter=None, legend='auto', ax=None, **kwargs)</code></p> <p>\u4f7f\u7528**\u6296\u52a8\uff08jitter\uff09**\u6765\u51cf\u5c11\u91cd\u53e0\uff0c\u4ee5\u7ed8\u5236\u4e00\u4e2a\u5206\u7c7b\u6563\u70b9\u56fe\u3002\u8be5\u56fe\u53ef\u4ee5\u5355\u72ec\u7ed8\u5236\uff0c\u4f46\u5728\u9700\u8981\u540c\u65f6\u5c55\u793a\u6240\u6709\u89c2\u6d4b\u503c\u548c\u5e95\u5c42\u5206\u5e03\u7684\u67d0\u4e9b\u8868\u793a\u65f6\uff0c\u5b83\u4e5f\u662f\u7bb1\u5f62\u56fe\u6216\u5c0f\u63d0\u7434\u56fe\u7684\u826f\u597d\u8865\u5145\u3002</p> <ol> <li> <p>jitter\uff1a\u6dfb\u52a0\u7684\u6296\u52a8\u91cf\uff08\u4ec5\u6cbf\u5206\u7c7b\u8f74\uff09\u3002\u5f53\u6709\u5f88\u591a\u70b9\u4e14\u5b83\u4eec\u91cd\u53e0\u65f6\uff0c\u8fd9\u5f88\u6709\u7528\uff0c\u8fd9\u6837\u66f4\u5bb9\u6613\u770b\u5230\u5206\u5e03\u3002\u53ef\u4ee5\u6307\u5b9a\u6296\u52a8\u91cf\uff08\u652f\u6301\u5747\u5300\u968f\u673a\u53d8\u91cf\u5bbd\u5ea6\u7684\u4e00\u534a\uff09\uff0c\u6216\u4f7f\u7528<code>True</code>\u4f5c\u4e3a\u9ed8\u8ba4\u503c\u3002</p> </li> <li> <p>**dodge\uff1a**\u5f53\u5206\u914d <code>hue</code> \u53d8\u91cf\u65f6\uff0c\u5c06\u6b64\u8bbe\u7f6e\u4e3a <code>True</code> \u5c06\u6cbf\u5206\u7c7b\u8f74\u5206\u79bb\u4e0d\u540c\u8272\u8c03\u7ea7\u522b\u7684\u6761\u5e26\u5e76\u7f29\u5c0f\u6bcf\u4e2a\u6761\u5e26\u7684\u5206\u914d\u7a7a\u95f4\u3002\u5426\u5219\uff0c\u6bcf\u4e2a\u7ea7\u522b\u7684\u70b9\u5c06\u7ed8\u5236\u5728\u540c\u4e00\u6761\u5e26\u4e2d\u3002</p> </li> <li> <p>**size\uff1a**\u70b9\u7684\u534a\u5f84\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09\u3002</p> </li> <li> <p>**edgecolor\uff1a**\u6bcf\u4e2a\u70b9\u8fb9\u7f18\u7ebf\u6761\u7684\u989c\u8272\u3002\u5982\u679c\u4f20\u9012<code>\"gray\"</code> \uff0c\u5219\u4eae\u5ea6\u7531\u70b9\u672c\u8eab\u7684\u989c\u8272\u8c03\u8272\u677f\u786e\u5b9a\u3002\u6ce8\u610f\uff0c <code>stripplot</code>\u9ed8\u8ba4<code>linewidth=0</code> \uff0c\u56e0\u6b64\u53ea\u6709\u975e\u96f6\u7ebf\u5bbd\u65f6\u8fb9\u989c\u8272\u624d\u53ef\u89c1\u3002</p> </li> <li> <p>**linewidth\uff1a**\u8fb9\u7f18\u7ebf\u6761\u5bbd\u5ea6\u3002</p> </li> </ol> <p><code>**kwargs</code>\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9<code>matplotlib.axes.Axes.scatter()</code>\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.stripplot(data=penguins,\n              x='species',\n              y='body_mass_g',\n              orient=\"x\",\n              order=['Gentoo', 'Chinstrap', 'Adelie'],\n              formatter=lambda x: x+\" penguins\",\n\n              hue='sex',\n              hue_order=['FEMALE', 'MALE'],\n              palette={\"FEMALE\": \"#facc87\", \"MALE\": \"#b1fa87\"},\n\n              jitter=0.2,\n              dodge=True,\n              size=5,\n              edgecolor='k',\n              linewidth=1.5,\n\n              log_scale=False,\n              native_scale=True,\n\n              ax=ax\n              )\n\"\"\"\n&lt;Axes: xlabel='species', ylabel='body_mass_g'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%8A%96%E5%8A%A8%E6%95%A3%E7%82%B9%E5%9B%BE%EF%BC%88stripplot%EF%BC%89%E4%B8%8E%E8%9C%82%E7%BE%A4%E5%9B%BE%EF%BC%88swarmplot%EF%BC%89/#seabornswarmplot","title":"Seaborn\uff1aswarmplot","text":"<p>seaborn.swarmplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.swarmplot(data=None, *, x=None, y=None, hue=None, order=None, hue_order=None, dodge=False, orient=None, color=None, palette=None, size=5, edgecolor=None, linewidth=0, hue_norm=None, log_scale=None, native_scale=False, formatter=None, legend='auto', warn_thresh=0.05, ax=None, **kwargs)</code></p> <p>\u7ed8\u5236\u4e00\u4e2a\u8c03\u6574\u70b9\u4ee5\u907f\u514d\u91cd\u53e0\u7684\u5206\u7c7b\u6563\u70b9\u56fe\u3002\u6b64\u51fd\u6570\u4e0e <code>stripplot()</code>\u76f8\u4f3c\uff0c\u4f46\u70b9\uff08\u4ec5\u6cbf\u7c7b\u522b\u8f74\uff09\u88ab\u8c03\u6574\uff0c\u4ee5\u4f7f\u5b83\u4eec\u4e0d\u91cd\u53e0\u3002\u8fd9\u53ef\u4ee5\u66f4\u597d\u5730\u8868\u793a\u503c\u7684\u5206\u5e03\uff0c\u4f46\u4e0d\u9002\u4e8e\u5927\u91cf\u89c2\u6d4b\u503c\u7684\u7f29\u653e\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u56fe\u8868\u6709\u65f6\u88ab\u79f0\u4e3a**\u201c\u8702\u7fa4\u56fe\u201d\uff08beeswarm\uff09**\u3002\u8702\u7fa4\u56fe\u53ef\u4ee5\u5355\u72ec\u7ed8\u5236\uff0c\u4f46\u5b83\u5728\u9700\u8981\u540c\u65f6\u5c55\u793a\u6240\u6709\u89c2\u6d4b\u503c\u548c\u5e95\u5c42\u5206\u5e03\u7684\u7bb1\u5f62\u56fe\u6216\u5c0f\u63d0\u7434\u56fe\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8865\u5145\u3002</p> <p>\u5f53\u70b9\u7684\u5c40\u90e8\u5bc6\u5ea6\u8fc7\u9ad8\u65f6\uff0c\u5b83\u4eec\u5c06\u88ab\u8feb\u5728\u6bcf\u4e2a\u8702\u7fa4\u201c\u7f1d\u9699\u201d\u4e2d\u91cd\u53e0\uff0c\u5e76\u4f1a\u53d1\u51fa\u8b66\u544a\u3002\u51cf\u5c0f\u70b9\u7684\u5c3a\u5bf8\u53ef\u4ee5\u5e2e\u52a9\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p><code>**kwargs</code>\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9<code>matplotlib.axes.Axes.scatter()</code>\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.swarmplot(data=penguins,\n              x='species',\n              y='body_mass_g',\n              orient=\"x\",\n              order=['Gentoo', 'Chinstrap', 'Adelie'],\n              formatter=lambda x: x+\" penguins\",\n\n              hue='sex',\n              hue_order=['FEMALE', 'MALE'],\n              palette={\"FEMALE\": \"#facc87\", \"MALE\": \"#b1fa87\"},\n\n              dodge=True,\n              size=5,\n              edgecolor='k',\n              linewidth=1.5,\n              warn_thresh=0.05,\n\n              log_scale=False,\n              native_scale=True,\n\n              ax=ax\n              )\n\"\"\"\n&lt;Axes: xlabel='species', ylabel='body_mass_g'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88bar%E3%80%81barh%E3%80%81barplot%E3%80%81countplot%EF%BC%89%E4%B8%8E%E7%82%B9%E5%9B%BE%EF%BC%88pointplot%EF%BC%89/","title":"\u67f1\u72b6\u56fe\uff08bar\u3001barh\u3001barplot\u3001countplot\uff09\u4e0e\u70b9\u56fe\uff08pointplot\uff09","text":"<p>penguins.csv</p> <p></p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\npenguins = pd.read_csv('../Data/penguins.csv')\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88bar%E3%80%81barh%E3%80%81barplot%E3%80%81countplot%EF%BC%89%E4%B8%8E%E7%82%B9%E5%9B%BE%EF%BC%88pointplot%EF%BC%89/#matplotlibbarbarh","title":"Matplotlib\uff1abar/barh","text":"<p>matplotlib.axes.Axes.bar \u2014 Matplotlib 3.7.0 documentation</p> <p>matplotlib.axes.Axes.bar \u2014 Matplotlib 3.7.0 documentation</p> <p>matplotlib.axes.Axes.barh \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.barh \u2014 Matplotlib 3.10.1 documentation</p> <p><code>bar(x, height, width=0.8, bottom=0, *, align='center', data=None, **kwargs)</code></p> <p><code>barh(y, width, height=0.8, left=0, *, align='center', data=None, **kwargs)</code></p> <p>\u8be5\u51fd\u6570\u7ee7\u627f\u81ea<code>Rectangle</code>\u7c7b\uff0c<code>**kwargs</code>\u662f\u4e00\u4e2a\u53ef\u7528<code>Rectangle</code>\u5c5e\u6027\u7684\u5217\u8868\uff0c\u951a\u70b9\u53c2\u6570<code>xy</code>\u662f\u6bcf\u4e2a\u67f1\u7684\u5de6\u4e0b\u89d2\u5750\u6807\uff0c\u4e14\u65cb\u8f6c\u951a\u70b9\u8bbe\u7f6e\u4e5f\u53ea\u80fd\u662f<code>'xy'</code>\uff08\u9ed8\u8ba4\uff09\u3002</p> <p>\u7ed8\u5236\u5782\u76f4/\u6c34\u5e73\u6761\u5f62/\u67f1\u72b6\u56fe\u3002\u67f1\u7684\u4f4d\u7f6e\u7531 <code>x</code>/<code>y</code> \u548c\u7ed9\u5b9a\u7684<code>align</code>\u786e\u5b9a\uff0c\u5c3a\u5bf8\u7531<code>height</code>\u548c<code>width</code>\u7ed9\u51fa\u3002\u5782\u76f4/\u6c34\u5e73\u57fa\u7ebf\u662f <code>bottom</code>/<code>left</code>\uff08\u9ed8\u8ba4\u4e3a 0\uff09\u3002\u8bb8\u591a\u53c2\u6570\u53ef\u4ee5\u63a5\u53d7\u5355\u4e2a\u503c\uff0c\u5e94\u7528\u4e8e\u6240\u6709\u67f1\uff0c\u6216\u8005\u63a5\u53d7\u4e00\u4e2a\u5e8f\u5217\u503c\uff0c\u6bcf\u4e2a\u67f1\u4e00\u4e2a\u503c\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88bar%E3%80%81barh%E3%80%81barplot%E3%80%81countplot%EF%BC%89%E4%B8%8E%E7%82%B9%E5%9B%BE%EF%BC%88pointplot%EF%BC%89/#_1","title":"\u57fa\u7840\u7ed8\u5236","text":"<p>\u6761\u5f62/\u67f1\u72b6\u56fe\u5e38\u7528\u4e8e\u5206\u7c7b\u6570\u636e\uff0c\u4f8b\u5982\u6761\u5f62\u5e95\u90e8/\u5de6\u4fa7\u7684\u5b57\u7b26\u4e32\u6807\u7b7e\u3002\u53ef\u4ee5\u76f4\u63a5\u5c06\u5b57\u7b26\u4e32\u5217\u8868\u63d0\u4f9b\u7ed9 <code>x</code>/<code>y</code> \u3002 <code>bar(['A', 'B', 'C'], [1, 2, 3])</code>/<code>barh(['A', 'B', 'C'], [1, 2, 3])</code> \u901a\u5e38\u6bd4 <code>bar(range(3), [1, 2, 3], tick_label=['A', 'B', 'C'])</code>/<code>barh(range(3), [1, 2, 3], tick_label=['A', 'B', 'C'])</code>\u7b80\u77ed\u4e14\u65b9\u4fbf\u3002\u53ea\u8981\u540d\u79f0\u552f\u4e00\uff0c\u5b83\u4eec\u662f\u7b49\u6548\u7684\u3002\u663e\u5f0f\u7684 <code>tick_label</code> \u6807\u8bb0\u4f1a\u6309\u7167\u7ed9\u5b9a\u7684\u987a\u5e8f\u7ed8\u5236\u540d\u79f0\u3002\u7136\u800c\uff0c\u5f53\u5206\u7c7b <code>x</code>/<code>y</code> \u6570\u636e\u4e2d\u6709\u91cd\u590d\u503c\u65f6\uff0c\u8fd9\u4e9b\u503c\u6620\u5c04\u5230\u76f8\u540c\u7684\u6570\u503c <code>x</code>/<code>y</code>  \u5750\u6807\uff0c\u56e0\u6b64\u76f8\u5e94\u7684\u6761\u5f62\u4f1a\u91cd\u53e0\u7ed8\u5236\u3002</p> <ol> <li> <p><code>height</code>\u8868\u793a\uff08\u6bcf\u4e2a\uff09\u67f1\u7684**\u9ad8\u5ea6**\u3002\u6ce8\u610f\uff0c\u5982\u679c<code>bottom</code>/<code>y</code>\u6709\u5355\u4f4d\uff08\u4f8b\u5982\u65e5\u671f\u65f6\u95f4\uff09\uff0c\u5219<code>height</code>\u5e94\u4ee5<code>bottom</code>/<code>y</code>\u503c\u7684\u5dee\u503c\u4e3a\u5355\u4f4d\uff08\u4f8b\u5982\u65f6\u95f4\u5dee\uff09\u3002</p> </li> <li> <p><code>width</code>\u8868\u793a\uff08\u6bcf\u4e2a\uff09\u67f1\u7684**\u5bbd\u5ea6**\u3002\u6ce8\u610f\uff0c\u5982\u679c <code>x</code>/<code>left</code>\u6709\u5355\u4f4d\uff08\u4f8b\u5982\u65e5\u671f\u65f6\u95f4\uff09\uff0c\u5219<code>width</code>\u5e94\u4ee5<code>x</code>/<code>left</code>\u503c\u7684\u5dee\u503c\u4e3a\u5355\u4f4d\uff08\u4f8b\u5982\u65f6\u95f4\u5dee\uff09\u3002</p> </li> <li> <p><code>bottom</code>/<code>left</code>\u8868\u793a\uff08\u6bcf\u4e2a\uff09\u67f1\u7684**\u5e95\u8fb9y\u5750\u6807/\u5de6\u4fa7\u8fb9x\u5750\u6807**\u3002\u6ce8\u610f\uff0c\u5982\u679c<code>bottom</code>/<code>left</code>\u6709\u5355\u4f4d\uff0c\u5219 y / x\u8f74\u5c06\u83b7\u5f97\u9002\u5408\u8fd9\u4e9b\u5355\u4f4d\u7684\u5b9a\u4f4d\u5668\u548c\u683c\u5f0f\u5316\u5668\uff08\u4f8b\u5982\u65e5\u671f\u6216\u5206\u7c7b\uff09\u3002</p> </li> <li> <p><code>align</code>\u8868\u793a\uff08\u6bcf\u4e2a\uff09\u67f1**\u4e0e<code>x</code>/<code>y</code>**\u5750\u6807\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002<code>'center'</code>\u5c06\u57fa\u7ebf\u5c45\u4e2d\u5bf9\u9f50\u5230 <code>x</code>/<code>y</code>\u4f4d\u7f6e\u3002<code>'edge'</code>\u5c06\u67f1\u7684\u5de6\u4fa7\u8fb9\u7f18\u4e0e <code>x</code>/<code>y</code>\u4f4d\u7f6e\u5bf9\u9f50\u3002\u8981\u5c06\u67f1\u5bf9\u9f50\u5230\u53f3\u4fa7\u8fb9\u7f18\uff0c\u5e94\u4f20\u5165\u4e00\u4e2a\u8d1f<code>width</code>/<code>height</code>\u5e76\u4f7f\u7528 <code>align='edge'</code> \u3002</p> </li> </ol> <p>\u5982\u679c\u8bbe\u7f6e<code>log</code>\u53c2\u6570\u4e3aTrue\uff0c\u5219\u5bf9y\u8f74\u8fdb\u884c\u5bf9\u6570\u7f29\u653e\u3002<code>data</code>\u53c2\u6570\u540c\u524d\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.bar(x=[0, 1, 2],\n       align='center',\n       bottom=[1, 2, 3],\n       height=[1, 2, 3],\n       width=[0.2, 0.4, 0.8]\n       )\n\"\"\"\n&lt;BarContainer object of 3 artists&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.bar(x=[0, 1, 2],\n       align='center',\n       bottom=[1, 2, 3],\n       height=[1, 2, 3],\n       width=[0.2, 0.4, 0.8],\n       tick_label=[\"A\", \"B\", \"C\"]\n       )\n# ax.bar(x=[\"A\", \"B\", \"C\"],\n#        align='center',\n#        bottom=[1, 2, 3],\n#        height=[1, 2, 3],\n#        width=[0.2, 0.4, 0.8]\n#        )\n\"\"\"\n&lt;BarContainer object of 3 artists&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.barh(y=[0, 1, 2],\n        align='center',\n        left=[1, 2, 3],\n        width=[1, 2, 3],\n        height=[0.2, 0.4, 0.8]\n        )\n\"\"\"\n&lt;BarContainer object of 3 artists&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.barh(y=[0, 1, 2],\n        align='center',\n        left=[1, 2, 3],\n        width=[1, 2, 3],\n        height=[0.2, 0.4, 0.8],\n        tick_label=[\"A\", \"B\", \"C\"]\n        )\n# ax.barh(y=[\"A\", \"B\", \"C\"],\n#         align='center',\n#         left=[1, 2, 3],\n#         width=[1, 2, 3],\n#         height=[0.2, 0.4, 0.8]\n#         )\n\"\"\"\n&lt;BarContainer object of 3 artists&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88bar%E3%80%81barh%E3%80%81barplot%E3%80%81countplot%EF%BC%89%E4%B8%8E%E7%82%B9%E5%9B%BE%EF%BC%88pointplot%EF%BC%89/#_2","title":"\u67f1\u5916\u89c2","text":"<p>\u53c2\u8003<code>Rectangle</code>\u7c7b\u53c2\u6570\u3002</p> <ol> <li> <p>angle\uff1a\u7ed5\u951a\u70b9\u65cb\u8f6c\u89d2\u5ea6\u3002</p> </li> <li> <p>fill\uff1a\u662f\u5426\u586b\u5145\u3002</p> </li> <li> <p>facecolor/color\uff1a\uff08\u6bcf\u4e2a\uff09\u67f1\u7684\u586b\u5145\u8272\u3002\u5982\u679c\u4e24\u8005\u90fd\u7ed9\u51fa\uff0c\u5219 facecolor \u4f18\u5148\u3002</p> </li> <li> <p>linestyle\uff1a\u8fb9\u7f18\u7ebf\u578b\u3002</p> </li> <li> <p>linewidth\uff1a\uff08\u6bcf\u4e2a\uff09\u67f1\u7684\u8fb9\u7f18\u7ebf\u5bbd\u5ea6\u3002\u5982\u679c\u4e3a 0\uff0c\u5219\u4e0d\u7ed8\u5236\u8fb9\u7f18\u3002</p> </li> <li> <p>hatch\uff1a\uff08\u6bcf\u4e2a\uff09\u67f1\u7684\u6846\u5185\u7ebf\u578b\u3002</p> </li> <li> <p>hatch_linewidth\uff1a\u6846\u5185\u7ebf\u5bbd\u3002</p> </li> <li> <p>edgecolor\uff1a\uff08\u6bcf\u4e2a\uff09\u67f1\u7684\u8fb9\u7f18\u8272\u3002</p> </li> <li> <p>alpha\uff1a\u900f\u660e\u5ea6\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.bar(x=[\"A\", \"B\", \"C\"],\n       align='center',\n       bottom=[1, 2, 3],\n       height=[1, 2, 3],\n       width=[0.2, 0.4, 0.8],\n\n       # Rectangle\u53c2\u6570\n       angle=45,\n       fill=True,\n       facecolor=['r', 'g', 'b'],\n       linestyle='--',\n       linewidth=[2, 6, 10],\n       hatch=['/', '-', '+'],\n       hatch_linewidth=2,\n       edgecolor=['c', 'k', 'm'],\n       alpha=0.5\n       )\n\"\"\"\n&lt;BarContainer object of 3 artists&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88bar%E3%80%81barh%E3%80%81barplot%E3%80%81countplot%EF%BC%89%E4%B8%8E%E7%82%B9%E5%9B%BE%EF%BC%88pointplot%EF%BC%89/#_3","title":"\u56fe\u4f8b\u6807\u7b7e","text":"<p>\u5355\u4e2a\u6807\u7b7e\u9644\u52a0\u5230\u7ed3\u679c <code>BarContainer</code> \u4e0a\uff0c\u4f5c\u4e3a\u6574\u4e2a\u6570\u636e\u96c6\u7684\u6807\u7b7e\u3002\u5982\u679c\u63d0\u4f9b\u6807\u7b7e\u5217\u8868\uff0c\u5219\u5fc5\u987b\u4e0e <code>x</code> \u7684\u957f\u5ea6\u76f8\u540c\uff0c\u5373\u4e3a\u6bcf\u4e2a\u67f1\u6dfb\u52a0\u6807\u7b7e\u3002\u91cd\u590d\u7684\u6807\u7b7e\u4e0d\u4f1a\u53bb\u91cd\uff0c\u4f1a\u5bfc\u81f4\u91cd\u590d\u7684\u6807\u7b7e\u6761\u76ee\uff0c\u56e0\u6b64\u6700\u597d\u5728\u6bcf\u4e2a\u67f1\u5177\u6709\u4e0d\u540c\u6837\u5f0f\uff08\u4f8b\u5982\uff0c\u901a\u8fc7\u4f20\u9012\u989c\u8272\u5217\u8868\uff09\u65f6\u4f7f\u7528\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.bar(x=[\"A\", \"B\", \"C\"],\n       align='center',\n       bottom=0,\n       height=[1, 2, 3],\n       width=0.2,\n\n       label=\"bar\"\n       )\n\"\"\"\n&lt;BarContainer object of 3 artists&gt;\n\"\"\"\nax.legend()\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nwidth = 0.2\ninner = width + 0.08\n\nax.bar(x=[i + n * inner for i in range(3) for n in range(3)],\n       align='center',\n       bottom=0,\n       height=range(1, 10),\n       width=width,\n       tick_label=[\"\", \"A\", \"\", \"\", \"B\", \"\", \"\", \"C\", \"\"],\n\n       facecolor=['r', 'g', 'b'] * 3,\n       label=['r', 'g', 'b', '_r', '_g', '_b', '_r', '_g', '_b']\n       )\n\"\"\"\n&lt;BarContainer object of 3 artists&gt;\n\"\"\"\nax.legend()\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88bar%E3%80%81barh%E3%80%81barplot%E3%80%81countplot%EF%BC%89%E4%B8%8E%E7%82%B9%E5%9B%BE%EF%BC%88pointplot%EF%BC%89/#_4","title":"\u8bef\u5dee\u7ebf","text":"<p>**error_kw\uff1a**\u4f20\u9012\u7ed9<code>errorbar</code>\u51fd\u6570\u7684\u5173\u952e\u5b57\u53c2\u6570\u5b57\u5178\u3002\u5728\u6b64\u5904\u5b9a\u4e49\u7684 ecolor \u6216 capsize \u503c\u4f18\u5148\u4e8e\u72ec\u7acb\u7684\u5173\u952e\u5b57\u53c2\u6570\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.bar(x=[\"A\", \"B\", \"C\"],\n       align='center',\n       bottom=0,\n       height=[1, 2, 3],\n       width=0.2,\n\n       xerr=[0.1, 0.2, 0.3],\n       yerr=[0.2, 0.3, 0.4],\n       error_kw={'ecolor': 'r',\n                 'elinewidth': 2,\n                 'capsize': 10,\n                 'capthick': 2}\n       )\n\"\"\"\n&lt;BarContainer object of 3 artists&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88bar%E3%80%81barh%E3%80%81barplot%E3%80%81countplot%EF%BC%89%E4%B8%8E%E7%82%B9%E5%9B%BE%EF%BC%88pointplot%EF%BC%89/#bar_label","title":"\u67f1\u6807\u7b7e\uff08bar_label\uff09","text":"<p>matplotlib.axes.Axes.bar_label \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.bar_label \u2014 Matplotlib 3.10.1 documentation</p> <p>Bar chart with labels \u2014 Matplotlib 3.10.1 documentation</p> <p><code>bar_label(container, labels=None, *, fmt='%g', label_type='edge', padding=0, **kwargs)</code></p> <p>\u4e3a\u7ed9\u5b9a<code>BarContainer</code>\u7684\u6bcf\u4e2a\u67f1\u6dfb\u52a0\u6807\u7b7e\u3002<code>**kwargs</code>\u4efb\u4f55\u5269\u4f59\u7684\u5173\u952e\u5b57\u53c2\u6570\u90fd\u5c06\u4f20\u9012\u7ed9 <code>Axes.annotate</code> \u3002\u7531\u4e8e\u6807\u7b7e\u4f1a\u81ea\u52a8\u5bf9\u9f50\u5230\u6761\u5f62\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u5bf9\u9f50\u53c2\u6570\u7684\u8bbe\u7f6e\u3002</p> <ol> <li> <p>**container\uff1a**\u5305\u542b\u6240\u6709\u6761\u5f62\u56fe\u548c\u53ef\u9009\u8bef\u5dee\u7ebf\u7684\u5bb9\u5668\uff0c\u901a\u5e38\u7531 <code>bar</code> \u6216 <code>barh</code> \u8fd4\u56de\u3002\u53ef\u4ee5\u901a\u8fc7<code>ax.containers</code>\u6765\u67e5\u770bAxes\u4e2d\u62e5\u6709\u7684<code>BarContainer</code>\u5217\u8868\u3002</p> </li> <li> <p>**labels\uff1a**\u8981\u663e\u793a\u7684\u6807\u7b7e\u6587\u672c\u5217\u8868\u3002\u5982\u679c\u672a\u63d0\u4f9b\uff0c\u5219\u6807\u7b7e\u6587\u672c\u4e3a\u4f7f\u7528 <code>fmt</code>\u683c\u5f0f\u5316\u7684\u6570\u636e\u503c\u3002</p> </li> <li> <p>label_type\uff1a<code>'edge'</code>\uff0c\u6807\u7b7e\u653e\u7f6e\u5728\u67f1\u6bb5\u7684\u7aef\u70b9\u5904\uff0c\u9ed8\u8ba4\u663e\u793a\u7684\u503c\u5c06\u662f\u8be5\u7aef\u70b9\u7684\u4f4d\u7f6e\uff1b<code>'center'</code>\uff0c\u6807\u7b7e\u653e\u7f6e\u5728\u67f1\u6bb5\u7684\u4e2d\u5fc3\uff0c\u9ed8\u8ba4\u663e\u793a\u7684\u503c\u5c06\u662f\u8be5\u6bb5\u7684\u957f\u5ea6\uff08\u9002\u7528\u4e8e\u5806\u53e0\u6761\u5f62\u56fe\uff09\u3002</p> </li> <li> <p>**fmt\uff1a**\u7528\u4e8e\u6807\u7b7e\u7684%\u6216{}\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u6216\u4e00\u4e2a\u5e26\u6709\u503c\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u3002\u5f53 fmt \u662f\u5b57\u7b26\u4e32\u4e14\u53ef\u4ee5\u540c\u65f6\u89e3\u91ca\u8fd9\u4e24\u79cd\u683c\u5f0f\u65f6\uff0c%\u4f18\u5148\u4e8e{}\u3002</p> </li> <li> <p>**padding\uff1a**\u6807\u7b7e\u4e0e\u67f1\u672b\u7aef\u6216\u4e2d\u5fc3\u7684\u8ddd\u79bb\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09\u3002</p> </li> </ol> <pre><code>ax.containers\n\"\"\"\n[&lt;BarContainer object of 3 artists&gt;, &lt;BarContainer object of 3 artists&gt;]\n\"\"\"\n</code></pre> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.bar(x=[\"A\", \"B\", \"C\"],\n       align='center',\n       bottom=0,\n       height=[1, 2, 3],\n       width=0.2\n       )\n\"\"\"\n&lt;BarContainer object of 3 artists&gt;\n\"\"\"\nax.bar(x=[\"A\", \"B\", \"C\"],\n       align='center',\n       bottom=[1, 2, 3],\n       height=[3, 2, 1],\n       width=0.2\n       )\n\"\"\"\n&lt;BarContainer object of 3 artists&gt;\n\"\"\"\n\nax.bar_label(ax.containers[0],\n             labels=['I', 'II', 'III'],\n             label_type='center',\n             fmt=None,\n             padding=0,\n\n             # Annotate\u53c2\u6570\n             fontsize=20,\n             color='r',\n             )\nax.bar_label(ax.containers[1],\n             labels=None,\n             label_type='edge',\n             fmt='{:.2f}',\n             padding=0,\n\n             # Annotate\u53c2\u6570\n             fontsize=20,\n             color='g',\n             )\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88bar%E3%80%81barh%E3%80%81barplot%E3%80%81countplot%EF%BC%89%E4%B8%8E%E7%82%B9%E5%9B%BE%EF%BC%88pointplot%EF%BC%89/#_5","title":"\u6781\u5750\u6807\u67f1\u72b6\u56fe\uff08\u73ab\u7470\u56fe\uff09","text":"<p>\u6781\u5750\u6807\u67f1\u72b6\u56fe\u662f\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\u7684\u67f1\u72b6\u56fe\uff0c\u53c8\u79f0\u5357\u4e01\u683c\u5c14\u73ab\u7470\u56fe(Nightingale Rose Chart)\uff0c\u5b83\u4ee5\u5357\u4e01\u683c\u5c14(Florence Nightingale)\u547d\u540d\uff0c\u5979\u57281858\u5e74\u9996\u6b21\u4f7f\u7528\u8fd9\u79cd\u56fe\u8868\u6765\u5c55\u793a\u6218\u4e89\u671f\u95f4\u58eb\u5175\u6b7b\u4ea1\u539f\u56e0\u7684\u6570\u636e\u3002\u5b83\u5c06\u6570\u636e\u7ed8\u5236\u5728\u6781\u5750\u6807\u7cfb\u4e2d\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u7684\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e2d\u3002\u56fe\u4e2d\u7684\u67f1\u5f62\u901a\u8fc7\u89d2\u5ea6\uff08\u5bf9\u5e94\u6781\u5750\u6807\u7684\u89d2\u5ea6\u53d8\u91cf\u03b8\uff09\u5206\u5e03\u5728\u5706\u5468\u4e0a\uff0c\u9ad8\u5ea6\u8868\u793a\u67d0\u4e00\u53d8\u91cf\u7684\u6570\u503c\u3002\u5b83\u9002\u5408\u5c55\u793a\u5468\u671f\u6027\u3001\u73af\u72b6\u6216\u8005\u5206\u7c7b\u6570\u636e\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88bar%E3%80%81barh%E3%80%81barplot%E3%80%81countplot%EF%BC%89%E4%B8%8E%E7%82%B9%E5%9B%BE%EF%BC%88pointplot%EF%BC%89/#seabornbarplot","title":"Seaborn\uff1abarplot","text":"<p>seaborn.barplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.barplot(data=None, *, x=None, y=None, hue=None, order=None, hue_order=None, estimator='mean', errorbar=('ci', 95), n_boot=1000, seed=None, units=None, weights=None, orient=None, color=None, palette=None, saturation=0.75, fill=True, hue_norm=None, width=0.8, dodge='auto', gap=0, log_scale=None, native_scale=False, formatter=None, legend='auto', capsize=0, err_kws=None, ax=None, **kwargs)</code></p> <p>\u4ee5\u77e9\u5f62\u6761\u5f62\u56fe\u663e\u793a\u70b9\u4f30\u8ba1\u548c\u8bef\u5dee\u3002\u6761\u5f62\u56fe\u8868\u793a\u6570\u503c\u53d8\u91cf\u7684\u6c47\u603b\u6216\u7edf\u8ba1\u4f30\u8ba1\uff0c\u6bcf\u4e2a\u77e9\u5f62\u7684\u9ad8\u5ea6\u8868\u793a\u4f30\u8ba1\u503c\uff0c\u5e76\u4f7f\u7528\u8bef\u5dee\u7ebf\u8868\u793a\u8be5\u4f30\u8ba1\u503c\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u6761\u5f62\u56fe\u5305\u62ec\u8f74\u8303\u56f4\u4e2d\u7684 0\uff0c\u5f53 0 \u662f\u8be5\u53d8\u91cf\u6709\u610f\u4e49\u7684\u53d6\u503c\u65f6\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u51fd\u6570\u5c06\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u89c6\u4e3a\u5206\u7c7b\u53d8\u91cf\uff0c\u5e76\u5728\u76f8\u5173\u8f74\u4e0a\u4ee5\u5e8f\u6570\u4f4d\u7f6e\uff080\uff0c1\uff0c\u2026 n\uff09\u7ed8\u5236\u6570\u636e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e <code>native_scale=True</code> \u6765\u7981\u7528\u6b64\u529f\u80fd\u3002</p> <p><code>**kwargs</code>\u5176\u4ed6\u53c2\u6570\u4f20\u9012\u7ed9<code>matplotlib.patches.Rectangle</code> \uff0c\u540c\u4e0a\u3002</p> <ol> <li> <p>orient\uff1a'v' / 'x' \u6216 'h' / 'y'</p> </li> <li> <p>**width\uff1a**\u5206\u914d\u7ed9 orient \u8f74\u4e0a\u6bcf\u4e2a\u5143\u7d20\u7684\u5bbd\u5ea6\u3002\u5f53 <code>native_scale=True</code> \u65f6\uff0c\u5b83\u4e0e\u539f\u59cb\u5c3a\u5ea6\u4e2d\u4e24\u4e2a\u503c\u4e4b\u95f4\u7684\u6700\u5c0f\u8ddd\u79bb\u76f8\u5bf9\u3002</p> </li> <li> <p>**dodge\uff1a**\u5f53\u4f7f\u7528\u8272\u8c03\u6620\u5c04\u65f6\uff0c\u5143\u7d20\u662f\u5426\u5e94\u8be5\u6cbf orient \u8f74\u53d8\u7a84\u5e76\u79fb\u52a8\u4ee5\u6d88\u9664\u91cd\u53e0\u3002\u5982\u679c <code>\"auto\"</code> \uff0c\u5f53 orient\u8f74\u53d8\u91cf\u4e0e\u5206\u7c7b\u53d8\u91cf\u4ea4\u53c9\u65f6\u8bbe\u7f6e\u4e3a <code>True</code> \uff0c\u5426\u5219\u8bbe\u7f6e\u4e3a <code>False</code> \u3002</p> </li> <li> <p>gap\uff1a\u901a\u8fc7\u6b64\u56e0\u5b50\u5728 orient \u8f74\u4e0a\u7f29\u5c0f\uff0c\u4ee5\u5728 dodged \u5143\u7d20\u4e4b\u95f4\u6dfb\u52a0\u95f4\u9699\u3002</p> </li> <li> <p>**log_scale\uff1a**\u8bbe\u7f6e\u5750\u6807\u8f74\u7f29\u653e\u4e3a\u5bf9\u6570\u7f29\u653e\u3002\u5355\u4e2a\u503c\uff08bool\u503c\u6216\u6570\u503c\uff09\u8bbe\u7f6e\u56fe\u4e2d\u7684\u6240\u6709\u6570\u503c\u8f74\u3002\u4e00\u5bf9\u503c\uff08bool\u503c\u6216\u6570\u503c\uff09\u72ec\u7acb\u8bbe\u7f6e\u6bcf\u4e2a\u8f74\u3002\u6570\u503c\u88ab\u89e3\u91ca\u4e3a\u6240\u9700\u7684\u5e95\u6570\uff08\u9ed8\u8ba4\u4e3a 10\uff09\u3002\u5f53\u4e3a <code>None</code> \u6216 <code>False</code> \u65f6\uff0cseaborn \u5c06\u4f7f\u7528\u73b0\u6709\u7684 Axes\u7f29\u653e\u3002</p> </li> <li> <p>**native_scale\uff1a**\u5f53\u4e3a True \u65f6\uff0c\u5206\u7c7b\u8f74\u4e0a\u7684\u6570\u503c\u6216\u65e5\u671f\u65f6\u95f4\u503c\u5c06\u4fdd\u6301\u5176\u539f\u59cb\u523b\u5ea6\uff0c\u800c\u4e0d\u662f\u8f6c\u6362\u4e3a\u56fa\u5b9a\u7d22\u5f15\u3002</p> </li> <li> <p>**formatter\uff1a**\u5c06\u5206\u7c7b\u6570\u636e\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u3002\u5f71\u54cd\u5206\u7ec4\u548c\u523b\u5ea6\u6807\u7b7e\u3002</p> </li> <li> <p>**capsize\uff1a**\u8bef\u5dee\u7ebf'\u5e3d'\u7684\u5bbd\u5ea6\uff0c\u76f8\u5bf9\u4e8e\u6761\u5f62\u95f4\u8ddd\u3002</p> </li> <li> <p>**err_kws\uff1a**\u7528\u4e8e\u8bef\u5dee\u7ebf\u7ed8\u5236\u7684 <code>matplotlib.lines.Line2D</code> \u53c2\u6570\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\ndata = pd.Series([1, 2, 3], index=[\"A\", \"B\", \"C\"])\n\"\"\"\nA    1\nB    2\nC    3\ndtype: int64\n\"\"\"\n\nsns.barplot(data=data,\n            width=0.2,\n            ax=ax\n            )\n\"\"\"\n&lt;Axes: &gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\ndata = pd.DataFrame({\"A\": np.linspace(1, 100, 50),\n                     \"B\": np.linspace(1, 50, 50),\n                     \"C\": np.linspace(1, 200, 50)})\n\"\"\"\n             A     B           C\n0     1.000000   1.0    1.000000\n1     3.020408   2.0    5.061224\n2     5.040816   3.0    9.122449\n3     7.061224   4.0   13.183673\n4     9.081633   5.0   17.244898\n...\n45   91.918367  46.0  183.755102\n46   93.938776  47.0  187.816327\n47   95.959184  48.0  191.877551\n48   97.979592  49.0  195.938776\n49  100.000000  50.0  200.000000\n\"\"\"\n\nsns.barplot(data=data,\n            width=0.2,\n            ax=ax\n            )\n\"\"\"\n&lt;Axes: &gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.barplot(data=penguins,\n            x=\"species\",\n            y=\"body_mass_g\",\n            orient=\"x\",\n            order=['Gentoo', 'Chinstrap', 'Adelie'],\n            formatter=lambda x: x+\" penguins\",\n\n            hue='sex',\n            hue_order=['FEMALE', 'MALE'],\n            fill=True,\n            palette={\"FEMALE\": \"#facc87\", \"MALE\": \"#b1fa87\"},\n            saturation=0.75,\n\n            estimator='mean',\n            errorbar=('ci', 95),\n            capsize=0.2,\n            err_kws={\"linestyle\": \"--\",\n                     \"linewidth\": 2,\n                     \"color\": \"r\"},\n            n_boot=1000,\n            seed=0,\n            units=None,\n            weights=None,\n\n            width=0.5,\n            dodge='auto',\n            gap=0.3,\n\n            log_scale=False,\n            native_scale=True,\n\n            ax=ax\n            )\n\"\"\"\n&lt;Axes: xlabel='species', ylabel='body_mass_g'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88bar%E3%80%81barh%E3%80%81barplot%E3%80%81countplot%EF%BC%89%E4%B8%8E%E7%82%B9%E5%9B%BE%EF%BC%88pointplot%EF%BC%89/#seaborncountplot","title":"Seaborn\uff1acountplot","text":"<p>seaborn.countplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.countplot(data=None, *, x=None, y=None, hue=None, order=None, hue_order=None, palette=None, saturation=0.75, fill=True, hue_norm=None, stat='count', width=0.8, dodge='auto', gap=0, log_scale=None, native_scale=False, formatter=None, legend='auto', ax=None, **kwargs)</code></p> <p>\u4f7f\u7528\u6761\u5f62\u56fe\u663e\u793a\u6bcf\u4e2a\u5206\u7c7b\u533a\u95f4\u4e2d\u89c2\u6d4b\u503c\u7684\u6570\u91cf\u3002\u5bf9\u4e8e\u8be5\u51fd\u6570\uff0c<code>x</code>\u548c<code>y</code>\u53c2\u6570\u4e0d\u80fd\u540c\u65f6\u4f20\u9012\uff0c\u65b9\u5411\u6839\u636e\u4f20\u9012\u7684\u662f<code>x</code>\u8fd8\u662f<code>y</code>\u53c2\u6570\u6765\u51b3\u5b9a\u3002\u53ef\u4ee5\u5c06\u8ba1\u6570\u56fe\u89c6\u4e3a\u5728\u5206\u7c7b\u53d8\u91cf\u4e0a\u800c\u4e0d\u662f\u5728\u5b9a\u91cf\u53d8\u91cf\u4e0a\u7684\u76f4\u65b9\u56fe\u3002\u5176\u57fa\u672c API \u548c\u9009\u9879\u4e0e <code>barplot()</code> \u76f8\u540c\uff0c\u56e0\u6b64\u53ef\u4ee5\u6bd4\u8f83\u5d4c\u5957\u53d8\u91cf\u4e4b\u95f4\u7684\u8ba1\u6570\u3002</p> <p>**stat\uff1a**\u7edf\u8ba1\u91cf\u8ba1\u7b97\u3002\u5f53\u4e0d\u662f <code>'count'</code> \u65f6\uff0c\u67f1\u72b6\u56fe\u7684\u9ad8\u5ea6\u5c06\u5f52\u4e00\u5316\uff0c\u4f7f\u5f97\u5b83\u4eec\u5728\u56fe\u4e2d\u548c\u4e3a 100\uff08<code>'percent'</code> \uff09\u6216 1\uff08<code>'proportion'</code>, <code>'probability'</code>\uff09\u3002</p> <p><code>kwargs</code>\u5176\u4ed6\u53c2\u6570\u4f20\u9012\u7ed9<code>matplotlib.patches.Rectangle</code> \uff0c\u540c\u4e0a\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.countplot(data=penguins,\n              x=\"species\",\n              # y=\"species\",\n              order=['Gentoo', 'Chinstrap', 'Adelie'],\n              formatter=lambda x: x+\" penguins\",\n              stat=\"count\",\n\n              hue='sex',\n              hue_order=['FEMALE', 'MALE'],\n              fill=True,\n              palette={\"FEMALE\": \"#facc87\", \"MALE\": \"#b1fa87\"},\n              saturation=0.75,\n\n              width=0.5,\n              dodge='auto',\n              gap=0.3,\n\n              log_scale=False,\n              native_scale=True,\n\n              ax=ax\n              )\n\"\"\"\n&lt;Axes: xlabel='species', ylabel='count'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%9F%B1%E7%8A%B6%E5%9B%BE%EF%BC%88bar%E3%80%81barh%E3%80%81barplot%E3%80%81countplot%EF%BC%89%E4%B8%8E%E7%82%B9%E5%9B%BE%EF%BC%88pointplot%EF%BC%89/#seabornpointplot","title":"Seaborn\uff1apointplot","text":"<p>seaborn.pointplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.pointplot(data=None, *, x=None, y=None, hue=None, order=None, hue_order=None, estimator='mean', errorbar=('ci', 95), n_boot=1000, seed=None, units=None, weights=None, color=None, palette=None, hue_norm=None, markers=&lt;default&gt;, linestyles=&lt;default&gt;, dodge=False, log_scale=None, native_scale=False, orient=None, capsize=0, formatter=None, legend='auto', err_kws=None, ax=None, **kwargs)</code></p> <p>\u4f7f\u7528\u7ebf\u6761\u548c\u6807\u8bb0\u663e\u793a\u70b9\u4f30\u8ba1\u548c\u8bef\u5dee\u3002\u70b9\u56fe\u901a\u8fc7\u70b9\u7684\u4f4d\u7f6e\u8868\u793a\u6570\u503c\u53d8\u91cf\u7684\u96c6\u4e2d\u8d8b\u52bf\u4f30\u8ba1\uff0c\u5e76\u4f7f\u7528\u8bef\u5dee\u7ebf\u63d0\u4f9b\u5bf9\u8be5\u4f30\u8ba1\u4e0d\u786e\u5b9a\u6027\u7684\u6307\u793a\u3002\u70b9\u56fe\u6bd4\u6761\u5f62\u56fe\u66f4\u6709\u52a9\u4e8e\u96c6\u4e2d\u6bd4\u8f83\u4e00\u4e2a\u6216\u591a\u4e2a\u5206\u7c7b\u53d8\u91cf\u7684\u4e0d\u540c\u6c34\u5e73\u3002\u5b83\u4eec\u7279\u522b\u64c5\u957f\u5c55\u793a\u4ea4\u4e92\u4f5c\u7528\uff1a\u4e00\u4e2a\u5206\u7c7b\u53d8\u91cf\u7684\u6c34\u5e73\u4e0e\u53e6\u4e00\u4e2a\u5206\u7c7b\u53d8\u91cf\u7684\u6c34\u5e73\u4e4b\u95f4\u7684\u5173\u7cfb\u5982\u4f55\u53d8\u5316\u3002\u8fde\u63a5\u6765\u81ea\u540c\u4e00\u6c34\u5e73 <code>hue</code> \u7684\u6bcf\u4e2a\u70b9\u7684\u7ebf\u6761\u5141\u8bb8\u901a\u8fc7\u659c\u7387\u5dee\u5f02\u6765\u5224\u65ad\u4ea4\u4e92\u4f5c\u7528\uff0c\u8fd9\u6bd4\u6bd4\u8f83\u51e0\u4e2a\u70b9\u7ec4\u6216\u6761\u5f62\u7684\u9ad8\u5ea6\u66f4\u5bb9\u6613\u4e3a\u773c\u775b\u6240\u63a5\u53d7\u3002</p> <ol> <li> <p>**markers\uff1a**\u4e3a\u6bcf\u4e2a<code>hue</code>\u6c34\u5e73\u4f7f\u7528\u7684\u6807\u8bb0\u3002</p> </li> <li> <p>**linestyles\uff1a**\u4e3a\u6bcf\u4e2a<code>hue</code>\u6c34\u5e73\u4f7f\u7528\u7684\u7ebf\u578b\u3002</p> </li> <li> <p>**dodge\uff1a**\u6cbf\u7740\u5206\u7c7b\u8f74\u4e3a\u6bcf\u4e2a\u7ea7\u522b\u7684 <code>hue</code> \u53d8\u91cf\u5206\u79bb\u70b9\u7684\u6570\u91cf\u3002\u8bbe\u7f6e\u4e3a<code>True</code>\u5c06\u5e94\u7528\u9ed8\u8ba4\u7684\u5c0f\u503c\u3002</p> </li> </ol> <p><code>**kwargs</code>\u5176\u4ed6\u53c2\u6570\u4f20\u9012\u7ed9<code>matplotlib.lines.Line2D</code>\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.pointplot(data=penguins,\n              x=\"species\",\n              y=\"body_mass_g\",\n              orient=\"x\",\n              order=['Gentoo', 'Chinstrap', 'Adelie'],\n              formatter=lambda x: x+\" penguins\",\n\n              hue='sex',\n              hue_order=['FEMALE', 'MALE'],\n              palette={\"FEMALE\": \"#facc87\", \"MALE\": \"#b1fa87\"},\n\n              estimator='mean',\n              errorbar=('ci', 95),\n              capsize=0.2,\n              err_kws={\"linestyle\": \"--\",\n                       \"linewidth\": 2,\n                       \"color\": \"r\"},\n              n_boot=1000,\n              seed=0,\n              units=None,\n              weights=None,\n\n              dodge=False,\n              markers=['o', '*'],\n              markersize=15,\n              linestyles=['--', '-'],\n              linewidth=2,\n\n              log_scale=False,\n              native_scale=True,\n\n              ax=ax\n              )\n\"\"\"\n&lt;Axes: xlabel='species', ylabel='body_mass_g'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%AE%B1%E7%BA%BF%E5%9B%BE%EF%BC%88boxplot%E3%80%81bxp%E3%80%81boxenplot%EF%BC%89/","title":"\u7bb1\u7ebf\u56fe\uff08boxplot\u3001bxp\u3001boxenplot\uff09","text":"<p>**\u7bb1\u4f53\uff08box\uff09**\u663e\u793a\u6570\u636e\u96c6\u7684\u56db\u5206\u4f4d\u6570\uff0c\u4ece\u7b2c1\u56db\u5206\u4f4d\u6570\uff08the first quartile\uff0cQ1\uff09\u5ef6\u4f38\u5230\u7b2c3\u56db\u5206\u4f4d\u6570\uff08the third quartile\uff0cQ3\uff09\uff0c\u5e76\u5728**\u4e2d\u4f4d\u6570\uff08median\uff09**\u5904\u6709\u4e00\u6761\u7ebf\u3002**\u5ef6\u957f\u7ebf\uff08whisker\uff09**\u663e\u793a\u5206\u5e03\u7684\u5176\u4f59\u90e8\u5206\uff0c\u4ece\u7bb1\u4f53\u5ef6\u4f38\u5230\u8ddd\u79bb\u7bb1\u4f531.5 \u500d\u56db\u5206\u4f4d\u8ddd\uff08inter-quartile range\uff0cIQR\uff09\u8303\u56f4\u5185\u7684\u6700\u8fdc\u6570\u636e\u70b9\u3002**\u5f02\u5e38\u503c\uff08Flier\uff09**\u662f\u6307\u8d85\u51fa\u5ef6\u957f\u7ebf\u672b\u7aef\u4ee5\u5916\u7684\u70b9\u3002</p> <p>penguins.csv</p> <p></p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\npenguins = pd.read_csv('../Data/penguins.csv')\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%AE%B1%E7%BA%BF%E5%9B%BE%EF%BC%88boxplot%E3%80%81bxp%E3%80%81boxenplot%EF%BC%89/#matplotlibboxplot","title":"Matplotlib\uff1aboxplot","text":"<p>matplotlib.axes.Axes.boxplot \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.boxplot \u2014 Matplotlib 3.10.1 documentation</p> <p><code>boxplot(x, *, notch=None, sym=None, orientation='vertical', whis=None, positions=None, widths=None, patch_artist=None, bootstrap=None, usermedians=None, conf_intervals=None, meanline=None, showmeans=None, showcaps=None, showbox=None, showfliers=None, boxprops=None, tick_labels=None, flierprops=None, medianprops=None, meanprops=None, capprops=None, whiskerprops=None, manage_ticks=True, autorange=False, zorder=None, capwidths=None, label=None, data=None)</code></p> <p>\u7ed8\u5236\u7bb1\u7ebf\u56fe\u3002\u5982\u679c\u8f93\u5165\u6570\u636e<code>x</code>\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5219\u4e3a<code>x</code>\u7684\u6bcf\u4e00\u5217\u6570\u636e\u7ed8\u5236\u7bb1\u7ebf\u56fe\u3002\u5982\u679c<code>x</code>\u662f\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u7684\u5e8f\u5217\uff0c\u5219\u4e3a <code>x</code>\u7684\u6bcf\u4e2a\u6570\u7ec4\u7ed8\u5236\u7bb1\u7ebf\u56fe\u3002<code>data</code>\u53c2\u6570\u540c\u524d\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%AE%B1%E7%BA%BF%E5%9B%BE%EF%BC%88boxplot%E3%80%81bxp%E3%80%81boxenplot%EF%BC%89/#_1","title":"\u57fa\u7840\u7ed8\u5236","text":"<ol> <li> <p>**positions\uff1a**\u6bcf\u4e2a\u7bb1\u5b50\u7684\u4f4d\u7f6e\u3002\u523b\u5ea6\u548c\u8303\u56f4\u4f1a\u81ea\u52a8\u8bbe\u7f6e\u4e3a\u4e0e\u4f4d\u7f6e\u5339\u914d\u3002\u9ed8\u8ba4\u4e3a <code>range(1, N+1)</code> \uff0c\u5176\u4e2d <code>N</code> \u662f\u8981\u7ed8\u5236\u7684\u7bb1\u5b50\u6570\u3002</p> </li> <li> <p>widths\uff1a\uff08\u6bcf\u4e2a\uff09\u7bb1\u5b50\u7684\u5bbd\u5ea6\u3002\u9ed8\u8ba40.5\uff0c\u6216\u8005\uff0c\u5982\u679c <code>0.15*(distance between extreme positions)</code>\u66f4\u5c0f\uff0c\u5219\u4f7f\u7528\u4e4b \u3002</p> </li> <li> <p>**orientation\uff1a**\u5982\u679c\u4e3a <code>'horizontal'</code>\uff0c\u5219\u6c34\u5e73\u7ed8\u5236\u3002\u5426\u5219\u5782\u76f4\uff08<code>'vertical'</code>\uff0c\u9ed8\u8ba4\uff09\u7ed8\u5236\u3002</p> </li> <li> <p>**tick_labels\uff1a**\u6bcf\u4e2a\u7bb1\u5b50\u7684\u523b\u5ea6\u6807\u7b7e\u3002\u523b\u5ea6\u59cb\u7ec8\u653e\u7f6e\u5728\u7bb1\u5b50\u7684\u4f4d\u7f6e\u4e0a\u3002\u5982\u679c\u63d0\u4f9b\u4e86<code>tick_labels</code>\uff0c\u5219\u523b\u5ea6\u5c06\u76f8\u5e94\u5730\u6807\u6ce8\u3002\u5426\u5219\uff0c\u5b83\u4eec\u4fdd\u6301\u5176\u6570\u503c\u3002</p> </li> <li> <p>**manage_ticks\uff1a**\u5982\u679c\u4e3a True\uff08\u9ed8\u8ba4\uff09\uff0c\u5219\u523b\u5ea6\u4f4d\u7f6e\u548c\u6807\u7b7e\u5c06\u8c03\u6574\u4ee5\u5339\u914d\u7bb1\u5b50\u4f4d\u7f6e\u3002</p> </li> <li> <p>label\uff1a\u56fe\u4f8b\u6807\u7b7e\u3002\u5f53\u6240\u6709\u7bb1\u5b50\u5177\u6709\u76f8\u540c\u7684\u6837\u5f0f\u4e14\u53ea\u60f3\u4e3a\u5b83\u4eec\u6dfb\u52a0\u5355\u4e2a\u56fe\u4f8b\u6761\u76ee\u65f6\uff0c\u8bf7\u4f7f\u7528\u5355\u4e2a\u5b57\u7b26\u4e32\u3002\u8981\u5355\u72ec\u6807\u8bb0\u6240\u6709\u7bb1\u5b50\uff0c\u8bf7\u4f7f\u7528\u5b57\u7b26\u4e32\u5217\u8868\u3002\u4e3a\u4e86\u4fbf\u4e8e\u533a\u5206\uff0c\u7bb1\u5b50\u5e94\u5355\u72ec\u8fdb\u884c\u6837\u5f0f\u8bbe\u7f6e\uff0c\u8fd9\u76ee\u524d\u53ea\u80fd\u901a\u8fc7\u4fee\u6539\u8fd4\u56de\u7684artists\u6765\u5b9e\u73b0\u3002\u5728\u5355\u5b57\u7b26\u4e32\u60c5\u51b5\u4e0b\uff0c\u56fe\u4f8b\u6761\u76ee\u5c06\u4ec5\u4e0e\u7b2c\u4e00\u4e2a\u7bb1\u4f53\u76f8\u5173\u8054\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u56fe\u4f8b\u5c06\u663e\u793a\u4e2d\u4f4d\u6570\u7ebf\uff08<code>result[\"medians\"]</code>\uff09\uff1b\u5982\u679c <code>patch_artist</code>\u53c2\u6570\u4e3a True\uff0c\u5219\u56fe\u4f8b\u5c06\u663e\u793a\u7bb1\u4f53 <code>Patch</code>\uff08<code>result[\"boxes\"]</code>\uff09\u3002</p> </li> <li> <p>**zorder\uff1a**\u7ed8\u5236\u4f18\u5148\u7ea7\u3002\u9ed8\u8ba4<code>Line2D.zorder=2</code>\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nnp.random.seed(10)\nA = np.random.normal(3, 1.25, 100)\nB = np.random.normal(5, 1.00, 100)\nC = np.random.normal(4, 1.25, 100)\n\nax.boxplot([A, B, C],\n           positions=[1, 2, 3],\n           widths=[0.2, 0.5, 0.8],\n           orientation='vertical',\n           tick_labels=['A', 'B', 'C'],\n           manage_ticks=True,\n           label='box',\n           zorder=2\n           )\n\"\"\"\n{'whiskers': [&lt;matplotlib.lines.Line2D at 0x2188a1c4080&gt;,\n              &lt;matplotlib.lines.Line2D at 0x2188a1c4380&gt;,\n              &lt;matplotlib.lines.Line2D at 0x2188a1c53d0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x2188a1c5640&gt;,\n              &lt;matplotlib.lines.Line2D at 0x2188a1c6720&gt;,\n              &lt;matplotlib.lines.Line2D at 0x2188a1c69f0&gt;],\n 'caps': [&lt;matplotlib.lines.Line2D at 0x2188a1c46b0&gt;,\n          &lt;matplotlib.lines.Line2D at 0x2188a1c4980&gt;,\n          &lt;matplotlib.lines.Line2D at 0x2188a1c5940&gt;,\n          &lt;matplotlib.lines.Line2D at 0x2188a1c5c10&gt;,\n          &lt;matplotlib.lines.Line2D at 0x2188a1c6c90&gt;,\n          &lt;matplotlib.lines.Line2D at 0x2188a1c6f30&gt;],\n 'boxes': [&lt;matplotlib.lines.Line2D at 0x218896dbd40&gt;,\n           &lt;matplotlib.lines.Line2D at 0x2188a1c50d0&gt;,\n           &lt;matplotlib.lines.Line2D at 0x2188a1c6420&gt;],\n 'medians': [&lt;matplotlib.lines.Line2D at 0x2188a1c4b30&gt;,\n             &lt;matplotlib.lines.Line2D at 0x2188a1c5ee0&gt;,\n             &lt;matplotlib.lines.Line2D at 0x2188a1c7200&gt;],\n 'fliers': [&lt;matplotlib.lines.Line2D at 0x2188a1c4e60&gt;,\n            &lt;matplotlib.lines.Line2D at 0x2188a1c6150&gt;,\n            &lt;matplotlib.lines.Line2D at 0x2188a1c7500&gt;],\n 'means': []}\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nnp.random.seed(10)\ndata = np.random.normal((3, 5, 4), (1.25, 1.00, 1.25), (100, 3))\n\nax.boxplot(data,\n           positions=[1, 2, 3],\n           widths=[0.2, 0.5, 0.8],\n           orientation='vertical',\n           tick_labels=['A', 'B', 'C'],\n           manage_ticks=True,\n           label='box',\n           zorder=2\n           )\n\"\"\"\n{'whiskers': [&lt;matplotlib.lines.Line2D at 0x2188a1c4080&gt;,\n              &lt;matplotlib.lines.Line2D at 0x2188a1c4380&gt;,\n              &lt;matplotlib.lines.Line2D at 0x2188a1c53d0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x2188a1c5640&gt;,\n              &lt;matplotlib.lines.Line2D at 0x2188a1c6720&gt;,\n              &lt;matplotlib.lines.Line2D at 0x2188a1c69f0&gt;],\n 'caps': [&lt;matplotlib.lines.Line2D at 0x2188a1c46b0&gt;,\n          &lt;matplotlib.lines.Line2D at 0x2188a1c4980&gt;,\n          &lt;matplotlib.lines.Line2D at 0x2188a1c5940&gt;,\n          &lt;matplotlib.lines.Line2D at 0x2188a1c5c10&gt;,\n          &lt;matplotlib.lines.Line2D at 0x2188a1c6c90&gt;,\n          &lt;matplotlib.lines.Line2D at 0x2188a1c6f30&gt;],\n 'boxes': [&lt;matplotlib.lines.Line2D at 0x218896dbd40&gt;,\n           &lt;matplotlib.lines.Line2D at 0x2188a1c50d0&gt;,\n           &lt;matplotlib.lines.Line2D at 0x2188a1c6420&gt;],\n 'medians': [&lt;matplotlib.lines.Line2D at 0x2188a1c4b30&gt;,\n             &lt;matplotlib.lines.Line2D at 0x2188a1c5ee0&gt;,\n             &lt;matplotlib.lines.Line2D at 0x2188a1c7200&gt;],\n 'fliers': [&lt;matplotlib.lines.Line2D at 0x2188a1c4e60&gt;,\n            &lt;matplotlib.lines.Line2D at 0x2188a1c6150&gt;,\n            &lt;matplotlib.lines.Line2D at 0x2188a1c7500&gt;],\n 'means': []}\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%AE%B1%E7%BA%BF%E5%9B%BE%EF%BC%88boxplot%E3%80%81bxp%E3%80%81boxenplot%EF%BC%89/#box","title":"\u7bb1\u4f53\uff08box\uff09","text":"<ol> <li> <p>**showbox\uff1a**\u663e\u793a\u7bb1\u4f53\u3002\u9ed8\u8ba4<code>rcParams[\"boxplot.showbox\"]=True</code>\u3002</p> </li> <li> <p>**patch_artist\uff1a**\u9ed8\u8ba4<code>rcParams[\"boxplot.patchartist\"]=False</code>\uff0c\u4f7f\u7528 <code>Line2D</code>\u7c7b\u7ed8\u5236\u7bb1\u4f53\u3002\u5426\u5219\u4f7f\u7528<code>Patch</code>\u7c7b\u7ed8\u5236\u3002</p> </li> <li> <p>**boxprops\uff1a**\u7bb1\u4f53\u6837\u5f0f\u3002<code>Line2D</code>\u6216<code>Patch</code>\u53c2\u6570\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nnp.random.seed(10)\ndata = np.random.normal((3, 5, 4), (1.25, 1.00, 1.25), (100, 3))\n\nax.boxplot(data,\n           positions=[1, 2, 3],\n           widths=[0.2, 0.5, 0.8],\n           orientation='vertical',\n           tick_labels=['A', 'B', 'C'],\n           manage_ticks=True,\n           label='box',\n           zorder=2,\n\n           # box\n           showbox=True,\n           patch_artist=True,\n           boxprops={'facecolor': '#00faed'}\n           )\n\"\"\"\n{'whiskers': [&lt;matplotlib.lines.Line2D at 0x1c381135220&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38199c9e0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38199d7f0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38199dac0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38199e9c0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38199ecc0&gt;],\n 'caps': [&lt;matplotlib.lines.Line2D at 0x1c38199cc80&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38199cf20&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38199dd90&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38199dfd0&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38199efc0&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38199f260&gt;],\n 'boxes': [&lt;matplotlib.patches.PathPatch at 0x1c38199c440&gt;,\n           &lt;matplotlib.patches.PathPatch at 0x1c38199c1a0&gt;,\n           &lt;matplotlib.patches.PathPatch at 0x1c38199e5a0&gt;],\n 'medians': [&lt;matplotlib.lines.Line2D at 0x1c38199d1c0&gt;,\n             &lt;matplotlib.lines.Line2D at 0x1c38199e270&gt;,\n             &lt;matplotlib.lines.Line2D at 0x1c38199f4d0&gt;],\n 'fliers': [&lt;matplotlib.lines.Line2D at 0x1c38199d4c0&gt;,\n            &lt;matplotlib.lines.Line2D at 0x1c38199e510&gt;,\n            &lt;matplotlib.lines.Line2D at 0x1c38199f7d0&gt;],\n 'means': []}\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%AE%B1%E7%BA%BF%E5%9B%BE%EF%BC%88boxplot%E3%80%81bxp%E3%80%81boxenplot%EF%BC%89/#whiskercap","title":"\u5ef6\u957f\u7ebf\uff08whisker\uff09\u4e0e\u5e3d\uff08cap\uff09","text":"<ol> <li> <p>**whis\uff1a**\u7ed8\u5236\u5ef6\u957f\u7ebf\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u662f\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u5219\u4e0b\u7ebf\u4f4d\u4e8e\u5927\u4e8e<code>Q1 - whis*(Q3-Q1)</code> \u7684\u6700\u5c0f\u6570\u636e\u70b9\uff0c\u4e0a\u7ebf\u4f4d\u4e8e\u5c0f\u4e8e <code>Q3 + whis*(Q3-Q1)</code> \u7684\u6700\u5927\u6570\u636e\u70b9\u3002 \u9ed8\u8ba4<code>whis = 1.5</code>\u5bf9\u5e94\u4e8e Tukey \u539f\u59cb\u5b9a\u4e49\u7684\u7bb1\u7ebf\u56fe\u3002\u5982\u679c\u662f\u4e00\u5bf9\u6d6e\u70b9\u6570\uff0c\u5219\u8868\u793a\u7ed8\u5236\u5ef6\u957f\u7ebf\u5230\u5bf9\u5e94\u7684\u767e\u5206\u4f4d\u6570\uff08\u4f8b\u5982: (5, 95)\uff09\u3002\u7279\u522b\u662f\uff0c\u5c06\u6b64\u8bbe\u7f6e\u4e3a(0, 100)\u4f1a\u5bfc\u81f4\u5ef6\u957f\u7ebf\u8986\u76d6\u6574\u4e2a\u6570\u636e\u8303\u56f4\u3002\u5728 <code>Q1 == Q3</code> \u7684\u8fb9\u7f18\u60c5\u51b5\u4e0b\uff0c\u5982\u679c<code>autorange</code>\u53c2\u6570\u4e3a True\uff0c\u5219\u81ea\u52a8\u8bbe\u7f6e\u4e3a(0, 100)\u3002</p> </li> <li> <p>**autorange\uff1a**\u5f53\u8bbe\u7f6e\u4e3aTrue\uff0c\u4e14\u6570\u636e\u5206\u5e03\u7684<code>Q1 == Q3</code> \uff0c<code>whis</code>\u53c2\u6570\u81ea\u52a8\u8bbe\u7f6e\u4e3a(0, 100)\u3002\u9ed8\u8ba4False\u3002</p> </li> <li> <p>**whiskerprops\uff1a**\u5ef6\u957f\u7ebf\u6837\u5f0f\u3002<code>Line2D</code>\u53c2\u6570\u3002</p> </li> <li> <p>**showcaps\uff1a**\u663e\u793a\u5ef6\u957f\u7ebf\u672b\u7aef\u7684\u5e3d\u3002\u9ed8\u8ba4<code>rcParams[\"boxplot.showcaps\"]=True</code>\u3002</p> </li> <li> <p>capwidths\uff1a\uff08\u6bcf\u4e2a\uff09\u5e3d\u5bbd\u5ea6\u3002\u9ed8\u8ba4\u503c\u4e3a<code>0.5*(width of the box)</code>\u3002</p> </li> <li> <p>**capprops\uff1a**\u5e3d\u6837\u5f0f\u3002<code>Line2D</code>\u53c2\u6570\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nnp.random.seed(10)\ndata = np.random.normal((3, 5, 4), (1.25, 1.00, 1.25), (100, 3))\n\nax.boxplot(data,\n           positions=[1, 2, 3],\n           widths=[0.2, 0.5, 0.8],\n           orientation='vertical',\n           tick_labels=['A', 'B', 'C'],\n           manage_ticks=True,\n           label='box',\n           zorder=2,\n\n           # box\n           showbox=True,\n           patch_artist=True,\n           boxprops={'facecolor': '#00faed'},\n\n           # whisker/cap\n           whis=1.5,\n           autorange=False,\n           whiskerprops={'linestyle': '--',\n                         'linewidth': 2,\n                         'color': 'r'},\n           showcaps=True,\n           capwidths=[0.2, 0.3, 0.5],\n           capprops={'linestyle': '--',\n                     'linewidth': 2,\n                     'color': 'b'}\n           )\n\"\"\"\n{'whiskers': [&lt;matplotlib.lines.Line2D at 0x1c381135220&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38199c9e0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38199d7f0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38199dac0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38199e9c0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38199ecc0&gt;],\n 'caps': [&lt;matplotlib.lines.Line2D at 0x1c38199cc80&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38199cf20&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38199dd90&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38199dfd0&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38199efc0&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38199f260&gt;],\n 'boxes': [&lt;matplotlib.patches.PathPatch at 0x1c38199c440&gt;,\n           &lt;matplotlib.patches.PathPatch at 0x1c38199c1a0&gt;,\n           &lt;matplotlib.patches.PathPatch at 0x1c38199e5a0&gt;],\n 'medians': [&lt;matplotlib.lines.Line2D at 0x1c38199d1c0&gt;,\n             &lt;matplotlib.lines.Line2D at 0x1c38199e270&gt;,\n             &lt;matplotlib.lines.Line2D at 0x1c38199f4d0&gt;],\n 'fliers': [&lt;matplotlib.lines.Line2D at 0x1c38199d4c0&gt;,\n            &lt;matplotlib.lines.Line2D at 0x1c38199e510&gt;,\n            &lt;matplotlib.lines.Line2D at 0x1c38199f7d0&gt;],\n 'means': []}\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%AE%B1%E7%BA%BF%E5%9B%BE%EF%BC%88boxplot%E3%80%81bxp%E3%80%81boxenplot%EF%BC%89/#medianmean","title":"\u4e2d\u4f4d\u6570\uff08median\uff09\u4e0e\u5747\u503c\uff08mean\uff09","text":"<ol> <li> <p>**usermedians\uff1a**\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>len(x)</code> \u7684\u4e00\u7ef4\u6570\u7ec4\u3002\u6bcf\u4e2a\u4e0d\u662f <code>None</code> \u7684\u6761\u76ee\u5f3a\u5236\u8bbe\u7f6e\u5bf9\u5e94\u6570\u636e\u96c6\u7684\u4e2d\u4f4d\u6570\u3002\u5bf9\u4e8e\u662f <code>None</code>\u7684\u6761\u76ee\uff0c\u4e2d\u4f4d\u6570\u7531 Matplotlib\u5e38\u89c4\u8ba1\u7b97\u3002</p> </li> <li> <p>**medianprops\uff1a**\u4e2d\u4f4d\u6570\u7ebf\u6837\u5f0f\u3002<code>Line2D</code>\u53c2\u6570\u3002</p> </li> <li> <p>**notch\uff1a**\u662f\u5426\u7ed8\u5236\u5e26\u7f3a\u53e3\u7684\u7bb1\u7ebf\u56fe\u3002\u7f3a\u53e3\u4ee3\u8868\u4e2d\u4f4d\u6570\u5468\u56f4\u7684\u7f6e\u4fe1\u533a\u95f4\uff08CI\uff09\u3002\u9ed8\u8ba4<code>rcParams[\"boxplot.notch\"]=False</code>\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u901a\u8fc7bootstrap\u8ba1\u7b97\uff0c\u4f46\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e <code>conf_intervals</code> \u53c2\u6570\u6765\u8986\u76d6\u3002\u5728 CI \u503c\u5c0f\u4e8e\u4e0b\u56db\u5206\u4f4d\u6570\u6216\u5927\u4e8e\u4e0a\u56db\u5206\u4f4d\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u7f3a\u53e3\u5c06\u5ef6\u4f38\u5230\u7bb1\u4f53\u4e4b\u5916\uff0c\u4f7f\u5176\u5448\u73b0\u51fa\u72ec\u7279\u7684\u201c\u7ffb\u8f6c\u201d\u5916\u89c2\u3002\u8fd9\u662f\u9884\u671f\u884c\u4e3a\uff0c\u4e0e\u5176\u4ed6\u7edf\u8ba1\u53ef\u89c6\u5316\u8f6f\u4ef6\u5305\u4fdd\u6301\u4e00\u81f4\u3002</p> </li> <li> <p>**bootstrap\uff1a**\u6307\u5b9a\u662f\u5426\u5bf9\u4e2d\u4f4d\u6570\u8fdb\u884c\u81ea\u52a9\u6cd5\u91cd\u91c7\u6837\u4ee5\u8ba1\u7b97\u5e26\u7f3a\u53e3\u7bb1\u7ebf\u56fe\u7684\u7f6e\u4fe1\u533a\u95f4\u3002\u5982\u679c\u4e3a None\uff0c\u5219\u4e0d\u6267\u884cbootstrap\u91cd\u91c7\u6837\uff0c\u7f3a\u53e3\u4f7f\u7528\u57fa\u4e8e\u9ad8\u65af\u51fd\u6570\u7684\u6e10\u8fd1\u903c\u8fd1\uff08\\(median \\pm 1.57 \\times {IQR \\over \\sqrt{N}}\\)\uff09\u6765\u8ba1\u7b97\u3002\u5426\u5219\uff0cbootstrap \u6307\u5b9a\u91cd\u91c7\u6837\u4e2d\u4f4d\u6570\u4ee5\u786e\u5b9a\u5176 95%\u7f6e\u4fe1\u533a\u95f4\u7684\u6b21\u6570\u3002\u5efa\u8bae\u4f7f\u7528 1000 \u5230 10000 \u4e4b\u95f4\u7684\u503c\u3002</p> </li> <li> <p>**conf_intervals\uff1a**\u5f62\u72b6\u4e3a <code>(len(x), 2)</code>\u7684\u4e8c\u7ef4\u6570\u7ec4\u3002\u6bcf\u4e2a\u975e None \u7684\u6761\u76ee\u5f3a\u5236\u8bbe\u7f6e\u5bf9\u5e94\u7f3a\u53e3\u7684\u4f4d\u7f6e\u3002\u5bf9\u4e8e <code>None</code> \u7684\u6761\u76ee\uff0c\u7f3a\u53e3\u901a\u8fc7\u5176\u4ed6\u53c2\u6570\uff08\u4f8b\u5982<code>bootstrap</code>\uff09\u6307\u5b9a\u7684\u65b9\u6cd5\u8ba1\u7b97\u5f97\u51fa\u3002</p> </li> <li> <p>**showmeans\uff1a**\u663e\u793a\u7b97\u672f\u5e73\u5747\u503c\u3002\u9ed8\u8ba4<code>rcParams[\"boxplot.showmeans\"]=False</code>\u3002</p> </li> <li> <p>**meanline\uff1a**\u5982\u679c <code>True</code> \uff08\u4e14 <code>showmeans=True</code>\uff09\uff0c\u5c06\u5c1d\u8bd5\u6839\u636e<code>meanprops</code>\u53c2\u6570\u6e32\u67d3\u5747\u503c\uff0c\u4ee5\u4e00\u6761\u8d2f\u7a7f\u6574\u4e2a\u7bb1\u4f53\u7684\u7ebf\u8868\u793a\u3002\u5982\u679c<code>notch</code>\u53c2\u6570\u4e5f\u4e3aTrue\uff0c\u5219\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\u3002\u5426\u5219\uff0c\u5c06\u4ee5\u70b9\u663e\u793a\u3002\u9ed8\u8ba4<code>rcParams[\"boxplot.meanline\"]=False</code>\u3002</p> </li> <li> <p>**meanprops\uff1a**\u5747\u503c\u7ebf/\u70b9\u6837\u5f0f\u3002<code>Line2D</code>\u53c2\u6570\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nnp.random.seed(10)\ndata = np.random.normal((3, 5, 4), (1.25, 1.00, 1.25), (100, 3))\n\nax.boxplot(data,\n           positions=[1, 2, 3],\n           widths=[0.2, 0.5, 0.8],\n           orientation='vertical',\n           tick_labels=['A', 'B', 'C'],\n           manage_ticks=True,\n           label='box',\n           zorder=2,\n\n           # box\n           showbox=True,\n           patch_artist=True,\n           boxprops={'facecolor': '#00faed'},\n\n           # whisker/cap\n           whis=1.5,\n           autorange=False,\n           whiskerprops={'linestyle': '--',\n                         'linewidth': 2,\n                         'color': 'r'},\n           showcaps=True,\n           capwidths=[0.2, 0.3, 0.5],\n           capprops={'linestyle': '--',\n                     'linewidth': 2,\n                     'color': 'b'},\n\n           # median/mean\n           usermedians=[3, 5, None],\n           medianprops={'linestyle': '--',\n                        'linewidth': 2,\n                        'color': '#ff00e1'},\n           notch=True,\n           bootstrap=1000,\n           conf_intervals=[[None, None], [None, None], [None, None]],\n           showmeans=True,\n           meanline=False,\n           meanprops={'marker': '*',\n                      'markersize': 15,\n                      'markerfacecolor': '#66b5ff',\n                      'markeredgecolor': '#66b5ff'}\n           )\n\"\"\"\n{'whiskers': [&lt;matplotlib.lines.Line2D at 0x1c38b57ca10&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57cd40&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57dfd0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57e2a0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57f530&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57f800&gt;],\n 'caps': [&lt;matplotlib.lines.Line2D at 0x1c38b57d040&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57d220&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57e5d0&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57e900&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57fb30&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57fe30&gt;],\n 'boxes': [&lt;matplotlib.patches.PathPatch at 0x1c38b480b90&gt;,\n           &lt;matplotlib.patches.PathPatch at 0x1c38b57d8e0&gt;,\n           &lt;matplotlib.patches.PathPatch at 0x1c38b57f140&gt;],\n 'medians': [&lt;matplotlib.lines.Line2D at 0x1c38b57d520&gt;,\n             &lt;matplotlib.lines.Line2D at 0x1c38b57ebd0&gt;,\n             &lt;matplotlib.lines.Line2D at 0x1c38b5ac140&gt;],\n 'fliers': [&lt;matplotlib.lines.Line2D at 0x1c38b57db20&gt;,\n            &lt;matplotlib.lines.Line2D at 0x1c38b57f080&gt;,\n            &lt;matplotlib.lines.Line2D at 0x1c38b5ac6e0&gt;],\n 'means': [&lt;matplotlib.lines.Line2D at 0x1c38b57d820&gt;,\n           &lt;matplotlib.lines.Line2D at 0x1c38b57ee70&gt;,\n           &lt;matplotlib.lines.Line2D at 0x1c38b5ac470&gt;]}\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%AE%B1%E7%BA%BF%E5%9B%BE%EF%BC%88boxplot%E3%80%81bxp%E3%80%81boxenplot%EF%BC%89/#flier","title":"\u5f02\u5e38\u503c\uff08flier\uff09","text":"<ol> <li> <p>**showfliers\uff1a**\u663e\u793a\u5f02\u5e38\u503c\u3002\u9ed8\u8ba4<code>rcParams[\"boxplot.showfliers\"]=True</code>\u3002</p> </li> <li> <p>**sym\uff1a**\u9ed8\u8ba4\u7684\u5f02\u5e38\u503c\u70b9\u7b26\u53f7\u5b57\u7b26\u4e32\u3002\u7a7a\u5b57\u7b26\u4e32\uff08''\uff09\u5c06\u9690\u85cf\u5f02\u5e38\u503c\u70b9\u3002\u5982\u679c\u4e3a<code>None</code>\uff0c\u5219\u5f02\u5e38\u503c\u70b9\u9ed8\u8ba4\u4e3a'b+'\uff08'b'\u6307\u989c\u8272\uff0c'+'\u6307\u6807\u8bb0\uff09\u3002<code>flierprops</code> \u53c2\u6570\u63d0\u4f9b\u4e86\u66f4\u591a\u63a7\u5236\u3002<code>sym</code>\u53c2\u6570\u4f18\u5148\u3002</p> </li> <li> <p>**flierprops\uff1a**\u5f02\u5e38\u503c\u70b9\u6837\u5f0f\u3002<code>Line2D</code>\u53c2\u6570\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nnp.random.seed(10)\ndata = np.random.normal((3, 5, 4), (1.25, 1.00, 1.25), (100, 3))\n\nax.boxplot(data,\n           positions=[1, 2, 3],\n           widths=[0.2, 0.5, 0.8],\n           orientation='vertical',\n           tick_labels=['A', 'B', 'C'],\n           manage_ticks=True,\n           label='box',\n           zorder=2,\n\n           # box\n           showbox=True,\n           patch_artist=True,\n           boxprops={'facecolor': '#00faed'},\n\n           # whisker/cap\n           whis=1.5,\n           autorange=False,\n           whiskerprops={'linestyle': '--',\n                         'linewidth': 2,\n                         'color': 'r'},\n           showcaps=True,\n           capwidths=[0.2, 0.3, 0.5],\n           capprops={'linestyle': '--',\n                     'linewidth': 2,\n                     'color': 'b'},\n\n           # median/mean\n           usermedians=[3, 5, None],\n           medianprops={'linestyle': '--',\n                        'linewidth': 2,\n                        'color': '#ff00e1'},\n           notch=True,\n           bootstrap=1000,\n           conf_intervals=[[None, None], [None, None], [None, None]],\n           showmeans=True,\n           meanline=False,\n           meanprops={'marker': '*',\n                      'markersize': 15,\n                      'markerfacecolor': '#66b5ff',\n                      'markeredgecolor': '#66b5ff'},\n\n           # flier\n           showfliers=True,\n           sym='go',\n           flierprops={'markersize': 15}\n           )\n\"\"\"\n{'whiskers': [&lt;matplotlib.lines.Line2D at 0x1c38b57ca10&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57cd40&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57dfd0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57e2a0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57f530&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57f800&gt;],\n 'caps': [&lt;matplotlib.lines.Line2D at 0x1c38b57d040&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57d220&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57e5d0&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57e900&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57fb30&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57fe30&gt;],\n 'boxes': [&lt;matplotlib.patches.PathPatch at 0x1c38b480b90&gt;,\n           &lt;matplotlib.patches.PathPatch at 0x1c38b57d8e0&gt;,\n           &lt;matplotlib.patches.PathPatch at 0x1c38b57f140&gt;],\n 'medians': [&lt;matplotlib.lines.Line2D at 0x1c38b57d520&gt;,\n             &lt;matplotlib.lines.Line2D at 0x1c38b57ebd0&gt;,\n             &lt;matplotlib.lines.Line2D at 0x1c38b5ac140&gt;],\n 'fliers': [&lt;matplotlib.lines.Line2D at 0x1c38b57db20&gt;,\n            &lt;matplotlib.lines.Line2D at 0x1c38b57f080&gt;,\n            &lt;matplotlib.lines.Line2D at 0x1c38b5ac6e0&gt;],\n 'means': [&lt;matplotlib.lines.Line2D at 0x1c38b57d820&gt;,\n           &lt;matplotlib.lines.Line2D at 0x1c38b57ee70&gt;,\n           &lt;matplotlib.lines.Line2D at 0x1c38b5ac470&gt;]}\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%AE%B1%E7%BA%BF%E5%9B%BE%EF%BC%88boxplot%E3%80%81bxp%E3%80%81boxenplot%EF%BC%89/#matplotlibbxp","title":"Matplotlib\uff1abxp","text":"<p>matplotlib.axes.Axes.bxp \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.cbook \u2014 Matplotlib 3.10.1 documentation</p> <p><code>bxp(bxpstats, positions=None, *, widths=None, orientation='vertical', patch_artist=False, shownotches=False, showmeans=False, showcaps=True, showbox=True, showfliers=True, boxprops=None, whiskerprops=None, flierprops=None, medianprops=None, capprops=None, meanprops=None, meanline=False, manage_ticks=True, zorder=None, capwidths=None, label=None)</code></p> <p>\u4ece\u5df2\u7ecf\u8ba1\u7b97\u597d\u7684\u7edf\u8ba1\u6570\u636e\u4e2d\u7ed8\u5236\u7bb1\u7ebf\u56fe\u3002\u8fd9\u662f\u4e00\u4e2a\u5728\u5df2\u7ecf\u62e5\u6709\u7edf\u8ba1\u53c2\u6570\u65f6\u4f7f\u7528\u7684\u4f4e\u7ea7\u522b\u7ed8\u56fe\u51fd\u6570\u3002</p> <ol> <li>**bxpstats\uff1a**\u5305\u542b\u6bcf\u4e2a\u7bb1\u7ebf\u56fe\u7edf\u8ba1\u4fe1\u606f\u7684\u5b57\u5178\u5217\u8868\u3002</li> </ol> <p>\u5fc5\u9700\u7684\u952e\u5305\u62ec\uff1a</p> <ol> <li> <p><code>med</code>\uff1a\u4e2d\u4f4d\u6570</p> </li> <li> <p><code>q1</code>, <code>q3</code>\uff1a\u7b2c1\u548c\u7b2c3\u56db\u5206\u4f4d\u6570</p> </li> <li> <p><code>whislo</code>, <code>whishi</code>\uff1a\u4e0a\u4e0b\u5ef6\u957f\u7ebf\u4f4d\u7f6e</p> </li> </ol> <p>\u53ef\u9009\u7684\u952e\u5305\u62ec\uff1a</p> <ol> <li> <p><code>mean</code>\uff1a\u5747\u503c\u3002<code>showmeans=True</code>\u65f6\u63d0\u4f9b\u3002</p> </li> <li> <p><code>fliers</code>\uff1a\u5f02\u5e38\u503c\u3002<code>showfliers=True</code>\u65f6\u63d0\u4f9b\u3002</p> </li> <li> <p><code>cilo</code>, <code>cihi</code>\uff1a\u7f6e\u4fe1\u533a\u95f4\u3002<code>shownotches=True</code>\u65f6\u63d0\u4f9b\u3002</p> </li> <li> <p><code>label</code>\uff1a\u6570\u636e\u96c6\u540d\u79f0\u3002\u5c06\u88ab\u7528\u4f5c\u6bcf\u4e2a\u7bb1\u7ebf\u56fe\u7684\u523b\u5ea6\u6807\u7b7e\u3002</p> </li> <li> <p>**shownotches\uff1a**\u662f\u5426\u7ed8\u5236\u7f6e\u4fe1\u533a\u95f4\u7f3a\u53e3\u3002\u540c\u4e0a<code>notch</code>\u53c2\u6570\u3002</p> </li> </ol> <p>\u5176\u5b83\u53c2\u6570\u540c\u4e0a\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nnp.random.seed(10)\ndata = np.random.normal((3, 5, 4), (1.25, 1.00, 1.25), (100, 3))\n\nstats = mpl.cbook.boxplot_stats(data,\n                                whis=1.5,\n                                autorange=False,\n                                bootstrap=1000,\n                                labels=['A', 'B', 'C'])\n\"\"\"\n[{'label': 'A',\n  'mean': np.float64(3.0992477906435965),\n  'iqr': np.float64(1.6546248231599319),\n  'cilo': np.float64(2.757938844185342),\n  'cihi': np.float64(3.482041263953967),\n  'whishi': np.float64(6.084563820543254),\n  'whislo': np.float64(0.4778516841569793),\n  'fliers': array([-0.72449596]),\n  'q1': np.float64(2.262717909716479),\n  'med': np.float64(3.23473960171136),\n  'q3': np.float64(3.9173427328764108)},\n {'label': 'B',\n  'mean': np.float64(4.9876702977642005),\n  'iqr': np.float64(1.1147837701885175),\n  'cilo': np.float64(4.766524585850899),\n  'cihi': np.float64(5.244543976647989),\n  'whishi': np.float64(6.672622213307828),\n  'whislo': np.float64(2.868287891518396),\n  'fliers': array([2.60442799, 7.40432561, 7.22504964]),\n  'q1': np.float64(4.4272879740210636),\n  'med': np.float64(5.044082233689844),\n  'q3': np.float64(5.542071744209581)},\n {'label': 'C',\n  'mean': np.float64(4.072049695076446),\n  'iqr': np.float64(1.2382739322454008),\n  'cilo': np.float64(3.925979529640628),\n  'cihi': np.float64(4.25921072737811),\n  'whishi': np.float64(6.481355739282164),\n  'whislo': np.float64(1.8611610035571693),\n  'fliers': array([1.52783965, 1.50700779, 1.61567889, 1.13112084, 6.98120916,\n         6.99337958, 6.89890915]),\n  'q1': np.float64(3.4824328690102218),\n  'med': np.float64(4.128100811644375),\n  'q3': np.float64(4.720706801255623)}]\n\"\"\"\n\nax.bxp(stats,\n       positions=[1, 2, 3],\n       widths=[0.2, 0.5, 0.8],\n       orientation='vertical',\n       manage_ticks=True,\n       label='box',\n       zorder=2,\n\n       # box\n       showbox=True,\n       patch_artist=True,\n       boxprops={'facecolor': '#00faed'},\n\n       # whisker/cap\n       whiskerprops={'linestyle': '--',\n                     'linewidth': 2,\n                     'color': 'r'},\n       showcaps=True,\n       capwidths=[0.2, 0.3, 0.5],\n       capprops={'linestyle': '--',\n                 'linewidth': 2,\n                 'color': 'b'},\n\n       # median/mean\n       medianprops={'linestyle': '--',\n                    'linewidth': 2,\n                    'color': '#ff00e1'},\n       shownotches=True,\n       showmeans=True,\n       meanline=False,\n       meanprops={'marker': '*',\n                  'markersize': 15,\n                  'markerfacecolor': '#66b5ff',\n                  'markeredgecolor': '#66b5ff'},\n\n       # flier\n       showfliers=True,\n       flierprops={'marker': 'o',\n                   'markersize': 15,\n                   'markerfacecolor': 'g',\n                   'markeredgecolor': 'g'}\n       )\n\"\"\"\n{'whiskers': [&lt;matplotlib.lines.Line2D at 0x1c38b57ca10&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57cd40&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57dfd0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57e2a0&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57f530&gt;,\n              &lt;matplotlib.lines.Line2D at 0x1c38b57f800&gt;],\n 'caps': [&lt;matplotlib.lines.Line2D at 0x1c38b57d040&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57d220&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57e5d0&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57e900&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57fb30&gt;,\n          &lt;matplotlib.lines.Line2D at 0x1c38b57fe30&gt;],\n 'boxes': [&lt;matplotlib.patches.PathPatch at 0x1c38b480b90&gt;,\n           &lt;matplotlib.patches.PathPatch at 0x1c38b57d8e0&gt;,\n           &lt;matplotlib.patches.PathPatch at 0x1c38b57f140&gt;],\n 'medians': [&lt;matplotlib.lines.Line2D at 0x1c38b57d520&gt;,\n             &lt;matplotlib.lines.Line2D at 0x1c38b57ebd0&gt;,\n             &lt;matplotlib.lines.Line2D at 0x1c38b5ac140&gt;],\n 'fliers': [&lt;matplotlib.lines.Line2D at 0x1c38b57db20&gt;,\n            &lt;matplotlib.lines.Line2D at 0x1c38b57f080&gt;,\n            &lt;matplotlib.lines.Line2D at 0x1c38b5ac6e0&gt;],\n 'means': [&lt;matplotlib.lines.Line2D at 0x1c38b57d820&gt;,\n           &lt;matplotlib.lines.Line2D at 0x1c38b57ee70&gt;,\n           &lt;matplotlib.lines.Line2D at 0x1c38b5ac470&gt;]}\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%AE%B1%E7%BA%BF%E5%9B%BE%EF%BC%88boxplot%E3%80%81bxp%E3%80%81boxenplot%EF%BC%89/#seabornboxplot","title":"Seaborn\uff1aboxplot","text":"<p>seaborn.boxplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.boxplot(data=None, *, x=None, y=None, hue=None, order=None, hue_order=None, orient=None, color=None, palette=None, saturation=0.75, fill=True, dodge='auto', width=0.8, gap=0, whis=1.5, linecolor='auto', linewidth=None, fliersize=None, hue_norm=None, native_scale=False, log_scale=None, formatter=None, legend='auto', ax=None, **kwargs)</code></p> <p>\u7ed8\u5236\u7bb1\u7ebf\u56fe\u4ee5\u5c55\u793a\u7c7b\u522b\u95f4\u7684\u5206\u5e03\u3002\u7bb1\u7ebf\u56fe\uff08\u6216\u7bb1\u578b\u56fe\uff09\u4ee5\u4fbf\u4e8e\u6bd4\u8f83\u53d8\u91cf\u6216\u4e0d\u540c\u7c7b\u522b\u6c34\u5e73\u4e0a\u7684\u5b9a\u91cf\u6570\u636e\u5206\u5e03\u3002</p> <ol> <li> <p>linecolor\uff1a**\u5f53 <code>fill</code> \u4e3a True \u65f6\uff0c**\u4e3a\u7ebf\u5143\u7d20\u4f7f\u7528\u7684\u989c\u8272\u3002</p> </li> <li> <p>**linewidth\uff1a**\u56fe\u5f62\u5143\u7d20\u7684\u8fb9\u6846\u7ebf\u6761\u5bbd\u5ea6\u3002</p> </li> <li> <p>**fliersize\uff1a**\u7528\u4e8e\u6307\u793a\u5f02\u5e38\u89c2\u6d4b\u503c\u7684\u6807\u8bb0\u5927\u5c0f\u3002</p> </li> </ol> <p><code>**kwargs</code>\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9<code>matplotlib.axes.Axes.boxplot()</code>\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.boxplot(data=penguins,\n            x='species',\n            y='body_mass_g',\n            orient=\"x\",\n            order=['Gentoo', 'Chinstrap', 'Adelie'],\n            formatter=lambda x: x+\" penguins\",\n\n            hue='sex',\n            hue_order=['FEMALE', 'MALE'],\n            fill=True,\n            palette={\"FEMALE\": \"#facc87\", \"MALE\": \"#b1fa87\"},\n            saturation=0.75,\n\n            width=0.5,\n            dodge='auto',\n            gap=0.3,\n\n            whis=1.5,\n            linecolor='k',\n            linewidth=1.5,\n            fliersize=15,\n\n            log_scale=False,\n            native_scale=True,\n\n            ax=ax\n            )\n\"\"\"\n&lt;Axes: xlabel='species', ylabel='body_mass_g'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%AE%B1%E7%BA%BF%E5%9B%BE%EF%BC%88boxplot%E3%80%81bxp%E3%80%81boxenplot%EF%BC%89/#seabornboxenplot","title":"Seaborn\uff1aboxenplot","text":"<p>seaborn.boxenplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.boxenplot(data=None, *, x=None, y=None, hue=None, order=None, hue_order=None, orient=None, palette=None, saturation=0.75, fill=True, dodge='auto', width=0.8, gap=0, linewidth=None, linecolor=None, width_method='exponential', k_depth='tukey', outlier_prop=0.007, trust_alpha=0.05, showfliers=True, hue_norm=None, log_scale=None, native_scale=False, formatter=None, legend='auto', box_kws=None, flier_kws=None, line_kws=None, ax=None, **kwargs)</code></p> <p>\u7ed8\u5236\u9002\u7528\u4e8e\u5927\u6570\u636e\u96c6\u7684\u589e\u5f3a\u578b\u7bb1\u7ebf\u56fe\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u56fe\u8868\u6700\u521d\u88ab\u79f0\u4e3a\u201c\u5b57\u6bcd\u503c\u201d\uff08'letter value'\uff09\u56fe\uff0c\u56e0\u4e3a\u5b83\u663e\u793a\u4e86\u5927\u91cf\u7684\u201c\u5b57\u6bcd\u503c\u201d\u5206\u4f4d\u6570\u3002\u5b83\u5728\u7ed8\u5236\u4e00\u4e2a\u5206\u5e03\u7684\u975e\u53c2\u6570\u8868\u793a\u65f6\u4e0e\u7bb1\u7ebf\u56fe\u76f8\u4f3c\uff0c\u8fd9\u79cd\u5206\u5e03\u4e2d\u6240\u6709\u7279\u5f81\u90fd\u5bf9\u5e94\u4e8e\u5b9e\u9645\u89c2\u6d4b\u503c\u3002\u901a\u8fc7\u7ed8\u5236\u66f4\u591a\u7684\u5206\u4f4d\u6570\uff0c\u5b83\u63d0\u4f9b\u4e86\u66f4\u591a\u5173\u4e8e\u5206\u5e03\u5f62\u72b6\u7684\u4fe1\u606f\uff0c\u5c24\u5176\u662f\u5728\u5c3e\u90e8\u3002</p> <ol> <li> <p>**width\uff1a**\u51b3\u5b9a\u6700\u5927\u7bb1\u5b50\u7684\u5bbd\u5ea6\u3002</p> </li> <li> <p>**width_method\uff1a**\u7528\u4e8e\u7ebf\u5bbd\u7684\u65b9\u6cd5\u3002<code>\"exponential\"</code>\u8868\u793a\u76f8\u5e94\u7684\u767e\u5206\u4f4d\u6570\uff1b<code>\"linear\"</code>\u8868\u793a\u6bcf\u4e2a\u7bb1\u5b50\u7b49\u5dee\u9012\u51cf\uff1b<code>\"area\"</code>\u8868\u793a\u8be5\u7bb1\u5b50\u4e2d\u6570\u636e\u70b9\u7684\u5bc6\u5ea6\u3002</p> </li> <li> <p>**k_depth\uff1a**\u6bcf\u4e2a\u5c3e\u90e8\u8ba1\u7b97\u548c\u7ed8\u5236\u7684\u5c42\u6570\u3002<code>\"tukey\"</code>\u8868\u793a\u4f7f\u7528 \\((\\log_{2}{n}-3)\\)\u5c42\uff0c\u8986\u76d6\u4e0e\u7bb1\u7ebf\u56fe\u5ef6\u957f\u7ebf\u76f8\u4f3c\u7684\u8303\u56f4\uff1b<code>\"proportion\"</code>\u8868\u793a\u4fdd\u7559\u5927\u7ea6<code>outlier_prop</code>\u7684\u5f02\u5e38\u503c\uff1b<code>\"trusthworthy\"</code>\u8868\u793a\u81f3\u5c11\u6709 <code>trust_alpha</code> \u7684\u7f6e\u4fe1\u5ea6\u6269\u5c55\u5230\u7684\u5c42\u6570\uff1b<code>\"full\"</code>\u8868\u793a\u4f7f\u7528 \\((\\log_{2}{n}+1)\\) \u5c42\uff0c\u5e76\u6269\u5c55\u5230\u6700\u6781\u7aef\u7684\u70b9\u3002</p> </li> <li> <p>**outlier_prop\uff1a**\u9884\u671f\u6570\u636e\u4e2d\u5f02\u5e38\u503c\u7684\u6bd4\u4f8b\uff1b\u5f53\u4f7f\u7528 <code>k_depth=\"proportion\"</code> \u65f6\u4f7f\u7528\u3002</p> </li> <li> <p>**trust_alpha\uff1a**\u6700\u6781\u7aef\u5c42\u7684\u7f6e\u4fe1\u5ea6\u9608\u503c\uff1b\u5f53\u4f7f\u7528 <code>k_depth=\"trustworthy\"</code> \u65f6\u4f7f\u7528\u3002</p> </li> <li> <p>**box_kws\uff1a**\u7bb1\u4f53\u6837\u5f0f\u53c2\u6570\uff0c\u4f20\u9012\u7ed9<code>matplotlib.patches.Rectangle</code> \u3002</p> </li> <li> <p>**line_kws\uff1a**\u4e2d\u4f4d\u6570\u7ebf\u6837\u5f0f\u53c2\u6570\uff0c\u4f20\u9012\u7ed9<code>matplotlib.axes.Axes.plot()</code> \u3002</p> </li> <li> <p>**flier_kws\uff1a**\u5f02\u5e38\u89c2\u6d4b\u503c\u70b9\u6837\u5f0f\u53c2\u6570\uff0c\u4f20\u9012\u7ed9 <code>matplotlib.axes.Axes.scatter()</code> \u3002</p> </li> </ol> <p><code>**kwargs</code>\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9 <code>matplotlib.patches.Rectangle</code>\uff0c\u4f46\u5c06\u88ab <code>box_kws</code> \u4e2d\u7684\u53c2\u6570\u8986\u76d6\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.boxenplot(data=penguins,\n              x='species',\n              y='body_mass_g',\n              orient=\"x\",\n              order=['Gentoo', 'Chinstrap', 'Adelie'],\n              formatter=lambda x: x+\" penguins\",\n\n              hue='sex',\n              hue_order=['FEMALE', 'MALE'],\n              fill=True,\n              palette={\"FEMALE\": \"#facc87\", \"MALE\": \"#b1fa87\"},\n              saturation=0.75,\n\n              width=0.8,\n              dodge='auto',\n              gap=0.3,\n\n              width_method='exponential',\n              k_depth='tukey',\n              # outlier_prop=0.007,\n              # trust_alpha=0.05,\n\n              linecolor='k',\n              linewidth=1.5,\n\n              # box_kws={},\n              # flier_kws={},\n              # line_kws={},\n\n              log_scale=False,\n              native_scale=True,\n\n              ax=ax\n              )\n\"\"\"\n&lt;Axes: xlabel='species', ylabel='body_mass_g'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%BB%BC%E5%90%88%EF%BC%88catplot%EF%BC%89/","title":"\u7efc\u5408\uff08catplot\uff09","text":"<p>tips.csv</p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\ntips = pd.read_csv('../Data/tips.csv')\n</code></pre> <p></p> <p>seaborn.catplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.catplot(data=None, *, x=None, y=None, hue=None, row=None, col=None, kind='strip', estimator='mean', errorbar=('ci', 95), n_boot=1000, seed=None, units=None, weights=None, order=None, hue_order=None, row_order=None, col_order=None, col_wrap=None, height=5, aspect=1, log_scale=None, native_scale=False, formatter=None, orient=None, color=None, palette=None, hue_norm=None, legend='auto', legend_out=True, sharex=True, sharey=True, margin_titles=False, facet_kws=None, **kwargs)</code></p> <p>\u7528\u4e8e\u5728 FacetGrid \u4e0a\u7ed8\u5236Figure\u7ea7\u5206\u7c7b\u5173\u7cfb\u56fe\u7ed8\u56fe\u51fd\u6570\u3002\u6b64\u51fd\u6570\u63d0\u4f9b\u4e86\u8bbf\u95ee\u591a\u4e2a\u4e0d\u540cAxes\u7ea7\u51fd\u6570\u7684\u63a5\u53e3\uff0c\u8fd9\u4e9b\u51fd\u6570\u901a\u8fc7\u5b50\u96c6\u7684\u8bed\u4e49\u6620\u5c04\u5c55\u793a\u4e86\u6570\u503c\u53d8\u91cf\u4e0e\u4e00\u4e2a\u6216\u591a\u4e2a\u5206\u7c7b\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 <code>kind</code> \u53c2\u6570\u7528\u4e8e\u9009\u62e9\u8981\u4f7f\u7528\u7684\u5e95\u5c42Axes\u7ea7\u51fd\u6570\uff1a</p> <ol> <li> <p><code>stripplot()</code>\uff08<code>kind=\"strip\"</code>\uff0c\u9ed8\u8ba4\uff09</p> </li> <li> <p><code>swarmplot()</code>\uff08<code>kind=\"swarm\"</code>\uff09</p> </li> <li> <p><code>boxplot()</code>\uff08<code>kind=\"box\"</code>\uff09</p> </li> <li> <p><code>boxenplot()</code>\uff08<code>kind=\"boxen\"</code>\uff09</p> </li> <li> <p><code>violinplot()</code>\uff08<code>kind=\"violin\"</code>\uff09</p> </li> <li> <p><code>pointplot()</code>\uff08<code>kind=\"point\"</code>\uff09</p> </li> <li> <p><code>barplot()</code>\uff08<code>kind=\"bar\"</code>\uff09</p> </li> <li> <p><code>countplot()</code>\uff08<code>kind=\"count\"</code>\uff09</p> </li> </ol> <p>\u989d\u5916\u7684\u5173\u952e\u5b57\u53c2\u6570<code>**kwargs</code>\u4f1a\u88ab\u4f20\u9012\u7ed9\u8fd9\u4e9b\u5e95\u5c42\u51fd\u6570\u3002\u7ed8\u56fe\u540e\uff0c\u8fd4\u56de\u4e0e\u7ed8\u56fe\u76f8\u5173\u7684<code>FacetGrid</code>\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u8c03\u6574\u8f85\u52a9\u7ed8\u56fe\u7ec6\u8282\u6216\u6dfb\u52a0\u5176\u4ed6\u5c42\u3002</p> <pre><code>sns.catplot(data=tips,\n            x='day',\n            y='total_bill',\n            kind='box',\n            orient=\"x\",\n            order=[\"Thur\", \"Fri\", \"Sat\", \"Sun\"],\n            formatter=lambda x: x+\" day\",\n\n            hue='smoker',\n            hue_order=['Yes', 'No'],\n            palette={\"Yes\": \"#facc87\", \"No\": \"#b1fa87\"},\n\n            row='time',\n            row_order=[\"Lunch\", \"Dinner\"],\n            col='sex',\n            col_order=['Female', 'Male'],\n\n            height=6,\n            aspect=1.5,\n            legend_out=True,\n            sharex=False,\n            sharey=True,\n            margin_titles=True,\n            facet_kws={'despine': True}\n            )\n\"\"\"\n&lt;seaborn.axisgrid.FacetGrid at 0x201b2d52fc0&gt;\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%88%86%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/%E9%A5%BC%E5%9B%BE%EF%BC%88pie%EF%BC%89/","title":"\u997c\u56fe\uff08pie\uff09","text":"<p>tips.csv</p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\ntips = pd.read_csv('../Data/tips.csv')\ntotal_bill = tips.groupby(\"day\").sum()['total_bill']\npercentage = total_bill/total_bill.sum()\ndata = pd.concat([total_bill, percentage.rename('percentage')], axis=1).loc[['Thur', 'Fri', 'Sat', 'Sun']]\n\"\"\"\n      total_bill  percentage\nday                         \nThur     1096.33    0.227088\nFri       325.88    0.067501\nSat      1778.40    0.368369\nSun      1627.16    0.337042\n\"\"\"\n</code></pre> <p></p> <p>matplotlib.axes.Axes.pie \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.pie \u2014 Matplotlib 3.10.1 documentation</p> <p><code>pie(x, *, explode=None, labels=None, colors=None, autopct=None, pctdistance=0.6, shadow=False, labeldistance=1.1, startangle=0, radius=1, counterclock=True, wedgeprops=None, textprops=None, center=(0, 0), frame=False, rotatelabels=False, normalize=True, hatch=None, data=None)</code></p> <p>\u5c06\u4e00\u7ef4\u6570\u7ec4<code>x</code>\u5236\u4f5c\u6210\u997c\u56fe\u3002\u6bcf\u4e2a\u6247\u533a\u7684\u9762\u79ef\u5206\u6570\u7531 <code>x/sum(x)</code>\u7ed9\u51fa\u3002\u6247\u533a\u9ed8\u8ba4\u4ecex\u8f74\u5f00\u59cb\u6309\u9006\u65f6\u9488\u65b9\u5411\u7ed8\u5236\u3002\u5982\u679c\u63d0\u4f9b<code>data</code>\u53c2\u6570\uff0c\u4ee5\u4e0b\u53c2\u6570\u4e5f\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32<code>s</code>\uff0c\u5982\u679c<code>s</code>\u662f<code>data</code>\u4e2d\u7684\u952e\uff0c\u5219\u89e3\u91ca\u4e3a<code>data[s]</code>\uff1ax, explode, labels, colors\u3002</p> <p>\u997c\u56fe\u5728figure\u548cAxes\u90fd\u662f\u6b63\u65b9\u5f62\uff0c\u6216\u8005Axes\u7684\u7eb5\u6a2a\u6bd4\u76f8\u7b49\u65f6\u770b\u8d77\u6765\u6700\u597d\u3002\u6b64\u65b9\u6cd5\u5c06\u5750\u6807\u8f74\u7684\u7eb5\u6a2a\u6bd4\u8bbe\u7f6e\u4e3a<code>'equal'</code>\u3002\u53ef\u4ee5\u4f7f\u7528<code>Axes.set_aspect</code>\u6765\u63a7\u5236\u3002</p> <ol> <li> <p>**normalize\uff1a**\u5982\u679c\u4e3aTrue\uff0c\u5219\u59cb\u7ec8\u901a\u8fc7\u5f52\u4e00\u5316<code>x</code>\u4f7f\u5f97<code>sum(x)==1</code>\u6765\u5236\u4f5c\u5b8c\u6574\u997c\u56fe\u3002\u5982\u679c\u4e3aFalse\uff0c\u5f53<code>sum(x) &lt;= 1</code>\u65f6\u5236\u4f5c\u90e8\u5206\u997c\u56fe\uff1b<code>sum(x)&gt;1</code>\u65f6\u62a5\u9519\u3002\u9ed8\u8ba4True\u3002</p> </li> <li> <p>**frame\uff1a**\u5982\u679c\u4e3aTrue\uff0c\u5219\u7ed8\u5236Axes\u8fb9\u6846\u3002\u9ed8\u8ba4False\u3002</p> </li> <li> <p>**center\uff1a**\u997c\u56fe\u4e2d\u5fc3\u7684\u5750\u6807\u3002\u9ed8\u8ba4(0, 0)\u3002</p> </li> <li> <p>**radius\uff1a**\u997c\u56fe\u7684\u534a\u5f84\u3002\u9ed8\u8ba4\u4e3a1\u3002</p> </li> <li> <p>**counterclock\uff1a**\u987a\u65f6\u9488\uff08False\uff09\u6216\u9006\u65f6\u9488\uff08True\uff0c\u9ed8\u8ba4\uff09\u3002</p> </li> <li> <p>**startangle\uff1a**\u997c\u56fe\u76f8\u5bf9x\u8f74\u65cb\u8f6c\u7684\u8d77\u59cb\u89d2\u5ea6\u3002\u9ed8\u8ba4\u4e3a0\u00b0\u3002</p> </li> <li> <p>**explode\uff1a**\u5982\u679c\u4e0d\u4e3a None\uff0c\u5219\u662f\u4e00\u4e2a <code>len(x)</code> \u6570\u7ec4\uff0c\u7528\u4e8e\u6307\u5b9a\u6bcf\u4e2a\u6247\u5f62\u7684\u534a\u5f84\u504f\u79fb\u5206\u6570\u3002</p> </li> <li> <p>**colors\uff1a**\u997c\u56fe\u5c06\u5faa\u73af\u7684\u989c\u8272\u5e8f\u5217\u3002\u5982\u679c\u4e3a None\uff0c\u5c06\u4f7f\u7528\u5f53\u524d\u6d3b\u52a8\u5faa\u73af\u4e2d\u7684\u989c\u8272\u3002</p> </li> <li> <p>**hatch\uff1a**\u5e94\u7528\u5230\u6240\u6709\u997c\u56fe\u6247\u533a\u7684\u586b\u5145\u56fe\u6848\u6216\u997c\u56fe\u5c06\u5faa\u73af\u7684\u56fe\u6848\u5e8f\u5217\u3002</p> </li> <li> <p>**shadow\uff1a**\u5982\u679c\u4e3a\u5e03\u5c14\u503c\uff0c\u5219\u8868\u793a\u662f\u5426\u5728\u997c\u56fe\u4e0b\u65b9\u7ed8\u5236\u9634\u5f71\u3002\u5982\u679c\u4e3a\u5b57\u5178\uff0c\u5219\u901a\u8fc7\u5c06\u5b57\u5178\u4e2d\u7684\u5c5e\u6027\u4f20\u9012\u7ed9<code>matplotlib.patches.Shadow</code>\u6765\u7ed8\u5236\u9634\u5f71\u3002\u9ed8\u8ba4\u4e3aFalse\u3002</p> </li> <li> <p>**wedgeprops\uff1a**\u5c06\u4f20\u9012\u7ed9\u6bcf\u4e2a\u997c\u56fe\u6247\u533a\u7684<code>patches.Wedge</code>\u7684\u53c2\u6570\u5b57\u5178\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>clip_on=False</code>\u3002\u5f53\u8fd9\u4e9b\u5c5e\u6027\u4e0e\u5176\u4ed6\u5173\u952e\u5b57\u5c5e\u6027\u51b2\u7a81\u65f6\uff0c\u4f20\u9012\u7ed9<code>wedgeprops</code>\u7684\u5c5e\u6027\u4f18\u5148\u3002</p> </li> <li> <p>**labels\uff1a**\u63d0\u4f9b\u6bcf\u4e2a\u6247\u5f62\u6807\u7b7e\u7684\u5b57\u7b26\u4e32\u5e8f\u5217\u3002</p> </li> <li> <p>labeldistance\uff1a**\u6807\u7b7e\u7ed8\u5236\u7684\u76f8\u5bf9\u8ddd\u79bb\uff08\u6cbf\u534a\u5f84\uff09\u3002\u8981\u5c06\u6807\u7b7e\u7ed8\u5236\u5728\u997c\u56fe\u5185\u90e8\uff0c\u8bbe\u7f6e<code>labeldistance</code>&lt;1\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a <code>None</code>\uff0c\u5219\u4e0d\u7ed8\u5236\u6807\u7b7e\uff0c\u4f46\u6807\u7b7e\u4ecd\u7136\u5b58\u50a8\u4ee5\u4f9b<code>legend</code>\u4f7f\u7528\u3002\u9ed8\u8ba4\u4e3a1.1\u3002**</p> </li> <li> <p>rotatelabels\uff1a**\u5982\u679c\u4e3aTrue\uff0c\u5219\u5c06\u6bcf\u4e2a\u6807\u7b7e\u65cb\u8f6c\u5230\u5bf9\u5e94\u90e8\u5206\u7684\u89d2\u5ea6\u3002\u9ed8\u8ba4False\u3002**</p> </li> <li> <p>**autopct\uff1a**\u5982\u679c\u4e0d\u4e3a None\uff0c\u5219\u5e94\u662f\u4e00\u4e2a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6216\u51fd\u6570\uff0c\u7528\u4e8e\u4e3a\u6bcf\u4e2a\u6247\u5f62\u6807\u4e0a\u5b83\u4eec\u7684\u6570\u503c\uff0c\u6839\u636e<code>pctdistance</code>\u53c2\u6570\u8fdb\u884c\u653e\u7f6e\u3002\u5982\u679c\u662f\u4e00\u4e2a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u5219\u6807\u7b7e\u5c06\u4e3a<code>fmt % pct</code>\u3002\u5982\u679c\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5219\u5c06\u8c03\u7528\u8be5\u51fd\u6570\u3002</p> </li> <li> <p>pctdistance\uff1a<code>autopct</code>\u751f\u6210\u7684\u6587\u672c\u7ed8\u5236\u7684\u76f8\u5bf9\u8ddd\u79bb\uff08\u6cbf\u534a\u5f84\uff09\u3002\u8981\u5c06\u6587\u672c\u7ed8\u5236\u5728\u997c\u56fe\u5916\u90e8\uff0c\u8bbe\u7f6e<code>pctdistance</code> &gt;1\u3002\u5982\u679c<code>autopct</code>\u8bbe\u7f6e\u4e3a<code>None</code>\uff0c\u5219\u5ffd\u7565\u6b64\u53c2\u6570\u3002\u9ed8\u8ba4\u4e3a0.6\u3002</p> </li> <li> <p>**textprops\uff1a**\u4f20\u9012\u7ed9\u6587\u672c\u5bf9\u8c61\u7684\u53c2\u6570\u5b57\u5178\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.set_ylim(-0.2, 1.2)\nax.set_xlim(-0.2, 1.2)\n\nax.pie('total_bill',\n       data=data,\n\n       normalize=True,\n       frame=True,\n       center=(0.5, 0.5),\n       radius=0.5,\n       counterclock=False,\n       startangle=90,\n       explode=[0.1, 0, 0, 0],\n       colors=['#95ff00', '#00fffb', '#ffbb00', '#ff0088'],\n       hatch=['/', '\\\\', '-', '+'],\n       shadow=True,\n       wedgeprops={'width': 0.2},\n\n       labels=data.index,\n       labeldistance=1.13,\n       rotatelabels=True,\n       autopct=lambda x: f'{x:.2f}%',\n       pctdistance=0.8,\n       textprops={'fontsize': 15,\n                  'color': 'b'}\n       )\n\"\"\"\n([&lt;matplotlib.patches.Wedge at 0x17a8e153d10&gt;,\n  &lt;matplotlib.patches.Wedge at 0x17a8dbaa2d0&gt;,\n  &lt;matplotlib.patches.Wedge at 0x17a8dc30c50&gt;,\n  &lt;matplotlib.patches.Wedge at 0x17a8e1cd040&gt;],\n [Text(0.9351910571961343, 1.0028257588235818, 'Thur'),\n  Text(1.063690286679786, 0.4615518439602038, 'Fri'),\n  Text(0.5751296518862099, -0.05998262062983428, 'Sat'),\n  Text(0.007437772321641445, 0.7767805120750606, 'Sun')],\n [Text(0.827211321200101, 0.8780644803184827, '22.71%'),\n  Text(0.899072769330822, 0.47278006652049825, '6.75%'),\n  Text(0.5531891340787327, 0.10355212698772792, '36.84%'),\n  Text(0.15128337863479036, 0.6959508050088925, '33.70%')])\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9B%9E%E5%BD%92%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9B%9E%E5%BD%92%E5%85%B3%E7%B3%BB%E5%9B%BE%EF%BC%88regplot%E3%80%81lmplot%E3%80%81residplot%EF%BC%89/","title":"\u56de\u5f52\u5173\u7cfb\u56fe\uff08regplot\u3001lmplot\u3001residplot\uff09","text":"<p>tips.csv</p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\ntips = pd.read_csv('../Data/tips.csv')\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9B%9E%E5%BD%92%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9B%9E%E5%BD%92%E5%85%B3%E7%B3%BB%E5%9B%BE%EF%BC%88regplot%E3%80%81lmplot%E3%80%81residplot%EF%BC%89/#seabornregplot","title":"Seaborn\uff1aregplot","text":"<p>seaborn.regplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns,regplot(data=None, *, x=None, y=None, x_estimator=None, x_bins=None, x_ci='ci', scatter=True, fit_reg=True, ci=95, n_boot=1000, units=None, seed=None, order=1, logistic=False, lowess=False, robust=False, logx=False, x_partial=None, y_partial=None, truncate=True, dropna=True, x_jitter=None, y_jitter=None, label=None, color=None, marker='o', scatter_kws=None, line_kws=None, ax=None)</code></p> <p>\u7ed8\u5236\u6570\u636e\u548c\u56de\u5f52\u6a21\u578b\u62df\u5408\u3002\u4f30\u8ba1\u56de\u5f52\u6a21\u578b\u6709\u591a\u79cd\u4e92\u65a5\u9009\u9879\u3002</p> <ol> <li> <p>**x_estimator\uff1a**\u5c06\u6b64\u51fd\u6570\u5e94\u7528\u4e8e<code>x</code>\u7684\u552f\u4e00\u503c\uff0c\u5e76\u7ed8\u5236\u4f30\u8ba1\u7ed3\u679c\u3002\u5f53<code>x</code>\u4e3a\u79bb\u6563\u53d8\u91cf\u65f6\uff0c\u8fd9\u5f88\u6709\u7528\u3002\u5982\u679c\u63d0\u4f9b\u4e86<code>x_ci</code>\u53c2\u6570\uff0c\u6b64\u4f30\u8ba1\u5c06\u8fdb\u884c\u81ea\u52a9\u6cd5\u91cd\u91c7\u6837\uff0c\u5e76\u7ed8\u5236\u7f6e\u4fe1\u533a\u95f4\u3002</p> </li> <li> <p>**x_bins\uff1a**\u5c06<code>x</code>\u53d8\u91cf\u5206\u7bb1\u4e3a\u79bb\u6563\u7bb1\uff0c\u7136\u540e\u4f30\u8ba1\u4e2d\u5fc3\u8d8b\u52bf\u548c\u7f6e\u4fe1\u533a\u95f4\u3002\u6b64\u5206\u7bb1\u4ec5\u5f71\u54cd\u6563\u70b9\u56fe\u7684\u7ed8\u5236\uff1b\u56de\u5f52\u4ecd\u7136\u62df\u5408\u539f\u59cb\u6570\u636e\u3002\u6b64\u53c2\u6570\u53ef\u4ee5\u662f\u5747\u5300\u5927\u5c0f\uff08\u4e0d\u4e00\u5b9a\u662f\u5747\u5300\u95f4\u9694\uff09\u7684\u7bb1\u6570\u91cf\u6216\u7bb1\u4e2d\u5fc3\u7684\u4f4d\u7f6e\u3002\u5f53\u4f7f\u7528\u6b64\u53c2\u6570\u65f6\uff0c\u610f\u5473\u7740<code>x_estimator</code>\u7684\u9ed8\u8ba4\u503c\u4e3a<code>numpy.mean</code>\u3002</p> </li> <li> <p>**x_ci\uff1a**\u7ed8\u5236\u79bb\u6563\u503c\u4e2d\u5fc3\u8d8b\u52bf\u65f6\u4f7f\u7528\u7684\u7f6e\u4fe1\u533a\u95f4\u5927\u5c0f\u3002\u5982\u679c<code>\"ci\"</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u5219\u4f7f\u7528<code>ci</code>\u53c2\u6570\u7684\u503c\u3002\u5982\u679c<code>\"sd\"</code>\uff0c\u5219\u8df3\u8fc7\u81ea\u52a9\u6cd5\uff0c\u663e\u793a\u6bcf\u4e2a\u5206\u7bb1\u4e2d\u89c2\u6d4b\u503c\u7684\u6807\u51c6\u5dee\u3002\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8bbe\u7f6e\u4e3a\u7f6e\u4fe1\u533a\u95f4\u5927\u5c0f\uff08[0, 100]\u5185\u7684\u6574\u6570\uff09\u3002</p> </li> <li> <p>**ci\uff1a**\u56de\u5f52\u4f30\u8ba1\u7684\u7f6e\u4fe1\u533a\u95f4\u5927\u5c0f\uff08[0, 100]\u5185\u7684\u6574\u6570\uff09\u3002\u8fd9\u5c06\u5728\u56de\u5f52\u7ebf\u5468\u56f4\u7ed8\u5236\u534a\u900f\u660e\u5e26\u3002\u7f6e\u4fe1\u533a\u95f4\u4f7f\u7528\u81ea\u52a9\u6cd5\u4f30\u8ba1\uff1b\u5bf9\u4e8e\u5927\u578b\u6570\u636e\u96c6\uff0c\u4e3a\u4e86\u907f\u514d\u8be5\u8ba1\u7b97\uff0c\u5efa\u8bae\u5c06\u6b64\u53c2\u6570\u8bbe\u7f6e\u4e3a<code>None</code>\u3002\u9ed8\u8ba4\u4e3a95\u3002</p> </li> <li> <p>**scatter\uff1a**\u5982\u679c<code>True</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u7ed8\u5236\u5e95\u5c42\u89c2\u6d4b\u503c\uff08\u6216<code>x_estimator</code>\u8ba1\u7b97\u7684\u503c\uff09\u7684\u6563\u70b9\u56fe\u3002</p> </li> <li> <p>**fit_reg\uff1a**\u5982\u679c<code>True</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u4f30\u8ba1\u5e76\u7ed8\u5236\u4e0e<code>x</code>\u548c<code>y</code>\u53d8\u91cf\u76f8\u5173\u7684\u56de\u5f52\u6a21\u578b\u3002</p> </li> <li> <p>**truncate\uff1a**\u5982\u679c<code>True</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u56de\u5f52\u7ebf\u88ab\u9650\u5236\u5728\u6570\u636e\u8303\u56f4\u5185\u3002</p> </li> <li> <p>order\uff1a**\u5982\u679c<code>order</code>\u5927\u4e8e1\uff0c\u5219\u4f7f\u7528<code>numpy.polyfit</code>\u6765\u4f30\u8ba1**\u591a\u9879\u5f0f\u56de\u5f52\u3002\u9ed8\u8ba4\u4e3a1\uff0c\u5373\u4f30\u8ba1**\u7ebf\u6027\u56de\u5f52**\u3002</p> </li> <li> <p>**logistic\uff1a**\u5982\u679c<code>True</code>\uff0c\u5219\u5047\u8bbe<code>y</code>\u662f\u4e00\u4e2a\u4e8c\u5143\u53d8\u91cf\uff0c\u5e76\u4f7f\u7528<code>statsmodels</code>\u6765\u4f30\u8ba1**\u903b\u8f91\u56de\u5f52**\u6a21\u578b\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0e\u7ebf\u6027\u56de\u5f52\u76f8\u6bd4\u8ba1\u7b97\u91cf\u8981\u5927\u5f97\u591a\uff0c\u56e0\u6b64\u53ef\u80fd\u8981\u51cf\u5c11<code>n_boot</code>\u6216\u5c06<code>ci</code>\u8bbe\u7f6e\u4e3a<code>None</code>\u3002\u9ed8\u8ba4<code>False</code>\u3002</p> </li> <li> <p>lowess\uff1a**\u5982\u679c<code>True</code> \uff0c\u5219\u4f7f\u7528<code>statsmodels</code>\u4f30\u8ba1**\u975e\u53c2\u6570lowess\u6a21\u578b\uff08\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u76ee\u524d\u65e0\u6cd5\u4e3a\u6b64\u7c7b\u6a21\u578b\u7ed8\u5236\u7f6e\u4fe1\u533a\u95f4\u3002\u9ed8\u8ba4<code>False</code>\u3002</p> </li> <li> <p>robust\uff1a**\u5982\u679c<code>True</code> \uff0c\u5219\u4f7f\u7528<code>statsmodels</code>\u6765\u4f30\u8ba1**robust\u56de\u5f52\u3002\u8fd9\u5c06\u964d\u4f4e\u5f02\u5e38\u503c\u7684\u6743\u91cd\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u6bd4\u6807\u51c6\u7ebf\u6027\u56de\u5f52\u8ba1\u7b97\u91cf\u8981\u5927\u5f97\u591a\uff0c\u56e0\u6b64\u540c\u6837\u8981\u51cf\u5c11<code>n_boot</code>\u6216\u5c06<code>ci</code>\u8bbe\u7f6e\u4e3a<code>None</code>\u3002\u9ed8\u8ba4<code>False</code>\u3002</p> </li> <li> <p>logx\uff1a**\u5982\u679c<code>True</code>\uff0c\u5219\u4f30\u8ba1**\u5f62\u5f0f\u4e3a\\(y \\sim log(x)\\)\u7684\u7ebf\u6027\u56de\u5f52\uff0c\u4f46\u4ee5\u8f93\u5165\u7a7a\u95f4\u7ed8\u5236\u6563\u70b9\u56fe\u548c\u56de\u5f52\u6a21\u578b\u3002\u8bf7\u6ce8\u610f\uff0c<code>x</code> \u5fc5\u987b\u4e3a\u6b63\u6570\u624d\u80fd\u4f7f\u7528\u6b64\u529f\u80fd\u3002\u9ed8\u8ba4<code>False</code>\u3002</p> </li> <li> <p>**x_partial\uff0cy_partial\uff1a**\u5728\u7ed8\u56fe\u4e4b\u524d\uff0c\u5c06\u6df7\u6742\u53d8\u91cf\u56de\u5f52\u51fa<code>x</code>\u6216<code>y</code>\u53d8\u91cf\u3002</p> </li> <li> <p>**x_jitter\uff0cy_jitter\uff1a**\u5411<code>x</code>\u6216<code>y</code>\u53d8\u91cf\u6dfb\u52a0\u6b64\u5927\u5c0f\u7684\u5747\u5300\u968f\u673a\u566a\u58f0\u3002\u566a\u58f0\u6dfb\u52a0\u5230\u62df\u5408\u56de\u5f52\u540e\u7684\u6570\u636e\u526f\u672c\u4e2d\uff0c\u4ec5\u5f71\u54cd\u6563\u70b9\u56fe\u7684\u5916\u89c2\u3002\u5f53\u7ed8\u5236\u53d6\u79bb\u6563\u503c\u7684\u53d8\u91cf\u65f6\uff0c\u8fd9\u53ef\u80fd\u5f88\u6709\u5e2e\u52a9\u3002</p> </li> <li> <p>**label\uff1a**\u5e94\u7528\u5230\u6563\u70b9\u56fe\u6216\u56de\u5f52\u7ebf\uff08\u5982\u679c<code>scatter</code>\u662f<code>False</code>\uff09\u7684\u56fe\u4f8b\u6807\u7b7e\u3002</p> </li> <li> <p>**color\uff1a**\u5e94\u7528\u5230\u6240\u6709\u7ed8\u56fe\u5143\u7d20\u7684\u989c\u8272\uff1b\u5c06\u88ab\u4f20\u7ed9<code>scatter_kws</code>\u6216<code>line_kws</code>\u7684\u989c\u8272\u8986\u76d6\u3002</p> </li> <li> <p>**marker\uff1a**\u7528\u4e8e\u6563\u70b9\u56fe\u7684\u6807\u8bb0\u3002\u9ed8\u8ba4'o'\u3002</p> </li> <li> <p>**scatter_kws\uff0cline_kws\uff1a**\u4f20\u9012\u7ed9<code>plt.scatter</code>\u548c<code>plt.plot</code>\u7684\u989d\u5916\u5173\u952e\u5b57\u53c2\u6570\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.regplot(data=tips,\n            x='tip',\n            y='total_bill',\n\n            scatter=True,\n            marker='o',\n            scatter_kws={'color': 'red'},\n\n            x_partial=None,\n            y_partial=None,\n            x_jitter=None,\n            y_jitter=None,\n            dropna=True,\n\n            fit_reg=True,\n            order=1,\n            # logistic=True,\n            # lowess=True,\n            # robust=True,\n            # logx=True,\n            truncate=True,\n            line_kws={'color': 'blue'},\n\n            label='total_bill',\n            ax=ax\n            )\n\"\"\"\n&lt;Axes: xlabel='tip', ylabel='total_bill'&gt;\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.regplot(data=tips,\n            x='tip',\n            y='total_bill',\n\n            scatter=True,\n            marker='o',\n            scatter_kws={'color': 'red'},\n\n            x_estimator=np.mean,\n            x_bins=20,\n            x_ci='ci',\n            ci=95,\n            n_boot=1000,\n            seed=0,\n            units=None,\n\n            x_partial=None,\n            y_partial=None,\n            x_jitter=None,\n            y_jitter=None,\n            dropna=True,\n\n            fit_reg=True,\n            order=1,\n            # logistic=True,\n            # lowess=True,\n            # robust=True,\n            # logx=True,\n            truncate=True,\n            line_kws={'color': 'blue'},\n\n            label='total_bill',\n            ax=ax\n            )\n\"\"\"\n&lt;Axes: xlabel='tip', ylabel='total_bill'&gt;\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9B%9E%E5%BD%92%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9B%9E%E5%BD%92%E5%85%B3%E7%B3%BB%E5%9B%BE%EF%BC%88regplot%E3%80%81lmplot%E3%80%81residplot%EF%BC%89/#seabornlmplot","title":"Seaborn\uff1almplot","text":"<p>seaborn.lmplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.lmplot(data, *, x=None, y=None, hue=None, col=None, row=None, palette=None, col_wrap=None, height=5, aspect=1, markers='o', hue_order=None, col_order=None, row_order=None, legend=True, x_estimator=None, x_bins=None, x_ci='ci', scatter=True, fit_reg=True, ci=95, n_boot=1000, units=None, seed=None, order=1, logistic=False, lowess=False, robust=False, logx=False, x_partial=None, y_partial=None, truncate=True, x_jitter=None, y_jitter=None, scatter_kws=None, line_kws=None, facet_kws=None)</code></p> <p>\u5728FacetGrid\u4e0a\u7ed8\u5236\u6570\u636e\u70b9\u548c\u56de\u5f52\u6a21\u578b\u62df\u5408\u3002\u6b64\u51fd\u6570\u7ed3\u5408\u4e86<code>regplot()</code>\u548c<code>FacetGrid</code>\u3002\u5b83\u65e8\u5728\u4e3a\u5728\u6570\u636e\u96c6\u7684\u6761\u4ef6\u5b50\u96c6\u4e0a\u62df\u5408\u56de\u5f52\u6a21\u578b\u63d0\u4f9b\u4e00\u4e2a\u65b9\u4fbf\u7684\u63a5\u53e3\u3002</p> <p>\u5728\u8003\u8651\u5982\u4f55\u5c06\u53d8\u91cf\u5206\u914d\u7ed9\u4e0d\u540cfacet\u65f6\uff0c\u4e00\u4e2a\u666e\u904d\u7684\u89c4\u5219\u662f\uff0c\u5bf9\u4e8e\u6700\u91cd\u8981\u7684\u6bd4\u8f83\uff0c\u5e94\u4f7f\u7528<code>hue</code>\uff0c\u7136\u540e\u662f<code>col</code>\u548c<code>row</code>\u3002\u7136\u800c\uff0c\u59cb\u7ec8\u8981\u8003\u8651\u7279\u5b9a\u6570\u636e\u96c6\u548c\u6b63\u5728\u521b\u5efa\u7684\u53ef\u89c6\u5316\u76ee\u6807\u3002</p> <ol> <li>**markers\uff1a**\u6563\u70b9\u56fe\u7684\u6807\u8bb0\u3002\u5982\u679c\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u6807\u8bb0\u5c06\u7528\u4e8e<code>hue</code>\u53d8\u91cf\u7684\u6bcf\u4e2a\u7ea7\u522b\u3002</li> </ol> <pre><code>sns.lmplot(data=tips,\n           x='tip',\n           y='total_bill',\n\n           hue='smoker',\n           hue_order=['Yes', 'No'],\n           palette={\"Yes\": \"#facc87\", \"No\": \"#b1fa87\"},\n\n           row='time',\n           row_order=[\"Lunch\", \"Dinner\"],\n           col='sex',\n           col_order=['Female', 'Male'],\n\n           scatter=True,\n           markers=['o', '*'],\n           scatter_kws=None,\n\n           x_partial=None,\n           y_partial=None,\n           x_jitter=None,\n           y_jitter=None,\n\n           fit_reg=True,\n           order=1,\n           # logistic=True,\n           # lowess=True,\n           # robust=True,\n           # logx=True,\n           truncate=True,\n           line_kws=None,\n\n           legend=True,\n           height=6,\n           aspect=1.5,\n           facet_kws={'sharex': True,\n                      'sharey': True,\n                      'margin_titles': True,\n                      'legend_out': True,\n                      'despine': True}\n           )\n\"\"\"\n&lt;seaborn.axisgrid.FacetGrid at 0x29fb55032c0&gt;\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9B%9E%E5%BD%92%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9B%9E%E5%BD%92%E5%85%B3%E7%B3%BB%E5%9B%BE%EF%BC%88regplot%E3%80%81lmplot%E3%80%81residplot%EF%BC%89/#seabornresidplot","title":"Seaborn\uff1aresidplot","text":"<p>seaborn.residplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.residplot(data=None, *, x=None, y=None, x_partial=None, y_partial=None, lowess=False, order=1, robust=False, dropna=True, label=None, color=None, scatter_kws=None, line_kws=None, ax=None)</code></p> <p>\u7ed8\u5236\u7ebf\u6027\u56de\u5f52\u7684\u6b8b\u5dee\u56fe\u3002\u6b64\u51fd\u6570\u5c06\u5bf9<code>y</code>\u5728<code>x</code>\u4e0a\u8fdb\u884c\u56de\u5f52\uff08\u53ef\u80fd\u662frobust\u56de\u5f52\u6216\u591a\u9879\u5f0f\u56de\u5f52\uff09\uff0c\u7136\u540e\u7ed8\u5236\u6b8b\u5dee\u6563\u70b9\u56fe\u3002\u53ef\u4ee5\u53ef\u9009\u5730\u62df\u5408\u4e00\u4e2alowess\u5e73\u6ed1\u5668\u5230\u6b8b\u5dee\u56fe\u4e2d\uff0c\u8fd9\u6709\u52a9\u4e8e\u786e\u5b9a\u6b8b\u5dee\u4e2d\u662f\u5426\u5b58\u5728\u7ed3\u6784\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.residplot(data=tips,\n              x='tip',\n              y='total_bill',\n\n              scatter_kws={'color': 'red'},\n\n              x_partial=None,\n              y_partial=None,\n              dropna=True,\n\n              order=1,\n              # lowess=True,\n              # robust=True,\n              line_kws={'color': 'blue'},\n\n              label='total_bill',\n              ax=ax\n              )\n\"\"\"\n&lt;Axes: xlabel='tip', ylabel='total_bill'&gt;\n\"\"\"\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/Patch%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB/","title":"Patch\u7c7b\u53ca\u5176\u5b50\u7c7b","text":"\u5bfc\u5165\u6a21\u5757<pre><code>from matplotlib.patches import Patch, \n\n                               Rectangle, \n                               Polygon, \n                               Wedge, \n                               Shadow,\n\n                               FancyBboxPatch, \n                               BoxStyle, \n\n                               FancyArrowPatch, \n                               ArrowStyle, \n                               ConnectionStyle, \n\n\nfrom matplotlib.path import Path\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/Patch%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB/#patch_1","title":"Patch\u7236\u7c7b","text":"<p>matplotlib.patches.Patch \u2014 Matplotlib 3.10.0 documentation</p> <p>Hatch style reference \u2014 Matplotlib 3.10.1 documentation</p> Patch\u7236\u7c7b<pre><code>Patch(transform=ax.transAxes,   # (1)!\n\n      fill=True,                # (2)!\n      facecolor=\"red\",          # (3)!\n      linestyle=\"--\",           # (4)!\n      linewidth=10,             # (5)!\n      antialiased=False,        # (6)!\n      capstyle=\"round\",         # (7)!\n      joinstyle=\"bevel\",        # (8)!\n      hatch=\"+\",                # (9)!\n      hatch_linewidth=2,        # (10)!\n      edgecolor=\"blue\",         # (11)!\n      # color=\"red\",            (12)\n      alpha=1,                  # (13)!\n\n      label=\"Patch\",            # (14)!\n      gid=\"1\",                  # (15)!\n      visible=True,             # (16)!\n      zorder=1,                 # (17)!\n      rasterized=True,          # (18)!\n      in_layout=True            # (19)!\n      )\n</code></pre> <ol> <li>\u53c2\u8003\u5750\u6807\u7cfb</li> <li>\u662f\u5426\u586b\u5145</li> <li>\u586b\u5145\u8272(facecolor/fc)</li> <li>\u8fb9\u6846\u7ebf\u578b(linestyle/ls)</li> <li>\u8fb9\u6846\u7ebf\u5bbd(linewidth/lw)</li> <li>\u8fb9\u6846\u7ebf\u6297\u952f\u9f7f\u6e32\u67d3(antialiased/aa)</li> <li>\u8fb9\u6846\u7ebf\u7aef\u70b9\u6837\u5f0f\uff1a \u53ef\u9009'butt'\uff08\u9ed8\u8ba4\uff09, 'projecting', 'round'\uff08FancyArrowPatch\u5b50\u7c7b\u9ed8\u8ba4\uff09</li> <li>\u8fb9\u6846\u7ebf\u8f6c\u6298\u6837\u5f0f\uff1a \u53ef\u9009'miter'\uff08\u9ed8\u8ba4\uff09, 'round'\uff08FancyArrowPatch\u5b50\u7c7b\u9ed8\u8ba4\uff09, 'bevel'</li> <li>\u6846\u5185\u7ebf\u578b\uff1a\u53ef\u9009'/', '\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'\uff0c\u53ef\u7ec4\u5408\u91cd\u590d</li> <li>\u6846\u5185\u7ebf\u5bbd</li> <li>\u8fb9\u6846\u7ebf\u53ca\u6846\u5185\u7ebf\u8272(edgecolor/ec)</li> <li>\u8986\u76d6facecolor\u548cedgecolor</li> <li>\u900f\u660e\u5ea6</li> <li>\u6807\u7b7e\uff08\u7528\u4e8e\u56fe\u4f8b\uff09</li> <li>group id</li> <li>\u662f\u5426\u53ef\u89c1</li> <li>\u7ed8\u5236\u4f18\u5148\u7ea7\uff1a\u503c\u8d8a\u4f4e\u8d8a\u4f18\u5148</li> <li>\u5f3a\u5236\u6805\u683c\u5316\uff08bitmap\uff09\u7ed8\u56fe\u4ee5\u8fdb\u884c\u77e2\u91cf\u56fe\u5f62\u8f93\u51fa</li> <li>\u662f\u5426\u5305\u542b\u5728layout\u8ba1\u7b97\u4e2d</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/Patch%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB/#rectangle","title":"Rectangle\u5b50\u7c7b","text":"<p>matplotlib.patches.Rectangle \u2014 Matplotlib 3.10.1 documentation</p> <p>\u901a\u8fc7\u951a\u70b9 <code>xy</code> \u53ca\u5176<code>width</code>\u548c<code>height</code>\u5b9a\u4e49\u7684\u77e9\u5f62\u3002\u77e9\u5f62\u5728 x \u65b9\u5411\u4e0a\u4ece <code>xy[0]</code> \u5ef6\u4f38\u5230 <code>xy[0] + width</code> \uff0c\u5728 y \u65b9\u5411\u4e0a\u4ece <code>xy[1]</code> \u5ef6\u4f38\u5230 <code>xy[1] + height</code> \u3002\u53ef\u4ee5\u5c06 xy \u89c6\u4e3a\u5de6\u4e0b\u89d2\uff0c\u4f46 xy \u5b9e\u9645\u4e0a\u662f\u54ea\u4e2a\u89d2\u53d6\u51b3\u4e8e\u8f74\u7684\u65b9\u5411\u548c\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u7684\u7b26\u53f7\uff1b\u4f8b\u5982\uff0c\u5982\u679c x \u8f74\u88ab\u53cd\u8f6c\u6216\u5bbd\u5ea6\u4e3a\u8d1f\uff0c\u5219 xy \u5c06\u662f\u53f3\u4e0b\u89d2\u3002</p> Rectangle\u5b50\u7c7b<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\npatch = Rectangle(xy=(0.2, 0.2),                # (1)!\n                  width=0.2,                    # (2)!\n                  height=0.2,                   # (3)!\n                  transform=ax.transAxes,       # (4)!\n                  rotation_point=(0.3, 0.2),    # (5)!\n                  angle=45,                     # (6)!\n\n                  # Patch\u7236\u7c7b\u53c2\u6570\n                  facecolor=\"red\",\n                  linestyle=\"--\",\n                  linewidth=2,\n                  hatch=\"/\",\n                  hatch_linewidth=2,\n                  edgecolor=\"green\", \n                  alpha=0.5\n                  )\nax.add_patch(patch)\nax.grid()\n\nplt.show()\n</code></pre> <ol> <li>\u5de6\u4e0b\u89d2\u951a\u70b9\u5750\u6807\uff08\u5177\u4f53\u53d6\u51b3\u4e8eaxis\u7684\u65b9\u5411\u4ee5\u53cawidth\u3001height\u53c2\u6570\u7684\u6b63\u8d1f\uff09</li> <li>\u5bbd\u5ea6</li> <li>\u9ad8\u5ea6</li> <li>\u53c2\u8003\u5750\u6807\u7cfb</li> <li>\u65cb\u8f6c\u4e2d\u5fc3\u5750\u6807\uff1a\u53ef\u9009'xy'(\u9ed8\u8ba4), 'center', \u5750\u6807(x, y)</li> <li>\u7ed5\u65cb\u8f6c\u4e2d\u5fc3\u9006\u65f6\u9488\u65cb\u8f6c\u89d2\u5ea6\uff08\u00b0\uff09</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/Patch%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB/#polygon","title":"Polygon\u5b50\u7c7b","text":"<p>matplotlib.patches.Polygon \u2014 Matplotlib 3.10.1 documentation</p> Polygon\u5b50\u7c7b<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\npatch = Polygon(xy=[[0.1, 0.1], [0.1, 0.2], [0.2, 0.2], [0.2, 0.1], [0.6, 0.2]],    # (1)!\n                closed=True,                                                        # (2)!\n\n                # Patch\u7236\u7c7b\u53c2\u6570\n                facecolor=\"red\",\n                linestyle=\"--\",\n                linewidth=2,\n                hatch=\"/\",\n                hatch_linewidth=2,\n                edgecolor=\"green\",\n                alpha=0.5\n                )\nax.add_patch(patch)\nax.grid()\n\nplt.show()\n</code></pre> <ol> <li>\u591a\u8fb9\u5f62\u8282\u70b9\u5750\u6807\u6570\u7ec4</li> <li>\u662f\u5426\u7ed8\u5236\u5c01\u95ed\u7ebf</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/Patch%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB/#wedge","title":"Wedge\u5b50\u7c7b","text":"<p>matplotlib.patches.Wedge \u2014 Matplotlib 3.10.1 documentation</p> <p>\u4e00\u4e2a\u4ee5 x, y (<code>center</code>)\u4e3a\u4e2d\u5fc3\uff0c\u534a\u5f84\u4e3a<code>r</code>\u7684\u6247\u5f62\uff0c\u4ece<code>theta1</code>\u9006\u65f6\u9488\u626b\u5230<code>theta2</code>\uff08\u4ee5\u00b0\u4e3a\u5355\u4f4d\uff09\u3002\u5982\u679c\u7ed9\u51fa\u4e86<code>width</code>\uff0c\u5219\u4ece\u5185\u5f84<code>r-width</code>\u5230\u5916\u5f84<code>r</code>\u7ed8\u5236\u90e8\u5206\u6247\u5f62\u3002</p> Wedge\u5b50\u7c7b<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\npatch = Wedge(center=(0.5, 0.5),    # (1)!\n              r=0.5,                # (2)!\n              theta1=45,            # (3)!\n              theta2=135,           # (4)!\n              width=0.3,            # (5)!\n\n              # Patch\u7236\u7c7b\u53c2\u6570\n              facecolor=\"red\",\n              linestyle=\"--\",\n              linewidth=2,\n              hatch=\"/\",\n              hatch_linewidth=2,\n              edgecolor=\"green\",\n              alpha=0.5\n              )\nax.add_patch(patch)\nax.grid()\n\nplt.show()\n</code></pre> <ol> <li>\u6247\u5f62\u4e2d\u5fc3</li> <li>\u534a\u5f84</li> <li>\u8d77\u59cb\u89d2\u5ea6</li> <li>\u7ec8\u6b62\u89d2\u5ea6</li> <li>\u5bbd\u5ea6</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/Patch%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB/#shadow","title":"Shadow\u5b50\u7c7b","text":"<p>matplotlib.patches.Shadow \u2014 Matplotlib 3.10.1 documentation</p> <p>\u521b\u5efa\u7ed9\u5b9a\u8865\u4e01\u7684\u9634\u5f71\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9634\u5f71\u5c06\u4e0e\u8865\u4e01\u5177\u6709\u76f8\u540c\u7684\u9762\u989c\u8272\uff0c\u4f46\u4f1a\u53d8\u6697\u3002\u53ef\u4ee5\u901a\u8fc7 <code>shade</code> \u53c2\u6570\u63a7\u5236\u6697\u5ea6\u3002</p> Shadow\u5b50\u7c7b<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\npatch = Wedge(center=(0.5, 0.5),\n              r=0.5,\n              theta1=45,\n              theta2=135,\n              width=0.3,\n\n              # Patch\u7236\u7c7b\u53c2\u6570\n              facecolor=\"red\",\n              linestyle=\"--\",\n              linewidth=2,\n              hatch=\"/\",\n              hatch_linewidth=2,\n              edgecolor=\"green\",\n              alpha=0.5\n              )\nax.add_patch(patch)\n\npatch = Shadow(patch,        # (1)!\n               ox=0.1,       # (2)!\n               oy=-0.1,      # (3)!\n               shade=0.2,    # (4)!\n\n               # Patch\u7236\u7c7b\u53c2\u6570\n               # facecolor=\"red\",\n               linestyle=\"--\",\n               linewidth=2,\n               hatch=\"/\",\n               hatch_linewidth=2,\n               edgecolor=\"green\",\n               alpha=0.5\n               )\nax.add_patch(patch)\n\nax.grid()\nplt.show()\n</code></pre> <ol> <li>\u5f85\u521b\u5efa\u9634\u5f71\u7684\u8865\u4e01</li> <li>\u6570\u636e\u5750\u6807\u4e2d\u9634\u5f71\u7684\u504f\u79fb\u91cf\uff0c\u6309 dpi/72 \u7684\u6bd4\u4f8b\u7f29\u653e</li> <li>\u6570\u636e\u5750\u6807\u4e2d\u9634\u5f71\u7684\u504f\u79fb\u91cf\uff0c\u6309 dpi/72 \u7684\u6bd4\u4f8b\u7f29\u653e</li> <li>\u9634\u5f71\u7684\u6df1\u6d45\u4e0e\u539f\u59cb\u989c\u8272\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5982\u679c\u4e3a 1\uff0c\u5219\u9634\u5f71\u4e3a\u9ed1\u8272\uff1b\u5982\u679c\u4e3a 0\uff0c\u5219\u9634\u5f71\u4e0e\u8865\u4e01\u989c\u8272\u76f8\u540c</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/Patch%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB/#steppatch","title":"StepPatch\u5b50\u7c7b","text":"<p>matplotlib.patches.StepPatch \u2014 Matplotlib 3.10.1 documentation</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/Patch%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB/#fancybboxpatch","title":"FancyBboxPatch\u5b50\u7c7b","text":"<p>matplotlib.patches.FancyBboxPatch \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.patches.BoxStyle \u2014 Matplotlib 3.10.0 documentation</p> <p>Drawing fancy boxes \u2014 Matplotlib 3.10.1 documentation</p> <p><code>\"square, pad=0.3\"</code> == <code>BoxStyle.Square(pad=0.3)</code> == <code>BoxStyle(\"square\", pad=0.3)</code> == <code>BoxStyle(\"square, pad=0.3\")</code></p> BoxStyle BoxStyle\u5b50\u7c7b \u540d\u79f0 \u5c5e\u6027 <code>BoxStyle.Square()</code> <code>\"square\"</code> pad=0.3 <code>BoxStyle.Circle()</code> <code>\"circle\"</code> <code>BoxStyle.Ellipse()</code> <code>\"ellipse\"</code> <code>BoxStyle.LArrow()</code> <code>\"larrow\"</code> <code>BoxStyle.RArrow()</code> <code>\"rarrow\"</code> <code>BoxStyle.DArrow()</code> <code>\"darrow\"</code> <code>BoxStyle.Round()</code> <code>\"round\"</code> pad=0.3, rounding_size=pad <code>BoxStyle.Round4()</code> <code>\"round4\"</code> pad=0.3, rounding_size=pad/2 <code>BoxStyle.Sawtooth()</code> <code>\"sawtooth\"</code> pad=0.3, tooth_size=pad/2 <code>BoxStyle.Roundtooth()</code> <code>\"roundtooth\"</code> <p></p> FancyBboxPatch\u5b50\u7c7b<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\n\"\"\"\nfancy box\u5b9e\u9645\u5c5e\u6027\u503c\uff08\u5982pad\uff09\uff1a\n    \u6c34\u5e73\u65b9\u5411\uff1apad = mutation_scale x pad\n    \u5782\u76f4\u65b9\u5411\uff1apad = mutation_aspect x mutation_scale x pad\n\"\"\"\npatch = FancyBboxPatch(xy=(0.4, 0.4),                 # (1)!\n                       width=0.1,                     # (2)!\n                       height=0.1,                    # (3)!\n                       transform=ax.transAxes,        # (4)!\n                       boxstyle=\"square, pad=0.1\",    # (5)!\n                       mutation_scale=0.5,\n                       mutation_aspect=2,\n\n                       # Patch\u7236\u7c7b\u53c2\u6570\n                       facecolor=\"red\",\n                       linestyle=\"--\",\n                       linewidth=2,\n                       hatch=\"/\",\n                       hatch_linewidth=2,\n                       edgecolor=\"green\",\n                       alpha=0.5\n                       )\nax.add_patch(patch)\nax.grid()\n\nplt.show()\n</code></pre> <ol> <li>\u5de6\u4e0b\u89d2\u5750\u6807</li> <li>\u5bbd\u5ea6</li> <li>\u9ad8\u5ea6</li> <li>\u53c2\u8003\u5750\u6807\u7cfb\u7edf</li> <li>fancy box\u7c7b\u578b\u53ca\u5c5e\u6027</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/Patch%E7%B1%BB%E5%8F%8A%E5%85%B6%E5%AD%90%E7%B1%BB/#fancyarrowpatch","title":"FancyArrowPatch\u5b50\u7c7b","text":"<p>matplotlib.patches.FancyArrowPatch \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.patches.ArrowStyle \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.patches.ConnectionStyle \u2014 Matplotlib 3.10.0 documentation</p> ArrowStyleConnectionStyle <p><code>\"|-|, widthA=20, widthB=20, angleA=45, angleB=45\"</code> == <code>ArrowStyle(\"|-|, widthA=20, widthB=20, angleA=45, angleB=45\")</code> == <code>ArrowStyle(\"|-|\", widthA=20, widthB=20, angleA=45, angleB=45)</code> == <code>ArrowStyle.BarAB(widthA=20, widthB=20, angleA=45, angleB=45)</code></p> <p> ArrowStyle ArrowStyle\u5b50\u7c7b \u540d\u79f0 \u5c5e\u6027 <code>ArrowStyle.Curve()</code> <code>\"-\"</code> None <code>ArrowStyle.CurveA()</code> <code>\"&lt;-\"</code> head_length=0.4, head_width=0.2,                      widthA=1.0, widthB=1.0,                      lengthA=0.2, lengthB=0.2,                      angleA=0, angleB=0,                      scaleA=mutation_size,                      scaleB=mutation_size <code>ArrowStyle.CurveB()</code> <code>\"-&gt;\"</code> <code>ArrowStyle.CurveAB()</code> <code>\"&lt;-&gt;\"</code> <code>ArrowStyle.CurveFilledA()</code> <code>\"&lt;|-\"</code> <code>ArrowStyle.CurveFilledB()</code> <code>\"-|&gt;\"</code> <code>ArrowStyle.CurveFilledAB()</code> <code>\"&lt;|-|&gt;\"</code> <code>ArrowStyle.BracketA()</code> <code>\"]-\"</code> widthA=1.0, widthB=1.0,                      lengthA=0.2, lengthB=0.2,                      angleA=0, angleB=0 <code>ArrowStyle.BracketB()</code> <code>\"-[\"</code> <code>ArrowStyle.BracketAB()</code> <code>\"]-[\"</code> <code>ArrowStyle.BarAB()</code> <code>\"|-|\"</code> widthA=1.0, widthB=1.0,            angleA=0, angleB=0 <code>ArrowStyle.BracketCurve()</code> <code>\"]-&gt;\"</code> widthA=1.0,            lengthA=0.2,            angleA=0 <code>ArrowStyle.CurveBracket()</code> <code>\"&lt;-[\"</code> widthB=1.0,            lengthB=0.2,            angleB=0 <code>ArrowStyle.Simple()</code> <code>\"simple\"</code>(\u9ed8\u8ba4) head_length=0.5, head_width=0.5,            tail_width=0.2 <code>ArrowStyle.Fancy()</code> <code>\"fancy\"</code> head_length=0.4, head_width=0.4,            tail_width=0.4 <code>ArrowStyle.Wedge()</code> <code>\"wedge\"</code> tail_width=0.3, shrink_factor=0.5 <p> </p> <p><code>\"arc3, rad=1\"</code> == <code>ConnectionStyle(\"arc3, rad=1\")</code> == <code>ConnectionStyle(\"arc3\", rad=1)</code> == <code>ConnectionStyle.Arc3(rad=1)</code></p> <p> ConnectionStyle ConnectionStyle\u5b50\u7c7b \u540d\u79f0 \u5c5e\u6027 <code>ConnectionStyle.Arc3()</code> <code>\"arc3\"</code>(\u9ed8\u8ba4) rad=0.0 <code>ConnectionStyle.Arc()</code> <code>\"arc\"</code> angleA=0, angleB=0,            armA=None, armB=None,            rad=0.0 <code>ConnectionStyle.Angle3()</code> <code>\"angle3\"</code> angleA=90, angleB=0 <code>ConnectionStyle.Angle()</code> <code>\"angle\"</code> angleA=90, angleB=0,            rad=0.0 <code>ConnectionStyle.Bar()</code> <code>\"bar\"</code> armA=0.0, armB=0.0,            fraction=0.3, angle=None </p> <p></p> \u6839\u636e\u8def\u5f84\u521b\u5efa\u6839\u636e\u76ee\u6807\u521b\u5efa FancyArrowPatch\u5b50\u7c7b<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\npatch = FancyArrowPatch(path=Path([(0.2, 0.2), (0.4, 0), (0.6, 0.4)], (1, 3, 2)),                # (1)!\n                        arrowstyle=\"simple, head_length=20, head_width=20, tail_width=20\",       # (2)!\n                        connectionstyle=\"arc3, rad=0\",                                           # (3)!\n                        # mutation_scale=0.5,\n                        # mutation_aspect=2,\n\n                        # Patch\u7236\u7c7b\u53c2\u6570\n                        facecolor=\"red\",\n                        linestyle=\"--\",\n                        linewidth=2,\n                        hatch=\"/\",\n                        hatch_linewidth=2,\n                        edgecolor=\"green\",\n                        alpha=0.5\n                        )\nax.add_patch(patch)\nax.grid()\n\nplt.show()\n</code></pre> <ol> <li>\u8def\u5f84</li> <li>\u7bad\u6837\u5f0f</li> <li>\u8fde\u63a5\u7ebf\u6837\u5f0f</li> </ol> <p></p> FancyArrowPatch\u5b50\u7c7b<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\npatch = FancyArrowPatch(posA=(0.2, 0.2),                                                         # (1)!\n                        posB=(0.4, 0.4),                                                         # (2)!\n                        arrowstyle=\"simple, head_length=20, head_width=20, tail_width=20\",       # (3)!\n                        connectionstyle=\"arc3, rad=1\",                                           # (4)!\n                        # patchA=None,                                                           (5)\n                        # patchB=None,                                                           (6)\n                        shrinkA=20,                                                              # (7)!\n                        shrinkB=20,                                                              # (8)!\n                        # mutation_scale=0.5,\n                        # mutation_aspect=2,\n\n                        # Patch\u7236\u7c7b\u53c2\u6570\n                        facecolor=\"red\",\n                        linestyle=\"--\",\n                        linewidth=2,\n                        hatch=\"/\",\n                        hatch_linewidth=2,\n                        edgecolor=\"green\",\n                        alpha=0.5\n                        )\nax.add_patch(patch)\nax.grid()\n\nplt.show()\n</code></pre> <ol> <li>\u7bad\u5c3e\u5750\u6807</li> <li>\u7bad\u5934\u5750\u6807</li> <li>\u7bad\u6837\u5f0f</li> <li>\u8fde\u63a5\u7ebf\u6837\u5f0f</li> <li>\u7bad\u5c3ePatch</li> <li>\u7bad\u5934Patch</li> <li>\u7bad\u5c3e\u7f29\u77ed</li> <li>\u7bad\u5934\u7f29\u77ed</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/","title":"\u56fe\u4f8b\uff08Legend\uff09","text":"<p>Legend guide \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.legend \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.legend \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.legend \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.figure.Figure.legend \u2014 Matplotlib 3.10.1 documentation</p> \u5bfc\u5165\u6a21\u5757\u4e0e\u6570\u636e\u51c6\u5907<pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\nx = np.arange(1, 11, 1)\n\"\"\"\n[  1   2   3   4   5   6   7   8   9  10]\n\"\"\"\n\ny1 = np.sin(x)\n\"\"\"\n[ 0.84147098  0.90929743  0.14112001 -0.7568025  -0.95892427 -0.2794155  0.6569866   0.98935825  0.41211849 -0.54402111]\n\"\"\"\n\ny2 = x+2\n\"\"\"\n[  3   4   5   6   7   8   9  10  11  12]\n\"\"\"\n\ny3 = np.log(x)\n\"\"\"\n[0.         0.69314718 1.09861229 1.38629436 1.60943791 1.79175947 1.94591015 2.07944154 2.19722458 2.30258509 2.39789527]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#_1","title":"\u56fe\u4f8b\u6dfb\u52a0","text":"<p>Note</p> <p>label \u4e3a \u7a7a\u5b57\u7b26\u4e32('')\u3001'_'\uff08\u9ed8\u8ba4\uff09 \u6216\u4ee5 '_'\u5f00\u5934 \u7684handle\u5c06\u88ab\u5ffd\u7565</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#_2","title":"\u81ea\u5e26\u6807\u7b7e","text":"AxesFigure Axes<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\n# l1[0].set_label(\"y=sin(x)\")\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\n# l2[0].set_label(\"y=x+2\")\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n# l3.set_label(\"y=ln(x)\")\n\nax.legend(handles=[l1[0], l2[0], l3])    # (1)!\n\nplt.show()\n</code></pre> <ol> <li>\u6307\u5b9a\u56fe\u5f62\u7ed8\u5236\u56fe\u4f8b\uff0c\u9ed8\u8ba4\u6240\u6709\u56fe\u5f62</li> </ol> Figure<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\n# l1[0].set_label(\"y=sin(x)\")\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\n# l2[0].set_label(\"y=x+2\")\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n# l3.set_label(\"y=ln(x)\")\n\nfig.legend(handles=[l1[0], l2[0], l3])    # (1)!\n\nplt.show()\n</code></pre> <ol> <li>\u6307\u5b9a\u56fe\u5f62\u7ed8\u5236\u56fe\u4f8b\uff0c\u9ed8\u8ba4\u6240\u6709\u56fe\u5f62</li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#_3","title":"\u8bbe\u7f6e\u6807\u7b7e","text":"AxesFigure Axes<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, marker='o')\nl2 = ax.plot(x, y2, marker='o')\nl3 = ax.scatter(x, y3, marker='o')\n\nax.legend(handles=[l1[0], l2[0], l3],                # (1)!\n          labels=['y=sin(x)', 'y=x+2', 'y=ln(x)']    # (2)!\n          )\n\nplt.show()\n</code></pre> <ol> <li>\u6307\u5b9a\u56fe\u5f62\u7ed8\u5236\u56fe\u4f8b\uff0c\u9ed8\u8ba4\u6240\u6709\u56fe\u5f62</li> <li>\u4e3a\u6307\u5b9a\u7684\u56fe\u5f62\u8bbe\u7f6e\u6807\u7b7e\uff0c\u7528\u4e8e\u56fe\u4f8b\u7ed8\u5236\uff0c\u8986\u76d6\u81ea\u5e26label</li> </ol> Figure<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, marker='o')\nl2 = ax.plot(x, y2, marker='o')\nl3 = ax.scatter(x, y3, marker='o')\n\nfig.legend(handles=[l1[0], l2[0], l3],                # (1)!\n           labels=['y=sin(x)', 'y=x+2', 'y=ln(x)']    # (2)!\n           )\n\nplt.show()\n</code></pre> <ol> <li>\u6307\u5b9a\u56fe\u5f62\u7ed8\u5236\u56fe\u4f8b\uff0c\u9ed8\u8ba4\u6240\u6709\u56fe\u5f62</li> <li>\u4e3a\u6307\u5b9a\u7684\u56fe\u5f62\u8bbe\u7f6e\u6807\u7b7e\uff0c\u7528\u4e8e\u56fe\u4f8b\u7ed8\u5236\uff0c\u8986\u76d6\u81ea\u5e26label</li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#_4","title":"\u56fe\u4f8b\u4f4d\u7f6e","text":"<ol> <li> <p>loc\uff1a\u9ed8\u8ba4<code>rcParams[\"legend.loc\"]='best'</code></p> <ol> <li> <p>\u4f4d\u7f6e\u5b57\u7b26\u4e32\u6216\u4f4d\u7f6e\u4ee3\u7801\uff1a\u56fe\u4f8b\u5728Axes\u3001Figure\u6216bounding box\u4e2d\u7684\u4f4d\u7f6e\uff1b\u56fe\u4f8b\u7684\u67d0\u4e2a\u70b9\u4f4d\u7f6e</p> \u5b57\u7b26\u4e32 \u4ee3\u7801 \u542b\u4e49 \u5e94\u7528 'best' \uff08\u9ed8\u8ba4\uff09 0 \u4ee5\u4e0b9\u79cd\u4e2d\u4e0e\u56fe\u5f62\u91cd\u53e0\u6700\u5c11\u7684\u4f4d\u7f6e Axes 'upper right' 1 \u53f3\u4e0a\u89d2 Axes / Figure 'upper left' 2 \u5de6\u4e0a\u89d2 Axes / Figure 'lower left' 3 \u5de6\u4e0b\u89d2 Axes / Figure 'lower right' 4 \u53f3\u4e0b\u89d2 Axes / Figure 'center left' 6 \u5de6\u4fa7\u6b63\u4e2d Axes / Figure 'right' / 'center right' 5 / 7 \u53f3\u4fa7\u6b63\u4e2d Axes / Figure 'lower center' 8 \u4e0b\u65b9\u6b63\u4e2d Axes / Figure 'upper center' 9 \u4e0a\u65b9\u6b63\u4e2d Axes / Figure 'center' 10 \u6b63\u4e2d Axes / Figure 'outside upper left' / Axes\u5916\u7684\u4e0a\u65b9\u5de6\u4fa7 Figure(layout='constraind') 'outside left upper' / Axes\u5916\u7684\u5de6\u4fa7\u4e0a\u65b9 Figure(layout='constraind') 'outside upper right' / Axes\u5916\u7684\u4e0a\u65b9\u53f3\u4fa7 Figure(layout='constraind') 'outside right upper' / Axes\u5916\u7684\u53f3\u4fa7\u4e0a\u65b9 Figure(layout='constraind') 'outside lower left' / Axes\u5916\u7684\u4e0b\u65b9\u5de6\u4fa7 Figure(layout='constraind') 'outside left lower' / Axes\u5916\u7684\u5de6\u4fa7\u4e0b\u65b9 Figure(layout='constraind') 'outside lower right' / Axes\u5916\u7684\u4e0b\u65b9\u53f3\u4fa7 Figure(layout='constraind') 'outside right lower' / Axes\u5916\u7684\u53f3\u4fa7\u4e0b\u65b9 Figure(layout='constraind') 'outside upper center' / Axes\u5916\u7684\u4e0a\u65b9\u6b63\u4e2d Figure(layout='constraind') 'outside lower center' / Axes\u5916\u7684\u4e0b\u65b9\u6b63\u4e2d Figure(layout='constraind') </li> <li> <p>(x, y)\uff1a\u56fe\u4f8b\u5de6\u4e0b\u89d2\u5728Axes\u6216Figure\u4e2d\u7684\u5750\u6807\uff08\u6b64\u65f6\u5ffd\u7565 bbox_to_anchor\u53c2\u6570\uff09</p> </li> </ol> </li> <li> <p>bbox_to_anchor\uff1a</p> <ol> <li> <p>(x, y)\uff1a\u56fe\u4f8b\u67d0\u4e2a\u70b9\uff08\u7531loc\u53c2\u6570\u6307\u5b9a\uff09\u5728Axes\u6216Figure\u4e2d\u7684\u5750\u6807</p> </li> <li> <p>(x, y, width, height)\uff1a\u5728Axes\u6216Figure\u4e2d\u4ece(x, y)\u5750\u6807\u521b\u5efa\u4e00\u4e2a\u5bbdwidth, \u9ad8height\u7684bounding box\u7528\u4e8e\u653e\u7f6e\u56fe\u4f8b</p> </li> </ol> </li> <li> <p>bbox_transform\uff1a</p> <p>bbox_to_anchor\u53c2\u6570\u53c2\u8003\u7684\u5750\u6807\u7cfb\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0e\u8c03\u7528\u60c5\u51b5\u6709\u5173\uff0c<code>Axes.legend()</code>\u5219\u53c2\u8003Axes\u5750\u6807\u7cfb(<code>Axes.transAxes</code>)\uff0c<code>Figure.legend()</code>\u5219\u91c7\u7528Figure\u5750\u6807\u7cfb(<code>Figure.transFigure</code>)\u3002</p> <p>Note</p> <p>Axes\u6216Figure\u5750\u6807\u7cfb \u6307\u4ece(0, 0)\u5230(1, 1)\uff0c\u5373 \u5de6\u4e0b\u89d2\u4e3a(0, 0)\uff0c\u53f3\u4e0a\u89d2\u4e3a(1, 1)</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#loc","title":"loc=''\uff1a\u56fe\u4f8b\u4f4d\u7f6e","text":"Axes\u4e0b\u65b9\u6b63\u4e2dFigure\u4e0b\u65b9\u6b63\u4e2dAxes\u5916\u4e0a\u65b9\u5de6\u4fa7Axes\u5916\u5de6\u4fa7\u4e0a\u65b9 Axes\u4e0b\u65b9\u6b63\u4e2d<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n\nax.legend(loc='lower center')\n\nplt.show()\n</code></pre> Figure\u4e0b\u65b9\u6b63\u4e2d<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n\nfig.legend(loc='lower center')\n\nplt.show()\n</code></pre> Axes\u5916\u4e0a\u65b9\u5de6\u4fa7<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n\nfig.legend(loc='outside upper left')\n\nplt.show()\n</code></pre> Axes\u5916\u5de6\u4fa7\u4e0a\u65b9<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1) \n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n\nfig.legend(loc='outside left upper')\n\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#locx-y","title":"loc=(x, y)\uff1a\u56fe\u4f8b\u5de6\u4e0b\u89d2\u5750\u6807","text":"AxesFigure Axes<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n\nax.legend(loc=(0, 0))    # (1)!\n\nplt.show()\n</code></pre> <ol> <li>\u56fe\u4f8b\u5de6\u4e0b\u89d2\u5728Axes\u4e2d\u7684\u5750\u6807\u4e3a(0, 0)</li> </ol> Figure<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n\nfig.legend(loc=(0, 0))    # (1)!\n\nplt.show()\n</code></pre> <ol> <li>\u56fe\u4f8b\u5de6\u4e0b\u89d2\u5728Figure\u4e2d\u7684\u5750\u6807\u4e3a(0, 0)</li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#loc-bbox_to_anchorx-y","title":"loc='', bbox_to_anchor=(x, y)\uff1a\u56fe\u4f8b\u5b9a\u70b9\u5750\u6807","text":"AxesFigure Axes<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n\n# \u56fe\u4f8b\u4e2d\u5fc3\u5728Axes\u4e2d\u7684\u5750\u6807\u4e3a(0, 0.5)\nax.legend(loc=\"center\",\n          bbox_to_anchor=(0, 0.5), \n          bbox_transform=ax.transAxes)\n\nplt.show()\n</code></pre> Figure<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n\n# \u56fe\u4f8b\u4e2d\u5fc3\u5728Figure\u4e2d\u7684\u5750\u6807\u4e3a(0, 0.5)\nfig.legend(loc=\"center\",\n           bbox_to_anchor=(0, 0.5),\n           bbox_transform=fig.transFigure)\n\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#loc-bbox_to_anchorx-y-width-heightbounding-box","title":"loc='', bbox_to_anchor=(x, y, width, height)\uff1a\u56fe\u4f8b\u5728bounding box\u4e2d\u4f4d\u7f6e","text":"AxesFigure Axes<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n\n# \u5728Axes\u4e2d\u4ece(0, 0.5)\u521b\u5efa\u4e00\u4e2a\u5bbd1\u9ad80.5\u7684bounding box\uff0c\u56fe\u4f8b\u4f4d\u4e8e\u5176\u6b63\u4e2d\nax.legend(loc=\"center\",\n          bbox_to_anchor=(0, 0.5, 1, 0.5), \n          bbox_transform=ax.transAxes)\n\nplt.show()\n</code></pre> Figure<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n\n# \u5728Figure\u4e2d\u4ece(0, 0.5)\u521b\u5efa\u4e00\u4e2a\u5bbd1\u9ad80.5\u7684bounding box\uff0c\u56fe\u4f8b\u4f4d\u4e8e\u5176\u6b63\u4e2d\nfig.legend(loc=\"center\",\n           bbox_to_anchor=(0, 0.5, 1, 0.5),\n           bbox_transform=fig.transFigure)\n\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#_5","title":"\u5176\u5b83\u53c2\u6570","text":"<p>Understand layout in matplotlib legend - legendkit 0.3.5 documentation</p> <p></p> <p></p> \u5176\u5b83\u53c2\u6570\u53ef\u7528\u5b57\u4f53 \u5176\u5b83\u53c2\u6570<pre><code>legend(\n       ################### \u6807\u7b7e\u6587\u672c ####################\n       prop={\"family\": [\"sans-serif\"],           # (1)!\n             \"style\": \"italic\",                  # (2)!\n             \"variant\": \"normal\",                # (3)!\n             \"stretch\": \"normal\",                # (4)!\n             \"weight\": \"extra bold\",             # (5)!\n             \"size\": 20.0,                       # (6)!\n             \"math_fontfamily\": 'dejavusans',    # (7)!\n             \"fname\": None                       # (8)!\n             },\n       # fontsize=20.0,                          (9)\n       labelcolor=\"linecolor\",                   # (10)!\n\n       ################### \u56fe\u4f8b\u6807\u9898 #####################\n       title=\"Legend\",                           # (11)!\n       title_fontproperties={\"size\": 20.0,\n                             \"weight\": \"extra bold\"\n                             },\n       # title_fontsize=20.0,                    (12)\n       alignment=\"center\",                       # (13)!\n\n       ################### \u56fe\u4f8b\u9879\u76ee ######################\n       ncols=2,                                  # (14)!\n       columnspacing=1,                          # (15)!\n       labelspacing=0.5,                         # (16)!\n       numpoints=3,                              # (17)!\n       scatterpoints=3,                          # (18)!\n       scatteryoffsets=[0, 0.5, 1],              # (19)!\n       markerscale=0.5,                          # (20)!\n       markerfirst=False,                        # (21)!\n       reverse=True,                             # (22)!\n       handlelength=2,                           # (23)!\n       handleheight=1,                           # (24)!\n       handletextpad=0.5,                        # (25)!\n\n       ################### \u56fe\u4f8b\u80cc\u666f\u6846 ####################\n       frameon=True,                             # (26)!\n       framealpha=0.5,                           # (27)!\n       facecolor=\"blue\",                         # (28)!\n       edgecolor=\"yellow\",                       # (29)!\n       fancybox=True,                            # (30)!\n       borderpad=0.3,                            # (31)!\n       borderaxespad=0.2,                        # (32)!\n\n       # Patch\u53c2\u6570\uff1arcParams[\"legend.shadow\"]=False\n       shadow={\"linestyle\": \"--\",                # (33)!\n               \"linewidth\": 5,                   # (34)!\n               \"facecolor\": \"red\",               # (35)!\n               \"edgecolor\": \"green\"              # (36)!\n               },\n\n       ################### \u5176\u5b83\u53c2\u6570 #####################\n       mode=None,                                # (37)!\n       handler_map=None,                         # (38)!\n       draggable=False                           # (39)!\n       )\n</code></pre> <ol> <li>\u6309\u4f18\u5148\u7ea7\u964d\u5e8f\u6392\u5217\u7684\u5b57\u4f53\u7cfb\u5217\u5217\u8868rcParams[\"font.family\"], \u53ef\u9009(\u8bbe\u5907\u652f\u6301\u7684\u5b57\u4f53):<ol> <li>'sans-serif'(\u9ed8\u8ba4)</li> <li>'serif'</li> <li>'cursive'</li> <li>'fantasy'</li> <li>'monospace'\u7b49</li> </ol> </li> <li>\u5b57\u4f53\u6837\u5f0frcParams[\"font.style\"], \u53ef\u9009:<ol> <li>'normal'(\u9ed8\u8ba4\uff0c\u7f57\u9a6c\u4f53)</li> <li>'italic'(\u659c\u4f53)</li> <li>'oblique'(\u503e\u659c)</li> </ol> </li> <li>\u5b57\u4f53\u53d8\u4f53rcParams[\"font.variant\"], \u53ef\u9009:<ol> <li>'normal'(\u9ed8\u8ba4)</li> <li>'small-caps'</li> </ol> </li> <li>\u5b57\u4f53\u4f38\u5c55\u4e0e\u538b\u7f29rcParams[\"font.stretch\"], \u53ef\u9009:<ol> <li>0~1000</li> <li>'ultra-condensed'</li> <li>'extra-condensed'</li> <li>'condensed'</li> <li>'semi-condensed'</li> <li>'normal'(\u9ed8\u8ba4)</li> <li>'semi-expanded'</li> <li>'expanded'</li> <li>'extra-expanded'</li> <li>'ultra-expanded' </li> </ol> </li> <li>\u5b57\u4f53\u7c97\u7ec6rcParams[\"font.weight\"], \u53ef\u9009:<ol> <li>0~1000</li> <li>'ultralight'</li> <li>'light'</li> <li>'normal'(\u9ed8\u8ba4)</li> <li>'regular'</li> <li>'book'</li> <li>'medium'</li> <li>'roman'</li> <li>'semibold'</li> <li>'demibold'</li> <li>'demi'</li> <li>'bold'</li> <li>'heavy'</li> <li>'extra bold'</li> <li>'black'</li> </ol> </li> <li> <p>\u5b57\u4f53\u5927\u5c0frcParams[\"font.size\"], \u53ef\u9009: </p> <p>\u7edd\u5bf9\u5927\u5c0f(\u6d6e\u70b9\u6570\uff0c\u9ed8\u8ba410.0) \u6216 \u76f8\u5bf9\u5927\u5c0f</p> <ol> <li>'xx-small'</li> <li>'x-small'</li> <li>'small'</li> <li>'medium'</li> <li>'large'</li> <li>'x-large'</li> <li>'xx-large'</li> </ol> </li> <li> <p>\u7528\u4e8e\u5448\u73b0\u6570\u5b66\u6587\u672c\u7684\u5b57\u4f53rcParams[\"mathtext.fontset\"], \u53ef\u9009: </p> <ol> <li>'dejavusans'(\u9ed8\u8ba4)</li> <li>'dejavuserif'</li> <li>'cm'</li> <li>'stix'</li> <li>'stixsans'</li> <li>'custom'</li> </ol> </li> <li>\u5b57\u4f53\u6587\u4ef6\u8def\u5f84</li> <li>\u5b57\u4f53\u5927\u5c0f\uff1a \u4ec5\u5f53prop\u672a\u6307\u5b9a\u65f6\u88ab\u4f7f\u7528</li> <li> <p>\u5b57\u4f53\u989c\u8272rcParams[\"legend.labelcolor\"]\uff0c\u9ed8\u8ba4None(rcParams[\"text.color\"]=\"black\"), \u53ef\u9009: </p> <p>\u989c\u8272\u5b57\u7b26\u4e32\u3001\u989c\u8272\u5b57\u7b26\u4e32\u5217\u8868\u6216\u8005\u4e0e\u7ebf\u6761/\u6807\u8bb0\u70b9\u989c\u8272\u4e00\u81f4</p> <ol> <li>'linecolor'</li> <li>'markerfacecolor'/'mfc'</li> <li>'markeredgecolor'/'mec'</li> </ol> </li> <li> <p>\u6807\u9898\uff0c\u9ed8\u8ba4None</p> </li> <li>\u9ed8\u8ba4rcParams[\"legend.title_fontsize\"]=None, \u4e0d\u80fd\u4e0etitle_fontproperties\u540c\u65f6\u6307\u5b9a</li> <li>\u56fe\u4f8b\u6807\u9898\u53ca\u56fe\u4f8b\u9879\u76ee\u7684\u5bf9\u9f50\u65b9\u5f0f, \u53ef\u9009: <ol> <li>'center'(\u9ed8\u8ba4)</li> <li>'left'</li> <li>'right'</li> </ol> </li> <li>\u56fe\u4f8b\u9879\u76ee\u5217\u6570\uff0c\u9ed8\u8ba4\u4e3a1</li> <li>\u56fe\u4f8b\u9879\u76ee\u5217\u95f4\u8ddd\uff08\u76f8\u5bf9\u4e8e\u5b57\u4f53\u5927\u5c0f\uff09\uff0c\u9ed8\u8ba4rcParams[\"legend.columnspacing\"]=2</li> <li>\u56fe\u4f8b\u9879\u76ee\u95f4\u7684\u5782\u76f4\u8ddd\u79bb\uff08\u76f8\u5bf9\u4e8e\u5b57\u4f53\u5927\u5c0f\uff09\uff0c\u9ed8\u8ba4rcParams[\"legend.labelspacing\"]=0.5</li> <li>\u7ebf\u5f62\u56fe\u56fe\u4f8b\u9879\u76ee\u56fe\u5f62\u4e2d\u6807\u8bb0\u70b9\u6570\u91cf\uff0c\u9ed8\u8ba4rcParams[\"legend.numpoints\"]=1</li> <li>\u6563\u70b9\u56fe\u56fe\u4f8b\u9879\u76ee\u56fe\u5f62\u4e2d\u6807\u8bb0\u70b9\u6570\u91cf\uff0c\u9ed8\u8ba4rcParams[\"legend.scatterpoints\"]=1</li> <li>\u6563\u70b9\u56fe\u56fe\u4f8b\u9879\u76ee\u56fe\u5f62\u4e2d\u6bcf\u4e2a\u6807\u8bb0\u70b9\u76f8\u5bf9\u4e8e\u5176\u6807\u7b7e\u6587\u672c\u7684\u5782\u76f4\u76f8\u5bf9\u504f\u79fb\u91cf\uff0c\u9ed8\u8ba4\u4e3a[0.375, 0.5, 0.3125]<ol> <li>0\u8868\u793a\u6587\u672c\u5e95\u90e8</li> <li>1\u8868\u793a\u6587\u672c\u9876\u90e8</li> </ol> </li> <li>\u56fe\u4f8b\u9879\u76ee\u56fe\u5f62\u6807\u8bb0\u70b9\u7f29\u653e\uff0c\u9ed8\u8ba4rcParams[\"legend.markerscale\"]=1</li> <li>\u56fe\u4f8b\u9879\u76ee\u56fe\u5f62\u662f\u5426\u5728\u6587\u672c\u6807\u7b7e\u524d\u9762\uff0c\u9ed8\u8ba4True</li> <li>\u662f\u5426\u9006\u8f6c\u56fe\u4f8b\u9879\u76ee\u987a\u5e8f\uff0c\u9ed8\u8ba4False</li> <li>\u56fe\u4f8b\u9879\u76ee\u56fe\u5f62\u957f\u5ea6\uff08\u76f8\u5bf9\u4e8e\u5b57\u4f53\u5927\u5c0f\uff09\uff0c\u9ed8\u8ba4rcParams[\"legend.handlelength\"]=2</li> <li>\u56fe\u4f8b\u9879\u76ee\u56fe\u5f62\u9ad8\u5ea6\uff08\u76f8\u5bf9\u4e8e\u5b57\u4f53\u5927\u5c0f\uff09\uff0c\u9ed8\u8ba4rcParams[\"legend.handleheight\"]=0.7</li> <li>\u56fe\u4f8b\u9879\u76ee\u56fe\u5f62\u4e0e\u6807\u7b7e\u6587\u672c\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u76f8\u5bf9\u4e8e\u5b57\u4f53\u5927\u5c0f\uff09\uff0c\u9ed8\u8ba4rcParams[\"legend.handletextpad\"]=0.8</li> <li>\u662f\u5426\u7ed8\u5236\u80cc\u666f\u6846\uff0c\u9ed8\u8ba4rcParams[\"legend.frameon\"]=True</li> <li>\u80cc\u666f\u6846\u900f\u660e\u5ea6\uff0c\u9ed8\u8ba4rcParams[\"legend.framealpha\"]=0.8</li> <li>\u80cc\u666f\u6846\u586b\u5145\u8272\uff0c\u9ed8\u8ba4rcParams[\"legend.facecolor\"]=\"inherit\"(\u5373\u7ee7\u627frcParams[\"axes.facecolor\"]=\"white\")</li> <li> <p>\u80cc\u666f\u6846\u8fb9\u7f18\u8272\uff0c\u9ed8\u8ba4rcParams[\"legend.edgecolor\"]=0.8, </p> <p>\u82e5\u4e3a\"inherit\"\u5219\u7ee7\u627frcParams[\"axes.edgecolor\"]=\"black\"</p> </li> <li> <p>\u80cc\u666f\u6846\u662f\u5426\u542f\u7528\u5706\u89d2\uff0c\u9ed8\u8ba4rcParams[\"legend.fancybox\"]=True</p> </li> <li>\u8fb9\u6846\u4e0e\u5185\u90e8\u7684\u8ddd\u79bb\uff08\u76f8\u5bf9\u4e8e\u5b57\u4f53\u5927\u5c0f\uff09\uff0c\u9ed8\u8ba4rcParams[\"legend.borderpad\"]=0.4</li> <li>\u8fb9\u6846\u4e0eAxes\u7684\u8ddd\u79bb\uff08\u76f8\u5bf9\u4e8e\u5b57\u4f53\u5927\u5c0f\uff09\uff0c\u9ed8\u8ba4rcParams[\"legend.borderaxespad\"]=0.5</li> <li>\u9634\u5f71\u7ebf\u6837\u5f0f</li> <li>\u9634\u5f71\u7ebf\u5bbd\u5ea6</li> <li>\u9634\u5f71\u586b\u5145\u8272</li> <li>\u9634\u5f71\u8fb9\u7f18\u8272</li> <li>\u53ef\u9009\"expand\"\uff08\u6c34\u5e73\u6269\u5c55\u5230\u586b\u5145\u6574\u4e2a\u8f74\u6216bbox\uff09, None</li> <li>\u901a\u8fc7\u5b57\u5178\u6620\u5c04\u5355\u72ec\u8bbe\u7f6e\u6bcf\u4e00\u4e2a\u56fe\u4f8b\u9879\u76ee</li> <li>\u56fe\u4f8b\u80fd\u5426\u88ab\u9f20\u6807\u62d6\u52a8\uff0c\u9ed8\u8ba4False</li> </ol> <p></p> \u53ef\u7528\u5b57\u4f53<pre><code>import matplotlib.font_manager\nmatplotlib.font_manager.get_font_names()\n\"\"\"\n['Monotype Corsiva', 'Goudy Stout', 'Lucida Sans Unicode', 'HoloLens MDL2 Assets', 'Eras Light ITC', \n 'Tempus Sans ITC', 'Sylfaen', 'Lucida Console', 'Verdana', 'cmb10', \n 'STZhongsong', 'Segoe Fluent Icons', 'Lucida Handwriting', 'Microsoft PhagsPa', \n 'Eras Bold ITC', 'DFKai-SB', 'Papyrus', 'DejaVu Sans Mono', 'Harrington', \n 'Times New Roman', 'STLiti', 'Mistral', 'cmsy10', 'Leelawadee', \n 'Niagara Engraved', 'Colonna MT', 'Microsoft New Tai Lue', 'STIXSizeTwoSym', \n 'Edwardian Script ITC', 'FZYaoTi', 'Script MT Bold', 'MingLiU-ExtB', 'Segoe UI Historic', \n 'Microsoft Himalaya', 'Trebuchet MS', 'cmtt10', 'Vladimir Script', \n 'Rage Italic', 'STXinwei', 'Segoe UI Variable', 'Modern No. 20', 'FZShuTi', \n 'French Script MT', 'Copperplate Gothic Light', 'Nirmala UI', 'Gloucester MT Extra Condensed', 'Segoe UI', \n 'Book Antiqua', 'Microsoft YaHei', 'MS Reference Sans Serif', 'Lucida Sans', 'Engravers MT', \n 'DengXian', 'STXingkai', 'Javanese Text', 'High Tower Text', 'SimSun-ExtB', \n 'Chiller', 'HarmonyOS Sans SC', 'Playbill', 'Bookman Old Style', 'MS Gothic', \n 'Castellar', 'SimHei', 'Kunstler Script', 'Yu Gothic', 'FangSong', \n 'Brush Script MT', 'Sans Serif Collection', 'Tahoma', 'Courier New', 'Myanmar Text', \n 'Bradley Hand ITC', 'Bell MT', 'Gill Sans MT Ext Condensed Bold', 'STIXNonUnicode', 'Leelawadee UI', \n 'Franklin Gothic Heavy', 'Calibri', 'STIXSizeThreeSym', 'Microsoft Uighur', 'Maiandra GD', \n 'STIXGeneral', 'Segoe UI Symbol', 'Lucida Fax', 'Dubai', 'Century Gothic', \n 'Tw Cen MT', 'Pristina', 'Viner Hand ITC', 'Rockwell Extra Bold', 'Gill Sans Ultra Bold', \n 'HYZhongHei', 'Stencil', 'Parchment', 'Gadugi', 'DejaVu Sans', \n 'Juice ITC', 'Baskerville Old Face', 'Vivaldi', 'Niagara Solid', 'Garamond', \n 'Calisto MT', 'DejaVu Serif Display', 'Segoe MDL2 Assets', 'STFangsong', 'Candara', \n 'Curlz MT', 'Ink Free', 'STIXSizeOneSym', 'Rockwell', 'Bahnschrift', \n 'Lucida Sans Typewriter', 'Perpetua', 'Gill Sans MT', 'Gabriola', 'Sitka', \n 'STKaiti', 'STHupo', 'Centaur', 'Arial', 'Eras Demi ITC', \n 'Bodoni MT', 'Kristen ITC', 'MS Outlook', 'Lucida Bright', 'Century', \n 'Wide Latin', 'DejaVu Sans Display', 'SimSun-ExtG', 'Consolas', 'Arial Rounded MT Bold', \n 'cmr10', 'Eras Medium ITC', 'Palace Script MT', 'Broadway', 'Jokerman', \n 'DejaVu Serif', 'Agency FB', 'Constantia', 'Symbol', 'cmss10', \n 'Franklin Gothic Medium Cond', 'Informal Roman', 'STIXSizeFiveSym', 'Bauhaus 93', 'Footlight MT Light', \n 'Microsoft Sans Serif', 'Segoe Print', 'Comic Sans MS', 'Blackadder ITC', 'Microsoft Yi Baiti', \n 'Gigi', 'Lucida Calligraphy', 'Corbel', 'Magneto', 'LiSu', \n 'Elephant', 'Tw Cen MT Condensed', 'OCR A Extended', 'Snap ITC', 'Franklin Gothic Demi', \n 'Britannic Bold', 'Berlin Sans FB', 'Bookshelf Symbol 7', 'Wingdings', 'MS Reference Specialty', \n 'Berlin Sans FB Demi', 'Mongolian Baiti', 'STCaiyun', 'Onyx', 'Malgun Gothic', \n 'Harlow Solid Italic', 'Palatino Linotype', 'Goudy Old Style', 'STXihei', 'STSong', \n 'Cooper Black', 'Segoe Script', 'Wingdings 2', 'Georgia', 'MingLiU', 'cmmi10', 'cmex10', 'Webdings', \n 'Algerian', 'Freestyle Script', 'Gill Sans MT Condensed', 'Copperplate Gothic Bold', 'SimSun', \n 'Gill Sans Ultra Bold Condensed', 'Felix Titling', 'MV Boli', 'Old English Text MT', 'Rockwell Condensed', \n 'STIXSizeFourSym', 'Cambria', 'Segoe UI Emoji', 'Microsoft JhengHei', 'KaiTi', 'Ravie', \n 'Ebrima', 'Franklin Gothic Book', 'Haettenschweiler', 'Bernard MT Condensed', 'Impact', \n 'Tw Cen MT Condensed Extra Bold', 'Californian FB', 'Showcard Gothic', 'YouYuan', 'Microsoft Tai Le', \n 'Forte', 'Imprint MT Shadow', 'Wingdings 3', 'Century Schoolbook', 'Perpetua Titling MT', 'Poor Richard', \n 'FZXiaoBiaoSong-B05S', 'Matura MT Script Capitals', 'Franklin Gothic Demi Cond', 'Franklin Gothic Medium']\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#legend_1","title":"\u6dfb\u52a0\u591a\u4e2aLegend","text":"\u6dfb\u52a0\u591a\u4e2aLegend<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n\n# \u7b2c\u4e00\u4e2a\nlegend1 = ax.legend(handles=[l1[0]], loc='lower center')\nax.add_artist(legend1)\n# \u7b2c\u4e8c\u4e2a\nlegend2 = ax.legend(handles=[l2[0]], loc=(0.5, 0.6))\nax.add_artist(legend2)\n# \u7b2c\u4e09\u4e2a\nlegend3 = ax.legend(handles=[l3], loc=(0.8, 0.3))\nax.add_artist(legend3)\n\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#_6","title":"\u6dfb\u52a0\u81ea\u5b9a\u4e49\u56fe\u4f8b","text":"\u7ebf\u578b/\u6807\u8bb0\u56fe\u4f8b\u989c\u8272\u56fe\u4f8b \u7ebf\u578b/\u6807\u8bb0\u56fe\u4f8b<pre><code>from matplotlib.lines import Line2D\n\nfig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nline = Line2D(xdata=[], ydata=[],\n              linestyle=\"--\",\n              color=\"red\",\n              marker=\"o\",\n              markerfacecolor=\"red\",\n              label=\"line/marker\")\nax.legend(handles=[line],\n          fontsize=20)\n\nplt.show()\n</code></pre> \u989c\u8272\u56fe\u4f8b<pre><code>from matplotlib.patches import Patch\n\nfig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\npatch = Patch(facecolor=\"green\",\n              linestyle=\"--\",\n              linewidth=2,\n              edgecolor=\"yellow\",\n              hatch=\"/\",\n              hatch_linewidth=10,\n              label=\"Patch\")\nax.legend(handles=[patch],\n          fontsize=20)\n\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#handleslabels","title":"\u83b7\u53d6\u53ef\u7528handles\u4e0elabels","text":"\u83b7\u53d6\u53ef\u7528handles\u4e0elabels<pre><code>handles, labels = ax.get_legend_handles_labels()\n\"\"\"\nhandles: [&lt;matplotlib.lines.Line2D object at 0x000001A2F557C140&gt;, &lt;matplotlib.lines.Line2D object at 0x000001A2F557C3E0&gt;, &lt;matplotlib.collections.PathCollection object at 0x000001A2F530F710&gt;]\nlabels: ['y=sin(x)', 'y=x+2', 'y=ln(x)']\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E4%BE%8B%EF%BC%88Legend%EF%BC%89/#seabornmove_legend","title":"seaborn\u4e2d\u7684move_legend\u51fd\u6570","text":"<p>seaborn.move_legend \u2014 seaborn 0.13.2 documentation</p> <p>\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u56fe\u4f8b\u5230\u65b0\u7684\u4f4d\u7f6e\u3002\u8be5\u540d\u79f0\u7565\u6709\u8bef\u79f0\u3002Matplotlib \u56fe\u4f8b\u4e0d\u516c\u5f00\u5176\u4f4d\u7f6e\u53c2\u6570\u7684\u63a7\u5236\u3002\u56e0\u6b64\uff0c\u6b64\u51fd\u6570 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u56fe\u4f8b\uff0c\u590d\u5236\u539f\u59cb\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\uff0c\u7136\u540e\u5220\u9664\u8be5\u5bf9\u8c61\u3002</p> <p><code>sns.move_legend(obj, loc, **kwargs)</code></p> <ol> <li> <p>obj\uff1a\u6b64\u53c2\u6570\u53ef\u4ee5\u662f seaborn \u6216 matplotlib \u5bf9\u8c61\u3002</p> <ol> <li> <p><code>seaborn.FacetGrid</code> \u6216 <code>seaborn.PairGrid</code></p> </li> <li> <p><code>matplotlib.axes.Axes</code> \u6216 <code>matplotlib.figure.Figure</code></p> </li> </ol> </li> <li> <p>loc\uff1a\u4f4d\u7f6e\u53c2\u6570\uff0c\u540c <code>matplotlib.axes.Axes.legend()</code>\u3002</p> </li> </ol> <p><code>**kwargs</code> \u5176\u4ed6\u53c2\u6570\u4f20\u9012\u7ed9 <code>matplotlib.axes.Axes.legend()</code> \u3002</p> move_legend\u51fd\u6570<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nl1 = ax.plot(x, y1, label='y=sin(x)', marker='o')\nl2 = ax.plot(x, y2, label='y=x+2', marker='o')\nl3 = ax.scatter(x, y3, label='y=ln(x)', marker='o')\n\nax.legend()\n\nsns.move_legend(ax, loc=\"center\", bbox_to_anchor=(0, 0.5))\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E5%BD%A2%EF%BC%88Figure%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%EF%BC%88Axes%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%E7%BB%84%EF%BC%88Subfigure%EF%BC%89/","title":"\u56fe\u5f62\uff08Figure\uff09\u3001\u5b50\u56fe\uff08Axes\uff09\u3001\u5b50\u56fe\u7ec4\uff08Subfigure\uff09","text":"\u5bfc\u5165\u6a21\u5757\u4e0e\u6570\u636e\u51c6\u5907<pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.arange(0, 100, 1)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99]\n\"\"\"\n\ny = np.sin(x)\n\"\"\"\n[ 0.  0.84147098  0.90929743  0.14112001 -0.7568025  -0.95892427 -0.2794155   0.6569866   0.98935825  0.41211849 -0.54402111 -0.99999021 -0.53657292  0.42016704  0.99060736  0.65028784 -0.28790332 -0.96139749 -0.75098725  0.14987721  0.91294525  0.83665564 -0.00885131 -0.8462204 -0.90557836 -0.13235175  0.76255845  0.95637593  0.27090579 -0.66363388 -0.98803162 -0.40403765  0.55142668  0.99991186  0.52908269 -0.42818267 -0.99177885 -0.64353813  0.29636858  0.96379539  0.74511316 -0.15862267 -0.91652155 -0.83177474  0.01770193  0.85090352  0.90178835  0.12357312 -0.76825466 -0.95375265 -0.26237485  0.67022918  0.98662759  0.39592515 -0.55878905 -0.99975517 -0.521551    0.43616476  0.99287265  0.63673801 -0.30481062 -0.96611777 -0.7391807   0.1673557   0.92002604  0.82682868 -0.02655115 -0.85551998 -0.89792768 -0.11478481  0.77389068  0.95105465  0.25382336 -0.67677196 -0.98514626 -0.38778164  0.56610764  0.99952016  0.51397846 -0.44411267 -0.99388865 -0.62988799  0.31322878  0.96836446  0.73319032 -0.17607562 -0.92345845 -0.82181784  0.0353983   0.86006941  0.89399666  0.10598751 -0.77946607 -0.94828214 -0.24525199  0.68326171  0.98358775  0.37960774 -0.57338187 -0.99920683]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E5%BD%A2%EF%BC%88Figure%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%EF%BC%88Axes%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%E7%BB%84%EF%BC%88Subfigure%EF%BC%89/#figureaxes","title":"\u9ed8\u8ba4Figure\u4e0eAxes","text":"\u9ed8\u8ba4Figure\u4e0eAxes<pre><code># ax = plt.gca()    # \u83b7\u53d6\u5f53\u524d\u6fc0\u6d3b\u7684Axes\nplt.plot(x, y)\n\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E5%BD%A2%EF%BC%88Figure%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%EF%BC%88Axes%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%E7%BB%84%EF%BC%88Subfigure%EF%BC%89/#figure","title":"Figure\u7684\u8bbe\u7f6e","text":"<p>matplotlib.figure.Figure \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.figure \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.figure \u2014 Matplotlib 3.10.1 documentation</p> Figure\u7684\u8bbe\u7f6e<pre><code>fig = plt.figure(num=None,               # (1)!\n                 label=\"a\",              # (2)!\n                 clear=False,            # (3)!\n\n                 figsize=(10, 10),       # (4)!\n                 dpi=100.0,              # (5)!\n                 frameon=True,           # (6)!\n                 facecolor='gray',       # (7)!\n                 edgecolor='red',        # (8)!\n                 linewidth=2.0,          # (9)!\n\n                 layout=\"constrained\"    # (10)!\n                 )\n\"\"\"\nfig.number: 1\nfig.get_label(): a\n\"\"\"\n\nplt.plot(x, y)\nplt.show()\n</code></pre> <ol> <li> <p>\u56fe\u5f62\u552f\u4e00\u6807\u8bc6\uff08\u6570\u5b57\u6216\u5b57\u7b26\u4e32\uff09\u6216\u5df2\u5b58\u5728\u7684Figure\u5bf9\u8c61\u3001SubFigure\u5bf9\u8c61\u3002</p> <p>\u56fe\u5f62\u5bf9\u8c61\u5df2\u5b58\u5728\uff0c\u5219\u76f4\u63a5\u6fc0\u6d3b\u5e76\u8fd4\u56de\uff1b\u5426\u5219\u5148\u521b\u5efa\u518d\u6fc0\u6d3b\u5e76\u8fd4\u56de</p> </li> <li> <p>\u56fe\u5f62\u552f\u4e00\u6807\u8bc6\uff08\u5b57\u7b26\u4e32\uff09</p> </li> <li>\u662f\u5426\u6e05\u9664\u5df2\u5b58\u5728\u7684Figure\u5bf9\u8c61\uff0c\u9ed8\u8ba4False</li> <li>\u56fe\u5f62\u5c3a\u5bf8\uff08\u82f1\u5bf8\uff09\uff1a(\u5bbd, \u9ad8)\uff0c\u9ed8\u8ba4<code>rcParams[\"figure.figsize\"]=(6.4, 4.8)</code></li> <li>\u5206\u8fa8\u7387\uff1a\u6bcf\u82f1\u5bf8\u50cf\u7d20\u70b9\u6570\uff0c\u8d8a\u5927\u8d8a\u6e05\u6670\uff0c\u9ed8\u8ba4<code>rcParams[\"figure.dpi\"]=100.0</code></li> <li>\u662f\u5426\u7ed8\u5236\u80cc\u666f\u677f\uff0c\u9ed8\u8ba4<code>rcParams[\"figure.frameon\"]=True</code></li> <li>\u80cc\u666f\u677f\u8272\uff0c\u9ed8\u8ba4<code>rcParams[\"figure.facecolor\"]=\"white\"</code></li> <li>\u80cc\u666f\u677f\u8fb9\u7f18\u8272\uff0c\u9ed8\u8ba4<code>rcParams[\"figure.edgecolor\"]=\"white\"</code></li> <li>\u80cc\u666f\u677f\u8fb9\u7f18\u5bbd\u5ea6</li> <li> <p>\u5e03\u5c40, \u53ef\u9009: </p> <ol> <li>\"constrained\"</li> <li>\"compressed\"</li> <li>\"tight\"</li> <li>\"none\"</li> <li>LayoutEngine\u5b9e\u4f8b</li> <li>None(\u9ed8\u8ba4)</li> </ol> </li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E5%BD%A2%EF%BC%88Figure%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%EF%BC%88Axes%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%E7%BB%84%EF%BC%88Subfigure%EF%BC%89/#axes","title":"Axes\u7684\u6dfb\u52a0\u4e0e\u8bbe\u7f6e","text":"<p>matplotlib.axes.Axes \u2014 Matplotlib 3.10.1 documentation</p> Axes\u53c2\u6570<pre><code>projection=None,                       # (1)!\n\ntitle=\"y=sin(x)\",                      # (2)!\nfacecolor=\"yellow\",                    # (3)!\nframeon=True,                          # (4)!\n\nadjustable='box',                      # (5)!\naspect=40,                             # (6)!\n# box_aspect=1,                        (7)\n\nxlabel=\"x\",                            # (8)!\nxlim=(40, 100),                        # (9)!\nxbound=(40, 100),                      # (10)!\nxscale=\"linear\",                       # (11)!\nxticks=np.arange(20, 110, 10),         # (12)!\nxticklabels=np.arange(20, 110, 10),    # (13)!\nsharex=None,                           # (14)!\n\nylabel=\"y\",                            # (15)!\nylim=(-1, 1),                          # (16)!\nybound=(-1, 1),                        # (17)!\nyscale=\"linear\",                       # (18)!\nyticks=np.arange(-1, 1.5, 0.5),        # (19)!\nyticklabels=np.arange(-1, 1.5, 0.5),   # (20)!\nsharey=None,                           # (21)!\n</code></pre> <ol> <li> <p>\u5750\u6807\u7cfb\u7c7b\u578b, \u53ef\u9009: </p> <ol> <li>None/'rectilinear'\uff08\u9ed8\u8ba4\uff09</li> <li>'aitoff'</li> <li>'hammer'</li> <li>'lambert</li> <li>'mollweide</li> <li>'polar'</li> <li>'3d'</li> </ol> </li> <li> <p>\u5b50\u56fe\u6807\u9898</p> </li> <li>\u5b50\u56fe\u80cc\u666f\u8272</li> <li>\u662f\u5426\u7ed8\u5236\u5b50\u56fe\u8fb9\u6846</li> <li> <p>\u6ee1\u8db3aspect\u7684\u8f74\u8c03\u6574\u65b9\u5f0f, \u53ef\u9009: </p> <ol> <li>\"box\": \u9ed8\u8ba4\uff0c\u6570\u636e\u8303\u56f4\u4e0d\u53d8\uff0c\u5355\u4f4d\u957f\u5ea6\u7684\u6570\u636e\u6bd4\u4f8b</li> <li>\"datalim\": \u7269\u7406\u5c3a\u5bf8\u4e0d\u53d8\uff0c\u6570\u636e\u8303\u56f4\u6bd4\u4f8b</li> </ol> </li> <li> <p>x/y\uff0c\u53ef\u9009\"auto\", \"equal\"\uff08\u76f8\u5f53\u4e8e1\uff09, \u6d6e\u70b9\u6570</p> </li> <li>\u5b50\u56fe\u9ad8\u5bbd\u6bd4</li> <li>x\u8f74\u6807\u9898</li> <li>x\u8f74\u6570\u636e\u8303\u56f4</li> <li>x\u8f74\u6570\u636e\u8303\u56f4</li> <li>x\u8f74\u7f29\u653e\uff1a\u53ef\u9009'linear', 'log', 'symlog', 'asinh', 'logit', 'function', 'functionlog'</li> <li>x\u8f74\u523b\u5ea6</li> <li>x\u8f74\u523b\u5ea6\u6807\u7b7e</li> <li>\u5171\u4eabx\u8f74\u7684Axes</li> <li>y\u8f74\u6807\u9898</li> <li>y\u8f74\u6570\u636e\u8303\u56f4</li> <li>y\u8f74\u6570\u636e\u8303\u56f4</li> <li>y\u8f74\u7f29\u653e\uff1a\u53ef\u9009'linear', 'log', 'symlog', 'asinh', 'logit', 'function', 'functionlog'</li> <li>y\u8f74\u523b\u5ea6</li> <li>y\u8f74\u523b\u5ea6\u6807\u7b7e</li> <li>\u5171\u4eaby\u8f74\u7684Axes</li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E5%BD%A2%EF%BC%88Figure%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%EF%BC%88Axes%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%E7%BB%84%EF%BC%88Subfigure%EF%BC%89/#_1","title":"\u9010\u4e00\u6dfb\u52a0","text":"fig.add_axes(rect)plt.axes(rect)fig.add_subplot(nrows, ncols, index)plt.subplot(nrows, ncols, index) <p>matplotlib.figure.Figure.add_axes \u2014 Matplotlib 3.10.1 documentation</p> <p>\u8bbe\u7f6eAxes\u4f4d\u7f6e\u548c\u5927\u5c0f\uff0c\u540c\u65f6\u8bbe\u7f6eAxes\u53c2\u6570</p> fig.add_axes(rect)<pre><code>ax = fig.add_axes((0.2, 0.2, 0.6, 0.6),    # (1)!\n\n                  # Axes\u53c2\u6570\n                  title=\"y=sin(x)\",\n                  xlabel=\"x\",\n                  ylabel=\"y\",\n                  facecolor=\"yellow\")\n\nax.plot(x, y)\nplt.show()\n</code></pre> <ol> <li>\u5b50\u56fe\u76f8\u5bf9\u4f4d\u7f6e\uff08Figure\u5bbd\u3001\u9ad8\u6bd4\u4f8b\uff09\uff1a(\u5de6\u8fb9\u8ddd\uff0c \u5e95\u8fb9\u8ddd\uff0c \u5bbd\uff0c \u9ad8)</li> </ol> <p></p> <p>matplotlib.pyplot.axes \u2014 Matplotlib 3.10.1 documentation</p> <p>\u540c\u4e0a</p> plt.axes(rect)<pre><code>ax = plt.axes((0.2, 0.2, 0.6, 0.6),    # (1)!\n\n              # Axes\u53c2\u6570\n              title=\"y=sin(x)\",\n              xlabel=\"x\",\n              ylabel=\"y\",\n              facecolor=\"yellow\")\n\nax.plot(x, y)\nplt.show()\n</code></pre> <ol> <li>\u5b50\u56fe\u76f8\u5bf9\u4f4d\u7f6e\uff08Figure\u5bbd\u3001\u9ad8\u6bd4\u4f8b\uff09\uff1a(\u5de6\u8fb9\u8ddd\uff0c \u5e95\u8fb9\u8ddd\uff0c \u5bbd\uff0c \u9ad8)</li> </ol> <p></p> <p>matplotlib.figure.Figure.add_subplot \u2014 Matplotlib 3.10.1 documentation</p> <p>\u6307\u5b9a\u4f4d\u7f6e\uff08\u7f51\u683c\u5e03\u5c40\uff09\u6dfb\u52a0Axes\uff0c\u540c\u65f6\u8bbe\u7f6eAxes\u53c2\u6570</p> fig.add_subplot(nrows, ncols, index)<pre><code>ax = fig.add_subplot(2, 2, (1, 2),        # (1)!\n\n                     # Axes\u53c2\u6570\n                     title=\"y=sin(x)\",\n                     xlabel=\"x\",\n                     ylabel=\"y\",\n                     facecolor=\"yellow\")\n# ax = fig.add_subplot(221)               # (2)!\n\nax.plot(x, y)\nplt.show()\n</code></pre> <ol> <li>(nrows, ncols, index) \u6216 (nrows, ncols, (first, last))</li> <li>\u7b49\u4ef7\u4e8e(nrows, ncols, index)</li> </ol> <p></p> <p>matplotlib.pyplot.subplot \u2014 Matplotlib 3.10.1 documentation</p> <p>\u540c\u4e0a</p> plt.subplot(nrows, ncols, index)<pre><code>ax = plt.subplot(2, 2, (1, 2),        # (1)!\n\n                 # Axes\u53c2\u6570\n                 title=\"y=sin(x)\",\n                 xlabel=\"x\",\n                 ylabel=\"y\",\n                 facecolor=\"yellow\")\n# ax = plt.subplot(221)               # (2)!\n\nax.plot(x, y)\nplt.show()\n</code></pre> <ol> <li>(nrows, ncols, index) \u6216 (nrows, ncols, (first, last))</li> <li>\u7b49\u4ef7\u4e8e(nrows, ncols, index)</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E5%BD%A2%EF%BC%88Figure%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%EF%BC%88Axes%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%E7%BB%84%EF%BC%88Subfigure%EF%BC%89/#gridspec","title":"GridSpec\u5e03\u5c40","text":"<p>matplotlib.gridspec.GridSpec \u2014 Matplotlib 3.10.1 documentation</p> <p>Axes\u7684\u7f51\u683c\u5e03\u5c40</p> <p></p> GridSpec\u5e03\u5c40<pre><code>gs = fig.add_gridspec(nrows=2, ncols=2,\n\n                      left=0.01, right=0.05,      # (1)!\n                      bottom=0.2, top=0.6,        # (2)!\n\n                      wspace=0.5,                 # (3)!\n                      hspace=0.5,                 # (4)!\n                      width_ratios=[0.4, 0.6],    # (5)!\n                      height_ratios=[0.6, 0.4]    # (6)!\n                      )\nax = fig.add_subplot(gs[0, 0:2],\n\n                     # Axes\u53c2\u6570\n                     title=\"y=sin(x)\",\n                     xlabel=\"x\",\n                     ylabel=\"y\",\n                     facecolor=\"yellow\")\nax1 = fig.add_subplot(gs[1, 0])\nax2 = fig.add_subplot(gs[1, 1])\n\nax.plot(x, y)\nplt.show()\n</code></pre> <ol> <li>\u5b50\u56fe\u5de6\u53f3\u8fb9\u8ddd\u5360\u56fe\u5f62\u5bbd\u7684\u6bd4\u4f8b\u3002Left&lt;=right</li> <li>\u5b50\u56fe\u4e0a\u4e0b\u8fb9\u8ddd\u5360\u56fe\u5f62\u9ad8\u7684\u6bd4\u4f8b\u3002bottom&lt;=top</li> <li>\u5217\u95f4\u9694\uff08\u5e73\u5747\u8f74\u5bbd\u5ea6\u767e\u5206\u6bd4\uff09</li> <li>\u884c\u95f4\u9694\uff08\u5e73\u5747\u8f74\u9ad8\u5ea6\u767e\u5206\u6bd4\uff09</li> <li>\u6bcf\u5217\u5bbd\u5ea6\u6bd4\u4f8b</li> <li>\u6bcf\u884c\u9ad8\u5ea6\u6bd4\u4f8b</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E5%BD%A2%EF%BC%88Figure%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%EF%BC%88Axes%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%E7%BB%84%EF%BC%88Subfigure%EF%BC%89/#_2","title":"\u4e00\u6b21\u591a\u4e2a","text":"fig.subplots(nrows, ncols)plt.subplots(nrows, ncols)fig.subplot_mosaic(mosaic)plt.subplot_mosaic(mosaic) <p>matplotlib.figure.Figure.subplots \u2014 Matplotlib 3.10.1 documentation</p> <p>\u540c\u65f6\u6dfb\u52a0\u591a\u4e2aAxes\uff0c\u8fd4\u56deAxes\u6570\u7ec4</p> fig.subplots(nrows, ncols)<pre><code>ax_array = fig.subplots(nrows=2,\n                        ncols=2,\n                        sharex=\"col\",                       # (1)!\n                        sharey=\"row\",                       # (2)!\n                        squeeze=True,                       # (3)!\n                        width_ratios=[0.4, 0.6],            # (4)!\n                        height_ratios=[0.6, 0.4],           # (5)!\n                        subplot_kw={\"facecolor\": \"red\"},    # (6)!\n                        gridspec_kw={\"wspace\": 0.5}         # (7)!\n                        )\nax = ax_array[0, 0]\n\nax.plot(x, y)\nplt.show()\n</code></pre> <ol> <li> <p>\u5171\u4eabx\u8f74, \u53ef\u9009:</p> <ol> <li>True/'all': \u6240\u6709\u5b50\u56fe\u5171\u4eab</li> <li>False/'none': \u4e0d\u5171\u4eab</li> <li>'row': \u540c\u884c\u5171\u4eab</li> <li>'col': \u540c\u5217\u5171\u4eab</li> </ol> </li> <li> <p>\u5171\u4eaby\u8f74, \u53ef\u9009:</p> <ol> <li>True/'all': \u6240\u6709\u5b50\u56fe\u5171\u4eab</li> <li>False/'none': \u4e0d\u5171\u4eab</li> <li>'row': \u540c\u884c\u5171\u4eab</li> <li>'col': \u540c\u5217\u5171\u4eab</li> </ol> </li> <li> <p>\u53d6\u6d88\u8fd4\u56de\u7684\u5b50\u56fe\u6570\u7ec4\u7684\u591a\u4f59\u7ef4\u5ea6</p> <p>\u82e5\u4e3aFalse\uff0c\u5219\u8fd4\u56de\u7684\u5b50\u56fe\u6570\u7ec4\u59cb\u7ec8\u4e3a\u4e8c\u7ef4\u6570\u7ec4</p> </li> <li> <p>\u6bcf\u5217\u5bbd\u5ea6\u6bd4\u4f8b\uff0c\u76f8\u5f53\u4e8egridspec_kw={\"width_ratios\": []}</p> </li> <li>\u6bcf\u884c\u9ad8\u5ea6\u6bd4\u4f8b\uff0c\u76f8\u5f53\u4e8egridspec_kw={\"height_ratios\": []}</li> <li>Axes\u5168\u5c40\u53c2\u6570</li> <li>Gridspec\u53c2\u6570</li> </ol> <p></p> <p>matplotlib.pyplot.subplots \u2014 Matplotlib 3.10.1 documentation</p> <p>\u540c\u4e0a\uff0c\u4f46\u540c\u65f6\u8fd4\u56de\u5e76\u6fc0\u6d3b\u4e00\u4e2aFigure\u5bf9\u8c61\uff08\u53ef\u8bbe\u7f6e\u53c2\u6570\uff09</p> plt.subplots(nrows, ncols)<pre><code>fig, ax_array = plt.subplots(nrows=2,\n                             ncols=2,\n                             sharex=\"col\",                       # (1)!\n                             sharey=\"row\",                       # (2)!\n                             squeeze=True,                       # (3)!\n                             width_ratios=[0.4, 0.6],            # (4)!\n                             height_ratios=[0.6, 0.4],           # (5)!\n                             subplot_kw={\"facecolor\": \"red\"},    # (6)!\n                             gridspec_kw={\"wspace\": 0.5},        # (7)!\n\n                             # Figure\u53c2\u6570\n                             figsize=(10, 10),      \n                             dpi=100.0,             \n                             frameon=True,          \n                             facecolor='gray',      \n                             edgecolor='red',        \n                             linewidth=2.0         \n                             )\nax = ax_array[0, 0]\n\nax.plot(x, y)\nplt.show()\n</code></pre> <ol> <li> <p>\u5171\u4eabx\u8f74, \u53ef\u9009:</p> <ol> <li>True/'all': \u6240\u6709\u5b50\u56fe\u5171\u4eab</li> <li>False/'none': \u4e0d\u5171\u4eab</li> <li>'row': \u540c\u884c\u5171\u4eab</li> <li>'col': \u540c\u5217\u5171\u4eab</li> </ol> </li> <li> <p>\u5171\u4eaby\u8f74, \u53ef\u9009:</p> <ol> <li>True/'all': \u6240\u6709\u5b50\u56fe\u5171\u4eab</li> <li>False/'none': \u4e0d\u5171\u4eab</li> <li>'row': \u540c\u884c\u5171\u4eab</li> <li>'col': \u540c\u5217\u5171\u4eab</li> </ol> </li> <li> <p>\u53d6\u6d88\u8fd4\u56de\u7684\u5b50\u56fe\u6570\u7ec4\u7684\u591a\u4f59\u7ef4\u5ea6</p> <p>\u82e5\u4e3aFalse\uff0c\u5219\u8fd4\u56de\u7684\u5b50\u56fe\u6570\u7ec4\u59cb\u7ec8\u4e3a\u4e8c\u7ef4\u6570\u7ec4</p> </li> <li> <p>\u6bcf\u5217\u5bbd\u5ea6\u6bd4\u4f8b\uff0c\u76f8\u5f53\u4e8egridspec_kw={\"width_ratios\": []}</p> </li> <li>\u6bcf\u884c\u9ad8\u5ea6\u6bd4\u4f8b\uff0c\u76f8\u5f53\u4e8egridspec_kw={\"height_ratios\": []}</li> <li>Axes\u5168\u5c40\u53c2\u6570</li> <li>Gridspec\u53c2\u6570</li> </ol> <p></p> <p>matplotlib.figure.Figure.subplot_mosaic \u2014 Matplotlib 3.10.1 documentation</p> <p>\u6839\u636emosaic\u5e03\u5c40\u5b50\u56fe</p> fig.subplot_mosaic(mosaic)<pre><code>mosaic = \"\"\"\n   AAB\n   CDD\n   EEE\n\"\"\"\n# mosaic = \"AAB;CDD;EEE\"\n# mosaic = [[\"A\", \"A\", \"B\"],\n#           [\"C\", \"D\", \"D\"],\n#           [\"E\", \"E\", \"E\"]]\n\nax_dict = fig.subplot_mosaic(mosaic,\n                             sharex=True,                                      # (1)!\n                             sharey=True,                                      # (2)!\n                             width_ratios=[0.2, 0.5, 0.3],                     # (3)!\n                             height_ratios=[0.4, 0.4, 0.2],                    # (4)!\n                             empty_sentinel=\"D\",                               # (5)!\n                             subplot_kw={\"facecolor\": \"red\"},                  # (6)!\n                             per_subplot_kw={\"A\": {\"facecolor\": \"yellow\"}},    # (7)!\n                             gridspec_kw={\"wspace\": 0.1}                       # (8)!\n                             )\nax = ax_dict['A']\n\nax.plot(x, y)\nplt.show()\n</code></pre> <ol> <li>\u6240\u6709\u5b50\u56fe\u5171\u4eabx\u8f74</li> <li>\u6240\u6709\u5b50\u56fe\u5171\u4eaby\u8f74</li> <li> <p>\u6bcf\u5217\u5bbd\u5ea6\u6bd4\u4f8b</p> <p>\u76f8\u5f53\u4e8egridspec_kw={\"width_ratios\": []}</p> </li> <li> <p>\u6bcf\u884c\u9ad8\u5ea6\u6bd4\u4f8b</p> <p>\u76f8\u5f53\u4e8egridspec_kw={\"height_ratios\": []}</p> </li> <li> <p>\u7559\u7a7a\u6807\u7b7e\uff0c\u9ed8\u8ba4\".\"</p> </li> <li>Axes\u5168\u5c40\u53c2\u6570</li> <li> <p>Axes\u7279\u5b9a\u53c2\u6570</p> <p>\u4f18\u5148\u7ea7\u9ad8\u4e8esubplot_kw\u53c2\u6570</p> </li> <li> <p>Gridspec\u53c2\u6570</p> </li> </ol> <p></p> <p>matplotlib.pyplot.subplot_mosaic \u2014 Matplotlib 3.10.1 documentation</p> <p>\u540c\u4e0a\uff0c\u4f46\u540c\u65f6\u8fd4\u56de\u5e76\u6fc0\u6d3b\u4e00\u4e2aFigure\u5bf9\u8c61\uff08\u53ef\u8bbe\u7f6e\u53c2\u6570\uff09</p> plt.subplot_mosaic(mosaic)<pre><code>mosaic = \"\"\"\n   AAB\n   CDD\n   EEE\n\"\"\"\n# mosaic = \"AAB;CDD;EEE\"\n# mosaic = [[\"A\", \"A\", \"B\"],\n#           [\"C\", \"D\", \"D\"],\n#           [\"E\", \"E\", \"E\"]]\n\nfig, ax_dict = plt.subplot_mosaic(mosaic,\n                                  sharex=True,                                      # (1)!\n                                  sharey=True,                                      # (2)!\n                                  width_ratios=[0.2, 0.5, 0.3],                     # (3)!\n                                  height_ratios=[0.4, 0.4, 0.2],                    # (4)!\n                                  empty_sentinel=\"D\",                               # (5)!\n                                  subplot_kw={\"facecolor\": \"red\"},                  # (6)!\n                                  per_subplot_kw={\"A\": {\"facecolor\": \"yellow\"}},    # (7)!\n                                  gridspec_kw={\"wspace\": 0.1},                      # (8)!\n\n                                  # Figure\u53c2\u6570\n                                  figsize=(10, 10),       \n                                  dpi=100.0,             \n                                  frameon=True,         \n                                  facecolor='gray',       \n                                  edgecolor='red',        \n                                  linewidth=2.0          \n                                  )\nax = ax_dict['A']\n\nax.plot(x, y)\nplt.show()\n</code></pre> <ol> <li>\u6240\u6709\u5b50\u56fe\u5171\u4eabx\u8f74</li> <li>\u6240\u6709\u5b50\u56fe\u5171\u4eaby\u8f74</li> <li> <p>\u6bcf\u5217\u5bbd\u5ea6\u6bd4\u4f8b</p> <p>\u76f8\u5f53\u4e8egridspec_kw={\"width_ratios\": []}</p> </li> <li> <p>\u6bcf\u884c\u9ad8\u5ea6\u6bd4\u4f8b</p> <p>\u76f8\u5f53\u4e8egridspec_kw={\"height_ratios\": []}</p> </li> <li> <p>\u7559\u7a7a\u6807\u7b7e\uff0c\u9ed8\u8ba4\".\"</p> </li> <li>Axes\u5168\u5c40\u53c2\u6570</li> <li> <p>Axes\u7279\u5b9a\u53c2\u6570</p> <p>\u4f18\u5148\u7ea7\u9ad8\u4e8esubplot_kw\u53c2\u6570</p> </li> <li> <p>Gridspec\u53c2\u6570</p> </li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E5%BD%A2%EF%BC%88Figure%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%EF%BC%88Axes%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%E7%BB%84%EF%BC%88Subfigure%EF%BC%89/#_3","title":"\u526f\u5b50\u56fe\u6dfb\u52a0","text":"axes_dividerinset_axes <p>mpl_toolkits.axes_grid1.axes_divider.AxesDivider \u2014 Matplotlib 3.10.3 documentation</p> <p>\u5728\u539f\u59cbAxes\u7684\u7ed9\u5b9a\u4fa7\uff08\"top\"\u3001\"right\"\u3001\"bottom\" \u6216 \"left\"\uff09\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Axes\uff0c\u5176\u9ad8\u5ea6\u6216\u5bbd\u5ea6\u4e0e\u539f\u59cbAxes\u76f8\u540c\u3002</p> <ol> <li> <p>position\uff1a\u65b0Axes\u76f8\u5bf9\u4e8e\u4e3bAxes\u7684\u4f4d\u7f6e\u3002\u53ef\u9009<code>\"left\"</code>, <code>\"right\"</code>, <code>\"bottom\"</code>, <code>\"top\"</code>\u3002</p> </li> <li> <p>size\uff1a\u65b0Axes\u7684\u5bbd\u5ea6\u6216\u9ad8\u5ea6\u3002</p> </li> <li> <p>pad\uff1aAxes\u4e4b\u95f4\u7684\u586b\u5145\u3002\u9ed8\u8ba4\u4e3a\u4e3bAxes\u5bbd\u5ea6\uff08\u5bf9\u4e8e\u5de6\u6216\u53f3Axes\uff09\u7684<code>rcParams[\"figure.subplot.wspace\"]</code>\uff08\u9ed8\u8ba4\uff1a<code>0.2</code>\uff09\u500d\u6216\u4e3bAxes\u9ad8\u5ea6\uff08\u5bf9\u4e8e\u5e95\u6216\u9876Axes\uff09\u7684<code>rcParams[\"figure.subplot.hspace\"]</code>\uff08\u9ed8\u8ba4\uff1a<code>0.2</code>\uff09\u500d\u3002</p> </li> </ol> <p><code>**kwargs</code>\u6240\u6709\u989d\u5916\u7684\u5173\u952e\u5b57\u53c2\u6570\u90fd\u4f1a\u4f20\u9012\u7ed9\u521b\u5efa\u7684Axes\u3002</p> axes_divider<pre><code>from mpl_toolkits.axes_grid1.axes_divider import make_axes_locatable\n\nfig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax_divider = make_axes_locatable(ax)\nax1 = ax_divider.append_axes(position=\"right\", size=2, pad=0.5)\nax2 = ax_divider.append_axes(position=\"top\", size=2, pad=0.5)\n\nplt.show()\n</code></pre> <p></p> <p>matplotlib.axes.Axes.inset_axes \u2014 Matplotlib 3.10.3 documentation</p> <p>\u5728\u539f\u59cbAxes\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Axes\u3002</p> <ol> <li> <p>bounds\uff1a[x0, y0, width, height]\uff0c\u65b0\u5b50\u56fe\u7684\u5de6\u4e0b\u89d2\u5750\u6807\u53ca\u5bbd\u9ad8\u3002</p> </li> <li> <p>transform\uff1a\u76f8\u5bf9\u5750\u6807\u7cfb\u7edf\u3002\u9ed8\u8ba4<code>ax.transAxes</code>\u3002</p> </li> </ol> <p><code>**kwargs</code>\u6240\u6709\u989d\u5916\u7684\u5173\u952e\u5b57\u53c2\u6570\u90fd\u4f1a\u4f20\u9012\u7ed9\u521b\u5efa\u7684Axes\u3002</p> inset_axes<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax1 = ax.inset_axes(bounds=(1.1, 0, 0.3, 1), transform=ax.transAxes)\nax2 = ax.inset_axes(bounds=(0, 1.1, 1, 0.3), transform=ax.transAxes)\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E5%BD%A2%EF%BC%88Figure%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%EF%BC%88Axes%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%E7%BB%84%EF%BC%88Subfigure%EF%BC%89/#axes_1","title":"Axes\u5e03\u5c40\u8c03\u6574","text":"<p>matplotlib.figure.Figure.subplots_adjust \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.subplots_adjust \u2014 Matplotlib 3.10.1 documentation</p> Axes\u5e03\u5c40\u8c03\u6574<pre><code>fig.subplots_adjust(left=None, \n                    bottom=None, \n                    right=None, \n                    top=None, \n                    wspace=None, \n                    hspace=None)\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9B%BE%E5%BD%A2%EF%BC%88Figure%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%EF%BC%88Axes%EF%BC%89%E3%80%81%E5%AD%90%E5%9B%BE%E7%BB%84%EF%BC%88Subfigure%EF%BC%89/#subfigure","title":"subfigure\u7684\u8bbe\u7f6e","text":"<p>matplotlib.figure.Figure.subfigures \u2014 Matplotlib 3.10.1 documentation</p> <p>\u5b50\u56fe\u7ec4\u7684\u6dfb\u52a0</p> subfigure\u7684\u8bbe\u7f6e<pre><code>subfigs = fig.subfigures(nrows=2,\n                         ncols=2,\n                         squeeze=True,                # (1)!\n                         wspace=0.4,                  # (2)!\n                         hspace=0.4,                  # (3)!\n                         width_ratios=[0.4, 0.6],     # (4)!\n                         height_ratios=[0.6, 0.4],    # (5)!\n\n                         # Figure\u53c2\u6570\n                         facecolor='red',    \n                         edgecolor='green',  \n                         linewidth=2.0     \n                         )\nsubfig0 = subfigs[0][0]\naxes_array = subfig0.subplots(2, 2)\nax = axes_array[0][0]\n\nax.plot(x, y)\nplt.show()\n</code></pre> <ol> <li> <p>\u53d6\u6d88\u8fd4\u56de\u7684\u5b50\u56fe\u7ec4\u6570\u7ec4\u7684\u591a\u4f59\u7ef4\u5ea6 </p> <p>\u82e5\u4e3aFalse\uff0c\u5219\u8fd4\u56de\u7684\u5b50\u56fe\u7ec4\u6570\u7ec4\u59cb\u7ec8\u4e3a\u4e8c\u7ef4\u6570\u7ec4</p> </li> <li> <p>\u5217\u95f4\u9694\uff08\u5e73\u5747\u8f74\u5bbd\u5ea6\u767e\u5206\u6bd4\uff09</p> </li> <li>\u884c\u95f4\u9694\uff08\u5e73\u5747\u8f74\u5bbd\u5ea6\u767e\u5206\u6bd4\uff09</li> <li>\u6bcf\u5217\u5bbd\u5ea6\u6bd4\u4f8b</li> <li>\u6bcf\u884c\u9ad8\u5ea6\u6bd4\u4f8b</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/","title":"\u5750\u6807\u8f74","text":"<pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\nx = np.linspace(1, 10, 100)\n\"\"\"\n[ 1.          1.09090909  1.18181818  1.27272727  1.36363636  1.45454545\n  1.54545455  1.63636364  1.72727273  1.81818182  1.90909091  2.\n  2.09090909  2.18181818  2.27272727  2.36363636  2.45454545  2.54545455\n  2.63636364  2.72727273  2.81818182  2.90909091  3.          3.09090909\n  3.18181818  3.27272727  3.36363636  3.45454545  3.54545455  3.63636364\n  3.72727273  3.81818182  3.90909091  4.          4.09090909  4.18181818\n  4.27272727  4.36363636  4.45454545  4.54545455  4.63636364  4.72727273\n  4.81818182  4.90909091  5.          5.09090909  5.18181818  5.27272727\n  5.36363636  5.45454545  5.54545455  5.63636364  5.72727273  5.81818182\n  5.90909091  6.          6.09090909  6.18181818  6.27272727  6.36363636\n  6.45454545  6.54545455  6.63636364  6.72727273  6.81818182  6.90909091\n  7.          7.09090909  7.18181818  7.27272727  7.36363636  7.45454545\n  7.54545455  7.63636364  7.72727273  7.81818182  7.90909091  8.\n  8.09090909  8.18181818  8.27272727  8.36363636  8.45454545  8.54545455\n  8.63636364  8.72727273  8.81818182  8.90909091  9.          9.09090909\n  9.18181818  9.27272727  9.36363636  9.45454545  9.54545455  9.63636364\n  9.72727273  9.81818182  9.90909091 10.        ]\n\"\"\"\n\ny = np.logspace(1, 10, 100, base=10)\n\"\"\"\n[1.00000000e+01 1.23284674e+01 1.51991108e+01 1.87381742e+01\n 2.31012970e+01 2.84803587e+01 3.51119173e+01 4.32876128e+01\n 5.33669923e+01 6.57933225e+01 8.11130831e+01 1.00000000e+02\n 1.23284674e+02 1.51991108e+02 1.87381742e+02 2.31012970e+02\n 2.84803587e+02 3.51119173e+02 4.32876128e+02 5.33669923e+02\n 6.57933225e+02 8.11130831e+02 1.00000000e+03 1.23284674e+03\n 1.51991108e+03 1.87381742e+03 2.31012970e+03 2.84803587e+03\n 3.51119173e+03 4.32876128e+03 5.33669923e+03 6.57933225e+03\n 8.11130831e+03 1.00000000e+04 1.23284674e+04 1.51991108e+04\n 1.87381742e+04 2.31012970e+04 2.84803587e+04 3.51119173e+04\n 4.32876128e+04 5.33669923e+04 6.57933225e+04 8.11130831e+04\n 1.00000000e+05 1.23284674e+05 1.51991108e+05 1.87381742e+05\n 2.31012970e+05 2.84803587e+05 3.51119173e+05 4.32876128e+05\n 5.33669923e+05 6.57933225e+05 8.11130831e+05 1.00000000e+06\n 1.23284674e+06 1.51991108e+06 1.87381742e+06 2.31012970e+06\n 2.84803587e+06 3.51119173e+06 4.32876128e+06 5.33669923e+06\n 6.57933225e+06 8.11130831e+06 1.00000000e+07 1.23284674e+07\n 1.51991108e+07 1.87381742e+07 2.31012970e+07 2.84803587e+07\n 3.51119173e+07 4.32876128e+07 5.33669923e+07 6.57933225e+07\n 8.11130831e+07 1.00000000e+08 1.23284674e+08 1.51991108e+08\n 1.87381742e+08 2.31012970e+08 2.84803587e+08 3.51119173e+08\n 4.32876128e+08 5.33669923e+08 6.57933225e+08 8.11130831e+08\n 1.00000000e+09 1.23284674e+09 1.51991108e+09 1.87381742e+09\n 2.31012970e+09 2.84803587e+09 3.51119173e+09 4.32876128e+09\n 5.33669923e+09 6.57933225e+09 8.11130831e+09 1.00000000e+10]\n\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#projection","title":"\u5750\u6807\u8f74\u7cfb\u7edf\uff08Projection\uff09","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#_1","title":"\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff08\u76f4\u89d2\u5750\u6807\u7cfb\uff09","text":"<pre><code>fig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(111)\n\nax.plot(x, y)\n\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#_2","title":"\u6781\u5750\u6807\u7cfb","text":"<p>\u57fa\u4e8e\u89d2\u5ea6\u548c\u534a\u5f84\uff0c\u9002\u7528\u4e8e\u8868\u793a\u65cb\u8f6c\u548c\u5468\u671f\u6027\u6570\u636e\u3002\u4e0e\u76f4\u89d2\u5750\u6807\u7cfb\u7684\u8f6c\u6362\uff1a</p> <ol> <li> <p>\\(x = r\\cos(\\theta)\\)</p> </li> <li> <p>\\(y = r\\sin(\\theta)\\)</p> </li> </ol> <pre><code>theta = np.linspace(0, 2 * np.pi, 100)\nr = 1 + np.sin(theta)\n\nfig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(111, projection=\"polar\")\n\nax.plot(theta, r)\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#3d","title":"3D\u5750\u6807\u7cfb","text":"<pre><code>x = np.random.randn(100)\ny = np.random.randn(100)\nz = np.random.randn(100)\n\nfig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(111, projection=\"3d\")\n\nax.plot(x, y, z)\n\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#spines","title":"\u8fb9\u754c\uff08Spines\uff09","text":"<p>matplotlib.spines \u2014 Matplotlib 3.10.1 documentation</p> <p>Spines \u2014 Matplotlib 3.10.1 documentation</p> <p>\u5728Matplotlib\u4e2d\uff0cspines\u662f\u56f4\u7ed5Axes\u8fb9\u754c\u7684\u56db\u6761\u7ebf\uff08\u4e0a\u4e0b\u5de6\u53f3)\uff0c\u5b83\u4eec\u5b9a\u4e49\u4e86\u6570\u636e\u7ed8\u56fe\u533a\u57df\u7684\u8fb9\u6846\u3002Spines\u53ef\u4ee5\u7528\u6765\u8bbe\u7f6e\u56fe\u5f62\u7684\u5916\u6846\u7ebf\uff0c\u5e2e\u52a9\u5f3a\u8c03\u4e0d\u540c\u7684\u5750\u6807\u8f74\u3002\u53ef\u4ee5\u6839\u636e\u9700\u8981\u81ea\u5b9a\u4e49\u8fd9\u4e9b\u8fb9\u6846\uff0c\u6bd4\u5982\u9690\u85cf\u67d0\u4e9b\u8fb9\u6846\u3001\u8c03\u6574\u5b83\u4eec\u7684\u4f4d\u7f6e\u3001\u66f4\u6539\u989c\u8272\u548c\u7ebf\u5bbd\u7b49</p> <ol> <li> <p><code>Axes.spines.left/right/top/bottom</code>\u6216<code>Axes.spines[\"left/right/top/bottom\"]</code>\uff1a\u9009\u62e9\u4e00\u4e2aspine</p> </li> <li> <p><code>Axes.spines[[\"left/right/top/bottom\", \"...\", \"...\", \"...\"]]</code>\uff1a\u9009\u62e9\u591a\u4e2aspine</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#set_visibleset_position","title":"\u53ef\u89c1/\u9690\u85cf\uff08.set_visible\uff09\u4e0e\u4f4d\u7f6e(.set_position)","text":"<p><code>.set_position((position type, amount))</code>\u4f20\u5165\u4e00\u4e2a\u5143\u7ec4\u6216\u5b57\u7b26\u4e32\uff0c\u5143\u7ec4\u4e2dposition type\u5305\u62ec\uff1a</p> <ol> <li> <p>\"outward\"\uff1a\u4ece\u6570\u636e\u533a\u57df\u5411\u5916\uff08\u8d1f\u503c\u5411\u5185\uff09\u79fb\u52a8\u6307\u5b9a\u70b9\u6570</p> </li> <li> <p>\"axes\"\uff1a\u653e\u7f6e\u5728Axes\u5750\u6807\u7cfb\u4e2d\u6307\u5b9a\u4f4d\u7f6e</p> </li> <li> <p>\"data\"\uff1a\u653e\u7f6e\u5728\u6570\u636e\u5750\u6807\u7cfb\u4e2d\u6307\u5b9a\u4f4d\u7f6e</p> </li> </ol> <p>\u6b64\u5916\uff0c\u5b57\u7b26\u4e32\"center\"\u7b49\u4ef7\u4e8e(\"axes\", 0.5)\uff1b\"zero\"\u7b49\u4ef7\u4e8e(\"data\", 0.0)</p> <pre><code>fig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(111)\n\nax.plot(x, y)\n\nax.spines[[\"top\", \"right\"]].set_visible(False)\nax.spines[\"left\"].set_position((\"data\", 5))\n# ax.spines[\"left\"].set_position((\"axes\", 0.5))\n# ax.spines[\"left\"].set_position((\"outward\", -275))\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#patch","title":"\u5176\u5b83\uff08Patch\u7236\u7c7b\u53c2\u6570\uff09","text":"<pre><code>fig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(111)\n\nax.plot(x, y)\n\nax.spines[[\"top\", \"right\"]].set_visible(False)\nax.spines[\"left\"].set(bounds=(0.2e10, 0.8e10),\n                      linestyle=\"--\",\n                      linewidth=5,\n                      capstyle=\"round\",\n                      color=\"red\",\n                      alpha=1)\n\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#seaborndespine","title":"seaborn\u4e2d\u7684despine\u51fd\u6570","text":"<p>Controlling figure aesthetics \u2014 seaborn 0.13.2 documentation</p> <p>seaborn.despine \u2014 seaborn 0.13.2 documentation</p> <pre><code>fig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(111)\n\nax.plot(x, y)\n\nsns.despine(fig=None,                  # \u9488\u5bf9\u6307\u5b9aFigure\u4e2d\u6240\u6709Axes\u7684spine\n            ax=ax,                     # \u9488\u5bf9\u6307\u5b9aAxes\u4e2d\u7684spine\uff08\u6307\u5b9afig\u53c2\u6570\u65f6\u5ffd\u7565\uff09\n            top=True,                  # \u79fb\u9664\u9876\u90e8spine\n            right=True,                # \u79fb\u9664\u53f3\u4fa7spine\n            left=False,                # \u79fb\u9664\u5de6\u4fa7spine\n            bottom=False,              # \u79fb\u9664\u5e95\u90e8spine\n            offset={\"left\": -275,      # spine\u504f\u79bbAxes\u7684\u7edd\u5bf9\u8ddd\u79bb\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff0c\u8d1f\u503c\u8868\u793a\u5411\u5185\uff09\uff1a\u5355\u503c\u5e94\u7528\u4e8e\u6240\u6709spine\uff0c\u5b57\u5178\u5206\u522b\u6307\u5b9a\n                    \"bottom\": -275},\n            trim=True                  # \u5c06spine\u957f\u5ea6\u9650\u5236\u5728\u6700\u5c0f\u548c\u6700\u5927\u4e3b\u523b\u5ea6\u4e4b\u95f4\n            )\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#scales","title":"\u6bd4\u4f8b\uff08Scales\uff09","text":"<p>Axis scales \u2014 Matplotlib 3.10.1 documentation</p> <p>\u5750\u6807\u8f74\u6bd4\u4f8b(Axis Scales)\u7684\u4f5c\u7528\u662f\u63a7\u5236\u6570\u636e\u5728\u5750\u6807\u8f74\u4e0a\u7684\u5c55\u793a\u65b9\u5f0f\u3002\u901a\u8fc7\u9009\u62e9\u4e0d\u540c\u7684\u6bd4\u4f8b\uff0c\u53ef\u4ee5\u6539\u53d8\u6570\u636e\u5728\u56fe\u4e2d\u7684\u5206\u5e03\u65b9\u5f0f\uff0c\u4ece\u800c\u66f4\u6e05\u6670\u5730\u5448\u73b0\u51fa\u6570\u636e\u7684\u7279\u5f81\u3002\u6bd4\u5982\uff0c\u4f7f\u7528\u7ebf\u6027\u6bd4\u4f8b\u4f1a\u8ba9\u6570\u636e\u5747\u5300\u5206\u5e03\uff0c\u800c\u5bf9\u6570\u6bd4\u4f8b\u4fa7\u9002\u5408\u5904\u7406\u8de8\u5ea6\u8f83\u5927\u7684\u6570\u636e\uff0c\u7a81\u51fa\u7ec6\u8282\u53d8\u5316\u3002\u4e0d\u540c\u7684\u6bd4\u4f8b\u80fd\u5e2e\u52a9\u66f4\u597d\u5730\u5206\u6790\u548c\u89e3\u91ca\u6570\u636e\u3002</p> <p>\u672c\u8d28\uff1a\u5750\u6807\u8f74\u8fdb\u884c\u7f29\u653e\uff0c\u800c\u6807\u7b7e\u4ecd\u7136\u663e\u793a\u539f\u59cb\u6570\u503c\uff08\u5373\u8f74\u538b\u7f29\u6216\u62c9\u4f38\uff09\u3002\u5982\u5728\u9ed8\u8ba4\u7684\u7ebf\u6027\u5750\u6807\u8f74\u4e2d\uff0c\u5750\u6807\u8f74\u7684\u70b9a\u5bf9\u5e94\u6570\u636e\u70b9a\uff1b\u800c\u8fdb\u884c\u5bf9\u6570\u8f6c\u6362\u540e\uff0c\u5750\u6807\u8f74\u7684\u70b9log(a)\u5bf9\u5e94\u6570\u636e\u70b9a\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#scales_1","title":"\u5185\u7f6escales","text":"<pre><code>mpl.scale.get_scale_names()\n\"\"\"\n['asinh', 'function', 'functionlog', 'linear', 'log', 'logit', 'symlog']\n\"\"\"\n</code></pre> \u7c7b\u578b \u53c2\u6570 \u63cf\u8ff0 log base=10 subs=None nonpositive='clip' \u6570\u636e\u6309\u5bf9\u6570\u65b9\u5f0f\u7f29\u653e\uff0c\u9002\u7528\u4e8e\u6570\u636e\u8de8\u8d8a\u591a\u4e2a\u6570\u91cf\u7ea7\u7684\u573a\u666f\uff0c\u7279\u522b\u662f**\u6307\u6570\u589e\u957f\u7684\u6570\u636e**\u3002 logit nonpositive='mask' one_half='\\frac{1}{2}' use_overline=False \u5e38\u7528\u4e8e\u663e\u793a\u6982\u7387\u6216\u5206\u7c7b\u6570\u636e\uff0c\u5728\u300c0,1]\u533a\u95f4\u5185\u4ee5\u903b\u8f91\u51fd\u6570\u7f29\u653e\u3002\u9002\u5408\u5904\u7406\u767e\u5206\u6bd4\u6216\u6982\u7387\u6570\u636e\u7684\u573a\u666f\u3002 asinh linear_width=1.0 base=10 subs='auto' \u7c7b\u4f3c\u4e8e\u5bf9\u6570\u6bd4\u4f8b\uff0c\u4f46\u80fd\u591f\u5904\u7406\u6b63\u8d1f\u6570\u636e\uff0c\u4e14\u5bf9\u5c0f\u6570\u503c\u66f4\u654f\u611f\u3002\u9002\u7528\u4e8e\u8303\u56f4\u8f83\u5e7f\u7684\u6570\u636e\uff0c\u5c24\u5176\u662f\u6b63\u8d1f\u503c\u5171\u5b58\u7684\u60c5\u51b5\u3002 symlog base=10 linthresh=2 subs=None linscale=1 \u80fd\u591f\u540c\u65f6\u5904\u7406\u6b63\u503c\u548c\u8d1f\u503c\u7684\u5bf9\u6570\u7f29\u653e\uff0c\u9002\u5408\u8de8\u8d8a\u6b63\u8d1f\u533a\u95f4\u7684\u6570\u636e linear \u65e0\uff08\u9ed8\u8ba4\uff09 \u6570\u636e\u6309\u7167\u7ebf\u6027\u65b9\u5f0f\u6620\u5c04\u5230\u5750\u6807\u8f74\uff0c\u9002\u5408**\u6570\u636e\u503c\u53d8\u5316\u5e73\u7a33\u3001\u6ca1\u6709\u6781\u7aef\u589e\u957f\u6216\u51cf\u5c11\u7684\u60c5\u51b5**\u3002 function functions \u53ef\u4ee5\u8ba9\u7528\u6237\u81ea\u5b9a\u4e49\u6570\u636e\u7684\u7f29\u653e\u65b9\u5f0f\uff0c\u901a\u8fc7\u63d0\u4f9b\u524d\u5411\u548c\u9006\u5411\u51fd\u6570\u6765\u81ea\u5b9a\u4e49\u6620\u8eab\u9002\u5408\u9700\u8981\u7279\u6b8a\u8f6c\u6362\u7684\u573a\u666f\u3002 functionlog functions base=10 \u901a\u8fc7\u81ea\u5b9a\u4e49\u7684\u5bf9\u6570\u548c\u9006\u5bf9\u6570\u51fd\u6570\u6765\u7f29\u653e\u6570\u636e\uff0c\u9002\u7528\u4e8e\u9700\u8981\u7075\u6d3b\u63a7\u5236\u5bf9\u6570\u53d8\u6362\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u5904\u7406\u975e\u5e38\u5c0f\u7684\u6b63\u6570\u3002 <pre><code>fig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(111)\n\nax.plot(x, y)\n\nplt.show()\n</code></pre> <pre><code>fig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(111)\n\nax.plot(x, y)\nax.set_yscale('log', base=10)\n\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#_3","title":"\u8f85\u52a9\u51fd\u6570","text":"<pre><code># ax.semilogy(x, y)\nax.plot(x, y)\nax.set_yscale('log')\n\n# ax.semilogx(x, y)\nax.plot(x, y)\nax.set_xscale('log')\n\n# ax.loglog(x, y)\nax.plot(x, y)\nax.set_yscale('log')\nax.set_xscale('log')\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#scale","title":"scale\u7c7b\u578b\u83b7\u53d6","text":"<pre><code>ax.xaxis.get_scale()\nax.yaxis.get_scale()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#ticks","title":"\u523b\u5ea6\uff08Ticks\uff09","text":"<p>\u6bcf\u4e2a\u5750\u6807\u8f74(Axis)\u4e0a\u7684x\u8f74\u548cy\u8f74\u90fd\u6709\u9ed8\u8ba4\u7684\u523b\u5ea6(Ticks)\u548c\u523b\u5ea6\u6807\u7b7e(Tick labels)\uff0c\u523b\u5ea6\u5206\u4e3a\u4e3b\u523b\u5ea6(major ticks)\u548c\u6b21\u523b\u5ea6(minor ticks),\u76f8\u5e94\u5730\uff0c\u523b\u5ea6\u6807\u7b7e\u4e5f\u5206\u4e3a\u4e3b\u523b\u5ea6\u6807\u7b7e\u548c\u6b21\u523b\u5ea6\u6807\u7b7e\u3002\u523b\u5ea6\u7528\u4e8e\u6807\u793a\u5750\u6807\u8f74\u4e0a\u7684\u6570\u636e\u8303\u56f4\u548c\u95f4\u9694\uff0c\u800c\u523b\u5ea6\u6807\u7b7e\u5219\u4e3a\u8fd9\u4e9b\u523b\u5ea6\u63d0\u4f9b\u76f8\u5e94\u7684\u6587\u5b57\u6216\u6570\u503c\u8bf4\u660e\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#ticksticklabels","title":"\u4f4d\u7f6e\uff08ticks\uff09\u4e0e\u6807\u7b7e\uff08ticklabels\uff09","text":"<p>matplotlib.axes.Axes.set_xticks \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.set_yticks \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.set_xticklabels \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.set_yticklabels \u2014 Matplotlib 3.10.1 documentation</p> <p>\u53ef\u4ee5\u4f7f\u7528<code>set_xticks</code>\u6765\u81ea\u5b9a\u4e49x\u8f74\u7684\u523b\u5ea6\u4f4d\u7f6e\uff08\u57fa\u4e8e\u6570\u636e\uff09\uff0c\u4f7f\u7528<code>set_xticklabels</code>\u81ea\u5b9a\u4e49x\u8f74\u7684\u523b\u5ea6\u6807\u7b7e\uff1b\u540c\u6837\uff0c\u4f7f\u7528<code>set_yticks</code>\u6765\u81ea\u5b9a\u4e49y\u8f74\u7684\u523b\u5ea6\u4f4d\u7f6e\uff08\u57fa\u4e8e\u6570\u636e\uff09\uff0c\u800c<code>set_yticklabels</code>\u5219\u7528\u4e8e\u81ea\u5b9a\u4e49y\u8f74\u7684\u523b\u5ea6\u6807\u7b7e\u3002</p> <pre><code>x = np.linspace(1, 10, 100)\ny = np.logspace(1, 10, 100, base=10)\n\nfig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(111)\n\nax.plot(x, y)\nax.set_yscale('log', base=10)\n\nax.set_yticks(ticks=np.logspace(2, 10, 5, base=10),\n              minor=False,                       # False\u4ec5\u8bbe\u7f6e\u4e3b\u523b\u5ea6\n              labels=[2, 4, 6, 8, 10],           # \u957f\u5ea6\u5fc5\u987b\u4e0e\u523b\u5ea6\u6570\u91cf\u4e00\u81f4\n\n              # Text\u53c2\u6570\uff1a\u4ec5\u5f53\u8bbe\u7f6elabels\u53c2\u6570\u65f6\u4f7f\u7528\n              fontsize=20,\n              rotation=45\n              )\n# ax.set_yticklabels(labels=[2, 4, 6, 8, 10],    # \u957f\u5ea6\u5fc5\u987b\u4e0e\u523b\u5ea6\u6570\u91cf\u4e00\u81f4\n#                    minor=False,\n#\n#                    #Text\u53c2\u6570\n#                    fontsize=20,\n#                    rotation=45\n#                    )\n\nax.set_yticks(ticks=np.logspace(3, 9, 4, base=10),\n              minor=True,                        # True\u4ec5\u8bbe\u7f6e\u526f\u523b\u5ea6\n              labels=[3, 5, 7, 9],               # \u957f\u5ea6\u5fc5\u987b\u4e0e\u523b\u5ea6\u6570\u91cf\u4e00\u81f4\n\n              # Text\u53c2\u6570\uff1a\u4ec5\u5f53\u8bbe\u7f6elabels\u53c2\u6570\u65f6\u4f7f\u7528\n              fontsize=10,\n              color=\"red\",\n              rotation=45\n              )\n# ax.set_yticklabels(labels=[3, 5, 7, 9],        # \u957f\u5ea6\u5fc5\u987b\u4e0e\u523b\u5ea6\u6570\u91cf\u4e00\u81f4\n#                    minor=True,\n#\n#                    # Text\u53c2\u6570\n#                    fontsize=10,\n#                    color=\"red\",\n#                    rotation=45\n#                    )\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#tick_params","title":"\u5916\u89c2\uff08tick_params\uff09","text":"<p>matplotlib.axes.Axes.tick_params \u2014 Matplotlib 3.10.1 documentation</p> <pre><code>x = np.linspace(1, 10, 100)\ny = np.logspace(1, 10, 100, base=10)\n\nfig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(111)\n\nax.plot(x, y)\nax.set_yscale('log', base=10)\n\nax.set_yticks(ticks=np.logspace(2, 10, 5, base=10),\n              minor=False,\n              )\nax.set_yticks(ticks=np.logspace(3, 9, 4, base=10),\n              minor=True,\n              )\nax.tick_params(axis='both',                # 'x', 'y', 'both'(\u9ed8\u8ba4)\n               which='major',              # 'major'(\u9ed8\u8ba4), 'minor', 'both'\n               reset=False,                # \u662f\u5426\u5728\u66f4\u65b0\u4e4b\u524d\u5c06\u523b\u5ea6\u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u503c\n\n               # \u523b\u5ea6\u7ebf\n               direction='inout',          # 'in', 'out'(\u9ed8\u8ba4), 'inout'\n               length=15,                  # \u957f\u5ea6\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09\n               width=5,                    # \u5bbd\u5ea6\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09\n               color='r',                  # \u989c\u8272\n\n               # \u523b\u5ea6\u6807\u7b7e\n               labelfontfamily='serif',    # \u5b57\u4f53\n               labelsize=14,               # \u5b57\u4f53\u5927\u5c0f\n               labelcolor='b',             # \u5b57\u4f53\u989c\u8272\n               labelrotation=45,           # \u65cb\u8f6c\u89d2\u5ea6\n\n               # \u523b\u5ea6\u7ebf\u548c\u6807\u7b7e\n               # colors=\"y\",               # \u989c\u8272(\u672a\u5206\u522b\u8bbe\u7f6e\u65f6)\n               pad=20,                     # \u95f4\u8ddd\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09\n               zorder=0,                   # \u7ed8\u5236\u4f18\u5148\u7ea7\n\n               # \u7f51\u683c\u7ebf\n               grid_linestyle=\"--\",        # \u7ebf\u578b\n               grid_linewidth=5,           # \u5bbd\u5ea6\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09\n               grid_color=\"g\",             # \u989c\u8272\n               grid_alpha=1,               # \u900f\u660e\u5ea6\n\n               # \u5bf9\u5e94\u8fb9\u7684\u523b\u5ea6\u4e0e\u523b\u5ea6\u6807\u7b7e\n               bottom=True, top=True, left=True, right=True,\n               labelbottom=True, labeltop=True, labelleft=True, labelright=True\n               )\nax.grid()\n\nplt.show()\n</code></pre> <p></p> <pre><code>ax.yaxis.get_tick_params(which='major')\n# ax.xaxis.get_tick_params(which='major')\n\"\"\"\n{'length': 15, \n 'direction': 'inout', \n 'rotation': 45, \n 'left': True, \n 'right': True, \n 'labelleft': True, \n 'labelright': True, \n 'gridOn': True, \n 'width': 5, \n 'color': 'r', \n 'labelfontfamily': 'serif', \n 'labelsize': 14, \n 'labelcolor': 'b', \n 'pad': 20, \n 'zorder': 0, \n 'grid_linestyle': '--', \n 'grid_linewidth': 5, \n 'grid_color': 'g', \n 'grid_alpha': 1}\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#locator","title":"\u523b\u5ea6\u5b9a\u4f4d\u5668\uff08Locator\uff09","text":"<p>matplotlib.axis.Axis.set_major_locator \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axis.Axis.set_minor_locator \u2014 Matplotlib 3.10.1 documentation</p> \u5b9a\u4f4d\u5668 \u53c2\u6570 \u63cf\u8ff0 AutoLocator / \u4f7f\u7528\u7b80\u5355\u9ed8\u8ba4\u503c\uff08nbins = 'auto' \u548c steps = [1, 2, 2.5, 5, 10]\uff09\u7684MaxNLocator\uff0c\u5747\u5300\u653e\u7f6e\u523b\u5ea6\uff0c\u6b65\u957f\u548c\u6700\u5927\u523b\u5ea6\u6570\u81ea\u52a8\u9009\u62e9\u3002\u8fd9\u662f\u5927\u591a\u6570\u7ed8\u56fe\u4e2d\u7684\u9ed8\u8ba4\u523b\u5ea6\u5b9a\u4f4d\u5668\u3002 MaxNLocator nbins=10 steps=[] integer=False symmetric=False prune=None min_n_ticks=2 \u627e\u5230\u5728\u89c6\u56fe\u9650\u5236\u5185\u4e0d\u8d85\u8fc7nbins+1\u4e2a\u523b\u5ea6\u7684\u826f\u597d\u523b\u5ea6\u4f4d\u7f6e\uff0c\u5e76\u5728\u5408\u9002\u7684\u4f4d\u7f6e\u5747\u5300\u653e\u7f6e\u523b\u5ea6\u3002\u8d85\u51fa\u9650\u5236\u7684\u4f4d\u7f6e\u88ab\u6dfb\u52a0\u4ee5\u652f\u6301\u81ea\u52a8\u7f29\u653e\u3002 LinearLocator numticks=11 presets=None \u523b\u5ea6\u4ece\u6700\u5c0f\u503c\u5230\u6700\u5927\u503c\u5747\u5300\u5206\u5e03\u3002 LogLocator base=10.0 subs=(1.0,) numticks=None \u523b\u5ea6\u4ece\u6700\u5c0f\u503c\u5230\u6700\u5927\u503c\u5bf9\u6570\u5206\u5e03\u3002\u5c06\u523b\u5ea6\u653e\u7f6e\u5728\u503c <code>subs[j] * base**i</code> \u4e0a\u3002 MultipleLocator base=1.0 offset=0.0 \u5c06\u523b\u5ea6\u653e\u7f6e\u5728<code>n * base + offset</code>\u5904\u3002 FixedLocator locs=[] nbins=None \u5982\u679c nbins \u4e3a None\uff0c\u5219\u5c06\u6240\u6709\u503c\u653e\u7f6e\u5728locs\u6307\u5b9a\u4f4d\u7f6e\u4e0a\u3002\u5426\u5219\uff0c\u5c06\u5bf9locs \u8fdb\u884c\u5b50\u91c7\u6837\u4ee5\u4fdd\u6301\u523b\u5ea6\u6570\u91cf\u2264nbins+1\u3002\u5b50\u91c7\u6837\u5c06\u5305\u62ec\u6700\u5c0f\u7684\u7edd\u5bf9\u503c\uff1b\u4f8b\u5982\uff0c\u5982\u679c0\u5305\u542b\u5728locs\u4e2d\uff0c\u5219\u5b83\u5c06\u88ab\u5305\u542b\u5728\u6240\u9009\u523b\u5ea6\u4e2d\u3002 IndexLocator base offset IndexLocator\u5047\u8bbe\u7d22\u5f15\u7ed8\u56fe\uff0c\u5373\u523b\u5ea6\u653e\u7f6e\u5728 0 \u548c len(data)\uff08\u5305\u542b\uff09\u4e4b\u95f4\u7684\u6574\u6570\u503c\u8303\u56f4\u5185\u3002\u5c06\u523b\u5ea6\u7ebf\u653e\u7f6e\u5728\u4eceoffset\u5f00\u59cb\u7684\u6bcf\u4e2abase\u6570\u636e\u70b9\u4e0a\u3002 NullLocator / \u65e0\u523b\u5ea6\u3002 SymmetricalLogLocator transform=None subs=[1] linthresh=None base=None \u7528\u4e8e\u4e0e symlog \u89c4\u8303\u4e00\u8d77\u4f7f\u7528\u7684\u5b9a\u4f4d\u5668\uff1b\u5c06\u523b\u5ea6\u8bbe\u7f6e\u4e3a\u57280\u9644\u8fd1\u7ebf\u6027\u5206\u5e03\uff0c\u5728\u9608\u503c\u4ee5\u4e0a\u5bf9\u6570\u5206\u5e03\u3002\u523b\u5ea6\u653e\u7f6e\u5728<code>[sub * base**i for i in ... for sub in subs]</code>\u3002 AsinhLocator linear_width numticks=11 symthresh=0.2 base=10 subs=None \u7528\u4e8e\u4e0e asinh \u89c4\u8303\u4e00\u8d77\u4f7f\u7528\u7684\u5b9a\u4f4d\u5668\uff0c\u5c06\u523b\u5ea6\u5927\u81f4\u5747\u5300\u5730\u653e\u7f6e\u5728\u53cd\u53cc\u66f2\u6b63\u5f26\u5c3a\u5ea6\u4e0a\u3002 LogitLocator minor=False nbins='auto' \u7528\u4e8elogit\u7f29\u653e\u7684\u5b9a\u4f4d\u5668\u3002 AutoMinorLocator n='auto' \u5f53\u8f74\u4e3a\u7ebf\u6027\u4e14\u4e3b\u523b\u5ea6\u5747\u5300\u5206\u5e03\u65f6\u7528\u4e8e\u526f\u523b\u5ea6\u7684\u5b9a\u4f4d\u5668\u3002\u5c06\u4e3b\u523b\u5ea6\u95f4\u9694\u7ec6\u5206\u4e3an\u95f4\u9694\u6570\uff0c\u9ed8\u8ba4\u4e3a 4 \u6216 5\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u4e3b\u523b\u5ea6\u95f4\u9694\u3002 <pre><code>import matplotlib.ticker as ticker\n\nx = np.linspace(1, 10, 100)\ny = np.logspace(1, 10, 100, base=10)\n\nfig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(111)\n\nax.plot(x, y)\nax.set_yscale('log')\n\nax.yaxis.set_major_locator(ticker.FixedLocator([1e5, 1e6, 1e7, 1e8, 1e9]))\nax.xaxis.set_minor_locator(ticker.AutoMinorLocator())\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#formatter","title":"\u6807\u7b7e\u683c\u5f0f\u5668\uff08Formatter\uff09","text":"<p>matplotlib.axis.Axis.set_major_formatter \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axis.Axis.set_minor_formatter \u2014 Matplotlib 3.10.1 documentation</p> \u683c\u5f0f\u5668 \u53c2\u6570 \u63cf\u8ff0 NullFormatter \u65e0\u523b\u5ea6\u6807\u7b7e\u3002 FixedFormatter seq \u624b\u52a8\u8bbe\u7f6e\u6807\u7b7e\u7684\u5b57\u7b26\u4e32\u3002 FuncFormatter func \u81ea\u5b9a\u4e49\u51fd\u6570\u8bbe\u7f6e\u6807\u7b7e\u3002\u51fd\u6570\u5e94\u63a5\u53d7\u4e24\u4e2a\u8f93\u5165\uff08\u4e00\u4e2a\u523b\u5ea6\u503c x \u548c\u4e00\u4e2a\u4f4d\u7f6e pos \uff09\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u76f8\u5e94\u523b\u5ea6\u6807\u7b7e\u7684\u5b57\u7b26\u4e32\u3002 StrMethodFormatter fmt \u4f7f\u7528\u65b0\u5f0f\u683c\u5f0f\u5b57\u7b26\u4e32\uff08\u5982 <code>str.format</code> \u6240\u7528\uff09\u6765\u683c\u5f0f\u5316\u523b\u5ea6\u3002\u901a\u5e38\u6ca1\u6709\u5fc5\u8981\u663e\u5f0f\u6784\u9020 StrMethodFormatter \u5bf9\u8c61\uff0c\u56e0\u4e3a set_major_formatter \u76f4\u63a5\u63a5\u53d7\u683c\u5f0f\u5b57\u7b26\u4e32\u672c\u8eab\u3002 FormatStrFormatter fmt \u4f7f\u7528\u65e7\u5f0f\uff08'%' \u64cd\u4f5c\u7b26\uff09\u683c\u5f0f\u5b57\u7b26\u4e32\u6765\u683c\u5f0f\u5316\u523b\u5ea6\u3002 ScalarFormatter useOffset=True useMathText=False useLocale=False usetex=False \u9ed8\u8ba4\u6807\u91cf\u683c\u5f0f\u5316\u5668\uff1a\u81ea\u52a8\u9009\u62e9\u683c\u5f0f\u5b57\u7b26\u4e32\u3002 LogFormatter base=10.0 labelOnlyBase=False minor_thresholds=None linthresh=None log\u683c\u5f0f\u5316\u5668\u3002 LogFormatterExponent \u4f7f\u7528 <code>exponent = log_base(value)</code>\u683c\u5f0f\u5316\u5bf9\u6570\u8f74\u7684\u503c \u3002 LogFormatterMathtext \u4f7f\u7528 <code>exponent = log_base(value)</code> \u683c\u5f0f\u5316\u5bf9\u6570\u8f74\u7684\u503c\uff0c\u5e76\u4ee5\u6570\u5b66\u6587\u672c\u683c\u5f0f\u663e\u793a\u3002 LogFormatterSciNotation \u4f7f\u7528\u79d1\u5b66\u8bb0\u6570\u6cd5\u683c\u5f0f\u5316\u5bf9\u6570\u8f74\u7684\u503c\u3002 LogitFormatter use_overline=False one_half='\\frac{1}{2}' minor=False minor_threshold=25 minor_number=6 logit\u683c\u5f0f\u5316\u5668\u3002 EngFormatter unit='' places=None sep=' ' usetex=None useMathText=None useOffset=False \u683c\u5f0f\u5316\u6807\u7b7e\u4e3a\u5de5\u7a0b\u8bb0\u6570\u6cd5\u3002\u4f7f\u7528\u5de5\u7a0b\u524d\u7f00\u8868\u793a 1000 \u7684\u5e42\u6b21\uff0c\u52a0\u4e0a\u6307\u5b9a\u7684\u5355\u4f4d\uff0c\u4f8b\u5982\uff0c\u4f7f\u7528 10 MHz \u800c\u4e0d\u662f 1e7 \u8868\u793a\u8f74\u503c\u3002 PercentFormatter xmax=100 decimals=None symbol='%' is_latex=False \u683c\u5f0f\u5316\u6807\u7b7e\u4e3a\u767e\u5206\u6bd4\u3002 <pre><code>import matplotlib.ticker as ticker\n\nx = np.linspace(1, 10, 100)\ny = np.logspace(1, 10, 100, base=10)\n\nfig = plt.figure(figsize=(10, 10))\nax = fig.add_subplot(111)\n\nax.plot(x, y)\nax.set_yscale('log')\n\nax.yaxis.set_major_locator(ticker.FixedLocator([1e5, 1e6, 1e7, 1e8, 1e9]))\nax.xaxis.set_minor_locator(ticker.AutoMinorLocator())\nax.yaxis.set_major_formatter(ticker.EngFormatter(unit=\"MHz\"))\nax.xaxis.set_minor_formatter(ticker.PercentFormatter(xmax=10))\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E8%BD%B4%EF%BC%88Axis%EF%BC%89/#limboundinvert","title":"\u8303\u56f4\u4e0e\u53cd\u8f6c\uff08lim\u3001bound\u3001invert\uff09","text":"<p>matplotlib.axes.Axes.set_xlim \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.set_ylim \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.set_xbound \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.set_ybound \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.invert_xaxis \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.invert_yaxis \u2014 Matplotlib 3.10.1 documentation</p> <pre><code>x = np.linspace(1, 10, 100)\ny = np.logspace(1, 10, 100, base=10)\n\nfig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y)\nax.set_yscale('log')\n\nax.set_ylim(bottom=100,\n            # ymin=100,\n            top=1000,\n            # ymax=1000,\n\n            # emit=True,\n            # auto=True\n            )\n# ax.set_ybound(lower=100, upper=1000)    # \u4e0d\u5f71\u54cd\u8f74\u7684\u65b9\u5411\nax.invert_yaxis()\n\nax.set_xlim(left=2,\n            # xmin=2,\n            right=2.5,\n            # xmax=2.5,\n\n            # emit=True,\n            # auto=True\n            )\n# ax.set_xbound(lower=2, upper=2.5)        # \u4e0d\u5f71\u54cd\u8f74\u7684\u65b9\u5411\nax.invert_xaxis()\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%A1%AB%E5%85%85%EF%BC%88Fill%EF%BC%89/","title":"\u586b\u5145\uff08Fill\uff09","text":"\u5bfc\u5165\u6a21\u5757\u4e0e\u6570\u636e\u51c6\u5907<pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\nx = np.arange(1, 11, 1)\n\"\"\"\n[  1   2   3   4   5   6   7   8   9  10]\n\"\"\"\n\ny1 = np.sin(x) + 5\n\"\"\"\n[5.84147098 5.90929743 5.14112001 4.2431975 4.04107573 4.7205845 5.6569866 5.98935825 5.41211849 4.45597889]\n\"\"\"\n\ny2 = x+2\n\"\"\"\n[  3   4   5   6   7   8   9  10  11  12]\n\"\"\"\n\ny1&lt;=y2\n\"\"\"\n[False False False True True True True True True True]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%A1%AB%E5%85%85%EF%BC%88Fill%EF%BC%89/#fill_between","title":"fill_between","text":"<p>matplotlib.axes.Axes.fill_between \u2014 Matplotlib 3.10.1 documentation</p> <p><code>fill_between(x, y1, y2=0, where=None, interpolate=False, step=None, *, data=None, **kwargs)</code></p> <p>\u586b\u5145\u4e24\u4e2a\u6c34\u5e73\u66f2\u7ebf\u4e4b\u95f4\u7684\u533a\u57df\u3002\u66f2\u7ebf\u7531\u70b9(x, y1)\u548c(x, y2)\u5b9a\u4e49\u3002\u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u6216\u591a\u4e2a\u591a\u8fb9\u5f62\u6765\u63cf\u8ff0\u586b\u5145\u533a\u57df\u3002\u53ef\u4ee5\u4f7f\u7528 <code>where</code>\u53c2\u6570\u6392\u9664\u4e00\u4e9b\u6c34\u5e73\u90e8\u5206\u4e0d\u8fdb\u884c\u586b\u5145\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fb9\u7f18\u5c06\u76f4\u63a5\u8fde\u63a5\u7ed9\u5b9a\u7684\u70b9\u3002</p> <ol> <li> <p>x\uff1a\u66f2\u7ebf\u8282\u70b9\u7684 x \u5750\u6807\u3002</p> </li> <li> <p>y1\uff1a\u7b2c\u4e00\u6761\u66f2\u7ebf\u8282\u70b9\u7684 y \u5750\u6807\u3002</p> </li> <li> <p>y2\uff1a\u7b2c\u4e8c\u6761\u66f2\u7ebf\u8282\u70b9\u7684 y \u5750\u6807\u3002\u9ed8\u8ba4\u4e3a0\u3002</p> </li> <li> <p>where\uff1a\u5b9a\u4e49\u8981\u6392\u9664\u586b\u5145\u7684\u4e00\u4e9b\u6c34\u5e73\u533a\u57df\u7684\u6761\u4ef6\u3002\u586b\u5145\u533a\u57df\u7531\u5750\u6807<code>x[where]</code>\u5b9a\u4e49\u3002\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u5982\u679c<code>where[i] and where[i+1]</code>\uff0c\u5219\u586b\u5145<code>x[i]</code>\u548c<code>x[i+1]</code>\u4e4b\u95f4\u3002\u8bf7\u6ce8\u610f\uff0c\u6b64\u5b9a\u4e49\u610f\u5473\u7740\u5728<code>where</code>\u4e2d\u4e24\u4e2a False \u503c\u4e4b\u95f4\u7684\u5b64\u7acb True \u503c\u4e0d\u4f1a\u5bfc\u81f4\u586b\u5145\u3002\u7531\u4e8e\u76f8\u90bb\u7684 False \u503c\uff0cTrue \u4f4d\u7f6e\u7684\u4e24\u8fb9\u4fdd\u6301\u672a\u586b\u5145\u3002</p> </li> <li> <p>interpolate\uff1a\u6b64\u9009\u9879\u4ec5\u5728<code>where</code>\u53c2\u6570\u88ab\u4f7f\u7528\u4e14\u4e24\u6761\u66f2\u7ebf\u76f8\u4ea4\u65f6\u76f8\u5173\u3002\u4ece\u8bed\u4e49\u4e0a\u8bb2\uff0c<code>where</code>\u53c2\u6570\u901a\u5e38\u7528\u4e8e y1 &gt; y2 \u6216\u7c7b\u4f3c\u7684\u60c5\u51b5\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b9a\u4e49\u586b\u5145\u533a\u57df\u7684\u591a\u8fb9\u5f62\u7684\u8282\u70b9\u5c06\u4ec5\u653e\u7f6e\u5728 x \u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002\u8fd9\u6837\u7684\u591a\u8fb9\u5f62\u65e0\u6cd5\u5728\u4ea4\u70b9\u9644\u8fd1\u5f88\u597d\u5730\u63cf\u8ff0\u4e0a\u8ff0\u8bed\u4e49\u3002\u5305\u542b\u4ea4\u70b9\u7684 <code>x</code> \u90e8\u5206\u5c06\u7b80\u5355\u5730\u88ab\u88c1\u526a\u3002\u5c06<code>interpolate</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a True \u5c06\u8ba1\u7b97\u5b9e\u9645\u7684\u4ea4\u70b9\uff0c\u5e76\u5c06\u586b\u5145\u533a\u57df\u6269\u5c55\u5230\u8fd9\u4e00\u70b9\u3002</p> </li> <li> <p>step\uff1a\u5982\u679c\u586b\u5145\u5e94\u8be5\u662f\u9636\u68af\u51fd\u6570\uff0c\u5219\u5b9a\u4e49<code>step</code>\uff0c\u5373\u5728 x \u4e4b\u95f4\u4fdd\u6301\u6052\u5b9a\u3002\u8be5\u503c\u786e\u5b9a\u9636\u68af\u5c06\u53d1\u751f\u7684\u4f4d\u7f6e\u3002</p> </li> <li> <p>data\uff1a\u5982\u679c\u63d0\u4f9b\uff0c\u4ee5\u4e0b\u53c2\u6570\u4e5f\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32<code>s</code> \uff0c\u5982\u679c<code>s</code>\u662f<code>data</code>\u4e2d\u7684\u952e\uff0c\u5219\u89e3\u91ca\u4e3a<code>data[s]</code>\uff1ax, y1, y2, where</p> </li> </ol> \u4e0d\u5305\u62ec\u4ea4\u70b9\u5305\u62ec\u4ea4\u70b9step\u6837\u5f0f \u4e0d\u5305\u62ec\u4ea4\u70b9<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y1, c='r', marker='o')\nax.plot(x, y2, c='b', marker='o')\n\nax.fill_between(x, y1, y2,\n                where=y1&lt;=y2,\n\n                facecolor='g',\n                linestyle='--',\n                linewidth=2,\n                hatch='/',\n                hatch_linewidth=2,\n                edgecolor='r', \n                alpha=0.5\n                )\n\nplt.show()\n</code></pre> <p></p> \u5305\u62ec\u4ea4\u70b9<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y1, c='r', marker='o')\nax.plot(x, y2, c='b', marker='o')\n\nax.fill_between(x, y1, y2,\n                where=y1&lt;=y2,\n                interpolate=True,\n\n                facecolor='g',\n                linestyle='--',\n                linewidth=2,\n                hatch='/',\n                hatch_linewidth=2,\n                edgecolor='r', \n                alpha=0.5\n                )\n\nplt.show()\n</code></pre> <p></p> step\u6837\u5f0f<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y1, c='r', marker='o', ds='steps-pre')\nax.plot(x, y2, c='b', marker='o', ds='steps-pre')\n\nax.fill_between(x, y1, y2,\n                where=y1&lt;=y2,\n                interpolate=True,\n                step='pre',\n\n                facecolor='g',\n                linestyle='--',\n                linewidth=2,\n                hatch='/',\n                hatch_linewidth=2,\n                edgecolor='r', \n                alpha=0.5\n                )\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%A1%AB%E5%85%85%EF%BC%88Fill%EF%BC%89/#fill_betweenx","title":"fill_betweenx","text":"<p>matplotlib.axes.Axes.fill_betweenx \u2014 Matplotlib 3.10.1 documentation</p> <p><code>fill_betweenx(y, x1, x2=0, where=None, step=None, interpolate=False, *, data=None, **kwargs)</code></p> <p>\u586b\u5145\u4e24\u6761\u5782\u76f4\u66f2\u7ebf\u4e4b\u95f4\u7684\u533a\u57df\u3002\u66f2\u7ebf\u7531\u70b9 (y, x1)\u548c (y, x2)\u5b9a\u4e49\u3002\u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u6216\u591a\u4e2a\u591a\u8fb9\u5f62\u6765\u63cf\u8ff0\u586b\u5145\u533a\u57df\u3002\u5176\u4f59\u540c\u4e0a\u3002</p> fill_betweenx<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(y1, x, c='r', marker='o')\nax.plot(y2, x, c='b', marker='o')\n\nax.fill_betweenx(x, y1, y2,\n                 where=y1&lt;=y2,\n                 interpolate=True,\n\n                 facecolor='g',\n                 linestyle='--',\n                 linewidth=2,\n                 hatch='/',\n                 hatch_linewidth=2,\n                 edgecolor='r', \n                 alpha=0.5\n                 )\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%A1%AB%E5%85%85%EF%BC%88Fill%EF%BC%89/#fill_1","title":"fill","text":"<p>matplotlib.axes.Axes.fill \u2014 Matplotlib 3.10.1 documentation</p> <p><code>fill(*args, data=None, **kwargs)</code></p> <p>\u7ed8\u5236\u586b\u5145\u591a\u8fb9\u5f62\u3002\u6bcf\u4e2a\u591a\u8fb9\u5f62\u7531\u5176\u8282\u70b9\u7684 x \u548c y \u4f4d\u7f6e\u5217\u8868\u5b9a\u4e49\uff0c\u53ef\u9009\u5730\u540e\u8ddf\u989c\u8272\u6307\u5b9a\u7b26\u3002\u5bf9\u4e8e\u6ca1\u6709\u989c\u8272\u6307\u5b9a\u7b26\u7684\u591a\u8fb9\u5f62\uff0c\u4f7f\u7528\u6807\u51c6\u989c\u8272\u5faa\u73af\u3002\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u591a\u4e2a x, y, [\u989c\u8272]\u7ec4\u6765\u7ed8\u5236\u591a\u4e2a\u591a\u8fb9\u5f62\u3002<code>**kwargs</code>\u5176\u5b83\u53c2\u6570\u4f20\u9012\u7ed9<code>Polygon</code>\u7c7b\u3002</p> fill<pre><code>ax.fill(x, y)                    # a polygon with default color\nax.fill(x, y, \"b\")               # a blue polygon\nax.fill(x, y, x2, y2)            # two polygons\nax.fill(x, y, \"b\", x2, y2, \"r\")  # a blue and a red polygon\n</code></pre> fill<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y1, c='r', marker='o')\n\nax.fill(x, y1, closed=True,    # (1)!\n\n        facecolor=\"g\",\n        linestyle=\"--\",\n        linewidth=2,\n        hatch=\"/\",\n        hatch_linewidth=2,\n        edgecolor=\"r\",\n        alpha=0.5\n        )\nax.fill([2, 4, 4, 2], [4, 4, 4.25, 4.25])\n\nplt.show()\n</code></pre> <ol> <li>\u662f\u5426\u7ed8\u5236\u5c01\u95ed\u7ebf</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E5%B1%80%E9%83%A8%E6%94%BE%E5%A4%A7%EF%BC%88indicate_inset_zoom%EF%BC%89/","title":"\u5c40\u90e8\u653e\u5927\uff08indicate_inset_zoom\uff09","text":"<p>Zoom region inset Axes \u2014 Matplotlib 3.10.3 documentation</p> <p>matplotlib.axes.Axes.indicate_inset_zoom \u2014 Matplotlib 3.10.3 documentation</p> <p>matplotlib.axes.Axes.indicate_inset \u2014 Matplotlib 3.10.3 documentation</p> <p>iris.csv</p> <p></p> \u5bfc\u5165\u6a21\u5757\u548c\u6570\u636e\u51c6\u5907<pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\niris = pd.read_csv('../Data/iris.csv')\n</code></pre> \u5c40\u90e8\u653e\u5927<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\n\nax = fig.add_subplot(1, 1, 1)\nax.scatter(data=iris, x='sepal_length', y='sepal_width')\n\nax_zoom = ax.inset_axes(bounds=(7, 4, 1, 0.5), transform=ax.transData)\nax_zoom.scatter(data=iris, x='sepal_length', y='sepal_width')\nax_zoom.set_xlim(5.45, 7)\nax_zoom.set_ylim(2.23, 3.05)\n\n# **kwargs\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u5c06\u4f20\u9012\u7ed9Rectangle\u7c7b\nax.indicate_inset_zoom(inset_ax=ax_zoom, edgecolor=\"black\", alpha=1)\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E6%96%87%E6%9C%AC%EF%BC%88Text%EF%BC%89%E3%80%81%E6%B3%A8%E9%87%8A%EF%BC%88Annotate%EF%BC%89%E3%80%81%E6%A0%87%E9%A2%98%EF%BC%88Title%EF%BC%89/","title":"\u6587\u672c\uff08Text\uff09\u3001\u6ce8\u91ca\uff08Annotate\uff09\u3001\u6807\u9898\uff08Title\uff09","text":"<p>Text, labels and annotations \u2014 Matplotlib 3.10.1 documentation</p> <p>Properties of Mark objects \u2014 seaborn 0.13.2 documentation</p> \u5bfc\u5165\u6a21\u5757<pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E6%96%87%E6%9C%AC%EF%BC%88Text%EF%BC%89%E3%80%81%E6%B3%A8%E9%87%8A%EF%BC%88Annotate%EF%BC%89%E3%80%81%E6%A0%87%E9%A2%98%EF%BC%88Title%EF%BC%89/#_1","title":"\u5c5e\u6027","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E6%96%87%E6%9C%AC%EF%BC%88Text%EF%BC%89%E3%80%81%E6%B3%A8%E9%87%8A%EF%BC%88Annotate%EF%BC%89%E3%80%81%E6%A0%87%E9%A2%98%EF%BC%88Title%EF%BC%89/#text","title":"\u6587\u672c\uff08Text\uff09","text":"<p>matplotlib.text \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.text \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.figure.Figure.text \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.text \u2014 Matplotlib 3.10.1 documentation</p> <p>Text \u2014 Matplotlib 3.10.1 documentation</p> \u6587\u672c\uff08Text\uff09<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.text(s=\"www.baidu.com\\nwww.google.com$123\\\\bigotimes$\",\n\n        # \u951a\u70b9\u4f4d\u7f6e\n        x=0.4, y=0.6,\n        transform=ax.transAxes,        # \u5750\u6807\u7cfb\u7edf\uff0c\u53ef\u9009Axes.transAxes, Axes.transData(Axes\u8c03\u7528\u4e0b\u9ed8\u8ba4), Figure.transFigure(Figure\u8c03\u7528\u4e0b\u9ed8\u8ba4)\n        transform_rotates_text=False,  #\uff1f\uff1f\uff1f transform\u7684\u65cb\u8f6c\u662f\u5426\u5f71\u54cd\u6587\u672c\u65b9\u5411\n\n        # \u5bf9\u9f50\u65b9\u5f0f\n        ha=\"left\",                     # \u76f8\u5bf9\u4e8e\u951a\u70b9\u7684\u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f(horizontalalignment/ha)\uff1a \u53ef\u9009\"left\"(\u9ed8\u8ba4), \"right\", \"center\"\n        va=\"baseline\",                 # \u76f8\u5bf9\u4e8e\u951a\u70b9\u7684\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f(verticalalignment/va)\uff1a\u53ef\u9009\"baseline\"(\u9ed8\u8ba4), 'bottom', 'center', 'center_baseline', 'top'\n        ma=\"center\",                   # \u591a\u884c\u6587\u672c\u95f4\u5bf9\u9f50\u65b9\u5f0f(multialignment/ma)\uff1a \u53ef\u9009'left'(\u9ed8\u8ba4), 'right', 'center'\n\n        # \u7ed5\u951a\u70b9\u65cb\u8f6c\n        rotation_mode=\"anchor\",        # \u65cb\u8f6c\u6a21\u5f0f\uff1a \u53ef\u9009None/'default'(\u5148\u65cb\u8f6c\u540e\u5bf9\u9f50), 'anchor'(\u5148\u5bf9\u9f50\u540e\u65cb\u8f6c)\n        rotation=45,                   # \u9006\u65f6\u9488\u65cb\u8f6c\u5ea6\u6570\uff08\u00b0\uff09\uff1a \u53ef\u9009\u6d6e\u70b9\u6570, 'horizontal'(0\u00b0), 'vertical'(90\u00b0)\n\n        # \u884c\u95f4\u8ddd\n        linespacing=1,                 # \u884c\u95f4\u8ddd\uff08\u5b57\u4f53\u5927\u5c0f\u7684\u500d\u6570\uff09\uff0c\u9ed8\u8ba41.2\n\n        # \u5b57\u4f53\n        fontname=\"monospace\",          # \u5b57\u4f53\u540d\u79f0(fontfamily/family/fontname)\uff1a \u53ef\u9009'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'\n        fontsize=25,                   # \u5b57\u4f53\u5927\u5c0f(fontsize/size)\uff1a \u53ef\u9009\u7edd\u5bf9\u5927\u5c0f(\u6d6e\u70b9\u6570)\u6216\u76f8\u5bf9\u5927\u5c0f('xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large')\n        fontstretch=\"normal\",          # \u5b57\u4f53\u62c9\u4f38\u4e0e\u538b\u7f29(fontstretch/stretch)\uff1a \u53ef\u90090-1000, 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'\n        fontstyle=\"italic\",            # \u5b57\u4f53\u6837\u5f0f(fontstyle/style)\uff1a \u53ef\u9009'normal', 'italic', 'oblique'\n        fontvariant=\"normal\",          # \u5b57\u4f53\u53d8\u4f53(fontvariant/variant)\uff1a \u53ef\u9009'normal', 'small-caps'\n        fontweight=\"bold\",             # \u5b57\u4f53\u7c97\u7ec6(fontweight/weight)\uff1a \u53ef\u90090-1000, 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'\n        color=\"blue\",                  # \u5b57\u4f53\u989c\u8272(color/c)\n        backgroundcolor=\"yellow\",      # \u6587\u672c\u80cc\u666f\u8272\uff0c\u88abbbox\u8986\u76d6\n        parse_math=True,               # \u662f\u5426\u5c06$$\u4e2d\u7684\u6587\u672c\u89e3\u6790\u4e3aLabTex\u6570\u5b66\u6587\u672c\n        math_fontfamily=\"cm\",          # LabTex\u6570\u5b66\u6587\u672c\u5b57\u4f53\uff1a \u53ef\u9009'dejavusans'(\u9ed8\u8ba4), 'dejavuserif', 'cm', 'stix', 'stixsans', 'custom'\n        alpha=1,                       # \u900f\u660e\u5ea6\n\n        # \u6587\u672c\u6846(FancyBboxPatch)\n        bbox={\"boxstyle\": \"round, pad=0, rounding_size=0.5\",\n\n              \"facecolor\": \"yellow\",\n              \"linestyle\": \"--\",\n              \"linewidth\": 2,\n              \"hatch\": \"+\",\n              \"hatch_linewidth\": 2,\n              \"edgecolor\": \"red\",\n              \"alpha\": 0.5},\n\n        # \u5176\u5b83\u53c2\u6570\n        wrap=False,                    #\uff1f\uff1f\uff1f \u662f\u5426\u81ea\u52a8\u6362\u884c\u4ee5\u786e\u4fdd\u6587\u672c\u5185\u5bb9\u5728\u56fe\u5f62\u5185\n        antialiased=False,             # \u662f\u5426\u53cd\u952f\u9f7f\u6e32\u67d3\n        label=None,                    # \u6807\u7b7e\u6587\u672c\uff08\u7528\u4e8e\u56fe\u4f8b\u7ed8\u5236\uff09\n        gid=None,                      #\uff1f\uff1f\uff1f group id\n        visible=True,                  # \u662f\u5426\u53ef\u89c1\n        in_layout=True,                # \u662f\u5426\u52a0\u5165\u5e03\u5c40\u8ba1\u7b97\n        rasterized=False,              #\uff1f\uff1f\uff1f \u662f\u5426\u5f3a\u5236\u6805\u683c\u5316\uff08bitmap\uff09\u7ed8\u5236\u4ee5\u8fdb\u884c\u77e2\u91cf\u56fe\u5f62\u8f93\u51fa\n        zorder=None                    # \u7ed8\u5236\u4f18\u5148\u7ea7\uff0c\u503c\u8d8a\u4f4e\u8d8a\u4f18\u5148\uff0c\u8d8a\u5728\u56fe\u5c42\u5e95\n        )\nax.grid()\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E6%96%87%E6%9C%AC%EF%BC%88Text%EF%BC%89%E3%80%81%E6%B3%A8%E9%87%8A%EF%BC%88Annotate%EF%BC%89%E3%80%81%E6%A0%87%E9%A2%98%EF%BC%88Title%EF%BC%89/#annotate","title":"\u6ce8\u91ca\uff08Annotate\uff09","text":"<p>matplotlib.text \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.annotate \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.annotate \u2014 Matplotlib 3.10.1 documentation</p> <p>Annotations \u2014 Matplotlib 3.10.1 documentation</p> <p>Annotation arrow style reference \u2014 Matplotlib 3.10.1 documentation</p> \u5750\u6807\u7cfb\u7edf\u5b57\u7b26\u4e32Simple arrowFancy arrow \u5750\u6807\u7cfb\u7edf\u5b57\u7b26\u4e32 \u542b\u4e49 <code>'figure points'</code> \u4eceFigure\u5de6\u4e0b\u89d2\u5f00\u59cb\u7684\u70b9\u6570 <code>'figure pixels'</code> \u4eceFigure\u5de6\u4e0b\u89d2\u5f00\u59cb\u7684\u50cf\u7d20\u6570 <code>'figure fraction'</code> \u4eceFigure\u5de6\u4e0b\u89d2\u5f00\u59cb\u7684\u6bd4\u4f8b <code>'subfigure points'</code> \u4ecesubFigure\u5de6\u4e0b\u89d2\u5f00\u59cb\u7684\u70b9\u6570 <code>'subfigure pixels'</code> \u4ecesubFigure\u5de6\u4e0b\u89d2\u5f00\u59cb\u7684\u50cf\u7d20\u6570 <code>'subfigure fraction'</code> \u4ecesubFigure\u5de6\u4e0b\u89d2\u5f00\u59cb\u7684\u6bd4\u4f8b <code>'axes points'</code> \u4eceAxes\u5de6\u4e0b\u89d2\u5f00\u59cb\u7684\u70b9\u6570 <code>'axes pixels'</code> \u4eceAxes\u5de6\u4e0b\u89d2\u5f00\u59cb\u7684\u50cf\u7d20\u6570 <code>'axes fraction'</code> \u4eceAxes\u5de6\u4e0b\u89d2\u5f00\u59cb\u7684\u6bd4\u4f8b <code>'data'</code> \u4f7f\u7528\u6570\u636e\u5750\u6807\u7cfb\u7edf <code>'polar'</code> \u4f7f\u7528\u6781\u5750\u6807\u7cfb\u7edf <code>'offset points'</code> \u4ecexy\u53c2\u6570\u504f\u79fb\u7684\u70b9\u6570\uff08\u4ec5\u7528\u4e8etextcoords\u53c2\u6570\uff09 <code>'offset pixels'</code> \u4ecexy\u53c2\u6570\u504f\u79fb\u7684\u50cf\u7d20\u6570\uff08\u4ec5\u7528\u4e8etextcoords\u53c2\u6570\uff09 <code>'offset fontsize'</code> \u76f8\u5bf9\u4e8e\u5b57\u4f53\u5927\u5c0f\uff0c\u4ecexy\u53c2\u6570\u504f\u79fb\u7684\u91cf\uff08\u4ec5\u7528\u4e8etextcoords\u53c2\u6570\uff09 Simple arrow \u542b\u4e49 <code>width</code> \u7bad\u8eab\u5bbd <code>headwidth</code> \u7bad\u5934\u5bbd\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09 <code>headlength</code> \u7bad\u5934\u957f\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09 <code>shrink</code> \u7bad\u4e24\u7aef\u6536\u7f29\u7684\u603b\u957f\u5ea6\u6bd4\u4f8b ? \u5176\u5b83\u4efb\u4f55 <code>FancyArrowPatch</code>\u5c5e\u6027 Fancy arrow \u542b\u4e49 <code>relpos</code> \u786e\u5207\u8d77\u59cb\u4f4d\u7f6e\uff08\u76f8\u5bf9\u4e8e\u6587\u672c\u6846\u7684\u5750\u6807\u5143\u7ec4\uff09\uff0c\u9ed8\u8ba4(0.5, 0.5)\uff0c\u5373\u6587\u672c\u6846\u4e2d\u5fc3 <code>arrowstyle</code> \u7bad\u6837\u5f0f <code>connectionstyle</code> \u8fde\u63a5\u6837\u5f0f <code>shrinkA</code> \u8d77\u59cb\u6536\u7f29\u70b9\u6570\uff08\u9ed8\u8ba42\uff09 <code>shrinkB</code> \u672b\u5c3e\u6536\u7f29\u70b9\u6570\uff08\u9ed8\u8ba42\uff09 <code>patchA</code> \u9ed8\u8ba4text\u7684bounding box <code>patchB</code> \u9ed8\u8ba4None <code>mutation_scale</code> / <code>mutation_aspect</code> / \uff1f \u5176\u5b83\u4efb\u4f55 <code>FancyArrowPatch</code>\u5c5e\u6027 \u6ce8\u91ca\uff08Annotate\uff09<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.annotate(# \u8981\u6ce8\u91ca\u7684\u70b9\n            xy=(1.2, 1.2),                 # \u5750\u6807\n            xycoords=\"axes fraction\",      # \u53c2\u8003\u5750\u6807\u7cfb\uff1a \u9ed8\u8ba4'data',\u53ef\u9009\u5355\u4e2a\u6216\u4e8c\u5143\u5143\u7ec4\u5f62\u5f0f(\u5206\u522b\u6307\u5b9ax\u548cy)\u7684\u5b57\u7b26\u4e32\u3001Artist\u5bf9\u8c61\u3001Transform\u5bf9\u8c61\u3001\u53ef\u8c03\u7528\u5bf9\u8c61\n\n            # \u6ce8\u91ca\u6587\u672c\u53ca\u4f4d\u7f6e\n            text=\"www.baidu.com\",\n            xytext=(0.2, 0.2),             # \u5750\u6807\uff1a \u9ed8\u8ba4\u7b49\u4e8exy\u53c2\u6570\n            textcoords=\"axes fraction\",    # \u53c2\u8003\u5750\u6807\u7cfb\uff1a \u9ed8\u8ba4\u540cxycoords\u53c2\u6570\uff0c\u53ef\u9009\u5355\u4e2a\u6216\u4e8c\u5143\u5143\u7ec4\u5f62\u5f0f(\u5206\u522b\u6307\u5b9ax\u548cy)\u7684\u5b57\u7b26\u4e32\u3001Artist\u5bf9\u8c61\u3001Transform\u5bf9\u8c61\u3001\u53ef\u8c03\u7528\u5bf9\u8c61\n\n            # \u6587\u672cText\u53c2\u6570\n            fontsize=25,\n            bbox={\"boxstyle\": \"round, pad=0, rounding_size=0.5\",\n\n                  \"facecolor\": \"yellow\",\n                  \"linestyle\": \"--\",\n                  \"linewidth\": 2,\n                  \"hatch\": \"+\",\n                  \"hatch_linewidth\": 2,\n                  \"edgecolor\": \"red\",\n                  \"alpha\": 0.5}, \n\n            # \u7bad\u4e0e\u8fde\u63a5(FancyArrowPatch)\uff1a Simple arrow\u6a21\u5f0f\u548cFancy arrow\u6a21\u5f0f\n            arrowprops={\"relpos\": (0.5, 1),\n\n                        \"arrowstyle\": \"&lt;|-|&gt;, head_length=2, head_width=2\",\n                        \"connectionstyle\": \"arc3, rad=0\",\n                        \"shrinkA\": 0,\n                        \"shrinkB\": 0,\n\n                        \"facecolor\": \"red\",\n                        \"linestyle\": \"--\",\n                        \"linewidth\": 2,\n                        \"hatch\": \"/\",\n                        \"hatch_linewidth\": 2,\n                        \"edgecolor\": \"green\",\n                        \"alpha\": 0.5},\n            annotation_clip=False           # \u5f53\u8981\u6ce8\u91ca\u7684\u70b9xy\u5728Axes\u5916\u65f6\u662f\u5426\u9009\u62e9\u4e0d\u7ed8\u5236\n            )\nax.grid()\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E6%96%87%E6%9C%AC%EF%BC%88Text%EF%BC%89%E3%80%81%E6%B3%A8%E9%87%8A%EF%BC%88Annotate%EF%BC%89%E3%80%81%E6%A0%87%E9%A2%98%EF%BC%88Title%EF%BC%89/#title","title":"\u6807\u9898\uff08Title\uff09","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E6%96%87%E6%9C%AC%EF%BC%88Text%EF%BC%89%E3%80%81%E6%B3%A8%E9%87%8A%EF%BC%88Annotate%EF%BC%89%E3%80%81%E6%A0%87%E9%A2%98%EF%BC%88Title%EF%BC%89/#figuresuptitlesupxlabelsupylabel","title":"Figure\u6807\u9898\uff08suptitle\u3001supxlabel\u3001supylabel\uff09","text":"<p>matplotlib.figure.Figure.suptitle \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.suptitle \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.figure.Figure.supxlabel \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.figure.Figure.supylabel \u2014 Matplotlib 3.10.1 documentation</p> Figure\u6807\u9898\uff08suptitle\u3001supxlabel\u3001supylabel\uff09<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100)\nax = fig.subplots(2, 2)\n\nfig.suptitle(t=\"Suptitle\", x=0.5, y=0.98,     # \u6807\u9898\u6587\u672c\u53ca\u951a\u5b9a\u70b9\u5728Figure\u4e2d\u7684\u5750\u6807\n\n             # Text\u53c2\u6570\n             ha=\"center\",                     # \u76f8\u5bf9\u4e8e\u951a\u5b9a\u70b9\u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f(horizontalalignment/ha)\uff1a \u53ef\u9009'center'(\u9ed8\u8ba4), 'left', 'right'\n             va=\"center\",                     # \u76f8\u5bf9\u4e8e\u951a\u5b9a\u70b9\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f(verticalalignment/va)\uff1a \u53ef\u9009'top'(\u9ed8\u8ba4), 'center', 'bottom', 'baseline'\n             fontsize=20,                     # \u5b57\u4f53\u5927\u5c0frcParams[\"figure.titlesize\"]\uff1a\u9ed8\u8ba4'large'\n             fontweight=\"bold\"                # \u5b57\u4f53\u7c97\u7ec6rcParams[\"figure.titleweight\"]\uff1a\u9ed8\u8ba4'normal'\n             )\nfig.supxlabel(t=\"Supxlabel\", x=0.5, y=0.03,   # x\u8f74\u6807\u9898\u6587\u672c\u53ca\u951a\u5b9a\u70b9\u5728Figure\u4e2d\u7684\u5750\u6807\n\n              # Text\u53c2\u6570\n              ha=\"center\",                    # \u76f8\u5bf9\u4e8e\u951a\u5b9a\u70b9\u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f(horizontalalignment/ha)\uff1a \u53ef\u9009'center'(\u9ed8\u8ba4), 'left', 'right'\n              va=\"center\",                    # \u76f8\u5bf9\u4e8e\u951a\u5b9a\u70b9\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f(verticalalignment/va)\uff1a \u53ef\u9009'top', 'center', 'bottom'(\u9ed8\u8ba4), 'baseline'\n              fontsize=20,                    # \u5b57\u4f53\u5927\u5c0frcParams[\"figure.labelsize\"]\uff1a\u9ed8\u8ba4'large'\n              fontweight=\"bold\"               # \u5b57\u4f53\u7c97\u7ec6rcParams[\"figure.labelweight\"]\uff1a\u9ed8\u8ba4'normal'\n              )\nfig.supylabel(t=\"Supylabel\", x=0.02, y=0.5,   # y\u8f74\u6807\u9898\u6587\u672c\u53ca\u951a\u5b9a\u70b9\u5728Figure\u4e2d\u7684\u5750\u6807\n\n              # Text\u53c2\u6570\n              ha=\"center\",                    # \u76f8\u5bf9\u4e8e\u951a\u5b9a\u70b9\u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f(horizontalalignment/ha)\uff1a \u53ef\u9009'center', 'left'(\u9ed8\u8ba4), 'right'\n              va=\"center\",                    # \u76f8\u5bf9\u4e8e\u951a\u5b9a\u70b9\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f(verticalalignment/va)\uff1a \u53ef\u9009'top', 'center'(\u9ed8\u8ba4), 'bottom', 'baseline'\n              fontsize=20,                    # \u5b57\u4f53\u5927\u5c0frcParams[\"figure.labelsize\"]\uff1a\u9ed8\u8ba4'large'\n              fontweight=\"bold\"               # \u5b57\u4f53\u7c97\u7ec6rcParams[\"figure.labelweight\"]\uff1a\u9ed8\u8ba4'normal'\n              )\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E6%96%87%E6%9C%AC%EF%BC%88Text%EF%BC%89%E3%80%81%E6%B3%A8%E9%87%8A%EF%BC%88Annotate%EF%BC%89%E3%80%81%E6%A0%87%E9%A2%98%EF%BC%88Title%EF%BC%89/#axesset_titleset_xlabelset_ylabel","title":"Axes\u6807\u9898\uff08set_title\u3001set_xlabel\u3001set_ylabel\uff09","text":"<p>matplotlib.axes.Axes.set_title \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.title \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.set_xlabel \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.xlabel \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.set_ylabel \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.ylabel \u2014 Matplotlib 3.10.1 documentation</p> Axes\u6807\u9898\uff08set_title\u3001set_xlabel\u3001set_ylabel\uff09<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100)\nax = fig.subplots(2, 2)\n\nax[0, 0].set_title(label=\"Title\",       # \u6807\u9898\u6587\u672c\n                   loc=\"center\",        # \u76f8\u5bf9\u4e8eAxes\u7684\u6c34\u5e73\u4f4d\u7f6e\uff08\u4f18\u5148\u4e8e\u8bbe\u7f6eText\u7684x\u548cha\u53c2\u6570\uff09rcParams[\"axes.titlelocation\"]\uff1a \u53ef\u9009'center'(\u9ed8\u8ba4), 'left', 'right'\n                   y=None,              # \u6807\u9898\u7684\u5782\u76f4Axes\u4f4d\u7f6ercParams[\"axes.titley\"]\n                   pad=6,               # \u76f8\u5bf9\u4e8eAxes\u9876\u90e8\u7684\u5782\u76f4\u504f\u79fb\u70b9\u6570 rcParams[\"axes.titlepad\"]\uff1a \u9ed8\u8ba46\n\n                   # Text\u53c2\u6570\n                   fontsize=15,\n                   fontweight=\"bold\"\n                   )\nax[0, 0].set_xlabel(xlabel=\"X\",         # x\u8f74\u6587\u672c\n                    loc=\"center\",       # \u76f8\u5bf9\u4e8eAxes\u7684\u6c34\u5e73\u4f4d\u7f6e\uff08\u4f18\u5148\u4e8e\u8bbe\u7f6eText\u7684x\u548cha\u53c2\u6570\uff09rcParams[\"xaxis.labellocation\"]\uff1a \u53ef\u9009'center'(\u9ed8\u8ba4), 'left', 'right'\n                    labelpad=4,         # \u76f8\u5bf9\u4e8ex\u8f74\uff08\u5305\u62ec\u523b\u5ea6\u548c\u523b\u5ea6\u6807\u7b7e\uff09\u7684\u5782\u76f4\u504f\u79fb\u70b9\u6570rcParams[\"axes.labelpad\"]\uff1a \u9ed8\u8ba44\n\n                    # Text\u53c2\u6570\n                    fontsize=15,\n                    fontweight=\"bold\"\n                    )\nax[0, 0].set_ylabel(ylabel=\"Y\",         # y\u8f74\u6587\u672c\n                    loc=\"center\",       # \u76f8\u5bf9\u4e8eAxes\u7684\u5782\u76f4\u4f4d\u7f6e\uff08\u4f18\u5148\u4e8e\u8bbe\u7f6eText\u7684y\u548cha\u53c2\u6570\uff09rcParams[\"yaxis.labellocation\"]\uff1a \u53ef\u9009'center'(\u9ed8\u8ba4), 'bottom', 'top'\n                    labelpad=4,         # \u76f8\u5bf9\u4e8ey\u8f74\uff08\u5305\u62ec\u523b\u5ea6\u548c\u523b\u5ea6\u6807\u7b7e\uff09\u7684\u6c34\u5e73\u504f\u79fb\u70b9\u6570rcParams[\"axes.labelpad\"]\uff1a \u9ed8\u8ba44\n\n                    # Text\u53c2\u6570\n                    fontsize=15,\n                    fontweight=\"bold\"\n                    )\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E6%96%87%E6%9C%AC%EF%BC%88Text%EF%BC%89%E3%80%81%E6%B3%A8%E9%87%8A%EF%BC%88Annotate%EF%BC%89%E3%80%81%E6%A0%87%E9%A2%98%EF%BC%88Title%EF%BC%89/#adjusttext","title":"\u81ea\u52a8\u6587\u672c\u8c03\u6574\uff08adjustText\uff09","text":"<p>Welcome to the documentation for adjustText! \u2014 adjustText  documentation</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/","title":"\u7b80\u4ecb","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/#matplotlib","title":"Matplotlib","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/#_2","title":"\u7ed8\u56fe\u903b\u8f91","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/#artist","title":"\u7ed8\u56fe\u5143\u7d20\uff08Artist\uff09","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/#primitive-artist","title":"\u57fa\u7840\u7c7b\uff08Primitive Artist\uff09","text":"<p>\u7528\u6765\u6784\u6210\u56fe\u5f62\u7684\u57fa\u7840\u5143\u7d20\uff0c\u6bd4\u5982\u7ebf\u6761\u3001\u56fe\u4f8b\u3001\u6807\u9898\u3001\u6807\u7b7e\u3001\u6587\u672c\u6ce8\u91ca\u7b49\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/#container-artist","title":"\u5bb9\u5668\u7c7b\uff08Container Artist\uff09","text":"<p>\u7528\u6765\u7ba1\u7406\u548c\u7ec4\u7ec7\u591a\u4e2a\u57fa\u7840\u7c7b\u7ed8\u56fe\u5143\u7d20\uff0c\u4f8b\u5982\u56fe\u5f62\uff08Figure\uff09\u3001\u5b50\u56fe\uff08Axes\uff09\u548c\u5750\u6807\u8f74\uff08Axis\uff09\u7b49\u3002\u4e00\u822c\u7528\u6cd5\u662f\uff1a\u521b\u5efa\u4e00\u4e2a\u56fe\u5f62\uff08Figure\uff09\uff0c\u4f7f\u7528\u8be5\u56fe\u5f62\uff08Figure\uff09\u521b\u5efa\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u56fe\uff08Axes\uff09\uff0c\u5e76\u4f7f\u7528\u5b50\u56fe\uff08Axes\uff09\u7684\u65b9\u6cd5\u6765\u521b\u5efa\u57fa\u7840\u7c7b\u7ed8\u56fe\u5143\u7d20\u3002</p> <p></p> <ol> <li> <p>\u56fe\u5f62\uff08Figure\uff09</p> <p>\u56fe\u5f62\uff08Figure\uff09\u6307\u6574\u5f20\u56fe\uff0c\u5373\u4e0a\u56fe\u7ea2\u8272\u6846\u90e8\u5206\uff0c\u53ef\u8bbe\u7f6e\u6574\u5f20\u56fe\u7684\u5206\u8fa8\u7387\uff08dpi\uff09\uff0c\u957f\u5bbd\uff08figsize\uff09\u3001\u6807\u9898\uff08title\uff09\u7b49\u7279\u5f81\u3002Figure\u53ef\u5305\u542b\u591a\u4e2a\u5b50\u56fe\uff08Axes\uff09\uff0c\u4e0a\u9762\u7684Figure\u4e2d\u5305\u542b4\u4e2a\u5b50\u56fe\uff08Axes\uff09\u3002</p> </li> <li> <p>\u5b50\u56fe\uff08Axes\uff09</p> <p>\u5b50\u56fe\uff08Axes\uff09\u53ef\u80fd\u662fmatplotlib\u4e2d\u6700\u91cd\u8981\u7684\u5143\u7d20\uff0c\u5373\u4e0a\u56fe\u7eff\u8272\u6846\u90e8\u5206\uff0c\u4ee5\u4e0a\u56fe\u4e2d\u5b50\u56fe3\u4e3a\u4f8b\uff0c\u8be5Axes\u5305\u542b\u7eff\u6846\u4e2d\u7528\u4e8e\u7ed8\u5236\u6570\u636e\u7684\u533a\u57df\u3001\u56fe\u5f62Line plot\u3001\u4e24\u4e2a\u5750\u6807\u8f74\uff08Axis\uff09\u3001\u6807\u9898\uff08x\u3001y\u8f74\u6807\u9898\u3001\u5b50\u56fe\u6807\u9898\uff09\u7b49\u3002</p> </li> <li> <p>\u5750\u6807\u8f74\uff08Axis\uff09</p> <p>\u5750\u6807\u8f74\uff08Axis\uff09\u7528\u4e8e\u8bbe\u7f6e\u6570\u636e\u7684\u6bd4\u4f8b\u548c\u8303\u56f4\uff0c\u5e76\u751f\u6210\u523b\u5ea6\u548c\u523b\u5ea6\u6807\u7b7e\uff08\u6807\u6ce8\u523b\u5ea6\u7684\u5b57\u7b26\u4e32\uff09\uff0c\u5373\u4e0a\u56fe\u4e2d\u5b50\u56fe3\u7684\u84dd\u8272\u6846\u90e8\u5206\u3002</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/#_3","title":"\u7ed8\u56fe\u65b9\u6cd5","text":"\u9690\u5f0f vs \u663e\u5f0f \u9690\u5f0f \u663e\u5f0f \u4f18\u70b9 \u63a7\u5236\u548c\u7075\u6d3b\u6027 \u4ee3\u7801\u7b80\u6d01\uff0c\u9002\u5408\u5feb\u901f\u7ed8\u56fe \u63d0\u4f9b\u7cbe\u786e\u7684\u63a7\u5236\u548c\u7075\u6d3b\u6027\uff0c\u9002\u7528\u4e8e\u590d\u6742\u5e03\u5c40\u548c\u5b9a\u5236 \u4ee3\u7801\u7ed3\u6784 \u6613\u4e8e\u4e0a\u624b\uff0c\u521d\u5b66\u8005\u53cb\u597d \u4ee3\u7801\u7ed3\u6784\u6e05\u6670\uff0c\u6613\u4e8e\u7ef4\u62a4\u548c\u6269\u5c55 \u517c\u5bb9\u6027 \u9002\u7528\u4e8e\u7b80\u5355\u60c5\u5883 \u66f4\u597d\u5730\u4e0e\u5176\u4ed6\u5e93\uff08\u5982seaborn\u3001pandas)\u517c\u5bb9 \u652f\u6301\u590d\u6742\u5e03\u5c40 \u652f\u6301\u590d\u6742\u7684\u56fe\u5f62\u5e03\u5c40\uff0c\u5982gridspec\u548csubplots \u7f3a\u70b9 \u4ee3\u7801\u590d\u6742\u5ea6 \u63a7\u5236\u548c\u7075\u6d3b\u6027\u8f83\u5dee\uff0c\u96be\u4ee5\u8fdb\u884c\u590d\u6742\u81ea\u5b9a\u4e49 \u4ee3\u7801\u8f83\u4e3a\u7e41\u7410\uff0c\u5c24\u5176\u662f\u5728\u7b80\u5355\u56fe\u5f62\u4e2d \u5b66\u4e60\u66f2\u7ebf \u5b66\u4e60\u66f2\u7ebf\u8f83\u9661\uff0c\u9700\u8981\u7406\u89e3\u548c\u638c\u63e1Axes\u5bf9\u8c61\u7684\u4f7f\u7528 \u591a\u56fe\u5f62\u7ba1\u7406 \u96be\u4ee5\u7ba1\u7406\u591a\u4e2a\u56fe\u5f62\u548c\u5b50\u56fe\u5bf9\u8c61 \u5bf9\u4e8e\u590d\u6742\u56fe\u5f62\u548c\u591a\u4e2a\u56fe\u5f62\u7684\u7ba1\u7406\u8f83\u4e3a\u590d\u6742 \u9690\u5f0f\u663e\u5f0f"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/#implicitfunction-based","title":"\u9690\u5f0f\uff08implicit\uff0cfunction-based\uff09","text":"<p>\u57fa\u4e8e\u51fd\u6570\u7684\u9690\u5f0f\u65b9\u6cd5\uff1a\u4f7f\u7528<code>matplotlib.pyplot</code>\u3002\u4f7f\u7528\u9690\u5f0f\u65f6\uff0c\u53ea\u9700\u8981\u7b80\u5355 \u5730\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4ed6\u7684\u8bbe\u7f6e\u6216\u7ba1\u7406\u662f\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u7a0b\u5e8f\u9690 \u85cf\u4e86\u590d\u6742\u7684\u64cd\u4f5c\u7ec6\u8282\uff0c\u7b80\u5355\u5feb\u6377\u3002</p> <p>\u8be5\u65b9\u6cd5\u4e2d\uff0c\u901a\u8fc7<code>plt.figure</code>\u548c<code>plt.subplot</code>\u81ea\u52a8\u9690\u5f0f\u7684\u521b\u5efaFigure\u548cAxes\uff0c\u7ed8\u56fe\u51fd\u6570\u76f4\u63a5\u4f5c\u7528\u4e8e\u5f53\u524d\u6fc0\u6d3b\u7684Figure\u548cAxes\uff0c\u6301\u7eed\u8ddf\u8e2a\u5f53\u524d\u7684Figure\u548cAxes\uff0c\u5177\u6709\u5b9e\u6548\u6027\u3002</p> <p>\u9002\u7528\u4e8e\u5feb\u901f\u7ed8\u5236\u7b80\u5355\u56fe\u5f62\uff0c\u4ee3\u7801\u7b80\u6d01\u6613\u61c2\uff0c\u4f46\u5728\u9700\u8981\u7cbe\u7ec6\u63a7\u5236\u548c\u590d\u6742\u5e03\u5c40\u65f6\u53ef\u80fd\u4e0d\u591f\u7075\u6d3b\u3002</p> <p></p> \u9690\u5f0f\uff08implicit\uff0cfunction-based\uff09<pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n\"\"\"\n\u9690\u5f0f\u521b\u5efa\u5e76\u6fc0\u6d3b\u4e00\u4e2aFigure\n\u5728\u9690\u5f0f\u63a5\u53e3\u4e2d\uff0c\u867d\u7136\u6ca1\u6709\u8fd4\u56de\u5177\u4f53\u7684Figure\u5bf9\u8c61\uff0c\u4f46pyplot\u4f1a\u81ea\u52a8\u7ba1\u7406\u5f53\u524dFigure\n\"\"\"\nplt.figure(figsize=(10, 5))\n\n\"\"\"\n\u9690\u5f0f\u521b\u5efa\u5e76\u6fc0\u6d3b\u7b2c1\u4e2a\u5b50\u56fe\uff08Axes\uff09\uff0c\u51c6\u5907\u5728\u6b64\u5b50\u56fe\u4e0a\u7ed8\u5236heatmap\u56fe\n\u6b64\u5904heatmap\u56fe\u6240\u5728\u7684Axes\u88ab\u6fc0\u6d3b\u53ea\u80fd\u4fee\u6539heatmap\u56fe\u7684\u5750\u6807\u8f74\u3001\u6807\u9898\u3001\u6807\u7b7e\u7b49\n\"\"\"\nplt.subplot(1, 2, 1)                 # (1)!\ndata = np.random.random((10, 10))    # (2)!\nplt.imshow(data, cmap='viridis')\nplt.colorbar()\nplt.title(\"Heatmap\")\n\n\n\"\"\"\n\u9690\u5f0f\u521b\u5efa\u5e76\u6fc0\u6d3b\u7b2c2\u4e2a\u5b50\u56fe\uff08Axes\uff09\uff0c\u51c6\u5907\u5728\u6b64\u65b0\u5b50\u56fe\u4e0a\u7ed8\u5236Pie\u56fe\n\u6b64\u5904pie\u56fe\u6240\u5728\u7684Axes\u88ab\u6fc0\u6d3b\u53ea\u80fd\u4fee\u6539pie\u56fe\u7684\u5750\u6807\u8f74\u3001\u6807\u9898\u3001\u6807\u7b7e\u7b49\uff0c\u4e0d\u80fd\u518d\u4fee\u6539\u4e0a\u9762heatmap\u56fe\u7684\u5750\u6807\u8f74\u3001\u6807\u9898\u3001\u6807\u7b7e\u7b49\u3002\n\"\"\"\nplt.subplot(1, 2, 2)                 # (3)!\nplt.pie([30, 40, 30], labels=[\"A\", \"B\", \"C\"], autopct='%1.1f%%')\nplt.title(\"Pie Chart\")\n\n\"\"\"\n\u5c55\u793aFigure\n\"\"\"\nplt.show()\n</code></pre> <ol> <li>\u8be5\u5b50\u56fe\u5728Figure\u76841\u884c2\u5217\u4e2d\u7684\u7b2c1\u5217</li> <li>\u968f\u673a\u751f\u621010 x 10\u7684\u4e8c\u7ef4\u6570\u7ec4</li> <li>\u8be5\u5b50\u56fe\u5728Figure\u76841\u884c2\u5217\u4e2d\u7684\u7b2c2\u5217</li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/#explicitobject-based","title":"\u663e\u5f0f\uff08explicit\uff0cobject-based\uff09","text":"<p>\u9762\u5411\u5bf9\u8c61\u7684\u663e\u5f0f\u65b9\u6cd5\uff1a\u4e3b\u8981\u4f7f\u7528<code>matplotlib.figure.Figure</code>\u548c<code>matplotlib.axes.Axes</code>\u3002\u4f7f\u7528\u663e\u5f0f\u65f6\uff0c\u9700\u8981\u660e \u786e\u5730\u6307\u5b9a\u6bcf\u4e00\u6b65\u64cd\u4f5c\uff0c\u9700\u8981\u624b\u52a8\u7f16\u5199\u6bcf\u4e00\u6b65\u64cd\u4f5c\u7684\u4ee3\u7801\uff0c\u8bbe \u7f6e\u6240\u6709\u7684\u53c2\u6570\uff0c\u63a7\u5236\u5168\u9762\u4f46\u9ebb\u70e6\u3002</p> <p>\u8be5\u65b9\u6cd5\u4e2d\uff0c\u753b\u56fe\u51fd\u6570\u4e0d\u518d\u53d7\u5230\u5f53\u524d\u6d3b\u52a8\u7684Figure\u548cAxes\u7684\u9650\u5236\uff0c\u800c\u53d8\u6210\u4e86\u663e\u5f0f\u7684Figure\u548cAxes\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u76f4\u63a5\u968f\u5904\u5bf9\u5b83\u4eec\u8fdb\u884c\u64cd\u4f5c\uff0cFigure\u548cAxes\u4e0d\u5177\u6709\u5b9e\u6548\u6027\u3002</p> <p>\u9002\u7528\u4e8e\u9700\u8981\u7cbe\u786e\u63a7\u5236\u548c\u590d\u6742\u5e03\u5c40\u56fe\u5f62\u7684\u573a\u666f\uff0c\u63d0\u4f9b\u66f4\u9ad8\u7684\u7075\u6d3b\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002</p> <p></p> \u663e\u5f0f\uff08explicit\uff0cobject-based\uff09<pre><code>import matplotlib.pyplot as plt\nimport numpy as np\n\n\"\"\"\n\u663e\u5f0f\u521b\u5efa\u5e76\u6fc0\u6d3b\u4e00\u4e2aFigure\u5bf9\u8c61fig\n\u663e\u5f0f\u521b\u5efa\u5e76\u6fc0\u6d3b\u4e24\u4e2aAxes\u5bf9\u8c61\uff0cax1\u548cax2\n\"\"\"\nfig, (ax1, ax2) = plt.subplots(1,2, figsize=(10, 5))\n\n\"\"\"\n\u5728ax1\u4e0a\u521b\u5efaHeatmap\u56fe\n\"\"\"\ndata = np.random.random((10, 10))\nim = ax1.imshow(data, cmap='viridis')\nfig.colorbar(im, ax=ax1)\nax1.set_title(\"Heatmap\")\n\n\"\"\"\n\u5728ax2\u4e0a\u7ed8\u5236Pie\u56fe\n\"\"\"\nax2.pie([30, 40, 30], labels=[\"A\", \"B\", \"C\"], autopct='%1.1f%%')\nax2.set_title(\"Pie Chart\")\n\n\"\"\"\n\u5c55\u793aFigure\n\"\"\"\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/#seaborn","title":"Seaborn","text":"<p>An introduction to seaborn \u2014 seaborn 0.12.2 documentation</p> <p>Seaborn \u662f\u4e00\u4e2a\u7528\u4e8e\u5728 Python \u4e2d\u5236\u4f5c\u7edf\u8ba1\u56fe\u5f62\u7684\u5e93\u3002\u5b83\u5efa\u7acb\u5728 matplotlib \u4e4b\u4e0a\uff0c\u5e76\u4e0e pandas \u6570\u636e\u7ed3\u6784\u7d27\u5bc6\u96c6\u6210\u3002</p> <p>Seaborn \u5e2e\u52a9\u63a2\u7d22\u548c\u7406\u89e3\u6570\u636e\u3002\u5176\u7ed8\u56fe\u51fd\u6570\u4f5c\u7528\u4e8e\u5305\u542b\u6574\u4e2a\u6570\u636e\u96c6\u7684\u6570\u636e\u6846\u548c\u6570\u7ec4\uff0c\u5e76\u5728\u5185\u90e8\u6267\u884c\u5fc5\u8981\u7684\u8bed\u4e49\u6620\u5c04\u548c\u7edf\u8ba1\u805a\u5408\uff0c\u4ee5\u751f\u6210\u4fe1\u606f\u4e30\u5bcc\u7684\u56fe\u8868\u3002\u5176\u9762\u5411\u6570\u636e\u96c6\u7684\u58f0\u660e\u6027 API \u8ba9\u7528\u6237\u4e13\u6ce8\u4e8e\u56fe\u8868\u7684\u4e0d\u540c\u5143\u7d20\u4ee3\u8868\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u5982\u4f55\u7ed8\u5236\u5b83\u4eec\u7684\u7ec6\u8282\u3002</p> <p>tips.csv</p> <p></p> \u793a\u4f8b<pre><code># \u5bfc\u5165\u6a21\u5757\nimport seaborn as sns\nimport pandas as pd\n\n# \u5e94\u7528\u9ed8\u8ba4\u4e3b\u9898\nsns.set_theme()\n\n# \u52a0\u8f7d\u6570\u636e\u96c6\ntips = pd.read_csv(\"../Data/tips.csv\")\n\n# \u53ef\u89c6\u5316\nsns.relplot(\n    data=tips,\n    x=\"total_bill\", y=\"tip\", col=\"time\",\n    hue=\"smoker\", style=\"smoker\", size=\"size\",\n)\n\n# \u5c55\u793a\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/#_4","title":"\u7ed8\u56fe\u51fd\u6570","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/#_5","title":"\u67b6\u6784\u5c42\u9762","text":"<p>\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0cfigure-levelz\u548caxes-level\u51fd\u6570\u529f\u80fd\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u4e5f\u5b58\u5728\u4e00\u4e9b\u5dee\u5f02\uff0c\u4f8b\u5982\uff0cfigure-level\u4e2d\u56fe\u4f8b\u88ab\u653e\u7f6e\u5728\u56fe\u5f62\u4e4b\u5916\uff0caxes-level\u4e2d\u5219\u5c06\u56fe\u4f8b\u88ab\u653e\u7f6e\u5728\u56fe\u5f62\u4e4b\u5185</p> <ol> <li> <p>\u56fe\u7ea7\u522b\u7ed8\u56fe\u51fd\u6570(figure-level)</p> <p>figure-level\u7ed8\u56fe\u51fd\u6570\u5c06\u6570\u636e\u7ed8\u5236\u5728<code>seaborn.axisgrid.FacetGrid</code>\u5bf9\u8c61\u4e0a\uff0c\u6b64\u7c7b\u51fd\u6570\u62e5\u6709\u533a\u522b\u4e8ematplotlib rcParams\u4e2d\u7684\u53c2\u6570\uff0c\u6bcf\u4e2afigure-level\u7ed8\u56fe\u51fd\u6570\u90fd\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684axes-level\u63a5\u53e3\uff0ckind\u53c2\u6570\u8bbe\u7f6e\u3002</p> <p>figure-level\u591a\u5b50\u56fe\u7ed8\u5236\u5f88\u4fbf\u6377\uff0c\u4f46\u662f\uff0c\u5982\u679c\u60f3\u5355\u72ec\u8bbe\u7f6e\u67d0\u4e2a\u5b50\u56fe\u5c31\u4e0d\u591f\u7075\u6d3b\u3002</p> <p>figure-level\u62e5\u6709\u5f88\u591a\u533a\u522b\u4e8ematplotlib rcParamst\u4e2d\u7684\u6709\u7528\u53c2\u6570\uff0c\u8fd9\u4e9b\u53c2\u6570seaborn\u72ec\u6709\uff0c\u4ece\u5168\u5c40\u8bbe\u7f6e\u56fe\u5f62\uff0c\u5168\u5c40\u4e2a\u6027\u5316\u662f\u5728<code>seaborn.axisgrid.FacetGrid</code>\u5bf9\u8c61\u4e0a\u8bbe\u7f6e\u3002</p> </li> <li> <p>\u8f74\u7ea7\u522b\u7ed8\u56fe\u51fd\u6570\uff08axes-level)</p> <p>axes-level\u7ed8\u56fe\u51fd\u6570\u662f\u5c06\u6570\u636e\u7ed8\u5236\u5728<code>matplotlib.pyplot.Axes</code>\u5bf9\u8c61\u4e0a\uff0c\u6b64\u7c7b\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528matplotlib rcParams\u4e2d\u7684\u53c2\u6570\u3002</p> <p>axes-level\u4e5f\u53ef\u4ee5\u7ed8\u5236\u591a\u5b50\u56fe\uff0c\u9700\u8981\u901a\u8fc7\u53c2\u6570ax\u6307\u5b9a\u5b50\u56fe\uff0cseaborn\u5185\u90e8\u8c03\u7528<code>matplotlib.pyplot.gca()</code>\u6fc0\u6d3b\u5f53\u524d\u5b50\u56fe\u4e3a\u9700\u8981\u7ed8\u56fe\u7684\u5bf9\u8c61\u3002\u6548\u679c\u7c7b\u4f3cfigure-level\u7ed8\u5236\u591a\u5b50\u56fe\uff0c\u4f46\u662f\uff0caxes-level\u4ee3\u7801\u91cf\u5927\u5927\u589e\u52a0\u3002\u76f8\u6bd4\u4e8efigure-level,axes-level\u66f4\u64c5\u957f\u6bcf\u4e2a\u5b50\u56fe\u7684\u4e2a\u6027\u5316\u3002</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%AE%80%E4%BB%8B/#_6","title":"\u529f\u80fd\u5c42\u9762","text":"<ol> <li> <p>\u7f8e\u5316\u51fd\u6570(aesthetics)</p> <p>\u7f8e\u5316\u56fe\u5f62\u6bd4\u4f8b\u5c3a\u5ea6(the scaling of plot elements)\u3001\u56fe\u5f62\u98ce\u683c(the general style of the plots)\u3001\u56fe\u5f62\u914d\u8272(the color palette/colormap)\u3002</p> </li> <li> <p>\u5355\u4e2a\u56fe\u51fd\u6570</p> <p>\u7ed8\u5236\u76f8\u5173\u5173\u7cfb\u56fe(Relational plots)\u3001\u5206\u5e03\u5173\u7cfb\u56fe(Distribution plots)\u3001\u5206\u7c7b\u5173\u7cfb\u56fe(Categorical plots)\u3001\u56de\u5f52\u5173\u7cfb\u56fe(Regression plots)\u3001\u77e9\u9635\u5173\u7cfb\u56fe(Matrix plots)\u3001\u7edf\u8ba1\u4f30\u8ba1\u548c\u8bef\u5dee\u68d2(Statistical estimation and error bars)\u3002</p> </li> <li> <p>\u7ec4\u5408\u56fe\u51fd\u6570</p> <p>\u540c\u65f6\u5c55\u793a\u591a\u4e2a\u5b50\u56fe\u8868\u6216\u56fe\u5f62\uff0c\u4ee5\u4fbf\u8fdb\u884c\u6bd4\u8f83\u6216\u5c55\u793a\u76f8\u5173\u4fe1\u606f\u3002\u5305\u542b\u5206\u9762\u56fe(Facet grids)\u3001\u914d\u5bf9\u5173\u7cfb\u56fe(Pair grids)\u3001\u7ec4\u5408\u5173\u7cfb\u56fe(Joint grids)\u3002</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/","title":"\u7ebf\uff08Line\uff09\u4e0e\u6807\u8bb0\uff08Marker\uff09","text":"<p>matplotlib.lines.Line2D \u2014 Matplotlib 3.10.1 documentation</p> \u5bfc\u5165\u6a21\u5757\u4e0e\u6570\u636e\u51c6\u5907<pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.arange(1, 51, 1)\n\"\"\"\n[ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50]\n\"\"\"\n\ny = np.sin(x)\n\"\"\"\n[ 0.84147098  0.90929743  0.14112001 -0.7568025  -0.95892427 -0.2794155  0.6569866   0.98935825  0.41211849 -0.54402111 -0.99999021 -0.53657292  0.42016704  0.99060736  0.65028784 -0.28790332 -0.96139749 -0.75098725  0.14987721  0.91294525  0.83665564 -0.00885131 -0.8462204  -0.90557836 -0.13235175  0.76255845  0.95637593  0.27090579 -0.66363388 -0.98803162 -0.40403765  0.55142668  0.99991186  0.52908269 -0.42818267 -0.99177885 -0.64353813  0.29636858  0.96379539  0.74511316 -0.15862267 -0.91652155 -0.83177474  0.01770193  0.85090352  0.90178835  0.12357312 -0.76825466 -0.95375265 -0.26237485]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#line-style","title":"\u7ebf\u578b\uff08Line Style\uff09","text":"<p>Linestyles \u2014 Matplotlib 3.10.1 documentation</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#_1","title":"\u5b57\u7b26\u4e32\u578b","text":"<p><code>linestyle=\"\"</code></p> \u5b57\u7b26\u4e32\u578b<pre><code>from matplotlib.lines import Line2D\nLine2D.lineStyles\n\"\"\"\n{'-': '_draw_solid', '--': '_draw_dashed', '-.': '_draw_dash_dot', ':': '_draw_dotted', \n 'None': '_draw_nothing', ' ': '_draw_nothing', '': '_draw_nothing'}\n\"\"\"\n</code></pre> \u5b57\u7b26\u4e32 \u542b\u4e49 \"solid\" / \"-\" \u5b9e\u7ebf(\u2014\u2014) \"dotted\" / \":\" \u70b9\u7ebf(\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7) <code>rcParams[\"lines.dotted_pattern\"]=[1.0, 1.65]</code> \"dashed\" / \"--\" \u865a\u7ebf(-----) <code>rcParams[\"lines.dashed_pattern\"]=[3.7, 1.6]</code> \"dashdot\" / \"-.\" \u70b9\u5212\u7ebf(\u00b7-\u00b7-\u00b7-\u00b7) <code>rcParams[\"lines.dashdot_pattern\"]=[6.4, 1.6, 1.0, 1.6]</code> linestylecapstylejoinstyle <p></p> <p></p> <p></p> \u5e38\u89c4linestyle='solid'linestyle\u2260'solid' \u5e38\u89c4<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y,\n        linestyle=\"dashdot\",  # (1)!\n        linewidth=4,          # (2)!\n        color=\"green\",        # (3)!\n        gapcolor=\"red\",       # (4)!\n        alpha=0.5             # (5)!\n        )\n\nplt.show()\n</code></pre> <ol> <li>\u7ebf\u578b(linestyle/ls)</li> <li>\u7ebf\u5bbd(linewidth/lw)</li> <li>\u53ef\u89c1\u7ebf\u6bb5\u586b\u5145\u8272(color/c)</li> <li>\u4e0d\u53ef\u89c1\u7ebf\u6bb5\u586b\u5145\u8272</li> <li>\u900f\u660e\u5ea6</li> </ol> <p></p> linestyle='solid'<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y,\n        linestyle=\"solid\",\n        linewidth=10,\n        color=\"green\",\n        gapcolor=\"red\",\n        solid_capstyle=\"butt\",      # (1)!\n        solid_joinstyle=\"miter\",    # (2)!\n        alpha=0.5\n        )\n\nplt.show()\n</code></pre> <ol> <li>\u5f53linestyle=\"solid\"\u65f6\uff0c\u4e24\u4e2a\u7aef\u70b9\u7684\u6837\u5f0f</li> <li>\u5f53linestyle=\"solid\"\u65f6\uff0c\u8fde\u63a5\u70b9\uff08\u8f6c\u6298\u70b9\uff09\u7684\u6837\u5f0f</li> </ol> <p></p> linestyle\u2260'solid'<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y,\n        linestyle=\"dashdot\",\n        linewidth=10,\n        color=\"green\",\n        gapcolor=\"red\",\n        dash_capstyle=\"round\",      # (1)!\n        dash_joinstyle=\"miter\",     # (2)!\n        alpha=0.5\n        )\n\nplt.show()\n</code></pre> <ol> <li>\u5f53linestyle\u2260\"solid\"\u65f6\uff0c\u6bcf\u4e2a\u7ebf\u6bb5\u7aef\u70b9\u7684\u6837\u5f0f</li> <li>\u5f53linestyle\u2260\"solid\"\u65f6\uff0c\u6bcf\u4e2a\u7ebf\u6bb5\u8fde\u63a5\u70b9\uff08\u8f6c\u6298\u70b9\uff09\u7684\u6837\u5f0f</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#_2","title":"\u5143\u7ec4\u578b","text":"linestyle=(offset, on_off_seq)dashes=(on_off_seq) <p><code>linestyle=(offset, on_off_seq)</code></p> <ol> <li> <p>offset\uff1a\u5728\u6784\u5efa\u7684\u7ebf\u578b\u4e0a\u5f00\u59cb\u7684\u504f\u79fb\u91cf\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09</p> </li> <li> <p>on_off_seq\uff1a\u901a\u8fc7\u5e8f\u5217\u6784\u5efa\u7ebf\u578b\u3002\u82e5\u5e8f\u5217\u957f\u5ea6\u4e3a\u5076\u6570\uff0c\u5219\u5076\u6570\u4f4d(0\u5f00\u59cb)\u4ee3\u8868\u53ef\u89c1\u7ebf\u6bb5\u957f\u5ea6\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09\uff0c\u5947\u6570\u4f4d\u8868\u793a\u4e0d\u53ef\u89c1\u7ebf\u6bb5\u7684\u957f\u5ea6\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09\uff1b\u82e5\u5e8f\u5217\u957f\u5ea6\u4e3a\u5947\u6570\uff0c\u5219\u5e8f\u5217\u6269\u589e\u4e3a2\u500d\u3010\u5373(3, 1, 1) \u76f8\u5f53\u4e8e (3, 1, 1, 3, 1, 1)\u3011</p> </li> </ol> <p></p> linestyle=(offset, on_off_seq)<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\n# \u6784\u5efa5\u53ef\u89c11\u4e0d\u53ef\u89c1\u7684\u7ebf\u578b\uff0c\u7b2c\u4e00\u6bb5\u504f\u79fb\u91cf\u4e3a4\uff0c\u6240\u4ee5\u7b2c\u4e00\u6bb5\u4ec5\u4e3a1\u53ef\u89c11\u4e0d\u53ef\u89c1\nax.plot(x, y,\n        linestyle=(4, (5, 1)),\n        linewidth=4,\n        color=\"green\",\n        gapcolor=\"red\",\n        alpha=0.5\n        )\n\nplt.show()\n</code></pre> <p></p> <p><code>dashes=(on_off_seq)</code></p> dashes=(on_off_seq)<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\n# \u6784\u5efa5\u53ef\u89c11\u4e0d\u53ef\u89c1\u7684\u7ebf\u578b\nax.plot(x, y,\n        dashes=(5, 1), \n        linewidth=4,\n        color=\"green\",\n        gapcolor=\"red\",\n        alpha=0.5\n        )\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#marker","title":"\u6807\u8bb0\uff08Marker\uff09","text":"<p>matplotlib.markers \u2014 Matplotlib 3.7.1 documentation</p> <p>Marker examples \u2014 Matplotlib 3.10.1 documentation</p> <p>Mapping marker properties to multivariate data \u2014 Matplotlib 3.10.1 documentation</p> \u6807\u8bb0\uff08Marker\uff09<pre><code>from matplotlib.lines import Line2D\nLine2D.markers\n\"\"\"\n{'.': 'point', ',': 'pixel', 'o': 'circle', 'v': 'triangle_down', '^': 'triangle_up', \n '&lt;': 'triangle_left', '&gt;': 'triangle_right', '1': 'tri_down', '2': 'tri_up', '3': 'tri_left', \n '4': 'tri_right', '8': 'octagon', 's': 'square', 'p': 'pentagon', '*': 'star', \n 'h': 'hexagon1', 'H': 'hexagon2', '+': 'plus', 'x': 'x', 'D': 'diamond', \n 'd': 'thin_diamond', '|': 'vline', '_': 'hline', 'P': 'plus_filled', 'X': 'x_filled', \n 0: 'tickleft', 1: 'tickright', 2: 'tickup', 3: 'tickdown', 4: 'caretleft', \n 5: 'caretright', 6: 'caretup', 7: 'caretdown', 8: 'caretleftbase', 9: 'caretrightbase', \n 10: 'caretupbase', 11: 'caretdownbase', 'None': 'nothing', 'none': 'nothing', ' ': 'nothing', '': 'nothing'}\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#unfilled-markers","title":"\u672a\u586b\u5145\u578b\uff08Unfilled markers\uff09","text":"<p>Marker reference \u2014 Matplotlib 3.10.1 documentation</p> <p></p> \u672a\u586b\u5145\u578b\uff08Unfilled markers\uff09<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y,\n        marker=4,                   # (1)!\n        markersize=25,              # (2)!\n        markerfacecolor=\"red\",      # (3)!\n        markeredgecolor=\"green\",    # (4)!\n        markeredgewidth=2,          # (5)!\n        markevery=None,             # (6)!\n        alpha=1\n        )\n\nplt.show()\n</code></pre> <ol> <li>\u6807\u8bb0\u7c7b\u578b</li> <li>\u6807\u8bb0\u5927\u5c0f(markersize/ms)</li> <li>\u6807\u8bb0\u586b\u5145\u8272(markerfacecolor/mfc)</li> <li>\u6807\u8bb0\u8fb9\u7f18\u8272(markeredgecolor/mec)</li> <li>\u6807\u8bb0\u8fb9\u7f18\u5bbd\u5ea6(markeredgewidth/mew)</li> <li>\u51b3\u5b9a\u6bcf\u9694\u51e0\u4e2a\u7ed8\u5236\u4e00\u4e2a\u6807\u8bb0\u70b9\uff0c\u9ed8\u8ba4\u6240\u6709</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#filled-markersfill-style","title":"\u586b\u5145\u578b\uff08Filled markers\uff09\u4e0e\u586b\u5145\u6837\u5f0f\uff08Fill Style\uff09","text":"<p>Marker reference \u2014 Matplotlib 3.10.1 documentation</p> <p>Marker reference \u2014 Matplotlib 3.10.1 documentation</p> \u586b\u5145\u578b\uff08Filled markers\uff09\u586b\u5145\u6837\u5f0f\uff08Fill Style\uff09 \u586b\u5145\u578b\uff08Filled markers\uff09<pre><code>from matplotlib.lines import Line2D\nLine2D.filled_markers\n\"\"\"\n('.', 'o', 'v', '^', '&lt;', '&gt;', '8', 's', 'p', '*', 'h', 'H', 'D', 'd', 'P', 'X')\n\"\"\"\n</code></pre> <p></p> \u586b\u5145\u6837\u5f0f\uff08Fill Style\uff09<pre><code>from matplotlib.lines import Line2D\nLine2D.fillStyles\n\"\"\"\n('full', 'left', 'right', 'bottom', 'top', 'none')\n\"\"\"\n</code></pre> <p></p> \u586b\u5145\u578b\uff08Filled markers\uff09\u4e0e\u586b\u5145\u6837\u5f0f\uff08Fill Style\uff09<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y,\n        marker=\"*\",\n        markersize=25,\n        fillstyle=\"left\",           # (1)!\n        markerfacecolor=\"red\",      # (2)!\n        markerfacecoloralt=\"black\", # (3)!\n        markeredgecolor=\"green\",\n        markeredgewidth=2,\n        markevery=None,\n        alpha=1\n        )\n\nplt.show()\n</code></pre> <ol> <li>\u6307\u5b9amarkerfacecolor\u586b\u5145\u4fa7</li> <li>fillstyle\u6307\u5b9a\u4fa7\u6807\u8bb0\u586b\u5145\u8272(markerfacecolor/mfc)</li> <li>\u975efillstyle\u6307\u5b9a\u4fa7\u6807\u8bb0\u586b\u5145\u8272(markerfacecoloralt/mfcalt)</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#texmarkers-created-from-tex-symbols","title":"TeX\u7b26\u53f7\u521b\u5efa(Markers created from TeX symbols)","text":"<p>Marker reference \u2014 Matplotlib 3.10.1 documentation</p> <p></p> TeX\u7b26\u53f7\u521b\u5efa(Markers created from TeX symbols)<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y,\n        marker=r\"$\\bigotimes$\",\n        markersize=25,\n        markerfacecolor=\"red\",\n        markeredgecolor=\"green\",\n        markeredgewidth=2,\n        markevery=None,\n        alpha=1\n        )\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#_3","title":"\u5143\u7ec4\u578b","text":"(numsides, 0, angle)(numsides, 1, angle)(numsides, 2, angle) <p>(numsides, 0, angle)\uff1a\u9006\u65f6\u9488\u65cb\u8f6cangle\u00b0\u7684\u6b63numsides\u8fb9\u5f62</p> <p></p> <p>(numsides, 1, angle)\uff1a\u9006\u65f6\u9488\u65cb\u8f6cangle\u00b0\u7684\u6b63numsides\u89d2\u5f62</p> <p></p> <p>(numsides, 2, angle)\uff1a\u9006\u65f6\u9488\u65cb\u8f6cangle\u00b0\u7684\u6b63numsides\u8fb9\u661f</p> <p></p> \u5143\u7ec4\u578b<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y,\n        marker=(5, 0, 90),\n        markersize=25,\n        markerfacecolor=\"red\",\n        markeredgecolor=\"green\",\n        markeredgewidth=2,\n        markevery=None,\n        alpha=1\n        )\n\nplt.show()\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#pathmarkers-created-from-paths","title":"Path\u521b\u5efa(Markers created from Paths)","text":"<p>Marker reference \u2014 Matplotlib 3.10.1 documentation</p> <p>\u7ed8\u5236\u5750\u6807\u4ee5\u539f\u59cb\u6807\u8bb0\u70b9\u4e3a\u539f\u70b9(0, 0)</p> <ol> <li> <p><code>mpath.Path(vertices, codes=None, closed=False)</code></p> <ol> <li> <p>vertices\uff1a\u7ed8\u5236\u7684\u70b9\u5750\u6807\u5e8f\u5217\uff08\u5982[(x1, y1), (x2, y2), ...]\uff09\u6216\u8005\u5f62\u72b6(N, 2)\u7684\u6570\u7ec4\uff08\u5982[[x1 y1] [x2 y2] ...]\uff09\u3002</p> </li> <li> <p>codes\uff1a\u4e0evertices\u6bcf\u4e2a\u5750\u6807\u4e00\u4e00\u5bf9\u5e94\uff0c\u8868\u793a\u5230\u8be5\u5750\u6807\u7684\u52a8\u4f5c\uff0c\u53ef\u9009\uff1a</p> <ol> <li> <p><code>mpath.Path.STOP</code> = <code>np.uint8(0)</code> = 0\uff1a\u4e0d\u7ed8\u5236\u8be5\u5750\u6807\u4e14\u7ed3\u675f\u7ed8\u5236</p> </li> <li> <p><code>mpath.Path.MOVETO</code> = <code>np.uint8(1)</code> = 1\uff1a\u4e0d\u7ed8\u5236\uff0c\u4ec5\u79fb\u52a8\u5230\u8be5\u5750\u6807\u3002\u7b2c\u4e00\u4e2a\u5fc5\u987b\u662f\u8be5\u503c\u3002</p> </li> <li> <p><code>mpath.Path.LINETO</code> = <code>np.uint8(2)</code> = 2\uff1a\u4ee5\u7ebf\u6bb5\u7ed8\u5236\u5230\u8be5\u5750\u6807</p> </li> <li> <p><code>mpath.Path.CURVE3</code> = <code>np.uint8(3)</code> = 3\uff1a\u7ed8\u5236\u66f2\u7ebf\u5230\u8be5\u5750\u6807\u540e\u4e00\u4e2a\u5750\u6807</p> </li> <li> <p><code>mpath.Path.CURVE4</code> = <code>np.uint8(4)</code> = 4\uff1a\u7ed8\u5236\u66f2\u7ebf\u5230\u8be5\u5750\u6807\u540e\u4e24\u4e2a\u5750\u6807</p> </li> <li> <p><code>mpath.Path.CLOSEPOLY</code> = <code>np.uint8(79)</code> = 79\uff1a\u4e0d\u7ed8\u5236\u8be5\u5750\u6807\uff0c\u76f4\u63a5\u524d\u4e00\u4e2a\u5750\u6807\u7ed8\u5236\u7ebf\u6bb5\u5230\u7b2c\u4e00\u4e2a\u5750\u6807\u4ee5\u5c01\u95ed\u56fe\u5f62</p> </li> </ol> </li> <li> <p>closed\uff1a\u662f\u5426\u5c01\u95ed\u56fe\u5f62\u3002\u5f53codes=None\u4e14closed=True\u65f6\uff0c\u76f8\u5f53\u4e8ecodes=[1, 2, 2, ..., 79]\u3002</p> </li> </ol> </li> <li> <p><code>mpath.Path.arc(theta1, theta2, n=None, is_wedge=False)</code>\uff1a\u7ed8\u5236\u4ece theta1\u00b0\u5230 theta2\u00b0\uff08&gt;360\u00b0\u65f6\u5c06\u51cf\u53bb360\u00b0\uff09\u7684\u5355\u4f4d\u5706\u5f27\u3002n\uff0c\u7565\u3002 is_wedge \u6307\u662f\u5426\u7ed8\u5236\u5f27\u5f62\u534a\u5f84\u3002</p> </li> <li> <p><code>mpath.Path.wedge(theta1, theta2, n=None)</code>\uff1a\u76f8\u5f53\u4e8e<code>mpath.Path.arc</code>\u4e2d is_wedge=True</p> </li> <li> <p><code>mpath.Path.circle(center=(0.0, 0.0), radius=1.0, readonly=False)</code>\uff1a\u7ed8\u5236\u5706\u5fc3\u5750\u6807\u4e3a center\uff0c\u534a\u5f84\u4e3a radius \u7684\u5706\u3002readonly\uff0c\u7565\u3002</p> </li> <li> <p><code>mpath.Path.unit_circle()</code>\uff1a\u7ed8\u5236\u5355\u4f4d\u5706</p> </li> <li> <p><code>mpath.Path.unit_circle_righthalf()</code>\uff1a\u7ed8\u5236\u5355\u4f4d\u5706\u53f3\u4fa7\u534a</p> </li> <li> <p><code>mpath.Path.unit_rectangle()</code>\uff1a\u7ed8\u5236\u5355\u4f4d\u77e9\u5f62\uff08\u6b63\u65b9\u5f62\uff09</p> </li> <li> <p><code>mpath.Path.unit_regular_asterisk(numVertices)</code>\uff1a\u7ed8\u5236\u5355\u4f4d\u6b63 numVertices \u8fb9\u661f</p> </li> <li> <p><code>mpath.Path.unit_regular_polygon(numVertices)</code>\uff1a\u7ed8\u5236\u5355\u4f4d\u6b63 numVertices \u8fb9\u5f62</p> </li> <li> <p><code>mpath.Path.unit_regular_star(numVertices, innerCircle=0.5)</code>\uff1a\u7ed8\u5236\u5355\u4f4d\u6b63 numVertices \u89d2\u661f\u3002innerCircle\uff0c\u7565</p> </li> </ol> \u57fa\u7c7b\u5b50\u7c7b \u57fa\u7c7b<pre><code>import matplotlib.path as mpath\n\nfig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nvertices = [(-2, 0), (0, 4), (2, 0), (0, -4)]\ncodes= [1, 2, 2, 79]\n\nax.plot(x, y,\n        marker=mpath.Path(vertices, codes=codes, closed=False),\n        markersize=25,\n        markerfacecolor=\"red\",\n        markeredgecolor=\"green\",\n        markeredgewidth=2,\n        markevery=None,\n        alpha=1\n        )\n\nplt.show()\n</code></pre> <p></p> \u5b50\u7c7b<pre><code>import matplotlib.path as mpath\n\nfig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y,\n        marker=mpath.Path.unit_circle(),\n        markersize=25,\n        markerfacecolor=\"red\",\n        markeredgecolor=\"green\",\n        markeredgewidth=2,\n        markevery=None,\n        alpha=1\n        )\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#markerstyle","title":"MarkerStyle\u521b\u5efa","text":"<p>Marker reference \u2014 Matplotlib 3.10.1 documentation</p> <p>Marker reference \u2014 Matplotlib 3.10.1 documentation</p> marker capstylemarker joinstyle <p></p> <p></p> MarkerStyle\u521b\u5efa<pre><code>from matplotlib.markers import MarkerStyle\n\nfig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nmarker = MarkerStyle(marker=\"1\",\n                     fillstyle='none',\n                     capstyle='round',\n                     joinstyle='miter')\nmarker = marker.rotated(deg=90,      # (1)!\n                        rad=None)    # (2)!\nmarker = marker.scaled(sx=2,         # (3)!\n                       sy=4)         # (4)!\n\nax.plot(x, y,\n        marker=marker,\n        markersize=25,\n        markerfacecolor=\"red\",\n        markeredgecolor=\"green\",\n        markeredgewidth=2,\n        markevery=None,\n        alpha=1\n        )\n\nplt.show()\n</code></pre> <ol> <li>\u9006\u65f6\u9488\u65cb\u8f6c\uff08\u5ea6\u6570\uff09</li> <li>\u9006\u65f6\u9488\u65cb\u8f6c\uff08\u5f27\u5ea6\uff09</li> <li>x\u8f74\u4e0a\u7684\u7f29\u653e\u3002\u5fc5\u987b\u6307\u5b9a</li> <li>y\u8f74\u4e0a\u7684\u7f29\u653e\u3002\u82e5\u672a\u6307\u5b9a\uff0cx\u8f74\u548cy\u8f74\u5747\u6309sx\u7f29\u653e</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#draw-style","title":"\u7ed8\u5236\u6837\u5f0f\uff08Draw Style\uff09","text":"<p>Step Demo \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.step \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.step \u2014 Matplotlib 3.10.1 documentation</p> <p></p> <p>step\u51fd\u6570\u662f\u5bf9<code>plot(drawstyle=...)</code>\u7684\u5c01\u88c5\uff0c\u901a\u8fc7where\u53c2\u6570\u6765\u6307\u5b9a'pre'\u3001'mid'\u3001'post'</p> \u7ed8\u5236\u6837\u5f0f\uff08Draw Style\uff09<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(x, y,\n        linestyle=\"-\",\n        marker=\"*\",\n        drawstyle=\"steps-mid\"    # (1)!\n        )\n# ax.step(x, y,\n#         linestyle=\"-\",\n#         marker=\"*\",\n#         where=\"mid\"\n#         )\n\nax.grid()\nplt.show()\n</code></pre> <ol> <li>drawstyle/ds</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#grid","title":"\u7f51\u683c\u7ebf\uff08Grid\uff09","text":"<p>matplotlib.axes.Axes.grid \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.grid \u2014 Matplotlib 3.10.1 documentation</p> \u7f51\u683c\u7ebf\uff08Grid\uff09<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.grid(visible=True,    # (1)!\n        which=\"both\",    # (2)!\n        axis=\"both\",     # (3)!\n\n        linestyle=\"--\",\n        linewidth=2,\n        color=\"red\",\n        gapcolor=\"black\",\n        alpha=0.5,\n        )\n\nplt.show()\n</code></pre> <ol> <li>\u7f51\u683c\u7ebf\u662f\u5426\u53ef\u89c1</li> <li>\u7ed8\u5236\u5728\u4e3b\u523b\u5ea6\u8fd8\u662f\u526f\u523b\u5ea6, \u53ef\u9009: <ol> <li>'major'</li> <li>'minor'</li> <li>'both'</li> </ol> </li> <li>\u7ed8\u5236\u54ea\u4e2a\u8f74\u7684, \u53ef\u9009: <ol> <li>'both'</li> <li>'x'</li> <li>'y'</li> </ol> </li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BA%BF%EF%BC%88Line%EF%BC%89%E4%B8%8E%E6%A0%87%E8%AE%B0%EF%BC%88Marker%EF%BC%89/#line","title":"\u53c2\u8003\u7ebf\uff08Line\uff09","text":"axhline\u4e0eaxvlinehlines\u4e0evlines <p>matplotlib.axes.Axes.axhline \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.axhline \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.axvline \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.axvline \u2014 Matplotlib 3.10.1 documentation</p> axhline\u4e0eaxvline<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\nax.plot(x, y)\n\nax.axhline(y=0.5,       # (1)!\n           xmin=0.2,    # (2)!\n           xmax=0.8,    # (3)!\n\n           linestyle=\"--\",\n           linewidth=2,\n           color=\"red\",\n           gapcolor=\"black\",\n           alpha=0.5,\n           )\n\nax.axvline(x=25,        # (4)!\n           ymin=0.2,    # (5)!\n           ymax=0.8,    # (6)!\n\n           linestyle=\"--\",\n           linewidth=2,\n           color=\"red\",\n           gapcolor=\"black\",\n           alpha=0.5,\n           )\n\nplt.show()\n</code></pre> <ol> <li>\u6570\u636e\u5750\u6807\u7cfb\u7edf</li> <li>Axes\u5750\u6807\u7cfb\u7edf</li> <li>Axes\u5750\u6807\u7cfb\u7edf</li> <li>\u6570\u636e\u5750\u6807\u7cfb\u7edf</li> <li>Axes\u5750\u6807\u7cfb\u7edf</li> <li>Axes\u5750\u6807\u7cfb\u7edf</li> </ol> <p></p> <p>matplotlib.axes.Axes.hlines \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.hlines \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.vlines \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.vlines \u2014 Matplotlib 3.10.1 documentation</p> hlines\u4e0evlines<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\nax.plot(x, y)\n\nax.hlines(y=[0.5, 0.6, 0.7, 0.8],    # (1)!\n          xmin=[10, 15, 20, 25],     # (2)!\n          xmax=[15, 20, 25, 30],     # (3)!\n\n          linestyles=\"--\",\n          linewidths=[2, 3, 4, 5],\n          colors=[\"r\", \"g\", \"b\", \"y\"],\n          gapcolor=\"b\",\n          alpha=0.5,\n          )\n\nax.vlines(x=[12.5, 17.5, 22.5, 27.5],    # (4)!\n          ymin=[0.4, 0.5, 0.6, 0.7],     # (5)!\n          ymax=[0.6, 0.7, 0.8, 0.9],     # (6)!\n\n          linestyles=\"--\",\n          linewidths=[2, 3, 4, 5],\n          colors=[\"r\", \"g\", \"b\", \"y\"],\n          gapcolor=\"b\",\n          alpha=0.5,\n          )\n\nplt.show()\n</code></pre> <ol> <li>\u6570\u636e\u5750\u6807\u7cfb\u7edf</li> <li>\u6570\u636e\u5750\u6807\u7cfb\u7edf</li> <li>\u6570\u636e\u5750\u6807\u7cfb\u7edf</li> <li>\u6570\u636e\u5750\u6807\u7cfb\u7edf</li> <li>\u6570\u636e\u5750\u6807\u7cfb\u7edf</li> <li>\u6570\u636e\u5750\u6807\u7cfb\u7edf</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/","title":"\u7ed8\u56fe\u914d\u7f6e\uff08runtime configuration\uff09","text":"\u5bfc\u5165\u6a21\u5757<pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#matplotlib","title":"Matplotlib","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#matplotlibrc","title":"matplotlibrc\u6587\u4ef6","text":"<p>Customizing Matplotlib with style sheets and rcParams \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlibrc</p> \u6587\u4ef6\u8def\u5f84\u67e5\u770b<pre><code>mpl.matplotlib_fname()\n\"\"\"\n'D:\\\\SoftWare\\\\python\\\\python3_12_8\\\\Lib\\\\site-packages\\\\matplotlib\\\\mpl-data\\\\matplotlibrc'\n\"\"\"\n</code></pre> <p>Matplotlib \u4f7f\u7528 <code>matplotlibrc</code> \u914d\u7f6e\u6587\u4ef6\u6765\u81ea\u5b9a\u4e49\u6240\u6709\u7c7b\u578b\u7684\u5c5e\u6027\uff0c\u79f0\u4e3a'rc \u8bbe\u7f6e'\u6216'rc \u53c2\u6570'\u3002\u51e0\u4e4e\u53ef\u4ee5\u63a7\u5236 Matplotlib \u4e2d\u51e0\u4e4e\u6bcf\u4e2a\u5c5e\u6027\u7684\u9ed8\u8ba4\u503c\uff1a\u56fe\u5f62\u5927\u5c0f\u548c DPI\u3001\u7ebf\u5bbd\u3001\u989c\u8272\u548c\u6837\u5f0f\u3001\u5750\u6807\u8f74\u548c\u7f51\u683c\u5c5e\u6027\u3001\u6587\u672c\u548c\u5b57\u4f53\u5c5e\u6027\u7b49\u7b49\u3002 <code>matplotlibrc</code> \u5728\u542f\u52a8\u65f6\u8bfb\u53d6\u4ee5\u914d\u7f6e Matplotlib\u3002</p> <p>matplotlib\u901a\u8fc7\u4ee5\u4e0b\u4f18\u5148\u7ea7\u987a\u5e8f\u641c\u7d22\u5bf9\u5e94\u76ee\u5f55\u4e0b\u7684matplotlibrc\u6587\u4ef6\u5e76\u8bfb\u53d6\uff0c\u627e\u5230\u540e\u4e0d\u518d\u641c\u7d22\u5176\u5b83\u76ee\u5f55\uff1a</p> <ol> <li> <p>\u3010\uff01\u63a8\u8350\u3011\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff1a\u4ec5\u7528\u4e8e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e0b\u7684\u914d\u7f6e</p> </li> <li> <p>\u3010\uff01\u63a8\u8350\u3011\u73af\u5883\u53d8\u91cf<code>MATPLOTLIBRC</code>\u6307\u5411\u7684\u76ee\u5f55</p> </li> <li> <p><code>C:/Users/\u7528\u6237\u540d/.config/matplotlib/</code>\u76ee\u5f55</p> </li> <li> <p><code>python\u5b89\u88c5\u76ee\u5f55/Lib/site-packages/matplotlib/mpl-data/</code>\u76ee\u5f55\uff08\u5982\u4e0a\uff09\uff1a\u8be5\u76ee\u5f55\u4e0b\u7684matplotlibrc\u6587\u4ef6\u5728\u6bcf\u6b21\u66f4\u65b0\u6216\u5b89\u88c5matplotlib\u65f6\u90fd\u4f1a\u88ab\u8986\u76d6\u3002\u8be5\u5904\u6587\u4ef6\u4e0d\u5efa\u8bae\u4fee\u6539\u3002</p> </li> </ol> <p>\u53ef\u4ee5\u901a\u8fc7\u590d\u5236\u5e76\u4fee\u6539\u8be5\u6587\u4ef6\u5b9e\u73b0\u6c38\u4e45\u4fee\u6539\u914d\u7f6e \uff08\u9759\u6001\u4fee\u6539\uff09\uff0c\u4ee5\u83b7\u5f97\u5c5e\u4e8e\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\u3002\uff08\u4fee\u6539\u65f6\u6ce8\u610f\u5220\u9664\u5f00\u5934\u6ce8\u91ca\u7b26\u53f7\uff09</p> matplotlibrc<pre><code>#### MATPLOTLIBRC FORMAT\n\n## NOTE FOR END USERS: DO NOT EDIT THIS FILE!\n##\n## This is a sample Matplotlib configuration file - you can find a copy\n## of it on your system in site-packages/matplotlib/mpl-data/matplotlibrc\n## (relative to your Python installation location).\n## DO NOT EDIT IT!\n##\n## If you wish to change your default style, copy this file to one of the\n## following locations:\n##     Unix/Linux:\n##         $HOME/.config/matplotlib/matplotlibrc OR\n##         $XDG_CONFIG_HOME/matplotlib/matplotlibrc (if $XDG_CONFIG_HOME is set)\n##     Other platforms:\n##         $HOME/.matplotlib/matplotlibrc\n## and edit that copy.\n##\n## See https://matplotlib.org/stable/users/explain/customizing.html#customizing-with-matplotlibrc-files\n## for more details on the paths which are checked for the configuration file.\n##\n## Blank lines, or lines starting with a comment symbol, are ignored, as are\n## trailing comments.  Other lines must have the format:\n##     key: val  # optional comment\n##\n## Formatting: Use PEP8-like style (as enforced in the rest of the codebase).\n## All lines start with an additional '#', so that removing all leading '#'s\n## yields a valid style file.\n##\n## Colors: for the color values below, you can either use\n##     - a Matplotlib color string, such as r, k, or b\n##     - an RGB tuple, such as (1.0, 0.5, 0.0)\n##     - a double-quoted hex string, such as \"#ff00ff\".\n##       The unquoted string ff00ff is also supported for backward\n##       compatibility, but is discouraged.\n##     - a scalar grayscale intensity such as 0.75\n##     - a legal html color name, e.g., red, blue, darkslategray\n##\n## String values may optionally be enclosed in double quotes, which allows\n## using the comment character # in the string.\n##\n## This file (and other style files) must be encoded as utf-8.\n##\n## Matplotlib configuration are currently divided into following parts:\n##     - BACKENDS\n##     - LINES\n##     - PATCHES\n##     - HATCHES\n##     - BOXPLOT\n##     - FONT\n##     - TEXT\n##     - LaTeX\n##     - AXES\n##     - DATES\n##     - TICKS\n##     - GRIDS\n##     - LEGEND\n##     - FIGURE\n##     - IMAGES\n##     - CONTOUR PLOTS\n##     - ERRORBAR PLOTS\n##     - HISTOGRAM PLOTS\n##     - SCATTER PLOTS\n##     - AGG RENDERING\n##     - PATHS\n##     - SAVING FIGURES\n##     - INTERACTIVE KEYMAPS\n##     - ANIMATION\n\n##### CONFIGURATION BEGINS HERE\n\n\n## ***************************************************************************\n## * BACKENDS                                                                *\n## ***************************************************************************\n## The default backend.  If you omit this parameter, the first working\n## backend from the following list is used:\n##     MacOSX QtAgg Gtk4Agg Gtk3Agg TkAgg WxAgg Agg\n## Other choices include:\n##     QtCairo GTK4Cairo GTK3Cairo TkCairo WxCairo Cairo\n##     Qt5Agg Qt5Cairo Wx  # deprecated.\n##     PS PDF SVG Template\n## You can also deploy your own backend outside of Matplotlib by referring to\n## the module name (which must be in the PYTHONPATH) as 'module://my_backend'.\n##backend: Agg\n\n## The port to use for the web server in the WebAgg backend.\n#webagg.port: 8988\n\n## The address on which the WebAgg web server should be reachable\n#webagg.address: 127.0.0.1\n\n## If webagg.port is unavailable, a number of other random ports will\n## be tried until one that is available is found.\n#webagg.port_retries: 50\n\n## When True, open the web browser to the plot that is shown\n#webagg.open_in_browser: True\n\n## If you are running pyplot inside a GUI and your backend choice\n## conflicts, we will automatically try to find a compatible one for\n## you if backend_fallback is True\n#backend_fallback: True\n\n#interactive: False\n#figure.hooks:          # list of dotted.module.name:dotted.callable.name\n#toolbar:     toolbar2  # {None, toolbar2, toolmanager}\n#timezone:    UTC       # a pytz timezone string, e.g., US/Central or Europe/Paris\n\n\n## ***************************************************************************\n## * LINES                                                                   *\n## ***************************************************************************\n## See https://matplotlib.org/stable/api/artist_api.html#module-matplotlib.lines\n## for more information on line properties.\n#lines.linewidth: 1.5               # line width in points\n#lines.linestyle: -                 # solid line\n#lines.color:     C0                # has no affect on plot(); see axes.prop_cycle\n#lines.marker:          None        # the default marker\n#lines.markerfacecolor: auto        # the default marker face color\n#lines.markeredgecolor: auto        # the default marker edge color\n#lines.markeredgewidth: 1.0         # the line width around the marker symbol\n#lines.markersize:      6           # marker size, in points\n#lines.dash_joinstyle:  round       # {miter, round, bevel}\n#lines.dash_capstyle:   butt        # {butt, round, projecting}\n#lines.solid_joinstyle: round       # {miter, round, bevel}\n#lines.solid_capstyle:  projecting  # {butt, round, projecting}\n#lines.antialiased: True            # render lines in antialiased (no jaggies)\n\n## The three standard dash patterns.  These are scaled by the linewidth.\n#lines.dashed_pattern: 3.7, 1.6\n#lines.dashdot_pattern: 6.4, 1.6, 1, 1.6\n#lines.dotted_pattern: 1, 1.65\n#lines.scale_dashes: True\n\n#markers.fillstyle: full  # {full, left, right, bottom, top, none}\n\n#pcolor.shading: auto\n#pcolormesh.snap: True  # Whether to snap the mesh to pixel boundaries. This is\n                        # provided solely to allow old test images to remain\n                        # unchanged. Set to False to obtain the previous behavior.\n\n## ***************************************************************************\n## * PATCHES                                                                 *\n## ***************************************************************************\n## Patches are graphical objects that fill 2D space, like polygons or circles.\n## See https://matplotlib.org/stable/api/artist_api.html#module-matplotlib.patches\n## for more information on patch properties.\n#patch.linewidth:       1.0    # edge width in points.\n#patch.facecolor:       C0\n#patch.edgecolor:       black  # By default, Patches and Collections do not draw edges.\n                               # This value is only used if facecolor is \"none\"\n                               # (an Artist without facecolor and edgecolor would be\n                               # invisible)  or if patch.force_edgecolor is True.\n#patch.force_edgecolor: False  # By default, Patches and Collections do not draw edges.\n                               # Set this to True to draw edges with patch.edgedcolor\n                               # as the default edgecolor.\n                               # This is mainly relevant for styles.\n#patch.antialiased:     True   # render patches in antialiased (no jaggies)\n\n\n## ***************************************************************************\n## * HATCHES                                                                 *\n## ***************************************************************************\n#hatch.color:     black\n#hatch.linewidth: 1.0\n\n\n## ***************************************************************************\n## * BOXPLOT                                                                 *\n## ***************************************************************************\n#boxplot.notch:       False\n#boxplot.vertical:    True\n#boxplot.whiskers:    1.5\n#boxplot.bootstrap:   None\n#boxplot.patchartist: False\n#boxplot.showmeans:   False\n#boxplot.showcaps:    True\n#boxplot.showbox:     True\n#boxplot.showfliers:  True\n#boxplot.meanline:    False\n\n#boxplot.flierprops.color:           black\n#boxplot.flierprops.marker:          o\n#boxplot.flierprops.markerfacecolor: none\n#boxplot.flierprops.markeredgecolor: black\n#boxplot.flierprops.markeredgewidth: 1.0\n#boxplot.flierprops.markersize:      6\n#boxplot.flierprops.linestyle:       none\n#boxplot.flierprops.linewidth:       1.0\n\n#boxplot.boxprops.color:     black\n#boxplot.boxprops.linewidth: 1.0\n#boxplot.boxprops.linestyle: -\n\n#boxplot.whiskerprops.color:     black\n#boxplot.whiskerprops.linewidth: 1.0\n#boxplot.whiskerprops.linestyle: -\n\n#boxplot.capprops.color:     black\n#boxplot.capprops.linewidth: 1.0\n#boxplot.capprops.linestyle: -\n\n#boxplot.medianprops.color:     C1\n#boxplot.medianprops.linewidth: 1.0\n#boxplot.medianprops.linestyle: -\n\n#boxplot.meanprops.color:           C2\n#boxplot.meanprops.marker:          ^\n#boxplot.meanprops.markerfacecolor: C2\n#boxplot.meanprops.markeredgecolor: C2\n#boxplot.meanprops.markersize:       6\n#boxplot.meanprops.linestyle:       --\n#boxplot.meanprops.linewidth:       1.0\n\n\n## ***************************************************************************\n## * FONT                                                                    *\n## ***************************************************************************\n## The font properties used by `text.Text`.\n## See https://matplotlib.org/stable/api/font_manager_api.html for more information\n## on font properties.  The 6 font properties used for font matching are\n## given below with their default values.\n##\n## The font.family property can take either a single or multiple entries of any\n## combination of concrete font names (not supported when rendering text with\n## usetex) or the following five generic values:\n##     - 'serif' (e.g., Times),\n##     - 'sans-serif' (e.g., Helvetica),\n##     - 'cursive' (e.g., Zapf-Chancery),\n##     - 'fantasy' (e.g., Western), and\n##     - 'monospace' (e.g., Courier).\n## Each of these values has a corresponding default list of font names\n## (font.serif, etc.); the first available font in the list is used.  Note that\n## for font.serif, font.sans-serif, and font.monospace, the first element of\n## the list (a DejaVu font) will always be used because DejaVu is shipped with\n## Matplotlib and is thus guaranteed to be available; the other entries are\n## left as examples of other possible values.\n##\n## The font.style property has three values: normal (or roman), italic\n## or oblique.  The oblique style will be used for italic, if it is not\n## present.\n##\n## The font.variant property has two values: normal or small-caps.  For\n## TrueType fonts, which are scalable fonts, small-caps is equivalent\n## to using a font size of 'smaller', or about 83 % of the current font\n## size.\n##\n## The font.weight property has effectively 13 values: normal, bold,\n## bolder, lighter, 100, 200, 300, ..., 900.  Normal is the same as\n## 400, and bold is 700.  bolder and lighter are relative values with\n## respect to the current weight.\n##\n## The font.stretch property has 11 values: ultra-condensed,\n## extra-condensed, condensed, semi-condensed, normal, semi-expanded,\n## expanded, extra-expanded, ultra-expanded, wider, and narrower.  This\n## property is not currently implemented.\n##\n## The font.size property is the default font size for text, given in points.\n## 10 pt is the standard value.\n##\n## Note that font.size controls default text sizes.  To configure\n## special text sizes tick labels, axes, labels, title, etc., see the rc\n## settings for axes and ticks.  Special text sizes can be defined\n## relative to font.size, using the following values: xx-small, x-small,\n## small, medium, large, x-large, xx-large, larger, or smaller\n\n#font.family:  sans-serif\n#font.style:   normal\n#font.variant: normal\n#font.weight:  normal\n#font.stretch: normal\n#font.size:    10.0\n\n#font.serif:      DejaVu Serif, Bitstream Vera Serif, Computer Modern Roman, New Century Schoolbook, Century Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New Roman, Times, Palatino, Charter, serif\n#font.sans-serif: DejaVu Sans, Bitstream Vera Sans, Computer Modern Sans Serif, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif\n#font.cursive:    Apple Chancery, Textile, Zapf Chancery, Sand, Script MT, Felipa, Comic Neue, Comic Sans MS, cursive\n#font.fantasy:    Chicago, Charcoal, Impact, Western, xkcd script, fantasy\n#font.monospace:  DejaVu Sans Mono, Bitstream Vera Sans Mono, Computer Modern Typewriter, Andale Mono, Nimbus Mono L, Courier New, Courier, Fixed, Terminal, monospace\n\n\n## ***************************************************************************\n## * TEXT                                                                    *\n## ***************************************************************************\n## The text properties used by `text.Text`.\n## See https://matplotlib.org/stable/api/artist_api.html#module-matplotlib.text\n## for more information on text properties\n#text.color: black\n\n## FreeType hinting flag (\"foo\" corresponds to FT_LOAD_FOO); may be one of the\n## following (Proprietary Matplotlib-specific synonyms are given in parentheses,\n## but their use is discouraged):\n## - default: Use the font's native hinter if possible, else FreeType's auto-hinter.\n##            (\"either\" is a synonym).\n## - no_autohint: Use the font's native hinter if possible, else don't hint.\n##                (\"native\" is a synonym.)\n## - force_autohint: Use FreeType's auto-hinter.  (\"auto\" is a synonym.)\n## - no_hinting: Disable hinting.  (\"none\" is a synonym.)\n#text.hinting: force_autohint\n\n#text.hinting_factor: 8  # Specifies the amount of softness for hinting in the\n                         # horizontal direction.  A value of 1 will hint to full\n                         # pixels.  A value of 2 will hint to half pixels etc.\n#text.kerning_factor: 0  # Specifies the scaling factor for kerning values.  This\n                         # is provided solely to allow old test images to remain\n                         # unchanged.  Set to 6 to obtain previous behavior.\n                         # Values  other than 0 or 6 have no defined meaning.\n#text.antialiased: True  # If True (default), the text will be antialiased.\n                         # This only affects raster outputs.\n#text.parse_math: True  # Use mathtext if there is an even number of unescaped\n                        # dollar signs.\n\n\n## ***************************************************************************\n## * LaTeX                                                                   *\n## ***************************************************************************\n## For more information on LaTeX properties, see\n## https://matplotlib.org/stable/users/explain/text/usetex.html\n#text.usetex: False  # use latex for all text handling. The following fonts\n                     # are supported through the usual rc parameter settings:\n                     # new century schoolbook, bookman, times, palatino,\n                     # zapf chancery, charter, serif, sans-serif, helvetica,\n                     # avant garde, courier, monospace, computer modern roman,\n                     # computer modern sans serif, computer modern typewriter\n#text.latex.preamble:   # IMPROPER USE OF THIS FEATURE WILL LEAD TO LATEX FAILURES\n                        # AND IS THEREFORE UNSUPPORTED. PLEASE DO NOT ASK FOR HELP\n                        # IF THIS FEATURE DOES NOT DO WHAT YOU EXPECT IT TO.\n                        # text.latex.preamble is a single line of LaTeX code that\n                        # will be passed on to the LaTeX system. It may contain\n                        # any code that is valid for the LaTeX \"preamble\", i.e.\n                        # between the \"\\documentclass\" and \"\\begin{document}\"\n                        # statements.\n                        # Note that it has to be put on a single line, which may\n                        # become quite long.\n                        # The following packages are always loaded with usetex,\n                        # so beware of package collisions:\n                        #   geometry, inputenc, type1cm.\n                        # PostScript (PSNFSS) font packages may also be\n                        # loaded, depending on your font settings.\n\n## The following settings allow you to select the fonts in math mode.\n#mathtext.fontset: dejavusans  # Should be 'dejavusans' (default),\n                               # 'dejavuserif', 'cm' (Computer Modern), 'stix',\n                               # 'stixsans' or 'custom'\n## \"mathtext.fontset: custom\" is defined by the mathtext.bf, .cal, .it, ...\n## settings which map a TeX font name to a fontconfig font pattern.  (These\n## settings are not used for other font sets.)\n#mathtext.bf:  sans:bold\n#mathtext.bfit: sans:italic:bold\n#mathtext.cal: cursive\n#mathtext.it:  sans:italic\n#mathtext.rm:  sans\n#mathtext.sf:  sans\n#mathtext.tt:  monospace\n#mathtext.fallback: cm  # Select fallback font from ['cm' (Computer Modern), 'stix'\n                        # 'stixsans'] when a symbol cannot be found in one of the\n                        # custom math fonts. Select 'None' to not perform fallback\n                        # and replace the missing character by a dummy symbol.\n#mathtext.default: it  # The default font to use for math.\n                       # Can be any of the LaTeX font names, including\n                       # the special name \"regular\" for the same font\n                       # used in regular text.\n\n\n## ***************************************************************************\n## * AXES                                                                    *\n## ***************************************************************************\n## Following are default face and edge colors, default tick sizes,\n## default font sizes for tick labels, and so on.  See\n## https://matplotlib.org/stable/api/axes_api.html#module-matplotlib.axes\n#axes.facecolor:     white   # axes background color\n#axes.edgecolor:     black   # axes edge color\n#axes.linewidth:     0.8     # edge line width\n#axes.grid:          False   # display grid or not\n#axes.grid.axis:     both    # which axis the grid should apply to\n#axes.grid.which:    major   # grid lines at {major, minor, both} ticks\n#axes.titlelocation: center  # alignment of the title: {left, right, center}\n#axes.titlesize:     large   # font size of the axes title\n#axes.titleweight:   normal  # font weight of title\n#axes.titlecolor:    auto    # color of the axes title, auto falls back to\n                             # text.color as default value\n#axes.titley:        None    # position title (axes relative units).  None implies auto\n#axes.titlepad:      6.0     # pad between axes and title in points\n#axes.labelsize:     medium  # font size of the x and y labels\n#axes.labelpad:      4.0     # space between label and axis\n#axes.labelweight:   normal  # weight of the x and y labels\n#axes.labelcolor:    black\n#axes.axisbelow:     line    # draw axis gridlines and ticks:\n                             #     - below patches (True)\n                             #     - above patches but below lines ('line')\n                             #     - above all (False)\n\n#axes.formatter.limits: -5, 6  # use scientific notation if log10\n                               # of the axis range is smaller than the\n                               # first or larger than the second\n#axes.formatter.use_locale: False  # When True, format tick labels\n                                   # according to the user's locale.\n                                   # For example, use ',' as a decimal\n                                   # separator in the fr_FR locale.\n#axes.formatter.use_mathtext: False  # When True, use mathtext for scientific\n                                     # notation.\n#axes.formatter.min_exponent: 0  # minimum exponent to format in scientific notation\n#axes.formatter.useoffset: True  # If True, the tick label formatter\n                                 # will default to labeling ticks relative\n                                 # to an offset when the data range is\n                                 # small compared to the minimum absolute\n                                 # value of the data.\n#axes.formatter.offset_threshold: 4  # When useoffset is True, the offset\n                                     # will be used when it can remove\n                                     # at least this number of significant\n                                     # digits from tick labels.\n\n#axes.spines.left:   True  # display axis spines\n#axes.spines.bottom: True\n#axes.spines.top:    True\n#axes.spines.right:  True\n\n#axes.unicode_minus: True  # use Unicode for the minus symbol rather than hyphen.  See\n                           # https://en.wikipedia.org/wiki/Plus_and_minus_signs#Character_codes\n#axes.prop_cycle: cycler('color', ['1f77b4', 'ff7f0e', '2ca02c', 'd62728', '9467bd', '8c564b', 'e377c2', '7f7f7f', 'bcbd22', '17becf'])\n                  # color cycle for plot lines as list of string color specs:\n                  # single letter, long name, or web-style hex\n                  # As opposed to all other parameters in this file, the color\n                  # values must be enclosed in quotes for this parameter,\n                  # e.g. '1f77b4', instead of 1f77b4.\n                  # See also https://matplotlib.org/stable/users/explain/artists/color_cycle.html\n                  # for more details on prop_cycle usage.\n#axes.xmargin:   .05  # x margin.  See `axes.Axes.margins`\n#axes.ymargin:   .05  # y margin.  See `axes.Axes.margins`\n#axes.zmargin:   .05  # z margin.  See `axes.Axes.margins`\n#axes.autolimit_mode: data  # If \"data\", use axes.xmargin and axes.ymargin as is.\n                            # If \"round_numbers\", after application of margins, axis\n                            # limits are further expanded to the nearest \"round\" number.\n#polaraxes.grid:    True   # display grid on polar axes\n#axes3d.grid:       True   # display grid on 3D axes\n#axes3d.automargin: False  # automatically add margin when manually setting 3D axis limits\n\n#axes3d.xaxis.panecolor:    (0.95, 0.95, 0.95, 0.5)  # background pane on 3D axes\n#axes3d.yaxis.panecolor:    (0.90, 0.90, 0.90, 0.5)  # background pane on 3D axes\n#axes3d.zaxis.panecolor:    (0.925, 0.925, 0.925, 0.5)  # background pane on 3D axes\n\n#axes3d.mouserotationstyle: arcball  # {azel, trackball, sphere, arcball}\n                            # See also https://matplotlib.org/stable/api/toolkits/mplot3d/view_angles.html#rotation-with-mouse\n#axes3d.trackballsize: 0.667  # trackball diameter, in units of the Axes bbox\n#axes3d.trackballborder: 0.2  # trackball border width, in units of the Axes bbox (only for 'sphere' and 'arcball' style)\n\n## ***************************************************************************\n## * AXIS                                                                    *\n## ***************************************************************************\n#xaxis.labellocation: center  # alignment of the xaxis label: {left, right, center}\n#yaxis.labellocation: center  # alignment of the yaxis label: {bottom, top, center}\n\n\n## ***************************************************************************\n## * DATES                                                                   *\n## ***************************************************************************\n## These control the default format strings used in AutoDateFormatter.\n## Any valid format datetime format string can be used (see the python\n## `datetime` for details).  For example, by using:\n##     - '%x' will use the locale date representation\n##     - '%X' will use the locale time representation\n##     - '%c' will use the full locale datetime representation\n## These values map to the scales:\n##     {'year': 365, 'month': 30, 'day': 1, 'hour': 1/24, 'minute': 1 / (24 * 60)}\n\n#date.autoformatter.year:        %Y\n#date.autoformatter.month:       %Y-%m\n#date.autoformatter.day:         %Y-%m-%d\n#date.autoformatter.hour:        %m-%d %H\n#date.autoformatter.minute:      %d %H:%M\n#date.autoformatter.second:      %H:%M:%S\n#date.autoformatter.microsecond: %M:%S.%f\n## The reference date for Matplotlib's internal date representation\n## See https://matplotlib.org/stable/gallery/ticks/date_precision_and_epochs.html\n#date.epoch: 1970-01-01T00:00:00\n## 'auto', 'concise':\n#date.converter:                  auto\n## For auto converter whether to use interval_multiples:\n#date.interval_multiples:         True\n\n## ***************************************************************************\n## * TICKS                                                                   *\n## ***************************************************************************\n## See https://matplotlib.org/stable/api/axis_api.html#matplotlib.axis.Tick\n#xtick.top:           False   # draw ticks on the top side\n#xtick.bottom:        True    # draw ticks on the bottom side\n#xtick.labeltop:      False   # draw label on the top\n#xtick.labelbottom:   True    # draw label on the bottom\n#xtick.major.size:    3.5     # major tick size in points\n#xtick.minor.size:    2       # minor tick size in points\n#xtick.major.width:   0.8     # major tick width in points\n#xtick.minor.width:   0.6     # minor tick width in points\n#xtick.major.pad:     3.5     # distance to major tick label in points\n#xtick.minor.pad:     3.4     # distance to the minor tick label in points\n#xtick.color:         black   # color of the ticks\n#xtick.labelcolor:    inherit # color of the tick labels or inherit from xtick.color\n#xtick.labelsize:     medium  # font size of the tick labels\n#xtick.direction:     out     # direction: {in, out, inout}\n#xtick.minor.visible: False   # visibility of minor ticks on x-axis\n#xtick.major.top:     True    # draw x axis top major ticks\n#xtick.major.bottom:  True    # draw x axis bottom major ticks\n#xtick.minor.top:     True    # draw x axis top minor ticks\n#xtick.minor.bottom:  True    # draw x axis bottom minor ticks\n#xtick.minor.ndivs:   auto    # number of minor ticks between the major ticks on x-axis\n#xtick.alignment:     center  # alignment of xticks\n\n#ytick.left:          True    # draw ticks on the left side\n#ytick.right:         False   # draw ticks on the right side\n#ytick.labelleft:     True    # draw tick labels on the left side\n#ytick.labelright:    False   # draw tick labels on the right side\n#ytick.major.size:    3.5     # major tick size in points\n#ytick.minor.size:    2       # minor tick size in points\n#ytick.major.width:   0.8     # major tick width in points\n#ytick.minor.width:   0.6     # minor tick width in points\n#ytick.major.pad:     3.5     # distance to major tick label in points\n#ytick.minor.pad:     3.4     # distance to the minor tick label in points\n#ytick.color:         black   # color of the ticks\n#ytick.labelcolor:    inherit # color of the tick labels or inherit from ytick.color\n#ytick.labelsize:     medium  # font size of the tick labels\n#ytick.direction:     out     # direction: {in, out, inout}\n#ytick.minor.visible: False   # visibility of minor ticks on y-axis\n#ytick.major.left:    True    # draw y axis left major ticks\n#ytick.major.right:   True    # draw y axis right major ticks\n#ytick.minor.left:    True    # draw y axis left minor ticks\n#ytick.minor.right:   True    # draw y axis right minor ticks\n#ytick.minor.ndivs:   auto    # number of minor ticks between the major ticks on y-axis\n#ytick.alignment:     center_baseline  # alignment of yticks\n\n\n## ***************************************************************************\n## * GRIDS                                                                   *\n## ***************************************************************************\n#grid.color:     \"#b0b0b0\"  # grid color\n#grid.linestyle: -          # solid\n#grid.linewidth: 0.8        # in points\n#grid.alpha:     1.0        # transparency, between 0.0 and 1.0\n\n\n## ***************************************************************************\n## * LEGEND                                                                  *\n## ***************************************************************************\n#legend.loc:           best\n#legend.frameon:       True     # if True, draw the legend on a background patch\n#legend.framealpha:    0.8      # legend patch transparency\n#legend.facecolor:     inherit  # inherit from axes.facecolor; or color spec\n#legend.edgecolor:     0.8      # background patch boundary color\n#legend.fancybox:      True     # if True, use a rounded box for the\n                                # legend background, else a rectangle\n#legend.shadow:        False    # if True, give background a shadow effect\n#legend.numpoints:     1        # the number of marker points in the legend line\n#legend.scatterpoints: 1        # number of scatter points\n#legend.markerscale:   1.0      # the relative size of legend markers vs. original\n#legend.fontsize:      medium\n#legend.labelcolor:    None\n#legend.title_fontsize: None    # None sets to the same as the default axes.\n\n## Dimensions as fraction of font size:\n#legend.borderpad:     0.4  # border whitespace\n#legend.labelspacing:  0.5  # the vertical space between the legend entries\n#legend.handlelength:  2.0  # the length of the legend lines\n#legend.handleheight:  0.7  # the height of the legend handle\n#legend.handletextpad: 0.8  # the space between the legend line and legend text\n#legend.borderaxespad: 0.5  # the border between the axes and legend edge\n#legend.columnspacing: 2.0  # column separation\n\n\n## ***************************************************************************\n## * FIGURE                                                                  *\n## ***************************************************************************\n## See https://matplotlib.org/stable/api/figure_api.html#matplotlib.figure.Figure\n#figure.titlesize:   large     # size of the figure title (``Figure.suptitle()``)\n#figure.titleweight: normal    # weight of the figure title\n#figure.labelsize:   large     # size of the figure label (``Figure.sup[x|y]label()``)\n#figure.labelweight: normal    # weight of the figure label\n#figure.figsize:     6.4, 4.8  # figure size in inches\n#figure.dpi:         100       # figure dots per inch\n#figure.facecolor:   white     # figure face color\n#figure.edgecolor:   white     # figure edge color\n#figure.frameon:     True      # enable figure frame\n#figure.max_open_warning: 20   # The maximum number of figures to open through\n                               # the pyplot interface before emitting a warning.\n                               # If less than one this feature is disabled.\n#figure.raise_window : True    # Raise the GUI window to front when show() is called.\n\n## The figure subplot parameters.  All dimensions are a fraction of the figure width and height.\n#figure.subplot.left:   0.125  # the left side of the subplots of the figure\n#figure.subplot.right:  0.9    # the right side of the subplots of the figure\n#figure.subplot.bottom: 0.11   # the bottom of the subplots of the figure\n#figure.subplot.top:    0.88   # the top of the subplots of the figure\n#figure.subplot.wspace: 0.2    # the amount of width reserved for space between subplots,\n                               # expressed as a fraction of the average axis width\n#figure.subplot.hspace: 0.2    # the amount of height reserved for space between subplots,\n                               # expressed as a fraction of the average axis height\n\n## Figure layout\n#figure.autolayout: False  # When True, automatically adjust subplot\n                           # parameters to make the plot fit the figure\n                           # using `tight_layout`\n#figure.constrained_layout.use: False  # When True, automatically make plot\n                                       # elements fit on the figure. (Not\n                                       # compatible with `autolayout`, above).\n## Padding (in inches) around axes; defaults to 3/72 inches, i.e. 3 points.\n#figure.constrained_layout.h_pad:  0.04167\n#figure.constrained_layout.w_pad:  0.04167\n## Spacing between subplots, relative to the subplot sizes.  Much smaller than for\n## tight_layout (figure.subplot.hspace, figure.subplot.wspace) as constrained_layout\n## already takes surrounding texts (titles, labels, # ticklabels) into account.\n#figure.constrained_layout.hspace: 0.02\n#figure.constrained_layout.wspace: 0.02\n\n\n## ***************************************************************************\n## * IMAGES                                                                  *\n## ***************************************************************************\n#image.aspect:          equal        # {equal, auto} or a number\n#image.interpolation:   auto         # see help(imshow) for options\n#image.interpolation_stage: auto     # see help(imshow) for options\n#image.cmap:            viridis      # A colormap name (plasma, magma, etc.)\n#image.lut:             256          # the size of the colormap lookup table\n#image.origin:          upper        # {lower, upper}\n#image.resample:        True\n#image.composite_image: True  # When True, all the images on a set of axes are\n                              # combined into a single composite image before\n                              # saving a figure as a vector graphics file,\n                              # such as a PDF.\n\n\n## ***************************************************************************\n## * CONTOUR PLOTS                                                           *\n## ***************************************************************************\n#contour.negative_linestyle: dashed  # string or on-off ink sequence\n#contour.corner_mask:        True    # {True, False}\n#contour.linewidth:          None    # {float, None} Size of the contour line\n                                     # widths. If set to None, it falls back to\n                                     # `line.linewidth`.\n#contour.algorithm:          mpl2014 # {mpl2005, mpl2014, serial, threaded}\n\n\n## ***************************************************************************\n## * ERRORBAR PLOTS                                                          *\n## ***************************************************************************\n#errorbar.capsize: 0  # length of end cap on error bars in pixels\n\n\n## ***************************************************************************\n## * HISTOGRAM PLOTS                                                         *\n## ***************************************************************************\n#hist.bins: 10  # The default number of histogram bins or 'auto'.\n\n\n## ***************************************************************************\n## * SCATTER PLOTS                                                           *\n## ***************************************************************************\n#scatter.marker: o         # The default marker type for scatter plots.\n#scatter.edgecolors: face  # The default edge colors for scatter plots.\n\n\n## ***************************************************************************\n## * AGG RENDERING                                                           *\n## ***************************************************************************\n## Warning: experimental, 2008/10/10\n#agg.path.chunksize: 0  # 0 to disable; values in the range\n                        # 10000 to 100000 can improve speed slightly\n                        # and prevent an Agg rendering failure\n                        # when plotting very large data sets,\n                        # especially if they are very gappy.\n                        # It may cause minor artifacts, though.\n                        # A value of 20000 is probably a good\n                        # starting point.\n\n\n## ***************************************************************************\n## * PATHS                                                                   *\n## ***************************************************************************\n#path.simplify: True  # When True, simplify paths by removing \"invisible\"\n                      # points to reduce file size and increase rendering\n                      # speed\n#path.simplify_threshold: 0.111111111111  # The threshold of similarity below\n                                          # which vertices will be removed in\n                                          # the simplification process.\n#path.snap: True  # When True, rectilinear axis-aligned paths will be snapped\n                  # to the nearest pixel when certain criteria are met.\n                  # When False, paths will never be snapped.\n#path.sketch: None  # May be None, or a tuple of the form:\n                    #  path.sketch: (scale, length, randomness)\n                    # - *scale* is the amplitude of the wiggle\n                    #    perpendicular to the line (in pixels).\n                    # - *length* is the length of the wiggle along the\n                    #    line (in pixels).\n                    # - *randomness* is the factor by which the length is\n                    #    randomly scaled.\n#path.effects:\n\n\n## ***************************************************************************\n## * SAVING FIGURES                                                          *\n## ***************************************************************************\n## The default savefig parameters can be different from the display parameters\n## e.g., you may want a higher resolution, or to make the figure\n## background white\n#savefig.dpi:       figure      # figure dots per inch or 'figure'\n#savefig.facecolor: auto        # figure face color when saving\n#savefig.edgecolor: auto        # figure edge color when saving\n#savefig.format:    png         # {png, ps, pdf, svg}\n#savefig.bbox:      standard    # {tight, standard}\n                                # 'tight' is incompatible with generating frames\n                                # for animation\n#savefig.pad_inches:  0.1       # padding to be used, when bbox is set to 'tight'\n#savefig.directory:   ~         # default directory in savefig dialog, gets updated after\n                                # interactive saves, unless set to the empty string (i.e.\n                                # the current directory); use '.' to start at the current\n                                # directory but update after interactive saves\n#savefig.transparent: False     # whether figures are saved with a transparent\n                                # background by default\n#savefig.orientation: portrait  # orientation of saved figure, for PostScript output only\n\n### macosx backend params\n#macosx.window_mode : system   # How to open new figures (system, tab, window)\n                               # system uses the MacOS system preferences\n\n### tk backend params\n#tk.window_focus:   False  # Maintain shell focus for TkAgg\n\n### ps backend params\n#ps.papersize:      letter  # {figure, letter, legal, ledger, A0-A10, B0-B10}\n#ps.useafm:         False   # use AFM fonts, results in small files\n#ps.usedistiller:   False   # {ghostscript, xpdf, None}\n                            # Experimental: may produce smaller files.\n                            # xpdf intended for production of publication quality files,\n                            # but requires ghostscript, xpdf and ps2eps\n#ps.distiller.res:  6000    # dpi\n#ps.fonttype:       3       # Output Type 3 (Type3) or Type 42 (TrueType)\n\n### PDF backend params\n#pdf.compression:    6  # integer from 0 to 9\n                        # 0 disables compression (good for debugging)\n#pdf.fonttype:       3  # Output Type 3 (Type3) or Type 42 (TrueType)\n#pdf.use14corefonts: False\n#pdf.inheritcolor:   False\n\n### SVG backend params\n#svg.image_inline: True  # Write raster image data directly into the SVG file\n#svg.fonttype: path      # How to handle SVG fonts:\n                         #     path: Embed characters as paths -- supported\n                         #           by most SVG renderers\n                         #     None: Assume fonts are installed on the\n                         #           machine where the SVG will be viewed.\n#svg.hashsalt: None      # If not None, use this string as hash salt instead of uuid4\n#svg.id: None            # If not None, use this string as the value for the `id`\n                         # attribute in the top &lt;svg&gt; tag\n\n### pgf parameter\n## See https://matplotlib.org/stable/tutorials/text/pgf.html for more information.\n#pgf.rcfonts: True\n#pgf.preamble:  # See text.latex.preamble for documentation\n#pgf.texsystem: xelatex\n\n### docstring params\n#docstring.hardcopy: False  # set this when you want to generate hardcopy docstring\n\n\n## ***************************************************************************\n## * INTERACTIVE KEYMAPS                                                     *\n## ***************************************************************************\n## Event keys to interact with figures/plots via keyboard.\n## See https://matplotlib.org/stable/users/explain/interactive.html for more\n## details on interactive navigation.  Customize these settings according to\n## your needs. Leave the field(s) empty if you don't need a key-map. (i.e.,\n## fullscreen : '')\n#keymap.fullscreen: f, ctrl+f   # toggling\n#keymap.home: h, r, home        # home or reset mnemonic\n#keymap.back: left, c, backspace, MouseButton.BACK  # forward / backward keys\n#keymap.forward: right, v, MouseButton.FORWARD      # for quick navigation\n#keymap.pan: p                  # pan mnemonic\n#keymap.zoom: o                 # zoom mnemonic\n#keymap.save: s, ctrl+s         # saving current figure\n#keymap.help: f1                # display help about active tools\n#keymap.quit: ctrl+w, cmd+w, q  # close the current figure\n#keymap.quit_all:               # close all figures\n#keymap.grid: g                 # switching on/off major grids in current axes\n#keymap.grid_minor: G           # switching on/off minor grids in current axes\n#keymap.yscale: l               # toggle scaling of y-axes ('log'/'linear')\n#keymap.xscale: k, L            # toggle scaling of x-axes ('log'/'linear')\n#keymap.copy: ctrl+c, cmd+c     # copy figure to clipboard\n\n\n## ***************************************************************************\n## * ANIMATION                                                               *\n## ***************************************************************************\n#animation.html: none  # How to display the animation as HTML in\n                       # the IPython notebook:\n                       #     - 'html5' uses HTML5 video tag\n                       #     - 'jshtml' creates a JavaScript animation\n#animation.writer:  ffmpeg        # MovieWriter 'backend' to use\n#animation.codec:   h264          # Codec to use for writing movie\n#animation.bitrate: -1            # Controls size/quality trade-off for movie.\n                                  # -1 implies let utility auto-determine\n#animation.frame_format: png      # Controls frame format used by temp files\n\n## Path to ffmpeg binary.  Unqualified paths are resolved by subprocess.Popen.\n#animation.ffmpeg_path:  ffmpeg\n## Additional arguments to pass to ffmpeg.\n#animation.ffmpeg_args:\n\n## Path to ImageMagick's convert binary.  Unqualified paths are resolved by\n## subprocess.Popen, except that on Windows, we look up an install of\n## ImageMagick in the registry (as convert is also the name of a system tool).\n#animation.convert_path: convert\n## Additional arguments to pass to convert.\n#animation.convert_args: -layers, OptimizePlus\n#\n#animation.embed_limit:  20.0     # Limit, in MB, of size of base64 encoded\n                                  # animation in HTML (i.e. IPython notebook)\n</code></pre> <p></p> \u4f8b<pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(range(0, 8))\n\nplt.show()\n</code></pre> \u9ed8\u8ba4\u4fee\u6539 <p></p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#rc","title":"rc\u8bbe\u7f6e","text":"<p>Customizing Matplotlib with style sheets and rcParams \u2014 Matplotlib 3.10.1 documentation</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#rcparams","title":"rcParams\u5b57\u5178","text":"<p>matplotlib \u2014 Matplotlib 3.8.0 documentation</p> <p>matplotlib \u2014 Matplotlib 3.10.1 documentation</p> <p><code>mpl.rcParams</code>\u5c06\u4ecematplotlibrc\u6587\u4ef6\u8bfb\u53d6\u7684\u7684\u5143\u7d20\u5c5e\u6027\u50a8\u5b58\u5728\u4e00\u4e2a\u5b57\u5178\u4e2d\uff0c\u901a\u8fc7\u5bf9\u5b57\u5178\u952e\u503c\u5bf9\u7684\u4fee\u6539\uff0c\u5b9e\u73b0\u5728\u5f53\u524d\u4ee3\u7801\u9879\u76ee\u4e2d\u4fee\u6539\u5168\u5c40\u914d\u7f6e\uff08\u52a8\u6001\u4fee\u6539\uff09\uff0c\u4e0d\u4f1a\u5bf9matplotlibrc\u6587\u4ef6\u4ea7\u751f\u4fee\u6539\u3002</p> rcParams\u5b57\u5178<pre><code>mpl.rcParams\n\"\"\"\nRcParams({'_internal.classic_mode': False,\n          'agg.path.chunksize': 0,\n          'animation.bitrate': -1,\n          'animation.codec': 'h264',\n          'animation.convert_args': ['-layers', 'OptimizePlus'],\n          'animation.convert_path': 'convert',\n          'animation.embed_limit': 20.0,\n          'animation.ffmpeg_args': [],\n          'animation.ffmpeg_path': 'ffmpeg',\n          'animation.frame_format': 'png',\n          'animation.html': 'none',\n          'animation.writer': 'ffmpeg',\n          'axes.autolimit_mode': 'data',\n          'axes.axisbelow': 'line',\n          'axes.edgecolor': 'black',\n          'axes.facecolor': 'white',\n          'axes.formatter.limits': [-5, 6],\n          'axes.formatter.min_exponent': 0,\n          'axes.formatter.offset_threshold': 4,\n          'axes.formatter.use_locale': False,\n          'axes.formatter.use_mathtext': False,\n          'axes.formatter.useoffset': True,\n          'axes.grid': False,\n          'axes.grid.axis': 'both',\n          'axes.grid.which': 'major',\n          'axes.labelcolor': 'black',\n          'axes.labelpad': 4.0,\n          'axes.labelsize': 'medium',\n          'axes.labelweight': 'normal',\n          'axes.linewidth': 0.8,\n          'axes.prop_cycle': cycler('color', ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf']),\n          'axes.spines.bottom': True,\n          'axes.spines.left': True,\n          'axes.spines.right': True,\n          'axes.spines.top': True,\n          'axes.titlecolor': 'auto',\n          'axes.titlelocation': 'center',\n          'axes.titlepad': 6.0,\n          'axes.titlesize': 'large',\n          'axes.titleweight': 'normal',\n          'axes.titley': None,\n          'axes.unicode_minus': True,\n          'axes.xmargin': 0.05,\n          'axes.ymargin': 0.05,\n          'axes.zmargin': 0.05,\n          'axes3d.automargin': False,\n          'axes3d.grid': True,\n          'axes3d.mouserotationstyle': 'arcball',\n          'axes3d.trackballborder': 0.2,\n          'axes3d.trackballsize': 0.667,\n          'axes3d.xaxis.panecolor': (0.95, 0.95, 0.95, 0.5),\n          'axes3d.yaxis.panecolor': (0.9, 0.9, 0.9, 0.5),\n          'axes3d.zaxis.panecolor': (0.925, 0.925, 0.925, 0.5),\n          'backend': 'module://matplotlib_inline.backend_inline',\n          'backend_fallback': True,\n          'boxplot.bootstrap': None,\n          'boxplot.boxprops.color': 'black',\n          'boxplot.boxprops.linestyle': '-',\n          'boxplot.boxprops.linewidth': 1.0,\n          'boxplot.capprops.color': 'black',\n          'boxplot.capprops.linestyle': '-',\n          'boxplot.capprops.linewidth': 1.0,\n          'boxplot.flierprops.color': 'black',\n          'boxplot.flierprops.linestyle': 'none',\n          'boxplot.flierprops.linewidth': 1.0,\n          'boxplot.flierprops.marker': 'o',\n          'boxplot.flierprops.markeredgecolor': 'black',\n          'boxplot.flierprops.markeredgewidth': 1.0,\n          'boxplot.flierprops.markerfacecolor': 'none',\n          'boxplot.flierprops.markersize': 6.0,\n          'boxplot.meanline': False,\n          'boxplot.meanprops.color': 'C2',\n          'boxplot.meanprops.linestyle': '--',\n          'boxplot.meanprops.linewidth': 1.0,\n          'boxplot.meanprops.marker': '^',\n          'boxplot.meanprops.markeredgecolor': 'C2',\n          'boxplot.meanprops.markerfacecolor': 'C2',\n          'boxplot.meanprops.markersize': 6.0,\n          'boxplot.medianprops.color': 'C1',\n          'boxplot.medianprops.linestyle': '-',\n          'boxplot.medianprops.linewidth': 1.0,\n          'boxplot.notch': False,\n          'boxplot.patchartist': False,\n          'boxplot.showbox': True,\n          'boxplot.showcaps': True,\n          'boxplot.showfliers': True,\n          'boxplot.showmeans': False,\n          'boxplot.vertical': True,\n          'boxplot.whiskerprops.color': 'black',\n          'boxplot.whiskerprops.linestyle': '-',\n          'boxplot.whiskerprops.linewidth': 1.0,\n          'boxplot.whiskers': 1.5,\n          'contour.algorithm': 'mpl2014',\n          'contour.corner_mask': True,\n          'contour.linewidth': None,\n          'contour.negative_linestyle': 'dashed',\n          'date.autoformatter.day': '%Y-%m-%d',\n          'date.autoformatter.hour': '%m-%d %H',\n          'date.autoformatter.microsecond': '%M:%S.%f',\n          'date.autoformatter.minute': '%d %H:%M',\n          'date.autoformatter.month': '%Y-%m',\n          'date.autoformatter.second': '%H:%M:%S',\n          'date.autoformatter.year': '%Y',\n          'date.converter': 'auto',\n          'date.epoch': '1970-01-01T00:00:00',\n          'date.interval_multiples': True,\n          'docstring.hardcopy': False,\n          'errorbar.capsize': 0.0,\n          'figure.autolayout': False,\n          'figure.constrained_layout.h_pad': 0.04167,\n          'figure.constrained_layout.hspace': 0.02,\n          'figure.constrained_layout.use': False,\n          'figure.constrained_layout.w_pad': 0.04167,\n          'figure.constrained_layout.wspace': 0.02,\n          'figure.dpi': 100.0,\n          'figure.edgecolor': 'white',\n          'figure.facecolor': 'white',\n          'figure.figsize': [6.4, 4.8],\n          'figure.frameon': True,\n          'figure.hooks': [],\n          'figure.labelsize': 'large',\n          'figure.labelweight': 'normal',\n          'figure.max_open_warning': 20,\n          'figure.raise_window': True,\n          'figure.subplot.bottom': 0.11,\n          'figure.subplot.hspace': 0.2,\n          'figure.subplot.left': 0.125,\n          'figure.subplot.right': 0.9,\n          'figure.subplot.top': 0.88,\n          'figure.subplot.wspace': 0.2,\n          'figure.titlesize': 'large',\n          'figure.titleweight': 'normal',\n          'font.cursive': ['Apple Chancery',\n                           'Textile',\n                           'Zapf Chancery',\n                           'Sand',\n                           'Script MT',\n                           'Felipa',\n                           'Comic Neue',\n                           'Comic Sans MS',\n                           'cursive'],\n          'font.family': ['sans-serif'],\n          'font.fantasy': ['Chicago',\n                           'Charcoal',\n                           'Impact',\n                           'Western',\n                           'xkcd script',\n                           'fantasy'],\n          'font.monospace': ['DejaVu Sans Mono',\n                             'Bitstream Vera Sans Mono',\n                             'Computer Modern Typewriter',\n                             'Andale Mono',\n                             'Nimbus Mono L',\n                             'Courier New',\n                             'Courier',\n                             'Fixed',\n                             'Terminal',\n                             'monospace'],\n          'font.sans-serif': ['DejaVu Sans',\n                              'Bitstream Vera Sans',\n                              'Computer Modern Sans Serif',\n                              'Lucida Grande',\n                              'Verdana',\n                              'Geneva',\n                              'Lucid',\n                              'Arial',\n                              'Helvetica',\n                              'Avant Garde',\n                              'sans-serif'],\n          'font.serif': ['DejaVu Serif',\n                         'Bitstream Vera Serif',\n                         'Computer Modern Roman',\n                         'New Century Schoolbook',\n                         'Century Schoolbook L',\n                         'Utopia',\n                         'ITC Bookman',\n                         'Bookman',\n                         'Nimbus Roman No9 L',\n                         'Times New Roman',\n                         'Times',\n                         'Palatino',\n                         'Charter',\n                         'serif'],\n          'font.size': 10.0,\n          'font.stretch': 'normal',\n          'font.style': 'normal',\n          'font.variant': 'normal',\n          'font.weight': 'normal',\n          'grid.alpha': 1.0,\n          'grid.color': '#b0b0b0',\n          'grid.linestyle': '-',\n          'grid.linewidth': 0.8,\n          'hatch.color': 'black',\n          'hatch.linewidth': 1.0,\n          'hist.bins': 10,\n          'image.aspect': 'equal',\n          'image.cmap': 'viridis',\n          'image.composite_image': True,\n          'image.interpolation': 'auto',\n          'image.interpolation_stage': 'auto',\n          'image.lut': 256,\n          'image.origin': 'upper',\n          'image.resample': True,\n          'interactive': False,\n          'keymap.back': ['left', 'c', 'backspace', 'MouseButton.BACK'],\n          'keymap.copy': ['ctrl+c', 'cmd+c'],\n          'keymap.forward': ['right', 'v', 'MouseButton.FORWARD'],\n          'keymap.fullscreen': ['f', 'ctrl+f'],\n          'keymap.grid': ['g'],\n          'keymap.grid_minor': ['G'],\n          'keymap.help': ['f1'],\n          'keymap.home': ['h', 'r', 'home'],\n          'keymap.pan': ['p'],\n          'keymap.quit': ['ctrl+w', 'cmd+w', 'q'],\n          'keymap.quit_all': [],\n          'keymap.save': ['s', 'ctrl+s'],\n          'keymap.xscale': ['k', 'L'],\n          'keymap.yscale': ['l'],\n          'keymap.zoom': ['o'],\n          'legend.borderaxespad': 0.5,\n          'legend.borderpad': 0.4,\n          'legend.columnspacing': 2.0,\n          'legend.edgecolor': '0.8',\n          'legend.facecolor': 'inherit',\n          'legend.fancybox': True,\n          'legend.fontsize': 'medium',\n          'legend.framealpha': 0.8,\n          'legend.frameon': True,\n          'legend.handleheight': 0.7,\n          'legend.handlelength': 2.0,\n          'legend.handletextpad': 0.8,\n          'legend.labelcolor': 'None',\n          'legend.labelspacing': 0.5,\n          'legend.loc': 'best',\n          'legend.markerscale': 1.0,\n          'legend.numpoints': 1,\n          'legend.scatterpoints': 1,\n          'legend.shadow': False,\n          'legend.title_fontsize': None,\n          'lines.antialiased': True,\n          'lines.color': 'C0',\n          'lines.dash_capstyle': &lt;CapStyle.butt: 'butt'&gt;,\n          'lines.dash_joinstyle': &lt;JoinStyle.round: 'round'&gt;,\n          'lines.dashdot_pattern': [6.4, 1.6, 1.0, 1.6],\n          'lines.dashed_pattern': [3.7, 1.6],\n          'lines.dotted_pattern': [1.0, 1.65],\n          'lines.linestyle': '-',\n          'lines.linewidth': 1.5,\n          'lines.marker': 'None',\n          'lines.markeredgecolor': 'auto',\n          'lines.markeredgewidth': 1.0,\n          'lines.markerfacecolor': 'auto',\n          'lines.markersize': 6.0,\n          'lines.scale_dashes': True,\n          'lines.solid_capstyle': &lt;CapStyle.projecting: 'projecting'&gt;,\n          'lines.solid_joinstyle': &lt;JoinStyle.round: 'round'&gt;,\n          'macosx.window_mode': 'system',\n          'markers.fillstyle': 'full',\n          'mathtext.bf': 'sans:bold',\n          'mathtext.bfit': 'sans:italic:bold',\n          'mathtext.cal': 'cursive',\n          'mathtext.default': 'it',\n          'mathtext.fallback': 'cm',\n          'mathtext.fontset': 'dejavusans',\n          'mathtext.it': 'sans:italic',\n          'mathtext.rm': 'sans',\n          'mathtext.sf': 'sans',\n          'mathtext.tt': 'monospace',\n          'patch.antialiased': True,\n          'patch.edgecolor': 'black',\n          'patch.facecolor': 'C0',\n          'patch.force_edgecolor': False,\n          'patch.linewidth': 1.0,\n          'path.effects': [],\n          'path.simplify': True,\n          'path.simplify_threshold': 0.111111111111,\n          'path.sketch': None,\n          'path.snap': True,\n          'pcolor.shading': 'auto',\n          'pcolormesh.snap': True,\n          'pdf.compression': 6,\n          'pdf.fonttype': 3,\n          'pdf.inheritcolor': False,\n          'pdf.use14corefonts': False,\n          'pgf.preamble': '',\n          'pgf.rcfonts': True,\n          'pgf.texsystem': 'xelatex',\n          'polaraxes.grid': True,\n          'ps.distiller.res': 6000,\n          'ps.fonttype': 3,\n          'ps.papersize': 'letter',\n          'ps.useafm': False,\n          'ps.usedistiller': None,\n          'savefig.bbox': None,\n          'savefig.directory': '~',\n          'savefig.dpi': 'figure',\n          'savefig.edgecolor': 'auto',\n          'savefig.facecolor': 'auto',\n          'savefig.format': 'png',\n          'savefig.orientation': 'portrait',\n          'savefig.pad_inches': 0.1,\n          'savefig.transparent': False,\n          'scatter.edgecolors': 'face',\n          'scatter.marker': 'o',\n          'svg.fonttype': 'path',\n          'svg.hashsalt': None,\n          'svg.id': None,\n          'svg.image_inline': True,\n          'text.antialiased': True,\n          'text.color': 'black',\n          'text.hinting': 'force_autohint',\n          'text.hinting_factor': 8,\n          'text.kerning_factor': 0,\n          'text.latex.preamble': '',\n          'text.parse_math': True,\n          'text.usetex': False,\n          'timezone': 'UTC',\n          'tk.window_focus': False,\n          'toolbar': 'toolbar2',\n          'webagg.address': '127.0.0.1',\n          'webagg.open_in_browser': True,\n          'webagg.port': 8988,\n          'webagg.port_retries': 50,\n          'xaxis.labellocation': 'center',\n          'xtick.alignment': 'center',\n          'xtick.bottom': True,\n          'xtick.color': 'black',\n          'xtick.direction': 'out',\n          'xtick.labelbottom': True,\n          'xtick.labelcolor': 'inherit',\n          'xtick.labelsize': 'medium',\n          'xtick.labeltop': False,\n          'xtick.major.bottom': True,\n          'xtick.major.pad': 3.5,\n          'xtick.major.size': 3.5,\n          'xtick.major.top': True,\n          'xtick.major.width': 0.8,\n          'xtick.minor.bottom': True,\n          'xtick.minor.ndivs': 'auto',\n          'xtick.minor.pad': 3.4,\n          'xtick.minor.size': 2.0,\n          'xtick.minor.top': True,\n          'xtick.minor.visible': False,\n          'xtick.minor.width': 0.6,\n          'xtick.top': False,\n          'yaxis.labellocation': 'center',\n          'ytick.alignment': 'center_baseline',\n          'ytick.color': 'black',\n          'ytick.direction': 'out',\n          'ytick.labelcolor': 'inherit',\n          'ytick.labelleft': True,\n          'ytick.labelright': False,\n          'ytick.labelsize': 'medium',\n          'ytick.left': True,\n          'ytick.major.left': True,\n          'ytick.major.pad': 3.5,\n          'ytick.major.right': True,\n          'ytick.major.size': 3.5,\n          'ytick.major.width': 0.8,\n          'ytick.minor.left': True,\n          'ytick.minor.ndivs': 'auto',\n          'ytick.minor.pad': 3.4,\n          'ytick.minor.right': True,\n          'ytick.minor.size': 2.0,\n          'ytick.minor.visible': False,\n          'ytick.minor.width': 0.6,\n          'ytick.right': False})\n\"\"\"\n</code></pre> \u4f8b<pre><code># \u6548\u679c\u540c\u4e0a\nmpl.rcParams[\"lines.linewidth\"] = 5\nmpl.rcParams[\"lines.linestyle\"] = \"--\"\n\n# new_params = {\"lines.linewidth\": 5,\n#               \"lines.linestyle\": \"--\"}\n# mpl.rcParams.update(new_params)\n\n...\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#rc_1","title":"rc\u51fd\u6570","text":"<p>matplotlib \u2014 Matplotlib 3.10.1 documentation</p> <p>\u901a\u8fc7\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u53ef\u4ee5\u4e00\u6b21\u6027\u4fee\u6539\u540c\u4e00\u7ec4\u4e2d\u7684\u591a\u4e2a\u8bbe\u7f6e</p> rc\u51fd\u6570<pre><code># \u6548\u679c\u540c\u4e0a\nmpl.rc(group='lines', linewidth=5, linestyle='--')\n\n# new_params = {\"linewidth\": 5,\n#               \"linestyle\": \"--\"}\n# mpl.rc(group='lines', **new_params)\n\n...\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#rc_file","title":"rc_file\u51fd\u6570","text":"<p>matplotlib \u2014 Matplotlib 3.10.1 documentation</p> <p>\u4ece\u4e00\u4e2a\u6587\u4ef6\u4e2d\u66f4\u65b0\u8bbe\u7f6e</p> <p></p> rc_file\u51fd\u6570<pre><code>mpl.rc_file(\"E:/matplotlibrc\")\n  ...\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#rc_context","title":"rc_context\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668","text":"<p>Customizing Matplotlib with style sheets and rcParams \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib \u2014 Matplotlib 3.10.1 documentation</p> <p>\u4fee\u6539\u4ec5\u5728\u5c40\u90e8\u6709\u6548\uff0c\u4e5f\u53ef\u4ee5\u7528\u4f5c\u88c5\u9970\u5668\u6765\u4fee\u6539\u51fd\u6570\u5185\u7684\u7ed8\u56fe\u8bbe\u7f6e\u3002</p> \u4e00\u822c\u4fee\u6539\u5b57\u5178\u53c2\u6570\u6587\u4ef6\u53c2\u6570\u51fd\u6570\u88c5\u9970\u5668 \u4e00\u822c\u4fee\u6539<pre><code>with mpl.rc_context(rc=None, fname=None):\n    mpl.rcParams[\"lines.linewidth\"] = 5\n    mpl.rcParams[\"lines.linestyle\"] = \"--\"\n    # mpl.rc(group='lines', linewidth=5, linestyle='--')\n    # mpl.rc_file(\"E:/matplotlibrc\")\n    ...\n</code></pre> \u5b57\u5178\u53c2\u6570<pre><code>new_params = {\"lines.linewidth\": 5,\n              \"lines.linestyle\": \"--\"}\n\nwith mpl.rc_context(rc=new_params, fname=None):\n    ...\n</code></pre> \u6587\u4ef6\u53c2\u6570<pre><code>with mpl.rc_context(rc=None, fname=\"E:/matplotlibrc\"):\n    ...\n</code></pre> \u51fd\u6570\u88c5\u9970\u5668<pre><code>new_params = {\"lines.linewidth\": 5,\n              \"lines.linestyle\": \"--\"}\n\n@mpl.rc_context(rc=new_params, fname=None)\ndef plotting_function():\n  ...\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#style-sheets","title":"\u6837\u5f0f\u8868\uff08Style Sheets\uff09","text":"<p>Customizing Matplotlib with style sheets and rcParams \u2014 Matplotlib 3.10.1 documentation</p> <p>Style sheets reference \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.style \u2014 Matplotlib 3.10.1 documentation</p> <p>\u53e6\u4e00\u79cd\u6539\u53d8\u56fe\u5f62\u89c6\u89c9\u5916\u89c2\u7684\u65b9\u6cd5\u662f\u5c06 rcParams \u8bbe\u7f6e\u5728\u4e00\u4e2a\u6240\u8c13\u7684\u6837\u5f0f\u8868\u4e2d\uff0c\u5e76\u901a\u8fc7 <code>mpl.style.use</code>\u6216<code>plt.style.use</code> \u5bfc\u5165\u8be5\u6837\u5f0f\u8868\u3002\u8fd9\u6837\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u66f4\u6539\u5bfc\u5165\u7684\u6837\u5f0f\u8868\u6765\u8f7b\u677e\u5730\u5728\u4e0d\u540c\u7684\u6837\u5f0f\u4e4b\u95f4\u5207\u6362\u3002\u6837\u5f0f\u8868\u770b\u8d77\u6765\u4e0e matplotlibrc \u6587\u4ef6\u76f8\u540c\uff0c\u4f46\u5728\u6837\u5f0f\u8868\u4e2d\uff0c\u53ea\u80fd\u8bbe\u7f6e\u4e0e\u56fe\u5f62\u5b9e\u9645\u6837\u5f0f\u76f8\u5173\u7684 rcParams\u3002\u5176\u4ed6 rcParams\uff0c\u5982backend\uff0c\u5c06\u88ab\u5ffd\u7565\uff0c\u800c<code>matplotlibrc</code> \u6587\u4ef6\u652f\u6301\u6240\u6709 rcParams\u3002\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e4b\u95f4\u4f7f\u6837\u5f0f\u8868\u5177\u6709\u53ef\u79fb\u690d\u6027\uff0c\u800c\u65e0\u9700\u62c5\u5fc3\u53ef\u80fd\u5728\u53e6\u4e00\u53f0\u673a\u5668\u4e0a\u5b89\u88c5\u6216\u6ca1\u6709\u5b89\u88c5\u7684\u4f9d\u8d56\u9879\u3002\u6837\u5f0f\u8868\u4e2d\u7684\u8bbe\u7f6e\u4f18\u5148\u4e8e <code>matplotlibrc</code> \u6587\u4ef6\u4e2d\u7684\u8bbe\u7f6e\u3002</p> <p>\u5185\u7f6e\u7684\u6837\u5f0f\u8868\u6587\u4ef6\u5b58\u653e\u5728\"python\u5b89\u88c5\u76ee\u5f55\\Lib\\site-packages\\matplotlib\\mpl-data\\stylelib\"\u76ee\u5f55\u4e0b\uff0c\u4ee5<code>.mplstyle</code>\u4e3a\u540e\u7f00\u3002</p> <p></p> <p></p> \u6837\u5f0f\u8868\uff08Style Sheets\uff09<pre><code>mpl.style.available\n\"\"\"\n['Solarize_Light2', '_classic_test_patch', '_mpl-gallery', '_mpl-gallery-nogrid', 'bmh',\n 'classic', 'dark_background', 'fast', 'fivethirtyeight', 'ggplot',\n 'grayscale', 'petroff10', 'seaborn-v0_8', 'seaborn-v0_8-bright', 'seaborn-v0_8-colorblind', \n 'seaborn-v0_8-dark', 'seaborn-v0_8-dark-palette', 'seaborn-v0_8-darkgrid', 'seaborn-v0_8-deep', \n 'seaborn-v0_8-muted', 'seaborn-v0_8-notebook', 'seaborn-v0_8-paper', 'seaborn-v0_8-pastel', \n 'seaborn-v0_8-poster', 'seaborn-v0_8-talk', 'seaborn-v0_8-ticks', 'seaborn-v0_8-white', \n 'seaborn-v0_8-whitegrid','tableau-colorblind10']\n\"\"\"\n\nmpl.style.library\n\"\"\"\n{'bmh': RcParams({'axes.edgecolor': '#bcbcbc',\n           'axes.facecolor': '#eeeeee',\n           'axes.grid': True,\n           'axes.labelsize': 'large',\n           'axes.prop_cycle': cycler('color', ['#348ABD', '#A60628', '#7A68A6', '#467821', '#D55E00', '#CC79A7', '#56B4E9', '#009E73', '#F0E442', '#0072B2']),\n           'axes.titlesize': 'x-large',\n           'grid.color': '#b2b2b2',\n           'grid.linestyle': '--',\n           'grid.linewidth': 0.5,\n           'legend.fancybox': True,\n           'lines.linewidth': 2.0,\n           'mathtext.fontset': 'cm',\n           'patch.antialiased': True,\n           'patch.edgecolor': '#eeeeee',\n           'patch.facecolor': 'blue',\n           'patch.linewidth': 0.5,\n           'text.hinting_factor': 8,\n           'xtick.direction': 'in',\n           'ytick.direction': 'in'}),\n 'classic': RcParams({'_internal.classic_mode': True,\n           'agg.path.chunksize': 0,\n           'animation.bitrate': -1,\n           'animation.codec': 'mpeg4',\n           'animation.convert_args': [],\n           'animation.convert_path': 'convert',\n           'animation.ffmpeg_args': [],\n           'animation.ffmpeg_path': 'ffmpeg',\n           'animation.frame_format': 'png',\n           'animation.html': 'none',\n           'animation.writer': 'ffmpeg',\n           'axes.autolimit_mode': 'round_numbers',\n           'axes.axisbelow': False,\n           'axes.edgecolor': 'k',\n           'axes.facecolor': 'w',\n           'axes.formatter.limits': [-7, 7],\n           'axes.formatter.offset_threshold': 2,\n           'axes.formatter.use_locale': False,\n           'axes.formatter.use_mathtext': False,\n           'axes.formatter.useoffset': True,\n           'axes.grid': False,\n           'axes.grid.axis': 'both',\n           'axes.grid.which': 'major',\n           'axes.labelcolor': 'k',\n           'axes.labelpad': 5.0,\n           'axes.labelsize': 'medium',\n           'axes.labelweight': 'normal',\n           'axes.linewidth': 1.0,\n           'axes.prop_cycle': cycler('color', ['b', 'g', 'r', 'c', 'm', 'y', 'k']),\n           'axes.spines.bottom': True,\n           'axes.spines.left': True,\n           'axes.spines.right': True,\n           'axes.spines.top': True,\n           'axes.titlepad': 5.0,\n           'axes.titlesize': 'large',\n           'axes.titleweight': 'normal',\n           'axes.titley': 1.0,\n           'axes.unicode_minus': True,\n           'axes.xmargin': 0.0,\n           'axes.ymargin': 0.0,\n           'axes3d.automargin': False,\n           'axes3d.grid': True,\n           'boxplot.bootstrap': None,\n           'boxplot.boxprops.color': 'b',\n           'boxplot.boxprops.linestyle': '-',\n           'boxplot.boxprops.linewidth': 1.0,\n           'boxplot.capprops.color': 'k',\n           'boxplot.capprops.linestyle': '-',\n           'boxplot.capprops.linewidth': 1.0,\n           'boxplot.flierprops.color': 'b',\n           'boxplot.flierprops.linestyle': 'none',\n           'boxplot.flierprops.linewidth': 1.0,\n           'boxplot.flierprops.marker': '+',\n           'boxplot.flierprops.markeredgecolor': 'k',\n           'boxplot.flierprops.markerfacecolor': 'auto',\n           'boxplot.flierprops.markersize': 6.0,\n           'boxplot.meanline': False,\n           'boxplot.meanprops.color': 'r',\n           'boxplot.meanprops.linestyle': '-',\n           'boxplot.meanprops.linewidth': 1.0,\n           'boxplot.meanprops.marker': 's',\n           'boxplot.meanprops.markeredgecolor': 'k',\n           'boxplot.meanprops.markerfacecolor': 'r',\n           'boxplot.meanprops.markersize': 6.0,\n           'boxplot.medianprops.color': 'r',\n           'boxplot.medianprops.linestyle': '-',\n           'boxplot.medianprops.linewidth': 1.0,\n           'boxplot.notch': False,\n           'boxplot.patchartist': False,\n           'boxplot.showbox': True,\n           'boxplot.showcaps': True,\n           'boxplot.showfliers': True,\n           'boxplot.showmeans': False,\n           'boxplot.whiskerprops.color': 'b',\n           'boxplot.whiskerprops.linestyle': '--',\n           'boxplot.whiskerprops.linewidth': 1.0,\n           'boxplot.whiskers': 1.5,\n           'contour.corner_mask': True,\n           'contour.negative_linestyle': 'dashed',\n           'date.autoformatter.day': '%b %d %Y',\n           'date.autoformatter.hour': '%H:%M:%S',\n           'date.autoformatter.microsecond': '%H:%M:%S.%f',\n           'date.autoformatter.minute': '%H:%M:%S.%f',\n           'date.autoformatter.month': '%b %Y',\n           'date.autoformatter.second': '%H:%M:%S.%f',\n           'date.autoformatter.year': '%Y',\n           'date.converter': 'auto',\n           'errorbar.capsize': 3.0,\n           'figure.autolayout': False,\n           'figure.dpi': 80.0,\n           'figure.edgecolor': 'w',\n           'figure.facecolor': '0.75',\n           'figure.figsize': [8.0, 6.0],\n           'figure.frameon': True,\n           'figure.labelsize': 'medium',\n           'figure.labelweight': 'normal',\n           'figure.subplot.bottom': 0.1,\n           'figure.subplot.hspace': 0.2,\n           'figure.subplot.left': 0.125,\n           'figure.subplot.right': 0.9,\n           'figure.subplot.top': 0.9,\n           'figure.subplot.wspace': 0.2,\n           'figure.titlesize': 'medium',\n           'figure.titleweight': 'normal',\n           'font.cursive': ['Apple Chancery',\n                            'Textile',\n                            'Zapf Chancery',\n                            'Sand',\n                            'Script MT',\n                            'Felipa',\n                            'cursive'],\n           'font.family': ['sans-serif'],\n           'font.fantasy': ['Comic Sans MS',\n                            'Chicago',\n                            'Charcoal',\n                            'ImpactWestern',\n                            'xkcd script',\n                            'fantasy'],\n           'font.monospace': ['DejaVu Sans Mono',\n                              'Andale Mono',\n                              'Nimbus Mono L',\n                              'Courier New',\n                              'Courier',\n                              'Fixed',\n                              'Terminal',\n                              'monospace'],\n           'font.sans-serif': ['DejaVu Sans',\n                               'Lucida Grande',\n                               'Verdana',\n                               'Geneva',\n                               'Lucid',\n                               'Arial',\n                               'Helvetica',\n                               'Avant Garde',\n                               'sans-serif'],\n           'font.serif': ['DejaVu Serif',\n                          'New Century Schoolbook',\n                          'Century Schoolbook L',\n                          'Utopia',\n                          'ITC Bookman',\n                          'Bookman',\n                          'Nimbus Roman No9 L',\n                          'Times New Roman',\n                          'Times',\n                          'Palatino',\n                          'Charter',\n                          'serif'],\n           'font.size': 12.0,\n           'font.stretch': 'normal',\n           'font.style': 'normal',\n           'font.variant': 'normal',\n           'font.weight': 'normal',\n           'grid.alpha': 1.0,\n           'grid.color': 'k',\n           'grid.linestyle': ':',\n           'grid.linewidth': 0.5,\n           'hatch.color': 'k',\n           'hatch.linewidth': 1.0,\n           'hist.bins': 10,\n           'image.aspect': 'equal',\n           'image.cmap': 'jet',\n           'image.composite_image': True,\n           'image.interpolation': 'bilinear',\n           'image.lut': 256,\n           'image.origin': 'upper',\n           'image.resample': False,\n           'keymap.back': ['left', 'c', 'backspace'],\n           'keymap.forward': ['right', 'v'],\n           'keymap.fullscreen': ['f', 'ctrl+f'],\n           'keymap.grid': ['g'],\n           'keymap.home': ['h', 'r', 'home'],\n           'keymap.pan': ['p'],\n           'keymap.quit': ['ctrl+w', 'cmd+w'],\n           'keymap.save': ['s', 'ctrl+s'],\n           'keymap.xscale': ['k', 'L'],\n           'keymap.yscale': ['l'],\n           'keymap.zoom': ['o'],\n           'legend.borderaxespad': 0.5,\n           'legend.borderpad': 0.4,\n           'legend.columnspacing': 2.0,\n           'legend.edgecolor': 'inherit',\n           'legend.facecolor': 'inherit',\n           'legend.fancybox': False,\n           'legend.fontsize': 'large',\n           'legend.framealpha': None,\n           'legend.frameon': True,\n           'legend.handleheight': 0.7,\n           'legend.handlelength': 2.0,\n           'legend.handletextpad': 0.8,\n           'legend.labelspacing': 0.5,\n           'legend.loc': 'upper right',\n           'legend.markerscale': 1.0,\n           'legend.numpoints': 2,\n           'legend.scatterpoints': 3,\n           'legend.shadow': False,\n           'lines.antialiased': True,\n           'lines.color': 'b',\n           'lines.dash_capstyle': &lt;CapStyle.butt: 'butt'&gt;,\n           'lines.dash_joinstyle': &lt;JoinStyle.round: 'round'&gt;,\n           'lines.dashdot_pattern': [3.0, 5.0, 1.0, 5.0],\n           'lines.dashed_pattern': [6.0, 6.0],\n           'lines.dotted_pattern': [1.0, 3.0],\n           'lines.linestyle': '-',\n           'lines.linewidth': 1.0,\n           'lines.marker': 'None',\n           'lines.markeredgecolor': 'auto',\n           'lines.markeredgewidth': 0.5,\n           'lines.markerfacecolor': 'auto',\n           'lines.markersize': 6.0,\n           'lines.scale_dashes': False,\n           'lines.solid_capstyle': &lt;CapStyle.projecting: 'projecting'&gt;,\n           'lines.solid_joinstyle': &lt;JoinStyle.round: 'round'&gt;,\n           'markers.fillstyle': 'full',\n           'mathtext.bf': 'serif:bold',\n           'mathtext.cal': 'cursive',\n           'mathtext.default': 'it',\n           'mathtext.fallback': 'cm',\n           'mathtext.fontset': 'cm',\n           'mathtext.it': 'serif:italic',\n           'mathtext.rm': 'serif',\n           'mathtext.sf': 'sans\\\\-serif',\n           'mathtext.tt': 'monospace',\n           'patch.antialiased': True,\n           'patch.edgecolor': 'k',\n           'patch.facecolor': 'b',\n           'patch.force_edgecolor': True,\n           'patch.linewidth': 1.0,\n           'path.simplify': True,\n           'path.simplify_threshold': 0.1111111111111111,\n           'path.sketch': None,\n           'path.snap': True,\n           'pdf.compression': 6,\n           'pdf.fonttype': 3,\n           'pdf.inheritcolor': False,\n           'pdf.use14corefonts': False,\n           'pgf.preamble': '',\n           'pgf.rcfonts': True,\n           'pgf.texsystem': 'xelatex',\n           'polaraxes.grid': True,\n           'ps.distiller.res': 6000,\n           'ps.fonttype': 3,\n           'ps.papersize': 'letter',\n           'ps.useafm': False,\n           'ps.usedistiller': None,\n           'savefig.bbox': None,\n           'savefig.dpi': 100.0,\n           'savefig.edgecolor': 'w',\n           'savefig.facecolor': 'w',\n           'savefig.format': 'png',\n           'savefig.orientation': 'portrait',\n           'savefig.pad_inches': 0.1,\n           'savefig.transparent': False,\n           'scatter.marker': 'o',\n           'svg.fonttype': 'path',\n           'svg.image_inline': True,\n           'text.antialiased': True,\n           'text.color': 'k',\n           'text.hinting': 'auto',\n           'text.hinting_factor': 8,\n           'text.latex.preamble': '',\n           'text.usetex': False,\n           'xtick.alignment': 'center',\n           'xtick.bottom': True,\n           'xtick.color': 'k',\n           'xtick.direction': 'in',\n           'xtick.labelsize': 'medium',\n           'xtick.major.bottom': True,\n           'xtick.major.pad': 4.0,\n           'xtick.major.size': 4.0,\n           'xtick.major.top': True,\n           'xtick.major.width': 0.5,\n           'xtick.minor.bottom': True,\n           'xtick.minor.pad': 4.0,\n           'xtick.minor.size': 2.0,\n           'xtick.minor.top': True,\n           'xtick.minor.visible': False,\n           'xtick.minor.width': 0.5,\n           'xtick.top': True,\n           'ytick.alignment': 'center',\n           'ytick.color': 'k',\n           'ytick.direction': 'in',\n           'ytick.labelsize': 'medium',\n           'ytick.left': True,\n           'ytick.major.left': True,\n           'ytick.major.pad': 4.0,\n           'ytick.major.right': True,\n           'ytick.major.size': 4.0,\n           'ytick.major.width': 0.5,\n           'ytick.minor.left': True,\n           'ytick.minor.pad': 4.0,\n           'ytick.minor.right': True,\n           'ytick.minor.size': 2.0,\n           'ytick.minor.visible': False,\n           'ytick.minor.width': 0.5,\n           'ytick.right': True}),\n 'dark_background': RcParams({'axes.edgecolor': 'white',\n           'axes.facecolor': 'black',\n           'axes.labelcolor': 'white',\n           'axes.prop_cycle': cycler('color', ['#8dd3c7', '#feffb3', '#bfbbd9', '#fa8174', '#81b1d2', '#fdb462', '#b3de69', '#bc82bd', '#ccebc4', '#ffed6f']),\n           'boxplot.boxprops.color': 'white',\n           'boxplot.capprops.color': 'white',\n           'boxplot.flierprops.color': 'white',\n           'boxplot.flierprops.markeredgecolor': 'white',\n           'boxplot.whiskerprops.color': 'white',\n           'figure.edgecolor': 'black',\n           'figure.facecolor': 'black',\n           'grid.color': 'white',\n           'lines.color': 'white',\n           'patch.edgecolor': 'white',\n           'text.color': 'white',\n           'xtick.color': 'white',\n           'ytick.color': 'white'}),\n 'fast': RcParams({'agg.path.chunksize': 10000,\n           'path.simplify': True,\n           'path.simplify_threshold': 1.0}),\n 'fivethirtyeight': RcParams({'axes.axisbelow': True,\n           'axes.edgecolor': '#f0f0f0',\n           'axes.facecolor': '#f0f0f0',\n           'axes.grid': True,\n           'axes.labelsize': 'large',\n           'axes.linewidth': 3.0,\n           'axes.prop_cycle': cycler('color', ['#008fd5', '#fc4f30', '#e5ae38', '#6d904f', '#8b8b8b', '#810f7c']),\n           'axes.titlesize': 'x-large',\n           'figure.facecolor': '#f0f0f0',\n           'figure.subplot.bottom': 0.07,\n           'figure.subplot.left': 0.08,\n           'figure.subplot.right': 0.95,\n           'font.size': 14.0,\n           'grid.color': '#cbcbcb',\n           'grid.linestyle': '-',\n           'grid.linewidth': 1.0,\n           'legend.fancybox': True,\n           'lines.linewidth': 4.0,\n           'lines.solid_capstyle': &lt;CapStyle.butt: 'butt'&gt;,\n           'patch.edgecolor': '#f0f0f0',\n           'patch.linewidth': 0.5,\n           'svg.fonttype': 'path',\n           'xtick.major.size': 0.0,\n           'xtick.minor.size': 0.0,\n           'ytick.major.size': 0.0,\n           'ytick.minor.size': 0.0}),\n 'ggplot': RcParams({'axes.axisbelow': True,\n           'axes.edgecolor': 'white',\n           'axes.facecolor': '#E5E5E5',\n           'axes.grid': True,\n           'axes.labelcolor': '#555555',\n           'axes.labelsize': 'large',\n           'axes.linewidth': 1.0,\n           'axes.prop_cycle': cycler('color', ['#E24A33', '#348ABD', '#988ED5', '#777777', '#FBC15E', '#8EBA42', '#FFB5B8']),\n           'axes.titlesize': 'x-large',\n           'figure.edgecolor': '0.50',\n           'figure.facecolor': 'white',\n           'font.size': 10.0,\n           'grid.color': 'white',\n           'grid.linestyle': '-',\n           'patch.antialiased': True,\n           'patch.edgecolor': '#EEEEEE',\n           'patch.facecolor': '#348ABD',\n           'patch.linewidth': 0.5,\n           'xtick.color': '#555555',\n           'xtick.direction': 'out',\n           'ytick.color': '#555555',\n           'ytick.direction': 'out'}),\n 'grayscale': RcParams({'axes.edgecolor': 'black',\n           'axes.facecolor': 'white',\n           'axes.labelcolor': 'black',\n           'axes.prop_cycle': cycler('color', ['0.00', '0.40', '0.60', '0.70']),\n           'figure.edgecolor': 'white',\n           'figure.facecolor': '0.75',\n           'grid.color': 'black',\n           'image.cmap': 'gray',\n           'lines.color': 'black',\n           'patch.edgecolor': 'black',\n           'patch.facecolor': 'gray',\n           'savefig.edgecolor': 'white',\n           'savefig.facecolor': 'white',\n           'text.color': 'black',\n           'xtick.color': 'black',\n           'ytick.color': 'black'}),\n 'petroff10': RcParams({'axes.prop_cycle': cycler('color', ['#3f90da', '#ffa90e', '#bd1f01', '#94a4a2', '#832db6', '#a96b59', '#e76300', '#b9ac70', '#717581', '#92dadd']),\n           'patch.facecolor': '#3f90da'}),\n 'seaborn-v0_8-bright': RcParams({'axes.prop_cycle': cycler('color', ['#003FFF', '#03ED3A', '#E8000B', '#8A2BE2', '#FFC400', '#00D7FF']),\n           'patch.facecolor': '#003FFF'}),\n 'seaborn-v0_8-colorblind': RcParams({'axes.prop_cycle': cycler('color', ['#0072B2', '#009E73', '#D55E00', '#CC79A7', '#F0E442', '#56B4E9']),\n           'patch.facecolor': '#0072B2'}),\n 'seaborn-v0_8-dark-palette': RcParams({'axes.prop_cycle': cycler('color', ['#001C7F', '#017517', '#8C0900', '#7600A1', '#B8860B', '#006374']),\n           'patch.facecolor': '#001C7F'}),\n 'seaborn-v0_8-dark': RcParams({'axes.axisbelow': True,\n           'axes.edgecolor': 'white',\n           'axes.facecolor': '#EAEAF2',\n           'axes.grid': False,\n           'axes.labelcolor': '.15',\n           'axes.linewidth': 0.0,\n           'figure.facecolor': 'white',\n           'font.family': ['sans-serif'],\n           'font.sans-serif': ['Arial',\n                               'Liberation Sans',\n                               'DejaVu Sans',\n                               'Bitstream Vera Sans',\n                               'sans-serif'],\n           'grid.color': 'white',\n           'grid.linestyle': '-',\n           'image.cmap': 'Greys',\n           'legend.frameon': False,\n           'legend.numpoints': 1,\n           'legend.scatterpoints': 1,\n           'lines.solid_capstyle': &lt;CapStyle.round: 'round'&gt;,\n           'text.color': '.15',\n           'xtick.color': '.15',\n           'xtick.direction': 'out',\n           'xtick.major.size': 0.0,\n           'xtick.minor.size': 0.0,\n           'ytick.color': '.15',\n           'ytick.direction': 'out',\n           'ytick.major.size': 0.0,\n           'ytick.minor.size': 0.0}),\n 'seaborn-v0_8-darkgrid': RcParams({'axes.axisbelow': True,\n           'axes.edgecolor': 'white',\n           'axes.facecolor': '#EAEAF2',\n           'axes.grid': True,\n           'axes.labelcolor': '.15',\n           'axes.linewidth': 0.0,\n           'figure.facecolor': 'white',\n           'font.family': ['sans-serif'],\n           'font.sans-serif': ['Arial',\n                               'Liberation Sans',\n                               'DejaVu Sans',\n                               'Bitstream Vera Sans',\n                               'sans-serif'],\n           'grid.color': 'white',\n           'grid.linestyle': '-',\n           'image.cmap': 'Greys',\n           'legend.frameon': False,\n           'legend.numpoints': 1,\n           'legend.scatterpoints': 1,\n           'lines.solid_capstyle': &lt;CapStyle.round: 'round'&gt;,\n           'text.color': '.15',\n           'xtick.color': '.15',\n           'xtick.direction': 'out',\n           'xtick.major.size': 0.0,\n           'xtick.minor.size': 0.0,\n           'ytick.color': '.15',\n           'ytick.direction': 'out',\n           'ytick.major.size': 0.0,\n           'ytick.minor.size': 0.0}),\n 'seaborn-v0_8-deep': RcParams({'axes.prop_cycle': cycler('color', ['#4C72B0', '#55A868', '#C44E52', '#8172B2', '#CCB974', '#64B5CD']),\n           'patch.facecolor': '#4C72B0'}),\n 'seaborn-v0_8-muted': RcParams({'axes.prop_cycle': cycler('color', ['#4878CF', '#6ACC65', '#D65F5F', '#B47CC7', '#C4AD66', '#77BEDB']),\n           'patch.facecolor': '#4878CF'}),\n 'seaborn-v0_8-notebook': RcParams({'axes.labelsize': 11.0,\n           'axes.titlesize': 12.0,\n           'figure.figsize': [8.0, 5.5],\n           'grid.linewidth': 1.0,\n           'legend.fontsize': 10.0,\n           'lines.linewidth': 1.75,\n           'lines.markeredgewidth': 0.0,\n           'lines.markersize': 7.0,\n           'patch.linewidth': 0.3,\n           'xtick.labelsize': 10.0,\n           'xtick.major.pad': 7.0,\n           'xtick.major.width': 1.0,\n           'xtick.minor.width': 0.5,\n           'ytick.labelsize': 10.0,\n           'ytick.major.pad': 7.0,\n           'ytick.major.width': 1.0,\n           'ytick.minor.width': 0.5}),\n 'seaborn-v0_8-paper': RcParams({'axes.labelsize': 8.8,\n           'axes.titlesize': 9.6,\n           'figure.figsize': [6.4, 4.4],\n           'grid.linewidth': 0.8,\n           'legend.fontsize': 8.0,\n           'lines.linewidth': 1.4,\n           'lines.markeredgewidth': 0.0,\n           'lines.markersize': 5.6,\n           'patch.linewidth': 0.24,\n           'xtick.labelsize': 8.0,\n           'xtick.major.pad': 5.6,\n           'xtick.major.width': 0.8,\n           'xtick.minor.width': 0.4,\n           'ytick.labelsize': 8.0,\n           'ytick.major.pad': 5.6,\n           'ytick.major.width': 0.8,\n           'ytick.minor.width': 0.4}),\n 'seaborn-v0_8-pastel': RcParams({'axes.prop_cycle': cycler('color', ['#92C6FF', '#97F0AA', '#FF9F9A', '#D0BBFF', '#FFFEA3', '#B0E0E6']),\n           'patch.facecolor': '#92C6FF'}),\n 'seaborn-v0_8-poster': RcParams({'axes.labelsize': 17.6,\n           'axes.titlesize': 19.2,\n           'figure.figsize': [12.8, 8.8],\n           'grid.linewidth': 1.6,\n           'legend.fontsize': 16.0,\n           'lines.linewidth': 2.8,\n           'lines.markeredgewidth': 0.0,\n           'lines.markersize': 11.2,\n           'patch.linewidth': 0.48,\n           'xtick.labelsize': 16.0,\n           'xtick.major.pad': 11.2,\n           'xtick.major.width': 1.6,\n           'xtick.minor.width': 0.8,\n           'ytick.labelsize': 16.0,\n           'ytick.major.pad': 11.2,\n           'ytick.major.width': 1.6,\n           'ytick.minor.width': 0.8}),\n 'seaborn-v0_8-talk': RcParams({'axes.labelsize': 14.3,\n           'axes.titlesize': 15.6,\n           'figure.figsize': [10.4, 7.15],\n           'grid.linewidth': 1.3,\n           'legend.fontsize': 13.0,\n           'lines.linewidth': 2.275,\n           'lines.markeredgewidth': 0.0,\n           'lines.markersize': 9.1,\n           'patch.linewidth': 0.39,\n           'xtick.labelsize': 13.0,\n           'xtick.major.pad': 9.1,\n           'xtick.major.width': 1.3,\n           'xtick.minor.width': 0.65,\n           'ytick.labelsize': 13.0,\n           'ytick.major.pad': 9.1,\n           'ytick.major.width': 1.3,\n           'ytick.minor.width': 0.65}),\n 'seaborn-v0_8-ticks': RcParams({'axes.axisbelow': True,\n           'axes.edgecolor': '.15',\n           'axes.facecolor': 'white',\n           'axes.grid': False,\n           'axes.labelcolor': '.15',\n           'axes.linewidth': 1.25,\n           'figure.facecolor': 'white',\n           'font.family': ['sans-serif'],\n           'font.sans-serif': ['Arial',\n                               'Liberation Sans',\n                               'DejaVu Sans',\n                               'Bitstream Vera Sans',\n                               'sans-serif'],\n           'grid.color': '.8',\n           'grid.linestyle': '-',\n           'image.cmap': 'Greys',\n           'legend.frameon': False,\n           'legend.numpoints': 1,\n           'legend.scatterpoints': 1,\n           'lines.solid_capstyle': &lt;CapStyle.round: 'round'&gt;,\n           'text.color': '.15',\n           'xtick.color': '.15',\n           'xtick.direction': 'out',\n           'xtick.major.size': 6.0,\n           'xtick.minor.size': 3.0,\n           'ytick.color': '.15',\n           'ytick.direction': 'out',\n           'ytick.major.size': 6.0,\n           'ytick.minor.size': 3.0}),\n 'seaborn-v0_8-white': RcParams({'axes.axisbelow': True,\n           'axes.edgecolor': '.15',\n           'axes.facecolor': 'white',\n           'axes.grid': False,\n           'axes.labelcolor': '.15',\n           'axes.linewidth': 1.25,\n           'figure.facecolor': 'white',\n           'font.family': ['sans-serif'],\n           'font.sans-serif': ['Arial',\n                               'Liberation Sans',\n                               'DejaVu Sans',\n                               'Bitstream Vera Sans',\n                               'sans-serif'],\n           'grid.color': '.8',\n           'grid.linestyle': '-',\n           'image.cmap': 'Greys',\n           'legend.frameon': False,\n           'legend.numpoints': 1,\n           'legend.scatterpoints': 1,\n           'lines.solid_capstyle': &lt;CapStyle.round: 'round'&gt;,\n           'text.color': '.15',\n           'xtick.color': '.15',\n           'xtick.direction': 'out',\n           'xtick.major.size': 0.0,\n           'xtick.minor.size': 0.0,\n           'ytick.color': '.15',\n           'ytick.direction': 'out',\n           'ytick.major.size': 0.0,\n           'ytick.minor.size': 0.0}),\n 'seaborn-v0_8-whitegrid': RcParams({'axes.axisbelow': True,\n           'axes.edgecolor': '.8',\n           'axes.facecolor': 'white',\n           'axes.grid': True,\n           'axes.labelcolor': '.15',\n           'axes.linewidth': 1.0,\n           'figure.facecolor': 'white',\n           'font.family': ['sans-serif'],\n           'font.sans-serif': ['Arial',\n                               'Liberation Sans',\n                               'DejaVu Sans',\n                               'Bitstream Vera Sans',\n                               'sans-serif'],\n           'grid.color': '.8',\n           'grid.linestyle': '-',\n           'image.cmap': 'Greys',\n           'legend.frameon': False,\n           'legend.numpoints': 1,\n           'legend.scatterpoints': 1,\n           'lines.solid_capstyle': &lt;CapStyle.round: 'round'&gt;,\n           'text.color': '.15',\n           'xtick.color': '.15',\n           'xtick.direction': 'out',\n           'xtick.major.size': 0.0,\n           'xtick.minor.size': 0.0,\n           'ytick.color': '.15',\n           'ytick.direction': 'out',\n           'ytick.major.size': 0.0,\n           'ytick.minor.size': 0.0}),\n 'seaborn-v0_8': RcParams({'axes.axisbelow': True,\n           'axes.edgecolor': 'white',\n           'axes.facecolor': '#EAEAF2',\n           'axes.grid': True,\n           'axes.labelcolor': '.15',\n           'axes.labelsize': 11.0,\n           'axes.linewidth': 0.0,\n           'axes.prop_cycle': cycler('color', ['#4C72B0', '#55A868', '#C44E52', '#8172B2', '#CCB974', '#64B5CD']),\n           'axes.titlesize': 12.0,\n           'figure.facecolor': 'white',\n           'figure.figsize': [8.0, 5.5],\n           'font.family': ['sans-serif'],\n           'font.sans-serif': ['Arial',\n                               'Liberation Sans',\n                               'DejaVu Sans',\n                               'Bitstream Vera Sans',\n                               'sans-serif'],\n           'grid.color': 'white',\n           'grid.linestyle': '-',\n           'grid.linewidth': 1.0,\n           'image.cmap': 'Greys',\n           'legend.fontsize': 10.0,\n           'legend.frameon': False,\n           'legend.numpoints': 1,\n           'legend.scatterpoints': 1,\n           'lines.linewidth': 1.75,\n           'lines.markeredgewidth': 0.0,\n           'lines.markersize': 7.0,\n           'lines.solid_capstyle': &lt;CapStyle.round: 'round'&gt;,\n           'patch.facecolor': '#4C72B0',\n           'patch.linewidth': 0.3,\n           'text.color': '.15',\n           'xtick.color': '.15',\n           'xtick.direction': 'out',\n           'xtick.labelsize': 10.0,\n           'xtick.major.pad': 7.0,\n           'xtick.major.size': 0.0,\n           'xtick.major.width': 1.0,\n           'xtick.minor.size': 0.0,\n           'xtick.minor.width': 0.5,\n           'ytick.color': '.15',\n           'ytick.direction': 'out',\n           'ytick.labelsize': 10.0,\n           'ytick.major.pad': 7.0,\n           'ytick.major.size': 0.0,\n           'ytick.major.width': 1.0,\n           'ytick.minor.size': 0.0,\n           'ytick.minor.width': 0.5}),\n 'Solarize_Light2': RcParams({'axes.axisbelow': True,\n           'axes.edgecolor': '#eee8d5',\n           'axes.facecolor': '#eee8d5',\n           'axes.grid': True,\n           'axes.labelcolor': '#657b83',\n           'axes.labelsize': 12.0,\n           'axes.prop_cycle': cycler('color', ['#268BD2', '#2AA198', '#859900', '#B58900', '#CB4B16', '#DC322F', '#D33682', '#6C71C4']),\n           'axes.titlesize': 16.0,\n           'figure.facecolor': '#FDF6E3',\n           'grid.color': '#fdf6e3',\n           'grid.linestyle': '-',\n           'grid.linewidth': 1.0,\n           'lines.linewidth': 2.0,\n           'lines.solid_capstyle': &lt;CapStyle.butt: 'butt'&gt;,\n           'patch.antialiased': True,\n           'xtick.color': '#657b83',\n           'xtick.direction': 'out',\n           'ytick.color': '#657b83',\n           'ytick.direction': 'out'}),\n 'tableau-colorblind10': RcParams({'axes.prop_cycle': cycler('color', ['#006BA4', '#FF800E', '#ABABAB', '#595959', '#5F9ED1', '#C85200', '#898989', '#A2C8EC', '#FFBC79', '#CFCFCF']),\n           'patch.facecolor': '#006BA4'}),\n '_classic_test_patch': RcParams({'text.kerning_factor': 6, 'ytick.alignment': 'center_baseline'}),\n '_mpl-gallery-nogrid': RcParams({'axes.axisbelow': True,\n           'axes.grid': False,\n           'axes.prop_cycle': cycler('color', ['#1f77b4', '#82bbdb', '#ccdff1']),\n           'figure.figsize': [2.0, 2.0],\n           'figure.subplot.bottom': 0.01,\n           'figure.subplot.left': 0.01,\n           'figure.subplot.right': 0.99,\n           'figure.subplot.top': 0.99,\n           'image.cmap': 'Blues',\n           'xtick.major.size': 0.0,\n           'ytick.major.size': 0.0}),\n '_mpl-gallery': RcParams({'axes.axisbelow': True,\n           'axes.grid': True,\n           'axes.prop_cycle': cycler('color', ['#1f77b4', '#58a1cf', '#abd0e6']),\n           'figure.figsize': [2.0, 2.0],\n           'figure.subplot.bottom': 0.01,\n           'figure.subplot.left': 0.01,\n           'figure.subplot.right': 0.99,\n           'figure.subplot.top': 0.99,\n           'image.cmap': 'Blues',\n           'xtick.major.size': 0.0,\n           'ytick.major.size': 0.0})}\n\"\"\"\n\n# \u53ef\u901a\u8fc7\u73af\u5883\u53d8\u91cfMPLCONFIGDIR\u66f4\u6539\nmpl.get_configdir()\n\"\"\"\n'D:\\\\SoftWare\\\\python\\\\python3_12_8\\\\Lib\\\\site-packages\\\\matplotlib\\\\mpl-data'\n\"\"\"\n</code></pre> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>\u53ef\u4ee5\u901a\u8fc7<code>mpl.style.use</code>\u6216<code>plt.style.use</code>\u5bfc\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u6837\u5f0f\uff08\u4ee5\u5217\u8868\u5f62\u5f0f\u4f20\u5165\u591a\u4e2a\u6837\u5f0f\u8868\u65f6\uff0c\u540e\u4e00\u4e2a\u6837\u5f0f\u8868\u7684\u6837\u5f0f\u5c06\u4f1a\u8986\u76d6\u524d\u4e00\u4e2a\u6837\u5f0f\u8868\u4e2d\u5df2\u7ecf\u5b9a\u4e49\u7684\u6837\u5f0f\uff09\u3002\u5185\u7f6e\u7684\u6837\u5f0f\u8868\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u76f4\u63a5\u5bfc\u5165\u3002\u81ea\u5b9a\u4e49\u7684\u7684\u6837\u5f0f\u8868\u53ef\u4ee5\u901a\u8fc7\u6587\u4ef6\u8def\u5f84\u5bfc\u5165\u3002\u5f53\u628a\u81ea\u5b9a\u4e49\u6837\u5f0f\u8868\u653e\u5165<code>mpl.get_configdir()/stylelib</code>\u76ee\u5f55\u4e0b\u65f6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u8fdb\u884c\u5bfc\u5165\u3002\u6ce8\u610f\u540d\u79f0\u5c3d\u91cf\u4e0d\u8981\u4e0e\u5185\u7f6e\u6837\u5f0f\u8868\u540d\u79f0\u76f8\u540c\uff0c\u8fd9\u4f1a\u8986\u76d6\u5185\u7f6e\u6837\u5f0f\u8868\u3002\u540c\u6837\uff0c\u901a\u8fc7<code>mpl.style.context</code>\u6216<code>plt.style.context</code>\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u5b9e\u73b0\u5c40\u90e8\u4fee\u6539\u6837\u5f0f\u3002\u5bfc\u5165\u6837\u5f0f\u8868\u540e\u5c06\u4f1a\u66f4\u65b0<code>mpl.rcParams</code>\u5b57\u5178\uff0c\u6240\u4ee5\u6b64\u65f6\u518d\u66f4\u6539<code>mpl.rcParams</code>\u5c06\u662f\u5728\u8be5\u6837\u5f0f\u8868\u7684\u57fa\u7840\u4e0a\u7684\u66f4\u6539\u3002</p> \u6837\u5f0f\u8868\u5e94\u7528<pre><code>mpl.style.use('ggplot')\n...\n\nwith mpl.style.context('ggplot', after_reset=False):\n  ...\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#_1","title":"\u6062\u590d\u9ed8\u8ba4\u8bbe\u7f6e","text":"<ol> <li> <p><code>mpl.rc_file_defaults()</code></p> <p>matplotlib \u2014 Matplotlib 3.10.1 documentation</p> <p>\u6062\u590d\u7531 Matplotlib \u52a0\u8f7d\u7684\u539f\u59cb rc \u6587\u4ef6\u4e2d\u7684\u8bbe\u7f6e</p> </li> <li> <p><code>mpl.rcdefaults()</code></p> <p>matplotlib \u2014 Matplotlib 3.10.1 documentation</p> <p>\u6062\u590d Matplotlib \u5185\u90e8\u9ed8\u8ba4\u6837\u5f0f\u4e2d\u7684\u8bbe\u7f6e</p> </li> <li> <p><code>mpl.style.use('default')</code></p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#_2","title":"\u5e38\u7528\u8bbe\u7f6e","text":"\u5e38\u7528\u8bbe\u7f6e<pre><code>mpl.rcParams['font.sans-serif']=['SimHei']  # \u8bbe\u7f6e\u4e2d\u6587\u5b57\u4f53\nmpl.rcParams['axes.unicode_minus']=False    # \u6b63\u5e38\u663e\u793a\u8d1f\u53f7\n</code></pre> <p>Note</p> <ol> <li>SimHei\u4e2d\u6613\u9ed1\u4f53</li> <li>Kaiti\u4e2d\u6587\u6977\u4f53</li> <li>Lisu\u4e2d\u6587\u96b6\u4e66</li> <li>FangSong\u4e2d\u6587\u4eff\u5b8b</li> <li>YouYuan\u4e2d\u6587\u5e7c\u5706</li> <li>STSong\u534e\u6587\u5b8b\u4f53</li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#_3","title":"\u5c5e\u6027\u5faa\u73af\u7684\u5e94\u7528","text":"<p>cycler.cycler \u2014 cycler 0.12.1 documentation</p> <p>Styling with cycler \u2014 Matplotlib 3.10.1 documentation</p> <p>\u81ea\u5b9a\u4e49\u5c5e\u6027\u5faa\u73af\u8bbe\u7f6e\u53ef\u4ee5\u63a7\u5236\u5728\u4e00\u4e2aAxes\u4e2d\u591a\u7ec4\u7ed8\u56fe\u7684\u989c\u8272\u548c\u5176\u4ed6\u6837\u5f0f\u5c5e\u6027\u3002</p> <ol> <li> <p><code>mpl.rcParams[\"axes.prop_cycle\"]=cycle</code>\uff1a\u6240\u6709Axes</p> </li> <li> <p><code>Axes.set_prop_cycle(cycle)</code>\uff1a\u6307\u5b9aAxes</p> </li> </ol> <pre><code>from cycler import cycler\n\nx = np.linspace(1, 100, 100)\n\nfig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\nax.set_prop_cycle(cycle)\n\nax.plot(x, x)\nax.plot(x, 2*x)\nax.plot(x, 3*x)\nax.plot(x, 4*x)\n\nplt.show()\n</code></pre> \u9ed8\u8ba4\u5c5e\u6027\u5faa\u73af\u81ea\u5b9a\u4e49\u5c5e\u6027\u5faa\u73af1\u81ea\u5b9a\u4e49\u5c5e\u6027\u5faa\u73af2\u81ea\u5b9a\u4e49\u5c5e\u6027\u5faa\u73af3 \u9ed8\u8ba4\u5c5e\u6027\u5faa\u73af<pre><code>cycle = mpl.rcParams[\"axes.prop_cycle\"]\n\"\"\"\ncycler('color', ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'])\n\"\"\"\nfor i in cycle:\n  print(i)\n\"\"\"\n{'color': '#1f77b4'}\n{'color': '#ff7f0e'}\n{'color': '#2ca02c'}\n{'color': '#d62728'}\n{'color': '#9467bd'}\n{'color': '#8c564b'}\n{'color': '#e377c2'}\n{'color': '#7f7f7f'}\n{'color': '#bcbd22'}\n{'color': '#17becf'}\n\"\"\"\n</code></pre> <p></p> \u81ea\u5b9a\u4e49\u5c5e\u6027\u5faa\u73af1<pre><code>cycle = cycler(color=['b', 'g', 'r', 'c'], linestyle=['-', '--', '-.', ':'])\n\"\"\"\n(cycler('color', ['b', 'g', 'r', 'c']) + cycler('linestyle', ['-', '--', '-.', ':']))\n\"\"\"\nfor i in cycle:\n    print(i)\n\"\"\"\n{'color': 'b', 'linestyle': '-'}\n{'color': 'g', 'linestyle': '--'}\n{'color': 'r', 'linestyle': '-.'}\n{'color': 'c', 'linestyle': ':'}\n\"\"\"\n</code></pre> <p></p> \u81ea\u5b9a\u4e49\u5c5e\u6027\u5faa\u73af2<pre><code>cycle = cycler(color=['b', 'g', 'r', 'c']) + cycler(linestyle=['-', '--', '-.', ':'])\n\"\"\"\n(cycler('color', ['b', 'g', 'r', 'c']) + cycler('linestyle', ['-', '--', '-.', ':']))\n\"\"\"\nfor i in cycle:\n    print(i)\n\"\"\"\n{'color': 'b', 'linestyle': '-'}\n{'color': 'g', 'linestyle': '--'}\n{'color': 'r', 'linestyle': '-.'}\n{'color': 'c', 'linestyle': ':'}\n\"\"\"\n</code></pre> <p></p> \u81ea\u5b9a\u4e49\u5c5e\u6027\u5faa\u73af3<pre><code>cycle = cycler(color=['b', 'g', 'r', 'c']) * cycler(linestyle=['-', '--', '-.', ':'])\n\"\"\"\n(cycler('color', ['b', 'g', 'r', 'c']) * cycler('linestyle', ['-', '--', '-.', ':']))\n\"\"\"\nfor i in cycle:\n    print(i)\n\"\"\"\n{'color': 'b', 'linestyle': '-'}\n{'color': 'b', 'linestyle': '--'}\n{'color': 'b', 'linestyle': '-.'}\n{'color': 'b', 'linestyle': ':'}\n{'color': 'g', 'linestyle': '-'}\n{'color': 'g', 'linestyle': '--'}\n{'color': 'g', 'linestyle': '-.'}\n{'color': 'g', 'linestyle': ':'}\n{'color': 'r', 'linestyle': '-'}\n{'color': 'r', 'linestyle': '--'}\n{'color': 'r', 'linestyle': '-.'}\n{'color': 'r', 'linestyle': ':'}\n{'color': 'c', 'linestyle': '-'}\n{'color': 'c', 'linestyle': '--'}\n{'color': 'c', 'linestyle': '-.'}\n{'color': 'c', 'linestyle': ':'}\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#seaborn","title":"Seaborn","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#context","title":"\u6bd4\u4f8b\u5c3a\u5ea6\uff08Context\uff09","text":"<p>Controlling figure aesthetics \u2014 seaborn 0.13.2 documentation</p> <p>seanborn\u5185\u7f6e\u4e86\u56db\u5957context\u8bbe\u7f6e\uff0c\u5206\u522b\u4e3a paper, notebook(\u9ed8\u8ba4), talk, poster\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#plotting_context","title":"plotting_context","text":"<p>seaborn.plotting_context \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.plotting_context(context=None, font_scale=1, rc=None)</code></p> <p>\u83b7\u53d6context\u53c2\u6570\u6216\u4e0a\u4e0b\u6587\u7ba1\u7406context\u53c2\u6570\u3002</p> <ol> <li> <p>context\uff1a\u81ea\u5b9a\u4e49\u53c2\u6570\u5b57\u5178\u6216\u9884\u8bbe\u914d\u7f6e\u96c6\u7684\u540d\u79f0\u3002\u9ed8\u8ba4'notebook'\u3002</p> </li> <li> <p>font_scale\uff1a\u72ec\u7acb\u8bbe\u7f6e\u9884\u8bbe\u5b57\u4f53\u53c2\u6570\u7f29\u653e\u3002</p> </li> <li> <p>rc\uff1a\u81ea\u5b9a\u4e49\u53c2\u6570\u5b57\u5178\uff0c\u8986\u76d6\u5bf9\u5e94\u9884\u8bbe\u53c2\u6570\u3002</p> </li> </ol> \u53c2\u6570\u83b7\u53d6\u4e0a\u4e0b\u6587\u7ba1\u7406 \u53c2\u6570\u83b7\u53d6<pre><code>sns.plotting_context(context=None, font_scale=1, rc=None)\n\"\"\"\n{'font.size': 12.0,\n 'axes.labelsize': 12.0,\n 'axes.titlesize': 12.0,\n 'xtick.labelsize': 11.0,\n 'ytick.labelsize': 11.0,\n 'legend.fontsize': 11.0,\n 'legend.title_fontsize': 12.0,\n 'axes.linewidth': 1.25,\n 'grid.linewidth': 1.0,\n 'lines.linewidth': 1.5,\n 'lines.markersize': 6.0,\n 'patch.linewidth': 1.0,\n 'xtick.major.width': 1.25,\n 'ytick.major.width': 1.25,\n 'xtick.minor.width': 1.0,\n 'ytick.minor.width': 1.0,\n 'xtick.major.size': 6.0,\n 'ytick.major.size': 6.0,\n 'xtick.minor.size': 4.0,\n 'ytick.minor.size': 4.0}\n\"\"\"\n\nsns.plotting_context(context=\"notebook\", font_scale=1, rc=None)\n\"\"\"\n{'axes.linewidth': 1.25,\n 'grid.linewidth': 1,\n 'lines.linewidth': 1.5,\n 'lines.markersize': 6,\n 'patch.linewidth': 1,\n 'xtick.major.width': 1.25,\n 'ytick.major.width': 1.25,\n 'xtick.minor.width': 1,\n 'ytick.minor.width': 1,\n 'xtick.major.size': 6,\n 'ytick.major.size': 6,\n 'xtick.minor.size': 4,\n 'ytick.minor.size': 4,\n 'font.size': 12,\n 'axes.labelsize': 12,\n 'axes.titlesize': 12,\n 'xtick.labelsize': 11,\n 'ytick.labelsize': 11,\n 'legend.fontsize': 11,\n 'legend.title_fontsize': 12}\n\"\"\"\n\nsns.plotting_context(context=\"notebook\", font_scale=2, rc=None)\n\"\"\"\n{'axes.linewidth': 1.25,\n 'grid.linewidth': 1,\n 'lines.linewidth': 1.5,\n 'lines.markersize': 6,\n 'patch.linewidth': 1,\n 'xtick.major.width': 1.25,\n 'ytick.major.width': 1.25,\n 'xtick.minor.width': 1,\n 'ytick.minor.width': 1,\n 'xtick.major.size': 6,\n 'ytick.major.size': 6,\n 'xtick.minor.size': 4,\n 'ytick.minor.size': 4,\n 'font.size': 24,\n 'axes.labelsize': 24,\n 'axes.titlesize': 24,\n 'xtick.labelsize': 22,\n 'ytick.labelsize': 22,\n 'legend.fontsize': 22,\n 'legend.title_fontsize': 24}\n\"\"\"\n\nsns.plotting_context(context=\"notebook\", font_scale=1, rc={\"axes.linewidth\": 2})\n\"\"\"\n{'axes.linewidth': 2,\n 'grid.linewidth': 1,\n 'lines.linewidth': 1.5,\n 'lines.markersize': 6,\n 'patch.linewidth': 1,\n 'xtick.major.width': 1.25,\n 'ytick.major.width': 1.25,\n 'xtick.minor.width': 1,\n 'ytick.minor.width': 1,\n 'xtick.major.size': 6,\n 'ytick.major.size': 6,\n 'xtick.minor.size': 4,\n 'ytick.minor.size': 4,\n 'font.size': 12,\n 'axes.labelsize': 12,\n 'axes.titlesize': 12,\n 'xtick.labelsize': 11,\n 'ytick.labelsize': 11,\n 'legend.fontsize': 11,\n 'legend.title_fontsize': 12}\n\"\"\"\n\nsns.plotting_context(context={\"axes.linewidth\": 2})\n\"\"\"\n{'axes.linewidth': 2}\n\"\"\"\n</code></pre> \u4e0a\u4e0b\u6587\u7ba1\u7406<pre><code>with sns.plotting_context(context=None, font_scale=1, rc=None):\n  ...\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#set_context","title":"set_context","text":"<p>seaborn.set_context \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.set_context(context=None, font_scale=1, rc=None)</code></p> <p>\u5168\u5c40\u8bbe\u7f6econtext\u3002\u53c2\u6570\u540c\u4e0a\u3002</p> set_context<pre><code>sns.set_context(context=None, font_scale=1, rc=None)\n...\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#style","title":"\u98ce\u683c\uff08Style\uff09","text":"<p>Controlling figure aesthetics \u2014 seaborn 0.13.2 documentation</p> <p>seanborn\u5185\u7f6e\u4e86\u4e94\u5957style\u8bbe\u7f6e\uff0c\u5206\u522b\u4e3a darkgrid(\u9ed8\u8ba4), whitegrid, dark, white, ticks\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#axes_style","title":"axes_style","text":"<p>seaborn.axes_style \u2014 seaborn 0.13.2 documentation</p> <p>Controlling figure aesthetics \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.axes_style(style=None, rc=None)</code></p> <p>\u83b7\u53d6style\u53c2\u6570\u6216\u4e0a\u4e0b\u6587\u7ba1\u7406style\u53c2\u6570\u3002</p> <ol> <li> <p>style\uff1a\u81ea\u5b9a\u4e49\u53c2\u6570\u5b57\u5178\u6216\u9884\u8bbe\u914d\u7f6e\u96c6\u7684\u540d\u79f0\u3002\u9ed8\u8ba4'darkgrid'\u3002</p> </li> <li> <p>rc\uff1a\u81ea\u5b9a\u4e49\u53c2\u6570\u5b57\u5178\uff0c\u8986\u76d6\u5bf9\u5e94\u9884\u8bbe\u53c2\u6570\u3002</p> </li> </ol> \u53c2\u6570\u83b7\u53d6\u4e0a\u4e0b\u6587\u7ba1\u7406 \u53c2\u6570\u83b7\u53d6<pre><code>sns.axes_style(style=None, rc=None)\n\"\"\"\n{'axes.facecolor': '#EAEAF2',\n 'axes.edgecolor': 'white',\n 'axes.grid': True,\n 'axes.axisbelow': True,\n 'axes.labelcolor': '.15',\n 'figure.facecolor': 'white',\n 'grid.color': 'white',\n 'grid.linestyle': '-',\n 'text.color': '.15',\n 'xtick.color': '.15',\n 'ytick.color': '.15',\n 'xtick.direction': 'out',\n 'ytick.direction': 'out',\n 'lines.solid_capstyle': &lt;CapStyle.round: 'round'&gt;,\n 'patch.edgecolor': 'w',\n 'patch.force_edgecolor': True,\n 'image.cmap': 'rocket',\n 'font.family': ['sans-serif'],\n 'font.sans-serif': ['Arial',\n  'DejaVu Sans',\n  'Liberation Sans',\n  'Bitstream Vera Sans',\n  'sans-serif'],\n 'xtick.bottom': False,\n 'xtick.top': False,\n 'ytick.left': False,\n 'ytick.right': False,\n 'axes.spines.left': True,\n 'axes.spines.bottom': True,\n 'axes.spines.right': True,\n 'axes.spines.top': True}\n\"\"\"\n\nsns.axes_style(style=\"darkgrid\", rc=None)\n\"\"\"\n{'figure.facecolor': 'white',\n 'axes.labelcolor': '.15',\n 'xtick.direction': 'out',\n 'ytick.direction': 'out',\n 'xtick.color': '.15',\n 'ytick.color': '.15',\n 'axes.axisbelow': True,\n 'grid.linestyle': '-',\n 'text.color': '.15',\n 'font.family': ['sans-serif'],\n 'font.sans-serif': ['Arial',\n  'DejaVu Sans',\n  'Liberation Sans',\n  'Bitstream Vera Sans',\n  'sans-serif'],\n 'lines.solid_capstyle': 'round',\n 'patch.edgecolor': 'w',\n 'patch.force_edgecolor': True,\n 'image.cmap': 'rocket',\n 'xtick.top': False,\n 'ytick.right': False,\n 'axes.grid': True,\n 'axes.facecolor': '#EAEAF2',\n 'axes.edgecolor': 'white',\n 'grid.color': 'white',\n 'axes.spines.left': True,\n 'axes.spines.bottom': True,\n 'axes.spines.right': True,\n 'axes.spines.top': True,\n 'xtick.bottom': False,\n 'ytick.left': False}\n\"\"\"\n\nsns.axes_style(style=\"darkgrid\", rc={\"figure.facecolor\": \"b\"})\n\"\"\"\n{'figure.facecolor': 'b',\n 'axes.labelcolor': '.15',\n 'xtick.direction': 'out',\n 'ytick.direction': 'out',\n 'xtick.color': '.15',\n 'ytick.color': '.15',\n 'axes.axisbelow': True,\n 'grid.linestyle': '-',\n 'text.color': '.15',\n 'font.family': ['sans-serif'],\n 'font.sans-serif': ['Arial',\n  'DejaVu Sans',\n  'Liberation Sans',\n  'Bitstream Vera Sans',\n  'sans-serif'],\n 'lines.solid_capstyle': 'round',\n 'patch.edgecolor': 'w',\n 'patch.force_edgecolor': True,\n 'image.cmap': 'rocket',\n 'xtick.top': False,\n 'ytick.right': False,\n 'axes.grid': True,\n 'axes.facecolor': '#EAEAF2',\n 'axes.edgecolor': 'white',\n 'grid.color': 'white',\n 'axes.spines.left': True,\n 'axes.spines.bottom': True,\n 'axes.spines.right': True,\n 'axes.spines.top': True,\n 'xtick.bottom': False,\n 'ytick.left': False}\n\"\"\"\n\nsns.axes_style(style={\"figure.facecolor\": \"b\"})\n\"\"\"\n{'figure.facecolor': 'b'}\n\"\"\"\n</code></pre> \u4e0a\u4e0b\u6587\u7ba1\u7406<pre><code>with sns.axes_style(style=None, rc=None):\n  ...\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#set_style","title":"set_style","text":"<p>seaborn.set_style \u2014 seaborn 0.13.2 documentation</p> <p>Controlling figure aesthetics \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.set_style(style=None, rc=None)</code></p> <p>\u5168\u5c40\u8bbe\u7f6estyle\u3002\u53c2\u6570\u540c\u4e0a\u3002</p> set_style<pre><code>sns.set_style(style=None, rc=None)\n...\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#palettes","title":"\u914d\u8272\uff08Palettes\uff09","text":"<p>Choosing color palettes \u2014 seaborn 0.13.2 documentation</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#color_palette","title":"color_palette","text":"<p>seaborn.color_palette \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.color_palette(palette=None, n_colors=None, desat=None, as_cmap=False)</code></p> <p>\u67e5\u770b\u6216\u6784\u5efa\u8c03\u8272\u677f\uff0c\u8fd4\u56de\u4e00\u4e2a\u989c\u8272\u5217\u8868\u6216Colormap\u5bf9\u8c61\u3002\u540c\u6837\u53ef\u8fdb\u884c\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0c\u9488\u5bf9\u9ed8\u8ba4\u989c\u8272\u5faa\u73af\u3002\u8be5\u51fd\u6570\u88ab\u4efb\u4f55\u5177\u6709 <code>palette</code> \u53c2\u6570\u7684\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u3002</p> <ol> <li> <p>palette\uff1a</p> <ol> <li> <p>seaborn\u5185\u7f6epalette\uff1a</p> <p>'deep', 'muted', 'bright', 'pastel', dark', 'colorblind', \"rocket\" , \"mako\" , \"flare\", \"crest\", \"vlag\",  \"icefire\"</p> </li> <li> <p>matplotlib\u5185\u7f6ecolormap</p> </li> <li> <p>'husl' \u6216 'hls'\uff1a</p> <p>\u5f53\u6709\u4efb\u610f\u6570\u91cf\u7684\u7c7b\u522b\u65f6\uff0c\u627e\u5230\u72ec\u7279\u8272\u8c03\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u5728\u5706\u5f62\u8272\u7a7a\u95f4\u4e2d\u7ed8\u5236\u5747\u5300\u5206\u5e03\u7684\u989c\u8272\uff08\u5728\u8fd9\u79cd\u8272\u7a7a\u95f4\u4e2d\uff0c\u8272\u8c03\u53d8\u5316\uff0c\u540c\u65f6\u4fdd\u6301\u4eae\u5ea6\u548c\u9971\u548c\u5ea6\u4e0d\u53d8\uff09</p> </li> <li> <p>'ch: &lt;cubehelix arguments&gt; [_r]'</p> </li> <li> <p>'light:&lt;color&gt;[_r]',  'dark:&lt;color&gt;[_r]',  'blend:&lt;color&gt;,&lt;color&gt;,...'</p> </li> <li> <p>\u989c\u8272\u5e8f\u5217</p> </li> <li> <p>None\uff1a\u8fd4\u56de\u5f53\u524d\u7684 matplotlib \u989c\u8272\u5faa\u73af</p> </li> </ol> </li> <li> <p>n_colors\uff1a\u989c\u8272\u6570\u3002\u9ed8\u8ba4\u4e3a6\u3002\u5927\u4e8e\u8c03\u8272\u677f\u81ea\u8eab\u989c\u8272\u6570\u91cf\u65f6\u5c06\u4ea7\u751f\u5faa\u73af\u3002as_cmap\u4e3a True\u65f6\u5c06\u88ab\u5ffd\u7565\u3002</p> </li> <li> <p>desat\uff1a\u6bcf\u79cd\u989c\u8272\u7684\u53bb\u9971\u548c\u6bd4\u4f8b</p> </li> <li> <p>as_cmap\uff1aTrue\u8fd4\u56deColormap\u5bf9\u8c61\uff1bFalse\u8fd4\u56deRGB\u5143\u7ec4\u5217\u8868</p> </li> </ol> \u67e5\u770b\u6216\u6784\u5efa\u8c03\u8272\u677f\u4e0a\u4e0b\u6587\u7ba1\u7406 <pre><code>sns.color_palette(palette=None, n_colors=None, desat=None, as_cmap=True)\n\"\"\"\n['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf']\n\"\"\"\n\nsns.color_palette(palette=\"colorblind\", n_colors=None, desat=None, as_cmap=True)\n\"\"\"\n['#0173B2', '#DE8F05', '#029E73', '#D55E00', '#CC78BC', '#CA9161', '#FBAFE4', '#949494', '#ECE133', '#56B4E9']\n\"\"\"\n\nsns.color_palette(palette=\"viridis\", n_colors=None, desat=None, as_cmap=True)\nsns.color_palette(palette=\"husl\", n_colors=None, desat=None, as_cmap=True)\nsns.color_palette(palette=\"hls\", n_colors=None, desat=None, as_cmap=True)\nsns.color_palette(palette=\"ch: r=0.5\", n_colors=None, desat=None, as_cmap=True)\nsns.color_palette(palette=\"dark:red\", n_colors=None, desat=None, as_cmap=True)\nsns.color_palette(palette=\"light:red\", n_colors=None, desat=None, as_cmap=True)\nsns.color_palette(palette=\"blend:red,blue,yellow\", n_colors=None, desat=None, as_cmap=True)\nsns.color_palette(palette=[\"red\", \"b\", \"g\"], n_colors=None, desat=None, as_cmap=True)\n</code></pre> \u4e0a\u4e0b\u6587\u7ba1\u7406<pre><code>with sns.color_palette(palette=None, n_colors=None, desat=None, as_cmap=False):\n  ...\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#set_palette","title":"set_palette","text":"<p>seaborn.set_palette \u2014 seaborn 0.13.2 documentation</p> <p>\u5168\u5c40\u8bbe\u7f6e\u9ed8\u8ba4\u989c\u8272\u5faa\u73af</p> <p><code>sns.set_palette(palette, n_colors=None, desat=None, color_codes=False)</code></p> <ol> <li> <p>palette\u3001n_colors\u3001desat\uff1a\u540c\u4e0a</p> </li> <li> <p>color_codes\uff1a\u5982\u679c\u4e3a<code>True</code> \u4e14palette \u662f seaborn\u5185\u7f6epalette\uff0c\u5219\u5c06\u7b80\u5199\u989c\u8272\u4ee3\u7801\uff08\u4f8b\u5982'b'\uff0c'g'\uff0c'r'\u7b49\uff09\u91cd\u65b0\u6620\u5c04\u5230\u6b64\u8c03\u8272\u677f\u4e2d\u7684\u989c\u8272\u3002\u5982\u4e0b\u3002</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#set_color_codes","title":"set_color_codes","text":"<p>seaborn.set_color_codes \u2014 seaborn 0.13.2 documentation</p> <p>\u66f4\u6539matplotlib\u989c\u8272\u7f29\u5199\u7684\u89e3\u91ca\u65b9\u5f0f\u3002\u8c03\u7528\u6b64\u65b9\u6cd5\u5c06\u6539\u53d8\u540e\u7eed\u56fe\u8868\u4e2d\u5bf9\u7b80\u5199\u4ee3\u7801\uff08\u5982'b'\u6216'g'\u7b49\uff09\u7684\u89e3\u6790\u65b9\u5f0f\u3002</p> <p><code>sns.set_color_codes(palette='deep')</code></p> <p>palette\u53c2\u6570\u53ef\u9009seaborn\u5185\u7f6epalette\uff08\u5982\u4e0b\u56fe\uff09\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#theme","title":"\u4e3b\u9898\uff08theme\uff09","text":"<p>seaborn.set_theme \u2014 seaborn 0.13.2 documentation</p> <p>\u7efc\u5408\u8bbe\u7f6e\u7ed8\u56fe\u53c2\u6570\u3002\u5c06\u5f71\u54cd\u6240\u6709 matplotlib \u56fe\u8868\uff0c\u5305\u62ec\u90a3\u4e9b\u672a\u4f7f\u7528 seaborn \u5236\u4f5c\u7684\u56fe\u8868\u3002</p> set_theme<pre><code>sns.set_theme(context='notebook',\n              font_scale=1,\n\n              style='darkgrid',\n\n              palette='deep',\n              color_codes=True,\n\n              font='sans-serif',\n\n              rc=None    # \u53ef\u4fee\u6539\u4efb\u4f55matplotlib rc\u53c2\u6570\n              )\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E7%BB%98%E5%9B%BE%E9%85%8D%E7%BD%AE%EF%BC%88runtime%20configuration%EF%BC%89/#_4","title":"\u6062\u590d\u8bbe\u7f6e","text":"<p>seaborn.reset_defaults \u2014 seaborn 0.13.2 documentation</p> <p>seaborn.reset_orig \u2014 seaborn 0.13.2 documentation</p> <ol> <li> <p><code>sns.reset_defaults()</code></p> </li> <li> <p><code>sns.reset_orig()</code></p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/","title":"\u914d\u8272\uff08Color\u3001Colormap\u3001Palette\uff09\u4e0e\u989c\u8272\u6761\uff08Colorbar\uff09","text":"<p>colorkit.co</p> <p></p> <p>Choosing color palettes \u2014 seaborn 0.13.2 documentation</p> \u5bfc\u5165\u6a21\u5757<pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u57fa\u4e8e\u4eba\u773c\u5de5\u4f5c\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e09\u4e2a\u7ec4\u5206\u6765\u5b9a\u4e49\u7279\u5b9a\u7684\u989c\u8272\u3002\u901a\u5e38\u901a\u8fc7\u6307\u5b9a\u5b83\u4eec\u7684 RGB\u503c \u6765\u5728\u8ba1\u7b97\u673a\u4e2d\u7f16\u7a0b\u989c\u8272\uff0c\u8fd9\u4e9b\u503c\u8bbe\u7f6e\u663e\u793a\u4e2d\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u901a\u9053\u7684\u5f3a\u5ea6\u3002\u4f46\u4e3a\u4e86\u5206\u6790\u989c\u8272\u7684\u611f\u77e5\u5c5e\u6027\uff0c\u6700\u597d\u4ece\u8272\u8c03(h)\u3001\u9971\u548c\u5ea6(s)\u548c\u4eae\u5ea6(l)\u901a\u9053\u7684\u89d2\u5ea6\u6765\u8003\u8651\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#hue","title":"\u8272\u8c03\uff08Hue\uff09","text":"<p>\u8272\u8c03\u662f\u533a\u5206\u201c\u4e0d\u540c\u989c\u8272\u201d\u7684\u975e\u6280\u672f\u6027\u7ec4\u6210\u90e8\u5206\u3002\u5b83\u662f\u5bfc\u81f4\u201c\u7ea2\u8272\u201d\u548c\u201c\u84dd\u8272\u201d\u7b49\u4e00\u7ea7\u540d\u79f0\u7684\u989c\u8272\u5c5e\u6027\u3002\u4e00\u822c\u4f7f\u7528\u8272\u8c03\u53d8\u5316\u6765\u8868\u793a\u4e0d\u540c\u7c7b\u522b\uff0c\u4f46\u8272\u8c03\u53d8\u5316\u4e0d\u9002\u5408\u8868\u793a\u6570\u503c\u6570\u636e\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#saturationchroma","title":"\u9971\u548c\u5ea6\uff08Saturation\uff09\u6216\u8272\u5ea6\uff08chroma\uff09","text":"<p>\u9971\u548c\u5ea6\uff08\u6216\u8272\u5ea6\uff09\u662f\u8272\u5f69\u7684\u9c9c\u8273\u5ea6\u3002\u4e24\u79cd\u4e0d\u540c\u8272\u8c03\u7684\u989c\u8272\u5728\u9971\u548c\u5ea6\u66f4\u9ad8\u65f6\u770b\u8d77\u6765\u4f1a\u66f4\u52a0\u660e\u663e\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#lightness","title":"\u4eae\u5ea6\uff08Lightness\uff09","text":"<p>\u4eae\u5ea6\u548c\u53d1\u51fa\u7684\uff08\u6216\u53cd\u5c04\u7684\uff0c\u5bf9\u4e8e\u5370\u5237\u989c\u8272\uff09\u5149\u91cf\u76f8\u5bf9\u5e94\uff0c\u8303\u56f4\u4ece\u9ed1\u8272\u5230\u767d\u8272\u3002\u8c03\u6574\u4eae\u5ea6\u6709\u52a9\u4e8e\u5728\u6570\u636e\u4e2d\u770b\u5230\u7ed3\u6784\uff0c\u4eae\u5ea6\u53d8\u5316\u66f4\u76f4\u89c2\u5730\u88ab\u89c6\u4e3a\u91cd\u8981\u6027\u53d8\u5316\uff0c\u7ec6\u5fae\u7684\u8272\u8c03\u53d8\u5316\u589e\u52a0\u4e86\u4e24\u4e2a\u503c\u4e4b\u95f4\u7684\u611f\u77e5\u8ddd\u79bb\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#color","title":"\u5355\u989c\u8272\uff08color\uff09","text":"<p>Specifying colors \u2014 Matplotlib 3.10.0 documentation</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#_2","title":"\u901a\u7528\u6e90\u683c\u5f0f","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#r-g-b","title":"(R, G, B)\u683c\u5f0f","text":"<p>\u5143\u7ec4\u4e2d\u6d6e\u70b9\u578b\u6570\u503c\u4f4d\u4e8e[0, 1]\u4e4b\u95f4\uff08\u76f8\u5bf9\u4e8e[0, 255]\uff09\uff0c\u62ec\u53f7\u4e2d\u6570\u503c\u4f9d\u6b21\u8868\u793aRed, Green \u548c Blue\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#r-g-b-a","title":"(R, G, B, A)\u683c\u5f0f","text":"<p>\u5143\u7ec4\u4e2d\u6d6e\u70b9\u578b\u6570\u503c\u4f4d\u4e8e[0, 1]\u4e4b\u95f4\uff08\u76f8\u5bf9\u4e8e[0, 255]\uff09\uff0c\u62ec\u53f7\u4e2d\u6570\u503c\u4f9d\u6b21\u8868\u793aRed, Green, Blue \u548c Alpha\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#rgb","title":"RGB\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u683c\u5f0f","text":"<p>\u4ee5#\u5f00\u5934\u7684\u516d\u4f4d\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e24\u4e2a\u5b57\u7b26\u5206\u522b\u4ee3\u8868Red, Green \u548c Blue\uff08\u8303\u56f4[00, FF]\uff09\u3002\uff08#aabbcc\u53ef\u7b80\u5199\u4e3a#abc\uff0c\u9002\u5408\u5feb\u901f\u5b9a\u4e49\u7b80\u5355\u7684\u989c\u8272\uff0c\u4f46\u989c\u8272\u7cbe\u786e\u5ea6\u8f83\u4f4e\u3002\uff09</p> <p></p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#rgba","title":"RGBA\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u683c\u5f0f","text":"<p>\u4ee5#\u5f00\u5934\u7684\u516b\u4f4d\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e24\u4e2a\u5b57\u7b26\u5206\u522b\u4ee3\u8868Red, Green, Blue \u548c Alpha\uff08\u8303\u56f4[00, FF]\uff09\u3002\uff08#aabbccdd\u53ef\u7b80\u5199\u4e3a#abcd\uff0c\u9002\u5408\u5feb\u901f\u5b9a\u4e49\u7b80\u5355\u7684\u989c\u8272\uff0c\u4f46\u989c\u8272\u7cbe\u786e\u5ea6\u8f83\u4f4e\u3002\uff09</p> <p> </p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#_3","title":"\u7070\u5ea6\u6d6e\u70b9\u6570","text":"<p>\u6d6e\u70b9\u578b\u6570\u503c\u4f4d\u4e8e[0, 1]\u4e4b\u95f4\uff0c\u5176\u4e2d0\u4e3a\u7eaf\u9ed1\u8272\uff0c1\u4e3a\u767d\u8272\u3002\u6570\u503c\u8d8a\u5927\u989c\u8272\u8d8a\u6d45\uff0c\u9002\u5408\u9700\u8981\u4e0d\u540c\u6df1\u6d45\u7070\u8272\u7684\u60c5\u5883\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#_4","title":"\u5355\u5b57\u6bcd\u7f29\u5199\u683c\u5f0f","text":"<p>List of named colors \u2014 Matplotlib 3.10.0 documentation</p> \u5355\u5b57\u6bcd\u7f29\u5199\u683c\u5f0f<pre><code>mpl.colors.BASE_COLORS\n\"\"\"\n{'b': (0, 0, 1), \n 'g': (0, 0.5, 0), \n 'r': (1, 0, 0), \n 'c': (0, 0.75, 0.75), \n 'm': (0.75, 0, 0.75), \n 'y': (0.75, 0.75, 0), \n 'k': (0, 0, 0), \n 'w': (1, 1, 1)}\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#cntableau","title":"CN\u683c\u5f0f\u4e0eTABLEAU\u683c\u5f0f","text":"<p>Colors in the default property cycle \u2014 Matplotlib 3.10.0 documentation</p> <p>Specifying colors \u2014 Matplotlib 3.10.0 documentation</p> <p>List of named colors \u2014 Matplotlib 3.10.0 documentation</p> <p>\"CN\"\u989c\u8272\u8868\u793a\u6cd5\u662f\u7528\u6765\u4ece\u9ed8\u8ba4\u7684\u989c\u8272\u5faa\u73af(<code>matplotlib.rcParams['axes.prop_cycle']</code>)\u4e2d\u81ea\u52a8\u9009\u62e9\u989c\u8272\u3002'C'\u540e\u8ddf\u4e00\u4e2a\u6570\u5b57\uff0c\u8be5\u6570\u5b57\u4f5c\u4e3a\u9ed8\u8ba4\u5c5e\u6027\u5faa\u73af(default property cycle)\u4e2d\u7684\u7d22\u5f15\u3002</p> CN\u683c\u5f0fTableau\u683c\u5f0f CN\u683c\u5f0f<pre><code>mpl.rcParams['axes.prop_cycle']\n\"\"\"\ncycler('color', ['#1f77b4', '#ff7f0e', \n                 '#2ca02c', '#d62728', \n                 '#9467bd', '#8c564b', \n                 '#e377c2', '#7f7f7f', \n                 '#bcbd22', '#17becf'])\n\"\"\"\n</code></pre> Tableau\u683c\u5f0f<pre><code>mpl.colors.TABLEAU_COLORS\n\"\"\"\n{'tab:blue': '#1f77b4', 'tab:orange': '#ff7f0e', \n 'tab:green': '#2ca02c', 'tab:red': '#d62728', \n 'tab:purple': '#9467bd', 'tab:brown': '#8c564b', \n 'tab:pink': '#e377c2', 'tab:gray': '#7f7f7f', \n 'tab:olive': '#bcbd22', 'tab:cyan': '#17becf'}\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#x11css4","title":"X11/CSS4\u683c\u5f0f","text":"<p>List of named colors \u2014 Matplotlib 3.10.0 documentation</p> X11/CSS4\u683c\u5f0f<pre><code>mpl.colors.CSS4_COLORS\n\"\"\"\n{'aliceblue': '#F0F8FF', 'antiquewhite': '#FAEBD7', 'aqua': '#00FFFF', 'aquamarine': '#7FFFD4', 'azure': '#F0FFFF', 'beige': '#F5F5DC', 'bisque': '#FFE4C4', 'black': '#000000', 'blanchedalmond': '#FFEBCD', 'blue': '#0000FF', 'blueviolet': '#8A2BE2', 'brown': '#A52A2A', 'burlywood': '#DEB887', 'cadetblue': '#5F9EA0', 'chartreuse': '#7FFF00', 'chocolate': '#D2691E', 'coral': '#FF7F50', 'cornflowerblue': '#6495ED', 'cornsilk': '#FFF8DC', \n 'crimson': '#DC143C', 'cyan': '#00FFFF', 'darkblue': '#00008B', 'darkcyan': '#008B8B', 'darkgoldenrod': '#B8860B', 'darkgray': '#A9A9A9', 'darkgreen': '#006400', 'darkgrey': '#A9A9A9', 'darkkhaki': '#BDB76B', 'darkmagenta': '#8B008B', 'darkolivegreen': '#556B2F', 'darkorange': '#FF8C00', 'darkorchid': '#9932CC', 'darkred': '#8B0000', 'darksalmon': '#E9967A', 'darkseagreen': '#8FBC8F', 'darkslateblue': '#483D8B', 'darkslategray': '#2F4F4F', 'darkslategrey': '#2F4F4F', 'darkturquoise': '#00CED1', \n 'darkviolet': '#9400D3', 'deeppink': '#FF1493', 'deepskyblue': '#00BFFF', 'dimgray': '#696969', 'dimgrey': '#696969', 'dodgerblue': '#1E90FF', 'firebrick': '#B22222', 'floralwhite': '#FFFAF0', 'forestgreen': '#228B22', 'fuchsia': '#FF00FF', 'gainsboro': '#DCDCDC', 'ghostwhite': '#F8F8FF', 'gold': '#FFD700', 'goldenrod': '#DAA520', 'gray': '#808080', 'green': '#008000', 'greenyellow': '#ADFF2F', 'grey': '#808080', 'honeydew': '#F0FFF0', 'hotpink': '#FF69B4', \n 'indianred': '#CD5C5C', 'indigo': '#4B0082', 'ivory': '#FFFFF0', 'khaki': '#F0E68C', 'lavender': '#E6E6FA', 'lavenderblush': '#FFF0F5', 'lawngreen': '#7CFC00', 'lemonchiffon': '#FFFACD', 'lightblue': '#ADD8E6', 'lightcoral': '#F08080', 'lightcyan': '#E0FFFF', 'lightgoldenrodyellow': '#FAFAD2', 'lightgray': '#D3D3D3', 'lightgreen': '#90EE90', 'lightgrey': '#D3D3D3', 'lightpink': '#FFB6C1', 'lightsalmon': '#FFA07A', 'lightseagreen': '#20B2AA', 'lightskyblue': '#87CEFA', 'lightslategray': '#778899', \n 'lightslategrey': '#778899', 'lightsteelblue': '#B0C4DE', 'lightyellow': '#FFFFE0', 'lime': '#00FF00', 'limegreen': '#32CD32', 'linen': '#FAF0E6', 'magenta': '#FF00FF', 'maroon': '#800000', 'mediumaquamarine': '#66CDAA', 'mediumblue': '#0000CD', 'mediumorchid': '#BA55D3', 'mediumpurple': '#9370DB', 'mediumseagreen': '#3CB371', 'mediumslateblue': '#7B68EE', 'mediumspringgreen': '#00FA9A', 'mediumturquoise': '#48D1CC', 'mediumvioletred': '#C71585', 'midnightblue': '#191970', 'mintcream': '#F5FFFA', 'mistyrose': '#FFE4E1', \n 'moccasin': '#FFE4B5', 'navajowhite': '#FFDEAD', 'navy': '#000080', 'oldlace': '#FDF5E6', 'olive': '#808000', 'olivedrab': '#6B8E23', 'orange': '#FFA500', 'orangered': '#FF4500', 'orchid': '#DA70D6', 'palegoldenrod': '#EEE8AA', 'palegreen': '#98FB98', 'paleturquoise': '#AFEEEE', 'palevioletred': '#DB7093', 'papayawhip': '#FFEFD5', 'peachpuff': '#FFDAB9', 'peru': '#CD853F', 'pink': '#FFC0CB', 'plum': '#DDA0DD', 'powderblue': '#B0E0E6', 'purple': '#800080', \n 'rebeccapurple': '#663399', 'red': '#FF0000', 'rosybrown': '#BC8F8F', 'royalblue': '#4169E1', 'saddlebrown': '#8B4513', 'salmon': '#FA8072', 'sandybrown': '#F4A460', 'seagreen': '#2E8B57', 'seashell': '#FFF5EE', 'sienna': '#A0522D', 'silver': '#C0C0C0', 'skyblue': '#87CEEB', 'slateblue': '#6A5ACD', 'slategray': '#708090', 'slategrey': '#708090', 'snow': '#FFFAFA', 'springgreen': '#00FF7F', 'steelblue': '#4682B4', 'tan': '#D2B48C', \n 'teal': '#008080', 'thistle': '#D8BFD8', 'tomato': '#FF6347', 'turquoise': '#40E0D0', 'violet': '#EE82EE', 'wheat': '#F5DEB3', 'white': '#FFFFFF', 'whitesmoke': '#F5F5F5', 'yellow': '#FFFF00', 'yellowgreen': '#9ACD32'}\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#xkcd","title":"XKCD\u683c\u5f0f","text":"<p>List of named colors \u2014 Matplotlib 3.10.0 documentation</p> <p>xkcd.com</p> <p>Specifying colors \u2014 Matplotlib 3.10.0 documentation</p> XKCD\u683c\u5f0f<pre><code>mpl.colors.XKCD_COLORS\n\"\"\"\n{'xkcd:cloudy blue': '#acc2d9', 'xkcd:dark pastel green': '#56ae57', 'xkcd:dust': '#b2996e', 'xkcd:electric lime': '#a8ff04', 'xkcd:fresh green': '#69d84f', 'xkcd:light eggplant': '#894585', 'xkcd:nasty green': '#70b23f', 'xkcd:really light blue': '#d4ffff', 'xkcd:tea': '#65ab7c', 'xkcd:warm purple': '#952e8f', 'xkcd:yellowish tan': '#fcfc81', 'xkcd:cement': '#a5a391', \n 'xkcd:dark grass green': '#388004', 'xkcd:dusty teal': '#4c9085', 'xkcd:grey teal': '#5e9b8a', 'xkcd:macaroni and cheese': '#efb435', 'xkcd:pinkish tan': '#d99b82', 'xkcd:spruce': '#0a5f38', 'xkcd:strong blue': '#0c06f7', 'xkcd:toxic green': '#61de2a', 'xkcd:windows blue': '#3778bf', 'xkcd:blue blue': '#2242c7', 'xkcd:blue with a hint of purple': '#533cc6', 'xkcd:booger': '#9bb53c', 'xkcd:bright sea green': '#05ffa6', 'xkcd:dark green blue': '#1f6357', 'xkcd:deep turquoise': '#017374', 'xkcd:green teal': '#0cb577', 'xkcd:strong pink': '#ff0789', 'xkcd:bland': '#afa88b', 'xkcd:deep aqua': '#08787f', 'xkcd:lavender pink': '#dd85d7', 'xkcd:light moss green': '#a6c875', 'xkcd:light seafoam green': '#a7ffb5', 'xkcd:olive yellow': '#c2b709', 'xkcd:pig pink': '#e78ea5', 'xkcd:deep lilac': '#966ebd', 'xkcd:desert': '#ccad60', 'xkcd:dusty lavender': '#ac86a8', \n 'xkcd:purpley grey': '#947e94', 'xkcd:purply': '#983fb2', 'xkcd:candy pink': '#ff63e9', 'xkcd:light pastel green': '#b2fba5', 'xkcd:boring green': '#63b365', 'xkcd:kiwi green': '#8ee53f', 'xkcd:light grey green': '#b7e1a1', 'xkcd:orange pink': '#ff6f52', 'xkcd:tea green': '#bdf8a3', 'xkcd:very light brown': '#d3b683', 'xkcd:egg shell': '#fffcc4', 'xkcd:eggplant purple': '#430541', 'xkcd:powder pink': '#ffb2d0', 'xkcd:reddish grey': '#997570', 'xkcd:baby shit brown': '#ad900d', 'xkcd:liliac': '#c48efd', 'xkcd:stormy blue': '#507b9c', 'xkcd:ugly brown': '#7d7103', 'xkcd:custard': '#fffd78', 'xkcd:darkish pink': '#da467d', 'xkcd:deep brown': '#410200', 'xkcd:greenish beige': '#c9d179', 'xkcd:manilla': '#fffa86', \n 'xkcd:off blue': '#5684ae', 'xkcd:battleship grey': '#6b7c85', 'xkcd:browny green': '#6f6c0a', 'xkcd:bruise': '#7e4071', 'xkcd:kelley green': '#009337', 'xkcd:sickly yellow': '#d0e429', 'xkcd:sunny yellow': '#fff917', 'xkcd:azul': '#1d5dec', 'xkcd:darkgreen': '#054907', 'xkcd:green/yellow': '#b5ce08', 'xkcd:lichen': '#8fb67b', 'xkcd:light light green': '#c8ffb0', 'xkcd:pale gold': '#fdde6c', 'xkcd:sun yellow': '#ffdf22', 'xkcd:tan green': '#a9be70', 'xkcd:burple': '#6832e3', 'xkcd:butterscotch': '#fdb147', 'xkcd:toupe': '#c7ac7d', 'xkcd:dark cream': '#fff39a', 'xkcd:indian red': '#850e04', 'xkcd:light lavendar': '#efc0fe', 'xkcd:poison green': '#40fd14', 'xkcd:baby puke green': '#b6c406', 'xkcd:bright yellow green': '#9dff00', 'xkcd:charcoal grey': '#3c4142', 'xkcd:squash': '#f2ab15', 'xkcd:cinnamon': '#ac4f06', 'xkcd:light pea green': '#c4fe82', 'xkcd:radioactive green': '#2cfa1f', 'xkcd:raw sienna': '#9a6200', 'xkcd:baby purple': '#ca9bf7', 'xkcd:cocoa': '#875f42', 'xkcd:light royal blue': '#3a2efe', \n 'xkcd:orangeish': '#fd8d49', 'xkcd:rust brown': '#8b3103', 'xkcd:sand brown': '#cba560', 'xkcd:swamp': '#698339', 'xkcd:tealish green': '#0cdc73', 'xkcd:burnt siena': '#b75203', 'xkcd:camo': '#7f8f4e', 'xkcd:dusk blue': '#26538d', 'xkcd:fern': '#63a950', 'xkcd:old rose': '#c87f89', 'xkcd:pale light green': '#b1fc99', 'xkcd:peachy pink': '#ff9a8a', 'xkcd:rosy pink': '#f6688e', 'xkcd:light bluish green': '#76fda8', 'xkcd:light bright green': '#53fe5c', 'xkcd:light neon green': '#4efd54', 'xkcd:light seafoam': '#a0febf', 'xkcd:tiffany blue': '#7bf2da', 'xkcd:washed out green': '#bcf5a6', 'xkcd:browny orange': '#ca6b02', 'xkcd:nice blue': '#107ab0', 'xkcd:sapphire': '#2138ab', 'xkcd:greyish teal': '#719f91', 'xkcd:orangey yellow': '#fdb915', 'xkcd:parchment': '#fefcaf', 'xkcd:straw': '#fcf679', 'xkcd:very dark brown': '#1d0200', 'xkcd:terracota': '#cb6843', 'xkcd:ugly blue': '#31668a', 'xkcd:clear blue': '#247afd', 'xkcd:creme': '#ffffb6', 'xkcd:foam green': '#90fda9', 'xkcd:grey/green': '#86a17d', 'xkcd:light gold': '#fddc5c', 'xkcd:seafoam blue': '#78d1b6', 'xkcd:topaz': '#13bbaf', 'xkcd:violet pink': '#fb5ffc', 'xkcd:wintergreen': '#20f986', 'xkcd:yellow tan': '#ffe36e', \n 'xkcd:dark fuchsia': '#9d0759', 'xkcd:indigo blue': '#3a18b1', 'xkcd:light yellowish green': '#c2ff89', 'xkcd:pale magenta': '#d767ad', 'xkcd:rich purple': '#720058', 'xkcd:sunflower yellow': '#ffda03', 'xkcd:green/blue': '#01c08d', 'xkcd:leather': '#ac7434', 'xkcd:racing green': '#014600', 'xkcd:vivid purple': '#9900fa', 'xkcd:dark royal blue': '#02066f', 'xkcd:hazel': '#8e7618', 'xkcd:muted pink': '#d1768f', 'xkcd:booger green': '#96b403', 'xkcd:canary': '#fdff63', 'xkcd:cool grey': '#95a3a6', 'xkcd:dark taupe': '#7f684e', 'xkcd:darkish purple': '#751973', 'xkcd:true green': '#089404', 'xkcd:coral pink': '#ff6163', 'xkcd:dark sage': '#598556', 'xkcd:dark slate blue': '#214761', 'xkcd:flat blue': '#3c73a8', 'xkcd:mushroom': '#ba9e88', 'xkcd:rich blue': '#021bf9', 'xkcd:dirty purple': '#734a65', 'xkcd:greenblue': '#23c48b', 'xkcd:icky green': '#8fae22', 'xkcd:light khaki': '#e6f2a2', 'xkcd:warm blue': '#4b57db', 'xkcd:dark hot pink': '#d90166', 'xkcd:deep sea blue': '#015482', 'xkcd:carmine': '#9d0216', 'xkcd:dark yellow green': '#728f02', 'xkcd:pale peach': '#ffe5ad', 'xkcd:plum purple': '#4e0550', 'xkcd:golden rod': '#f9bc08', 'xkcd:neon red': '#ff073a', 'xkcd:old pink': '#c77986', 'xkcd:very pale blue': '#d6fffe', 'xkcd:blood orange': '#fe4b03', 'xkcd:grapefruit': '#fd5956', 'xkcd:sand yellow': '#fce166', 'xkcd:clay brown': '#b2713d', 'xkcd:dark blue grey': '#1f3b4d', 'xkcd:flat green': '#699d4c', 'xkcd:light green blue': '#56fca2', 'xkcd:warm pink': '#fb5581', 'xkcd:dodger blue': '#3e82fc', 'xkcd:gross green': '#a0bf16', 'xkcd:ice': '#d6fffa', \n 'xkcd:metallic blue': '#4f738e', 'xkcd:pale salmon': '#ffb19a', 'xkcd:sap green': '#5c8b15', 'xkcd:algae': '#54ac68', 'xkcd:bluey grey': '#89a0b0', 'xkcd:greeny grey': '#7ea07a', 'xkcd:highlighter green': '#1bfc06', 'xkcd:light light blue': '#cafffb', 'xkcd:light mint': '#b6ffbb', 'xkcd:raw umber': '#a75e09', 'xkcd:vivid blue': '#152eff', 'xkcd:deep lavender': '#8d5eb7', 'xkcd:dull teal': '#5f9e8f', 'xkcd:light greenish blue': '#63f7b4', 'xkcd:mud green': '#606602', 'xkcd:pinky': '#fc86aa', 'xkcd:red wine': '#8c0034', 'xkcd:shit green': '#758000', 'xkcd:tan brown': '#ab7e4c', 'xkcd:darkblue': '#030764', 'xkcd:rosa': '#fe86a4', 'xkcd:lipstick': '#d5174e', 'xkcd:pale mauve': '#fed0fc', 'xkcd:claret': '#680018', 'xkcd:dandelion': '#fedf08', 'xkcd:orangered': '#fe420f', 'xkcd:poop green': '#6f7c00', 'xkcd:ruby': '#ca0147', 'xkcd:dark': '#1b2431', 'xkcd:greenish turquoise': '#00fbb0', 'xkcd:pastel red': '#db5856', 'xkcd:piss yellow': '#ddd618', 'xkcd:bright cyan': '#41fdfe', 'xkcd:dark coral': '#cf524e', 'xkcd:algae green': '#21c36f', 'xkcd:darkish red': '#a90308', 'xkcd:reddy brown': '#6e1005', 'xkcd:blush pink': '#fe828c', 'xkcd:camouflage green': '#4b6113', 'xkcd:lawn green': '#4da409', 'xkcd:putty': '#beae8a', 'xkcd:vibrant blue': '#0339f8', 'xkcd:dark sand': '#a88f59', 'xkcd:purple/blue': '#5d21d0', 'xkcd:saffron': '#feb209', 'xkcd:twilight': '#4e518b', 'xkcd:warm brown': '#964e02', 'xkcd:bluegrey': '#85a3b2', 'xkcd:bubble gum pink': '#ff69af', 'xkcd:duck egg blue': '#c3fbf4', 'xkcd:greenish cyan': '#2afeb7', 'xkcd:petrol': '#005f6a', 'xkcd:royal': '#0c1793', 'xkcd:butter': '#ffff81', 'xkcd:dusty orange': '#f0833a', 'xkcd:off yellow': '#f1f33f', 'xkcd:pale olive green': '#b1d27b', 'xkcd:orangish': '#fc824a', 'xkcd:leaf': '#71aa34', 'xkcd:light blue grey': '#b7c9e2', 'xkcd:dried blood': '#4b0101', 'xkcd:lightish purple': '#a552e6', 'xkcd:rusty red': '#af2f0d', 'xkcd:lavender blue': '#8b88f8', 'xkcd:light grass green': '#9af764', 'xkcd:light mint green': '#a6fbb2', \n 'xkcd:sunflower': '#ffc512', 'xkcd:velvet': '#750851', 'xkcd:brick orange': '#c14a09', 'xkcd:lightish red': '#fe2f4a', 'xkcd:pure blue': '#0203e2', 'xkcd:twilight blue': '#0a437a', 'xkcd:violet red': '#a50055', 'xkcd:yellowy brown': '#ae8b0c', 'xkcd:carnation': '#fd798f', 'xkcd:muddy yellow': '#bfac05', 'xkcd:dark seafoam green': '#3eaf76', 'xkcd:deep rose': '#c74767', 'xkcd:dusty red': '#b9484e', 'xkcd:grey/blue': '#647d8e', 'xkcd:lemon lime': '#bffe28', 'xkcd:purple/pink': '#d725de', 'xkcd:brown yellow': '#b29705', 'xkcd:purple brown': '#673a3f', 'xkcd:wisteria': '#a87dc2', 'xkcd:banana yellow': '#fafe4b', 'xkcd:lipstick red': '#c0022f', 'xkcd:water blue': '#0e87cc', 'xkcd:brown grey': '#8d8468', 'xkcd:vibrant purple': '#ad03de', 'xkcd:baby green': '#8cff9e', 'xkcd:barf green': '#94ac02', 'xkcd:eggshell blue': '#c4fff7', 'xkcd:sandy yellow': '#fdee73', 'xkcd:cool green': '#33b864', 'xkcd:pale': '#fff9d0', 'xkcd:blue/grey': '#758da3', 'xkcd:hot magenta': '#f504c9', 'xkcd:greyblue': '#77a1b5', 'xkcd:purpley': '#8756e4', 'xkcd:baby shit green': '#889717', 'xkcd:brownish pink': '#c27e79', 'xkcd:dark aquamarine': '#017371', 'xkcd:diarrhea': '#9f8303', 'xkcd:light mustard': '#f7d560', 'xkcd:pale sky blue': '#bdf6fe', 'xkcd:turtle green': '#75b84f', 'xkcd:bright olive': '#9cbb04', 'xkcd:dark grey blue': '#29465b', 'xkcd:greeny brown': '#696006', 'xkcd:lemon green': '#adf802', 'xkcd:light periwinkle': '#c1c6fc', 'xkcd:seaweed green': '#35ad6b', 'xkcd:sunshine yellow': '#fffd37', 'xkcd:ugly purple': '#a442a0', 'xkcd:medium pink': '#f36196', 'xkcd:puke brown': '#947706', 'xkcd:very light pink': '#fff4f2', 'xkcd:viridian': '#1e9167', 'xkcd:bile': '#b5c306', 'xkcd:faded yellow': '#feff7f', 'xkcd:very pale green': '#cffdbc', 'xkcd:vibrant green': '#0add08', 'xkcd:bright lime': '#87fd05', 'xkcd:spearmint': '#1ef876', 'xkcd:light aquamarine': '#7bfdc7', 'xkcd:light sage': '#bcecac', 'xkcd:yellowgreen': '#bbf90f', 'xkcd:baby poo': '#ab9004', 'xkcd:dark seafoam': '#1fb57a', 'xkcd:deep teal': '#00555a', 'xkcd:heather': '#a484ac', 'xkcd:rust orange': '#c45508', 'xkcd:dirty blue': '#3f829d', 'xkcd:fern green': '#548d44', 'xkcd:bright lilac': '#c95efb', 'xkcd:weird green': '#3ae57f', 'xkcd:peacock blue': '#016795', 'xkcd:avocado green': '#87a922', 'xkcd:faded orange': '#f0944d', \n 'xkcd:grape purple': '#5d1451', 'xkcd:hot green': '#25ff29', 'xkcd:lime yellow': '#d0fe1d', 'xkcd:mango': '#ffa62b', 'xkcd:shamrock': '#01b44c', 'xkcd:bubblegum': '#ff6cb5', 'xkcd:purplish brown': '#6b4247', 'xkcd:vomit yellow': '#c7c10c', 'xkcd:pale cyan': '#b7fffa', 'xkcd:key lime': '#aeff6e', 'xkcd:tomato red': '#ec2d01', 'xkcd:lightgreen': '#76ff7b', 'xkcd:merlot': '#730039', 'xkcd:night blue': '#040348', 'xkcd:purpleish pink': '#df4ec8', 'xkcd:apple': '#6ecb3c', 'xkcd:baby poop green': '#8f9805', 'xkcd:green apple': '#5edc1f', 'xkcd:heliotrope': '#d94ff5', 'xkcd:yellow/green': '#c8fd3d', 'xkcd:almost black': '#070d0d', 'xkcd:cool blue': '#4984b8', 'xkcd:leafy green': '#51b73b', 'xkcd:mustard brown': '#ac7e04', 'xkcd:dusk': '#4e5481', 'xkcd:dull brown': '#876e4b', 'xkcd:frog green': '#58bc08', 'xkcd:vivid green': '#2fef10', 'xkcd:bright light green': '#2dfe54', 'xkcd:fluro green': '#0aff02', 'xkcd:kiwi': '#9cef43', 'xkcd:seaweed': '#18d17b', 'xkcd:navy green': '#35530a', 'xkcd:ultramarine blue': '#1805db', 'xkcd:iris': '#6258c4', 'xkcd:pastel orange': '#ff964f', 'xkcd:yellowish orange': '#ffab0f', 'xkcd:perrywinkle': '#8f8ce7', 'xkcd:tealish': '#24bca8', 'xkcd:dark plum': '#3f012c', 'xkcd:pear': '#cbf85f', 'xkcd:pinkish orange': '#ff724c', 'xkcd:midnight purple': '#280137', 'xkcd:light urple': '#b36ff6', 'xkcd:dark mint': '#48c072', 'xkcd:greenish tan': '#bccb7a', 'xkcd:light burgundy': '#a8415b', 'xkcd:turquoise blue': '#06b1c4', 'xkcd:ugly pink': '#cd7584', 'xkcd:sandy': '#f1da7a', 'xkcd:electric pink': '#ff0490', 'xkcd:muted purple': '#805b87', 'xkcd:mid green': '#50a747', 'xkcd:greyish': '#a8a495', 'xkcd:neon yellow': '#cfff04', 'xkcd:banana': '#ffff7e', 'xkcd:carnation pink': '#ff7fa7', 'xkcd:tomato': '#ef4026', 'xkcd:sea': '#3c9992', 'xkcd:muddy brown': '#886806', 'xkcd:turquoise green': '#04f489', 'xkcd:buff': '#fef69e', 'xkcd:fawn': '#cfaf7b', 'xkcd:muted blue': '#3b719f', 'xkcd:pale rose': '#fdc1c5', 'xkcd:dark mint green': '#20c073', 'xkcd:amethyst': '#9b5fc0', 'xkcd:blue/green': '#0f9b8e', 'xkcd:chestnut': '#742802', 'xkcd:sick green': '#9db92c', 'xkcd:pea': '#a4bf20', 'xkcd:rusty orange': '#cd5909', 'xkcd:stone': '#ada587', 'xkcd:rose red': '#be013c', 'xkcd:pale aqua': '#b8ffeb', 'xkcd:deep orange': '#dc4d01', 'xkcd:earth': '#a2653e', 'xkcd:mossy green': '#638b27', 'xkcd:grassy green': '#419c03', 'xkcd:pale lime green': '#b1ff65', 'xkcd:light grey blue': '#9dbcd4', 'xkcd:pale grey': '#fdfdfe', 'xkcd:asparagus': '#77ab56', 'xkcd:blueberry': '#464196', 'xkcd:purple red': '#990147', 'xkcd:pale lime': '#befd73', 'xkcd:greenish teal': '#32bf84', 'xkcd:caramel': '#af6f09', 'xkcd:deep magenta': '#a0025c', 'xkcd:light peach': '#ffd8b1', 'xkcd:milk chocolate': '#7f4e1e', 'xkcd:ocher': '#bf9b0c', 'xkcd:off green': '#6ba353', 'xkcd:purply pink': '#f075e6', 'xkcd:lightblue': '#7bc8f6', 'xkcd:dusky blue': '#475f94', 'xkcd:golden': '#f5bf03', 'xkcd:light beige': '#fffeb6', 'xkcd:butter yellow': '#fffd74', 'xkcd:dusky purple': '#895b7b', 'xkcd:french blue': '#436bad', 'xkcd:ugly yellow': '#d0c101', 'xkcd:greeny yellow': '#c6f808', 'xkcd:orangish red': '#f43605', 'xkcd:shamrock green': '#02c14d', 'xkcd:orangish brown': '#b25f03', 'xkcd:tree green': '#2a7e19', 'xkcd:deep violet': '#490648', 'xkcd:gunmetal': '#536267', 'xkcd:blue/purple': '#5a06ef', 'xkcd:cherry': '#cf0234', 'xkcd:sandy brown': '#c4a661', 'xkcd:warm grey': '#978a84', 'xkcd:dark indigo': '#1f0954', 'xkcd:midnight': '#03012d', 'xkcd:bluey green': '#2bb179', 'xkcd:grey pink': '#c3909b', 'xkcd:soft purple': '#a66fb5', 'xkcd:blood': '#770001', 'xkcd:brown red': '#922b05', 'xkcd:medium grey': '#7d7f7c', 'xkcd:berry': '#990f4b', 'xkcd:poo': '#8f7303', 'xkcd:purpley pink': '#c83cb9', 'xkcd:light salmon': '#fea993', 'xkcd:snot': '#acbb0d', 'xkcd:easter purple': '#c071fe', 'xkcd:light yellow green': '#ccfd7f', 'xkcd:dark navy blue': '#00022e', 'xkcd:drab': '#828344', 'xkcd:light rose': '#ffc5cb', 'xkcd:rouge': '#ab1239', 'xkcd:purplish red': '#b0054b', 'xkcd:slime green': '#99cc04', 'xkcd:baby poop': '#937c00', 'xkcd:irish green': '#019529', 'xkcd:pink/purple': '#ef1de7', 'xkcd:dark navy': '#000435', 'xkcd:greeny blue': '#42b395', 'xkcd:light plum': '#9d5783', 'xkcd:pinkish grey': '#c8aca9', 'xkcd:dirty orange': '#c87606', 'xkcd:rust red': '#aa2704', 'xkcd:pale lilac': '#e4cbff', 'xkcd:orangey red': '#fa4224', 'xkcd:primary blue': '#0804f9', 'xkcd:kermit green': '#5cb200', 'xkcd:brownish purple': '#76424e', 'xkcd:murky green': '#6c7a0e', 'xkcd:wheat': '#fbdd7e', 'xkcd:very dark purple': '#2a0134', 'xkcd:bottle green': '#044a05', 'xkcd:watermelon': '#fd4659', 'xkcd:deep sky blue': '#0d75f8', 'xkcd:fire engine red': '#fe0002', 'xkcd:yellow ochre': '#cb9d06', 'xkcd:pumpkin orange': '#fb7d07', 'xkcd:pale olive': '#b9cc81', 'xkcd:light lilac': '#edc8ff', 'xkcd:lightish green': '#61e160', 'xkcd:carolina blue': '#8ab8fe', 'xkcd:mulberry': '#920a4e', 'xkcd:shocking pink': '#fe02a2', 'xkcd:auburn': '#9a3001', 'xkcd:bright lime green': '#65fe08', 'xkcd:celadon': '#befdb7', 'xkcd:pinkish brown': '#b17261', 'xkcd:poo brown': '#885f01', 'xkcd:bright sky blue': '#02ccfe', 'xkcd:celery': '#c1fd95', 'xkcd:dirt brown': '#836539', 'xkcd:strawberry': '#fb2943', 'xkcd:dark lime': '#84b701', 'xkcd:copper': '#b66325', 'xkcd:medium brown': '#7f5112', 'xkcd:muted green': '#5fa052', \"xkcd:robin's egg\": '#6dedfd', 'xkcd:bright aqua': '#0bf9ea', 'xkcd:bright lavender': '#c760ff', 'xkcd:ivory': '#ffffcb', 'xkcd:very light purple': '#f6cefc', 'xkcd:light navy': '#155084', 'xkcd:pink red': '#f5054f', 'xkcd:olive brown': '#645403', 'xkcd:poop brown': '#7a5901', 'xkcd:mustard green': '#a8b504', 'xkcd:ocean green': '#3d9973', 'xkcd:very dark blue': '#000133', 'xkcd:dusty green': '#76a973', 'xkcd:light navy blue': '#2e5a88', 'xkcd:minty green': '#0bf77d', 'xkcd:adobe': '#bd6c48', 'xkcd:barney': '#ac1db8', 'xkcd:jade green': '#2baf6a', 'xkcd:bright light blue': '#26f7fd', 'xkcd:light lime': '#aefd6c', 'xkcd:dark khaki': '#9b8f55', 'xkcd:orange yellow': '#ffad01', 'xkcd:ocre': '#c69c04', 'xkcd:maize': '#f4d054', 'xkcd:faded pink': '#de9dac', 'xkcd:british racing green': '#05480d', 'xkcd:sandstone': '#c9ae74', 'xkcd:mud brown': '#60460f', 'xkcd:light sea green': '#98f6b0', 'xkcd:robin egg blue': '#8af1fe', 'xkcd:aqua marine': '#2ee8bb', 'xkcd:dark sea green': '#11875d', 'xkcd:soft pink': '#fdb0c0', 'xkcd:orangey brown': '#b16002', 'xkcd:cherry red': '#f7022a', 'xkcd:burnt yellow': '#d5ab09', 'xkcd:brownish grey': '#86775f', 'xkcd:camel': '#c69f59', 'xkcd:purplish grey': '#7a687f', 'xkcd:marine': '#042e60', 'xkcd:greyish pink': '#c88d94', 'xkcd:pale turquoise': '#a5fbd5', 'xkcd:pastel yellow': '#fffe71', 'xkcd:bluey purple': '#6241c7', 'xkcd:canary yellow': '#fffe40', 'xkcd:faded red': '#d3494e', 'xkcd:sepia': '#985e2b', 'xkcd:coffee': '#a6814c', 'xkcd:bright magenta': '#ff08e8', 'xkcd:mocha': '#9d7651', 'xkcd:ecru': '#feffca', 'xkcd:purpleish': '#98568d', 'xkcd:cranberry': '#9e003a', 'xkcd:darkish green': '#287c37', 'xkcd:brown orange': '#b96902', 'xkcd:dusky rose': '#ba6873', 'xkcd:melon': '#ff7855', 'xkcd:sickly green': '#94b21c', 'xkcd:silver': '#c5c9c7', 'xkcd:purply blue': '#661aee', 'xkcd:purpleish blue': '#6140ef', 'xkcd:hospital green': '#9be5aa', 'xkcd:shit brown': '#7b5804', 'xkcd:mid blue': '#276ab3', 'xkcd:amber': '#feb308', 'xkcd:easter green': '#8cfd7e', 'xkcd:soft blue': '#6488ea', 'xkcd:cerulean blue': '#056eee', 'xkcd:golden brown': '#b27a01', 'xkcd:bright turquoise': '#0ffef9', 'xkcd:red pink': '#fa2a55', 'xkcd:red purple': '#820747', 'xkcd:greyish brown': '#7a6a4f', 'xkcd:vermillion': '#f4320c', 'xkcd:russet': '#a13905', 'xkcd:steel grey': '#6f828a', 'xkcd:lighter purple': '#a55af4', 'xkcd:bright violet': '#ad0afd', 'xkcd:prussian blue': '#004577', 'xkcd:slate green': '#658d6d', 'xkcd:dirty pink': '#ca7b80', 'xkcd:dark blue green': '#005249', 'xkcd:pine': '#2b5d34', 'xkcd:yellowy green': '#bff128', 'xkcd:dark gold': '#b59410', 'xkcd:bluish': '#2976bb', 'xkcd:darkish blue': '#014182', 'xkcd:dull red': '#bb3f3f', 'xkcd:pinky red': '#fc2647', 'xkcd:bronze': '#a87900', 'xkcd:pale teal': '#82cbb2', 'xkcd:military green': '#667c3e', 'xkcd:barbie pink': '#fe46a5', 'xkcd:bubblegum pink': '#fe83cc', 'xkcd:pea soup green': '#94a617', 'xkcd:dark mustard': '#a88905', 'xkcd:shit': '#7f5f00', 'xkcd:medium purple': '#9e43a2', 'xkcd:very dark green': '#062e03', 'xkcd:dirt': '#8a6e45', 'xkcd:dusky pink': '#cc7a8b', 'xkcd:red violet': '#9e0168', 'xkcd:lemon yellow': '#fdff38', 'xkcd:pistachio': '#c0fa8b', 'xkcd:dull yellow': '#eedc5b', 'xkcd:dark lime green': '#7ebd01', 'xkcd:denim blue': '#3b5b92', 'xkcd:teal blue': '#01889f', 'xkcd:lightish blue': '#3d7afd', 'xkcd:purpley blue': '#5f34e7', 'xkcd:light indigo': '#6d5acf', 'xkcd:swamp green': '#748500', 'xkcd:brown green': '#706c11', 'xkcd:dark maroon': '#3c0008', 'xkcd:hot purple': '#cb00f5', 'xkcd:dark forest green': '#002d04', 'xkcd:faded blue': '#658cbb', 'xkcd:drab green': '#749551', 'xkcd:light lime green': '#b9ff66', 'xkcd:snot green': '#9dc100', 'xkcd:yellowish': '#faee66', 'xkcd:light blue green': '#7efbb3', 'xkcd:bordeaux': '#7b002c', 'xkcd:light mauve': '#c292a1', 'xkcd:ocean': '#017b92', 'xkcd:marigold': '#fcc006', 'xkcd:muddy green': '#657432', 'xkcd:dull orange': '#d8863b', 'xkcd:steel': '#738595', 'xkcd:electric purple': '#aa23ff', 'xkcd:fluorescent green': '#08ff08', 'xkcd:yellowish brown': '#9b7a01', 'xkcd:blush': '#f29e8e', 'xkcd:soft green': '#6fc276', 'xkcd:bright orange': '#ff5b00', 'xkcd:lemon': '#fdff52', 'xkcd:purple grey': '#866f85', 'xkcd:acid green': '#8ffe09', 'xkcd:pale lavender': '#eecffe', 'xkcd:violet blue': '#510ac9', 'xkcd:light forest green': '#4f9153', 'xkcd:burnt red': '#9f2305', 'xkcd:khaki green': '#728639', 'xkcd:cerise': '#de0c62', 'xkcd:faded purple': '#916e99', 'xkcd:apricot': '#ffb16d', 'xkcd:dark olive green': '#3c4d03', 'xkcd:grey brown': '#7f7053', 'xkcd:green grey': '#77926f', 'xkcd:true blue': '#010fcc', 'xkcd:pale violet': '#ceaefa', 'xkcd:periwinkle blue': '#8f99fb', 'xkcd:light sky blue': '#c6fcff', 'xkcd:blurple': '#5539cc', 'xkcd:green brown': '#544e03', 'xkcd:bluegreen': '#017a79', 'xkcd:bright teal': '#01f9c6', 'xkcd:brownish yellow': '#c9b003', 'xkcd:pea soup': '#929901', 'xkcd:forest': '#0b5509', 'xkcd:barney purple': '#a00498', 'xkcd:ultramarine': '#2000b1', 'xkcd:purplish': '#94568c', 'xkcd:puke yellow': '#c2be0e', 'xkcd:bluish grey': '#748b97', 'xkcd:dark periwinkle': '#665fd1', 'xkcd:dark lilac': '#9c6da5', 'xkcd:reddish': '#c44240', 'xkcd:light maroon': '#a24857', 'xkcd:dusty purple': '#825f87', 'xkcd:terra cotta': '#c9643b', 'xkcd:avocado': '#90b134', 'xkcd:marine blue': '#01386a', 'xkcd:teal green': '#25a36f', 'xkcd:slate grey': '#59656d', 'xkcd:lighter green': '#75fd63', 'xkcd:electric green': '#21fc0d', 'xkcd:dusty blue': '#5a86ad', 'xkcd:golden yellow': '#fec615', 'xkcd:bright yellow': '#fffd01', 'xkcd:light lavender': '#dfc5fe', 'xkcd:umber': '#b26400', 'xkcd:poop': '#7f5e00', 'xkcd:dark peach': '#de7e5d', 'xkcd:jungle green': '#048243', 'xkcd:eggshell': '#ffffd4', 'xkcd:denim': '#3b638c', 'xkcd:yellow brown': '#b79400', 'xkcd:dull purple': '#84597e', 'xkcd:chocolate brown': '#411900', 'xkcd:wine red': '#7b0323', 'xkcd:neon blue': '#04d9ff', 'xkcd:dirty green': '#667e2c', 'xkcd:light tan': '#fbeeac', 'xkcd:ice blue': '#d7fffe', 'xkcd:cadet blue': '#4e7496', 'xkcd:dark mauve': '#874c62', 'xkcd:very light blue': '#d5ffff', 'xkcd:grey purple': '#826d8c', 'xkcd:pastel pink': '#ffbacd', 'xkcd:very light green': '#d1ffbd', 'xkcd:dark sky blue': '#448ee4', 'xkcd:evergreen': '#05472a', 'xkcd:dull pink': '#d5869d', 'xkcd:aubergine': '#3d0734', 'xkcd:mahogany': '#4a0100', 'xkcd:reddish orange': '#f8481c', 'xkcd:deep green': '#02590f', 'xkcd:vomit green': '#89a203', 'xkcd:purple pink': '#e03fd8', 'xkcd:dusty pink': '#d58a94', 'xkcd:faded green': '#7bb274', 'xkcd:camo green': '#526525', 'xkcd:pinky purple': '#c94cbe', 'xkcd:pink purple': '#db4bda', 'xkcd:brownish red': '#9e3623', 'xkcd:dark rose': '#b5485d', 'xkcd:mud': '#735c12', 'xkcd:brownish': '#9c6d57', 'xkcd:emerald green': '#028f1e', 'xkcd:pale brown': '#b1916e', 'xkcd:dull blue': '#49759c', 'xkcd:burnt umber': '#a0450e', 'xkcd:medium green': '#39ad48', 'xkcd:clay': '#b66a50', 'xkcd:light aqua': '#8cffdb', 'xkcd:light olive green': '#a4be5c', 'xkcd:brownish orange': '#cb7723', 'xkcd:dark aqua': '#05696b', 'xkcd:purplish pink': '#ce5dae', 'xkcd:dark salmon': '#c85a53', 'xkcd:greenish grey': '#96ae8d', 'xkcd:jade': '#1fa774', 'xkcd:ugly green': '#7a9703', 'xkcd:dark beige': '#ac9362', 'xkcd:emerald': '#01a049', 'xkcd:pale red': '#d9544d', 'xkcd:light magenta': '#fa5ff7', 'xkcd:sky': '#82cafc', 'xkcd:light cyan': '#acfffc', 'xkcd:yellow orange': '#fcb001', 'xkcd:reddish purple': '#910951', 'xkcd:reddish pink': '#fe2c54', 'xkcd:orchid': '#c875c4', 'xkcd:dirty yellow': '#cdc50a', 'xkcd:orange red': '#fd411e', 'xkcd:deep red': '#9a0200', 'xkcd:orange brown': '#be6400', 'xkcd:cobalt blue': '#030aa7', 'xkcd:neon pink': '#fe019a', 'xkcd:rose pink': '#f7879a', 'xkcd:greyish purple': '#887191', 'xkcd:raspberry': '#b00149', 'xkcd:aqua green': '#12e193', 'xkcd:salmon pink': '#fe7b7c', 'xkcd:tangerine': '#ff9408', 'xkcd:brownish green': '#6a6e09', 'xkcd:red brown': '#8b2e16', 'xkcd:greenish brown': '#696112', 'xkcd:pumpkin': '#e17701', 'xkcd:pine green': '#0a481e', 'xkcd:charcoal': '#343837', 'xkcd:baby pink': '#ffb7ce', 'xkcd:cornflower': '#6a79f7', 'xkcd:blue violet': '#5d06e9', 'xkcd:chocolate': '#3d1c02', 'xkcd:greyish green': '#82a67d', 'xkcd:scarlet': '#be0119', 'xkcd:green yellow': '#c9ff27', 'xkcd:dark olive': '#373e02', 'xkcd:sienna': '#a9561e', 'xkcd:pastel purple': '#caa0ff', 'xkcd:terracotta': '#ca6641', 'xkcd:aqua blue': '#02d8e9', 'xkcd:sage green': '#88b378', 'xkcd:blood red': '#980002', 'xkcd:deep pink': '#cb0162', 'xkcd:grass': '#5cac2d', 'xkcd:moss': '#769958', 'xkcd:pastel blue': '#a2bffe', 'xkcd:bluish green': '#10a674', 'xkcd:green blue': '#06b48b', 'xkcd:dark tan': '#af884a', 'xkcd:greenish blue': '#0b8b87', 'xkcd:pale orange': '#ffa756', 'xkcd:vomit': '#a2a415', 'xkcd:forrest green': '#154406', 'xkcd:dark lavender': '#856798', 'xkcd:dark violet': '#34013f', 'xkcd:purple blue': '#632de9', 'xkcd:dark cyan': '#0a888a', 'xkcd:olive drab': '#6f7632', 'xkcd:pinkish': '#d46a7e', 'xkcd:cobalt': '#1e488f', 'xkcd:neon purple': '#bc13fe', 'xkcd:light turquoise': '#7ef4cc', 'xkcd:apple green': '#76cd26', 'xkcd:dull green': '#74a662', 'xkcd:wine': '#80013f', 'xkcd:powder blue': '#b1d1fc', 'xkcd:off white': '#ffffe4', 'xkcd:electric blue': '#0652ff', 'xkcd:dark turquoise': '#045c5a', 'xkcd:blue purple': '#5729ce', 'xkcd:azure': '#069af3', 'xkcd:bright red': '#ff000d', 'xkcd:pinkish red': '#f10c45', 'xkcd:cornflower blue': '#5170d7', 'xkcd:light olive': '#acbf69', 'xkcd:grape': '#6c3461', 'xkcd:greyish blue': '#5e819d', 'xkcd:purplish blue': '#601ef9', 'xkcd:yellowish green': '#b0dd16', 'xkcd:greenish yellow': '#cdfd02', 'xkcd:medium blue': '#2c6fbb', 'xkcd:dusty rose': '#c0737a', 'xkcd:light violet': '#d6b4fc', 'xkcd:midnight blue': '#020035', 'xkcd:bluish purple': '#703be7', 'xkcd:red orange': '#fd3c06', 'xkcd:dark magenta': '#960056', 'xkcd:greenish': '#40a368', 'xkcd:ocean blue': '#03719c', 'xkcd:coral': '#fc5a50', 'xkcd:cream': '#ffffc2', 'xkcd:reddish brown': '#7f2b0a', 'xkcd:burnt sienna': '#b04e0f', 'xkcd:brick': '#a03623', 'xkcd:sage': '#87ae73', 'xkcd:grey green': '#789b73', 'xkcd:white': '#ffffff', \"xkcd:robin's egg blue\": '#98eff9', 'xkcd:moss green': '#658b38', 'xkcd:steel blue': '#5a7d9a', 'xkcd:eggplant': '#380835', 'xkcd:light yellow': '#fffe7a', 'xkcd:leaf green': '#5ca904', 'xkcd:light grey': '#d8dcd6', 'xkcd:puke': '#a5a502', 'xkcd:pinkish purple': '#d648d7', 'xkcd:sea blue': '#047495', 'xkcd:pale purple': '#b790d4', 'xkcd:slate blue': '#5b7c99', 'xkcd:blue grey': '#607c8e', 'xkcd:hunter green': '#0b4008', 'xkcd:fuchsia': '#ed0dd9', 'xkcd:crimson': '#8c000f', 'xkcd:pale yellow': '#ffff84', 'xkcd:ochre': '#bf9005', 'xkcd:mustard yellow': '#d2bd0a', 'xkcd:light red': '#ff474c', 'xkcd:cerulean': '#0485d1', 'xkcd:pale pink': '#ffcfdc', 'xkcd:deep blue': '#040273', 'xkcd:rust': '#a83c09', 'xkcd:light teal': '#90e4c1', 'xkcd:slate': '#516572', 'xkcd:goldenrod': '#fac205', 'xkcd:dark yellow': '#d5b60a', 'xkcd:dark grey': '#363737', 'xkcd:army green': '#4b5d16', 'xkcd:grey blue': '#6b8ba4', 'xkcd:seafoam': '#80f9ad', 'xkcd:puce': '#a57e52', 'xkcd:spring green': '#a9f971', 'xkcd:dark orange': '#c65102', 'xkcd:sand': '#e2ca76', 'xkcd:pastel green': '#b0ff9d', 'xkcd:mint': '#9ffeb0', 'xkcd:light orange': '#fdaa48', 'xkcd:bright pink': '#fe01b1', 'xkcd:chartreuse': '#c1f80a', 'xkcd:deep purple': '#36013f', 'xkcd:dark brown': '#341c02', 'xkcd:taupe': '#b9a281', 'xkcd:pea green': '#8eab12', 'xkcd:puke green': '#9aae07', 'xkcd:kelly green': '#02ab2e', 'xkcd:seafoam green': '#7af9ab', 'xkcd:blue green': '#137e6d', 'xkcd:khaki': '#aaa662', 'xkcd:burgundy': '#610023', 'xkcd:dark teal': '#014d4e', 'xkcd:brick red': '#8f1402', 'xkcd:royal purple': '#4b006e', 'xkcd:plum': '#580f41', 'xkcd:mint green': '#8fff9f', 'xkcd:gold': '#dbb40c', 'xkcd:baby blue': '#a2cffe', 'xkcd:yellow green': '#c0fb2d', 'xkcd:bright purple': '#be03fd', 'xkcd:dark red': '#840000', 'xkcd:pale blue': '#d0fefe', 'xkcd:grass green': '#3f9b0b', 'xkcd:navy': '#01153e', 'xkcd:aquamarine': '#04d8b2', 'xkcd:burnt orange': '#c04e01', 'xkcd:neon green': '#0cff0c', 'xkcd:bright blue': '#0165fc', 'xkcd:rose': '#cf6275', 'xkcd:light pink': '#ffd1df', 'xkcd:mustard': '#ceb301', 'xkcd:indigo': '#380282', 'xkcd:lime': '#aaff32', 'xkcd:sea green': '#53fca1', 'xkcd:periwinkle': '#8e82fe', 'xkcd:dark pink': '#cb416b', 'xkcd:olive green': '#677a04', 'xkcd:peach': '#ffb07c', 'xkcd:pale green': '#c7fdb5', 'xkcd:light brown': '#ad8150', 'xkcd:hot pink': '#ff028d', 'xkcd:black': '#000000', 'xkcd:lilac': '#cea2fd', 'xkcd:navy blue': '#001146', 'xkcd:royal blue': '#0504aa', 'xkcd:beige': '#e6daa6', 'xkcd:salmon': '#ff796c', 'xkcd:olive': '#6e750e', 'xkcd:maroon': '#650021', 'xkcd:bright green': '#01ff07', 'xkcd:dark purple': '#35063e', 'xkcd:mauve': '#ae7181', 'xkcd:forest green': '#06470c', 'xkcd:aqua': '#13eac9', 'xkcd:cyan': '#00ffff', 'xkcd:tan': '#d1b26f', 'xkcd:dark blue': '#00035b', 'xkcd:lavender': '#c79fef', 'xkcd:turquoise': '#06c2ac', 'xkcd:dark green': '#033500', 'xkcd:violet': '#9a0eea', 'xkcd:light purple': '#bf77f6', 'xkcd:lime green': '#89fe05', 'xkcd:grey': '#929591', 'xkcd:sky blue': '#75bbfd', 'xkcd:yellow': '#ffff14', 'xkcd:magenta': '#c20078', 'xkcd:light green': '#96f97b', 'xkcd:orange': '#f97306', 'xkcd:teal': '#029386', 'xkcd:light blue': '#95d0fc', 'xkcd:red': '#e50000', 'xkcd:brown': '#653700', 'xkcd:pink': '#ff81c0', 'xkcd:blue': '#0343df', 'xkcd:green': '#15b01a', 'xkcd:purple': '#7e1e9c'}\n\"\"\"\n</code></pre> <p></p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#_5","title":"\u989c\u8272\u503c\u8f6c\u6362\u4e0e\u64cd\u4f5c","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#_6","title":"\u989c\u8272\u8f6c\u6362","text":"\u989c\u8272\u8f6c\u6362<pre><code>mpl.colors.to_hex(\"gold\")\n\"\"\"\n'#ffd700'\n\"\"\"\n\nmpl.colors.to_hex(\"gold\", keep_alpha=True)\n\"\"\"\n'#ffd700ff'\n\"\"\"\n\nmpl.colors.to_rgb(\"gold\")\n\"\"\"\n(1.0, 0.8431372549019608, 0.0)\n\"\"\"\n\nmpl.colors.to_rgba(\"gold\")\n\"\"\"\n(1.0, 0.8431372549019608, 0.0, 1.0)\n\"\"\"\n\nmpl.colors.to_rgba(\"gold\", alpha=0.5)\n\"\"\"\n(1.0, 0.8431372549019608, 0.0, 0.5)\n\"\"\"\n\nmpl.colors.to_rgba_array(\"gold\", alpha=[0.5, 0.6, 0.3])\n\"\"\"\n[[1.         0.84313725 0.         0.5       ]\n [1.         0.84313725 0.         0.6       ]\n [1.         0.84313725 0.         0.3       ]]\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#hlsset_hls_values","title":"\u72ec\u7acb\u8bbe\u7f6ehls\uff08set_hls_values\uff09","text":"<p>seaborn.set_hls_values \u2014 seaborn 0.13.2 documentation</p> <p>\u66f4\u65b0\u989c\u8272\u7684hls\u5e76\u8fd4\u56deRGB\u5143\u7ec4</p> \u72ec\u7acb\u8bbe\u7f6ehls\uff08set_hls_values\uff09<pre><code>sns.set_hls_values(\"gold\", h=0.2, l=0.5, s=0.5)\n\"\"\"\n(0.6499999999999999, 0.75, 0.25)\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#saturatedesaturate","title":"\u9971\u548c\uff08saturate\uff09\u4e0e\u53bb\u9971\u548c\uff08desaturate\uff09","text":"<p>seaborn.saturate \u2014 seaborn 0.13.2 documentation</p> <p>seaborn.desaturate \u2014 seaborn 0.13.2 documentation</p> <ol> <li> <p><code>sns.saturate(color)</code>\uff1a\u8fd4\u56de\u540c\u4e00\u8272\u8c03\u989c\u8272\u7684\u6ee1\u9971\u548c\u5ea6\u989c\u8272RGB\u5143\u7ec4</p> </li> <li> <p><code>sns.desaturate(color, prop)</code>\uff1a\u964d\u4f4e\u989c\u8272\u7684\u9971\u548c\u5ea6(*prop)\u5e76\u8fd4\u56deRGB\u5143\u7ec4</p> </li> </ol> \u9971\u548c\uff08saturate\uff09\u4e0e\u53bb\u9971\u548c\uff08desaturate\uff09<pre><code>sns.desaturate(\"gold\", 0.5)\n\"\"\"\n(0.75, 0.6715686274509804, 0.25)\n\"\"\"\n\nsns.saturate((0.75, 0.6715686274509804, 0.25))\n\"\"\"\n(1.0, 0.8431372549019608, 0.0)\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#colormappalette","title":"\u8c03\u8272\u677f\uff08colormap/Palette\uff09","text":"<p>\u5728matplotlib\u4e2d\uff0c\u5c06\u591a\u79cd\u989c\u8272\u7ec4\u5408\u6210\u4e0d\u540c\u7684\u914d\u8272\u65b9\u6848\uff0c\u6bcf\u79cd\u914d\u8272\u65b9\u6848\u79f0\u4e3a\u4e00\u4e2a\u8c03\u8272\u677f(colormap)\u3002colormap\u7684\u4f18\u52bf\u5728\u4e8e\u5b83\u53ef\u4ee5\u901a\u8fc7\u989c\u8272\u68af\u5ea6\u6765\u5c55\u793a\u6570\u636e\u7684\u8303\u56f4\u548c\u5206\u5e03\uff0c\u4f7f\u6570\u636e\u7684\u9ad8\u4f4e\u3001\u8d8b\u52bf\u6216\u5206\u7c7b\u4e00\u76ee\u4e86\u7136\uff0c\u540c\u65f6\uff0c\u8c03\u7528\u7b80\u5355\uff0c\u907f\u514d\u4e00\u79cd\u4e00\u79cd\u5355\u989c\u8272\u8bbe\u7f6e\u3002</p> <p>Note</p> <p>\u5728matplotlib\u4e2d\uff0ccolormaps\u4e00\u822c\u9ed8\u8ba4\u88ab\u5b9a\u4e49\u4e3a256\u4e2a\u989c\u8272\u503c\uff0c\u5373256\u4e2aRGB\u6216\u8005RGBA\u7684\u989c\u8272\uff08\u6bcf\u79cd\u989c\u8272\u503c\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u6216\u80054\u7684\u6570\u7ec4\uff0c\u8868\u793aRGB\u503c[Red Green Blue]\u6216\u8005RGBA\u503c[Red Green Blue Alpha]\uff09\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u5927\u591a\u6570\u56fe\u5f62\u7cfb\u7edf\u4e2d\uff0c256\u662f\u5e38\u7528\u7684\u5206\u8fa8\u7387\uff0c\u7528\u6765\u5e73\u6ed1\u663e\u793a\u6570\u636e\u7684\u989c\u8272\u6e10\u53d8\u6548\u679c\u3002\u8fd9\u4e9b\u989c\u8272\u503c\u901a\u5e38\u662f\u901a\u8fc7\u63d2\u503c\u6216\u76f4\u63a5\u5b9a\u4e49\u7684\u65b9\u5f0f\u6784\u5efa\u7684\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#_7","title":"\u5185\u7f6e\u8c03\u8272\u677f","text":"<p>Colormap reference \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.cm \u2014 Matplotlib 3.10.0 documentation</p> <p>\u8c03\u7528\u5f62\u5f0f\uff1a</p> <ol> <li> <p>name\uff1a\u5982'viridis'</p> </li> <li> <p>Colormap\u5bf9\u8c61</p> <ol> <li> <p><code>mpl.colormaps[name]</code>\uff1a\u5982<code>mpl.colormaps['viridis']</code></p> </li> <li> <p><code>mpl.colormaps.get_cmap(name)</code>\uff1a\u5982<code>mpl.colormaps.get_cmap(\"viridis\")</code></p> <p>\u5982\u679cname\u4e3aNone\uff0c\u5219\u8fd4\u56dercParams[\"image.cmap\"]\u4e2d\u5b9a\u4e49\u7684Colormap\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u4e3a'viridis'\u3002</p> </li> <li> <p><code>plt.get_cmap(name)</code>\uff1a\u5982<code>plt.get_cmap(\"viridis\")</code>\u3002\u540c\u4e0a</p> </li> <li> <p><code>mpl.cm.name</code>\uff1a\u5982<code>mpl.cm.viridis</code></p> </li> </ol> </li> </ol> \u5185\u7f6e\u8c03\u8272\u677f<pre><code>mpl.colormaps()\n\"\"\"\n[# \u987a\u5e8f\u8c03\u8272\u677f\uff08sequential colormaps\uff0c39 x 2\uff09\n 'magma', 'inferno', 'plasma', 'viridis', 'cividis', \n 'magma_r', 'inferno_r', 'plasma_r', 'viridis_r', 'cividis_r', \n 'Greys', 'Purples', 'Blues', 'Greens', 'Oranges', 'Reds', 'YlOrBr', 'YlOrRd', 'OrRd', 'PuRd', 'RdPu', 'BuPu', 'GnBu', 'PuBu', 'YlGnBu', 'PuBuGn', 'BuGn', 'YlGn', \n 'Greys_r', 'Purples_r', 'Blues_r', 'Greens_r', 'Oranges_r', 'Reds_r', 'YlOrBr_r', 'YlOrRd_r', 'OrRd_r', 'PuRd_r', 'RdPu_r', 'BuPu_r', 'GnBu_r', 'PuBu_r', 'YlGnBu_r', 'PuBuGn_r', 'BuGn_r', 'YlGn_r', \n 'binary', 'gist_yarg', 'gist_gray', 'gray', 'bone', 'pink', 'spring', 'summer', 'autumn', 'winter', 'cool', 'Wistia', 'hot', 'afmhot', 'gist_heat', 'copper', \n 'binary_r', 'gist_yarg_r', 'gist_gray_r', 'gray_r', 'bone_r', 'pink_r', 'spring_r', 'summer_r', 'autumn_r', 'winter_r', 'cool_r', 'Wistia_r', 'hot_r', 'afmhot_r', 'gist_heat_r', 'copper_r', \n\n # \u79bb\u6563\u8c03\u8272\u677f\uff08diverging colormaps\uff0c15 x 2\uff09\n 'PiYG', 'PRGn', 'BrBG', 'PuOr', 'RdGy', 'RdBu', 'RdYlBu', 'RdYlGn', 'Spectral', 'coolwarm', 'bwr', 'seismic', 'berlin', 'managua', 'vanimo', \n 'PiYG_r', 'PRGn_r', 'BrBG_r', 'PuOr_r', 'RdGy_r', 'RdBu_r', 'RdYlBu_r', 'RdYlGn_r', 'Spectral_r', 'coolwarm_r', 'bwr_r', 'seismic_r', 'berlin_r', 'managua_r', 'vanimo_r', \n\n # \u5faa\u73af\u8c03\u8272\u677f\uff08cyclic colormaps\uff0c3 x 2\uff09\n 'twilight', 'twilight_shifted', 'hsv', \n 'twilight_r', 'twilight_shifted_r', 'hsv_r', \n\n # \u5b9a\u6027\u8c03\u8272\u677f\uff08qualitative colormaps\uff0c12 x 2\uff09\n 'Pastel1', 'Pastel2', 'Paired', 'Accent', 'Dark2', 'Set1', 'Set2', 'Set3', 'tab10', 'tab20', 'tab20b', 'tab20c', \n 'Pastel1_r', 'Pastel2_r', 'Paired_r', 'Accent_r', 'Dark2_r', 'Set1_r', 'Set2_r', 'Set3_r', 'tab10_r', 'tab20_r', 'tab20b_r', 'tab20c_r', \n\n # \u6df7\u6742\u8c03\u8272\u677f\uff08miscellaneous colormaps\uff0c17 x 2\uff09\n 'flag', 'prism', 'ocean', 'gist_earth', 'terrain', 'gist_stern', 'gnuplot', 'gnuplot2', 'CMRmap', 'cubehelix', 'brg', 'gist_rainbow', 'rainbow', 'jet', 'turbo', 'nipy_spectral', 'gist_ncar', \n 'flag_r', 'prism_r', 'ocean_r', 'gist_earth_r', 'terrain_r', 'gist_stern_r', 'gnuplot_r', 'gnuplot2_r', 'CMRmap_r', 'cubehelix_r', 'brg_r', 'gist_rainbow_r', 'rainbow_r', 'jet_r', 'turbo_r', 'nipy_spectral_r', 'gist_ncar_r', \n\n # \u5176\u5b83\uff084 x 2\uff09\n 'grey', 'gist_grey', 'gist_yerg', 'Grays', \n 'grey_r', 'gist_grey_r', 'gist_yerg_r', 'Grays_r']\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#sequential-colormaps39-x-2","title":"\u987a\u5e8f\u8c03\u8272\u677f\uff08sequential colormaps\uff0c39 x 2\uff09","text":"<p>Choosing Colormaps in Matplotlib \u2014 Matplotlib 3.10.0 documentation</p> <p>Choosing Colormaps in Matplotlib \u2014 Matplotlib 3.10.0 documentation</p> <p>\u987a\u5e8f\u8c03\u8272\u677f\u7684\u7279\u70b9\u662f\u8272\u8c03\u9010\u6b65\u53d8\u5316\uff0c\u901a\u5e38\u5355\u4e00\u8272\u8c03\u4f1a\u968f\u7740\u4eae\u5ea6\u6216\u9971\u548c\u5ea6\u7684\u589e\u52a0\u9010\u6e10\u8fc7\u6e21\u3002\u8fd9\u7c7bcolormap \u9002\u7528\u4e8e\u6709\u81ea\u7136\u987a\u5e8f\u7684\u6570\u636e\uff0c\u4f8b\u5982\u6570\u503c\u968f\u5927\u5c0f\u9012\u589e\u6216\u9012\u51cf\u7684\u60c5\u51b5\u3002\u5e38\u89c1\u5e94\u7528\u573a\u666f\u5305\u62ec\u8868\u793a\u6e29\u5ea6\u3001\u6d53\u5ea6\u3001\u5bc6\u5ea6\u7b49\u8fde\u7eed\u6027\u6570\u636e\uff0c\u4f7f\u89c2\u4f17\u80fd\u76f4\u89c2\u5730\u611f\u53d7\u5230\u6570\u636e\u53d8\u5316\u7684\u6e10\u8fdb\u6027\u3002</p> <p></p> <p></p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#diverging-colormaps15-x-2","title":"\u79bb\u6563\u8c03\u8272\u677f\uff08diverging colormaps\uff0c15 x 2\uff09","text":"<p>Choosing Colormaps in Matplotlib \u2014 Matplotlib 3.10.0 documentation</p> <p>\u79bb\u6563\u8c03\u8272\u677f\u7684\u7279\u70b9\u662f\u5728\u4e24\u79cd\u4e0d\u540c\u989c\u8272\u4e4b\u95f4\u53d8\u5316\uff0c\u989c\u8272\u7684\u4eae\u5ea6\u548c\u9971\u548c\u5ea6\u9010\u6e10\u53d8\u5316\uff0c\u4e14\u5728\u4e2d\u95f4\u90e8\u5206\u901a\u5e38\u4f7f\u7528\u672a\u9971\u548c\u7684\u989c\u8272\u3002\u5b83 \u9002\u7528\u4e8e\u6570\u636e\u4e2d\u6709\u5173\u952e\u4e2d\u503c\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u5730\u5f62\u56fe\u6216\u6570\u636e\u56f4\u7ed5\u96f6\u503c\u6ce2\u52a8\u65f6\uff0c\u53ef\u4ee5\u6e05\u6670\u5730\u5c55\u793a\u6570\u636e\u7684\u6b63\u8d1f\u5dee\u5f02\u4ee5\u53ca\u4e2d\u7acb\u533a\u57df\uff0c\u4ece\u800c\u7a81\u51fa\u6570\u636e\u7684\u5bf9\u79f0\u6027\u6216\u53d8\u5316\u7684\u5173\u952e\u70b9\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#cyclic-colormaps3-x-2","title":"\u5faa\u73af\u8c03\u8272\u677f\uff08cyclic colormaps\uff0c3 x 2\uff09","text":"<p>Choosing Colormaps in Matplotlib \u2014 Matplotlib 3.10.0 documentation</p> <p>\u5faa\u73af\u8c03\u8272\u677f\u901a\u8fc7\u4e24\u79cd\u4e0d\u540c\u7684\u989c\u8272\u5728\u4e2d\u95f4\u9010\u6e10\u8fc7\u6e21\uff0c\u5e76\u5728\u4e24\u7aef\u4ee5\u4e00\u4e2a\u53bb\u9971\u548c\u7684\u8272\u8c03\u8fde\u63a5\u3002\u8fd9\u79cd\u8272\u56fe \u9002\u7528\u4e8e\u5177\u6709\u5faa\u73af\u7279\u6027\u7684\u6570\u503c\uff0c\u4f8b\u5982\u76f8\u4f4d\u89d2\u3001\u98ce\u5411\u6216\u8005\u4e00\u5929\u4e2d\u7684\u65f6\u95f4\u7b49\uff0c\u8fd9\u4e9b\u6570\u636e\u7684\u503c\u5728\u8fbe\u5230\u67d0\u4e2a\u6781\u9650\u540e\u4f1a\u91cd\u65b0\u56de\u5230\u8d77\u70b9\u3002\u901a\u8fc7\u4f7f\u7528\u5faa\u73af\u578b\u8272\u56fe\uff0c\u53ef\u4ee5\u76f4\u89c2\u5730\u5c55\u793a\u6570\u636e\u7684\u5468\u671f\u6027\u53d8\u5316\uff0c\u907f\u514d\u5728\u6570\u636e\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u70b9\u4ea7\u751f\u4e0d\u5fc5\u8981\u7684\u65ad\u88c2\u611f\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#qualitative-colormaps12-x-2","title":"\u5b9a\u6027\u8c03\u8272\u677f\uff08qualitative colormaps\uff0c12 x 2\uff09","text":"<p>Choosing Colormaps in Matplotlib \u2014 Matplotlib 3.10.0 documentation</p> <p>\u5b9a\u6027\u8c03\u8272\u677f\u901a\u5e38\u4f7f\u7528\u591a\u79cd\u4e0d\u540c\u7684\u989c\u8272\uff0c\u65e8\u5728\u533a\u5206\u6ca1\u6709\u5185\u5728\u987a\u5e8f\u6216\u5173\u7cfb\u7684\u6570\u636e\u3002\u8fd9\u7c7b\u8272\u56fe\u975e\u5e38 \u9002\u5408\u7528\u4e8e\u8868\u793a\u7c7b\u522b\u6027\u7684\u6570\u636e\uff0c\u4f8b\u5982\u4e0d\u540c\u7684\u79cd\u7c7b\u3001\u7fa4\u4f53\u6216\u7c7b\u522b\uff0c\u5176\u4e2d\u5404\u4e2a\u6570\u636e\u4e4b\u95f4\u6ca1\u6709\u5927\u5c0f\u6216\u4f18\u5148\u7ea7\u7684\u5173\u7cfb\u3002\u5b9a\u6027\u578b\u8272\u56fe\u901a\u8fc7\u9c9c\u660e\u7684\u8272\u5f69\u5bf9\u6bd4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u7c7b\u522b\u7684\u6570\u636e\u66f4\u52a0\u5bb9\u6613\u533a\u5206\uff0c\u4ece\u800c\u5e2e\u52a9\u6211\u4eec\u6e05\u6670\u5730\u8bc6\u522b\u6570\u636e\u4e2d\u7684\u4e0d\u540c\u5206\u7c7b\u4fe1\u606f\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#miscellaneous-colormaps17-x-2","title":"\u6df7\u6742\u8c03\u8272\u677f\uff08miscellaneous colormaps\uff0c17 x 2\uff09","text":"<p>Choosing Colormaps in Matplotlib \u2014 Matplotlib 3.10.0 documentation</p> <p>\u6df7\u6742\u8c03\u8272\u677f\u5305\u542b\u4e00\u4e9b\u7279\u6b8a\u7528\u9014\u7684\u8272\u56fe\uff0c\u5b83\u4eec\u662f\u4e3a\u4e86\u7279\u5b9a\u7684\u7ed8\u56fe\u9700\u6c42\u800c\u8bbe\u8ba1\u7684\u3002\u4f8b\u5982gist_earth\u3001ocean\u548cterrain\u8272\u56fe\u901a\u5e38\u7528\u4e8e\u7ed8\u5236\u5730\u5f62\u56fe\uff0c\u5176\u4e2d\u7eff\u68d5\u8272\u4ee3\u8868\u5730\u9762\uff0c\u84dd\u8272\u4fa7\u5219\u4ee3\u8868\u6c34\u6df1\uff0c\u9002\u7528\u4e8e\u5730\u7406\u548c\u6d77\u6d0b\u76f8\u5173\u7684\u53ef\u89c6\u5316\u3002</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#_8","title":"\u81ea\u5b9a\u4e49\u8c03\u8272\u677f","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#listedcolormap","title":"ListedColormap\u8c03\u8272\u677f","text":"<p>Creating Colormaps in Matplotlib \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.colors.ListedColormap \u2014 Matplotlib 3.10.0 documentation</p> <p>ListedColormap\u8c03\u8272\u677f\u901a\u8fc7\u9884\u5b9a\u4e49\u7684\u4e00\u7ec4\u79bb\u6563\u989c\u8272\u521b\u5efa\uff0c\u8fd4\u56de\u4e00\u4e2aColormap\u5bf9\u8c61\u3002\u5b83 \u9002\u5408\u663e\u793a\u6709\u5206\u7c7b\u7279\u5f81\u7684\u6570\u636e \u3002\u5185\u7f6e\u7684 \u987a\u5e8f\u8c03\u8272\u677f\uff08'magma', 'inferno', 'plasma', 'viridis', 'cividis'\uff09\u3001\u79bb\u6563\u8c03\u8272\u677f\uff08'berlin', 'managua', 'vanimo'\uff09\u3001\u5faa\u73af\u8c03\u8272\u677f\uff08'twilight', 'twilight_shifted'\uff09\u3001\u5b9a\u6027\u8c03\u8272\u677f\u3001\u6df7\u6742\u8c03\u8272\u677f\uff08'turbo'\uff09 \u5373\u662f\u901a\u8fc7\u6b64\u65b9\u5f0f\u521b\u5efa\u3002</p> <p>\u901a\u8fc7<code>mpl.colors.ListedColormap(colors, name=\"from_list\", N=None)</code>\u5b9e\u73b0\u3002</p> \u989c\u8272\u5217\u8868RGB/RGBA\u6570\u7ec4 \u989c\u8272\u5217\u8868<pre><code>color_list = [\"#de2c00\", \"#aaed0c\", \"#ac38ea\", \"#0ec4c4\", \"#f194e9\"]\n# color_list = [[222/255, 44/255, 0], [170/255, 237/255, 12/255], [172/255, 56/255, 234/255], [14/255, 196/255, 196/255], [241/255, 148/255, 233/255]]\ncmap = mpl.colors.ListedColormap(colors=color_list, name=\"my_cmap\", N=10)\n\"\"\"\n&lt;matplotlib.colors.ListedColormap object at 0x0000029B253CAA20&gt;\n\"\"\"\n</code></pre> RGB/RGBA\u6570\u7ec4<pre><code>color_array = np.array([[222/255, 44/255, 0],\n                        [170/255, 237/255, 12/255],\n                        [172/255, 56/255, 234/255],\n                        [14/255, 196/255, 196/255],\n                        [241/255, 148/255, 233/255]])\ncmap = mpl.colors.ListedColormap(colors=color_array, name=\"my_cmap\", N=10)\n\"\"\"\n&lt;matplotlib.colors.ListedColormap object at 0x0000020E470AB290&gt;\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#linearsegmentedcolormap","title":"LinearSegmentedColormap\u8c03\u8272\u677f","text":"<p>Creating Colormaps in Matplotlib \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.colors.LinearSegmentedColormap \u2014 Matplotlib 3.10.0 documentation</p> <p>LinearSegmentedColormap\u8c03\u8272\u677f\u901a\u8fc7\u5c06\u7ed9\u5b9a\u989c\u8272\u951a\u5b9a\u5728\u951a\u70b9\uff0c\u7136\u540e\u5728\u951a\u70b9\u989c\u8272\u95f4\u63d2\u5165\u8fde\u7eed\u7684\u989c\u8272\u6e10\u53d8\u800c\u521b\u5efa\uff0c\u8fd4\u56de\u4e00\u4e2aColormap\u5bf9\u8c61\u3002\u9002\u5408\u8868\u73b0\u6570\u636e\u7684\u8fde\u7eed\u53d8\u5316\u3002\u5185\u7f6e\u7684\u8c03\u8272\u677f\u4e2d\u9664\u4e0a\u8ff0\u5916\u5747\u4ee5\u6b64\u65b9\u5f0f\u521b\u5efa\u3002</p> <p>\u901a\u8fc7<code>mpl.colors.LinearSegmentedColormap.from_list(name, colors, N=256)</code>\u5b9e\u73b0\u3002</p> \u989c\u8272\u5217\u8868RGB/RGBA\u6570\u7ec4(value, color)\u951a\u70b9\u5217\u8868 \u989c\u8272\u5217\u8868<pre><code>color_list = [\"#de2c00\", \"#aaed0c\", \"#ac38ea\", \"#0ec4c4\", \"#f194e9\"]\n# color_list = [[222/255, 44/255, 0], [170/255, 237/255, 12/255], [172/255, 56/255, 234/255], [14/255, 196/255, 196/255], [241/255, 148/255, 233/255]\ncmap = mpl.colors.LinearSegmentedColormap.from_list(colors=color_list, name=\"my_cmap\", N=10)\n\"\"\"\n&lt;matplotlib.colors.LinearSegmentedColormap object at 0x000002151B85BF80&gt;\n\"\"\"\n</code></pre> <p></p> RGB/RGBA\u6570\u7ec4<pre><code>color_array = np.array([[222/255, 44/255, 0],\n                        [170/255, 237/255, 12/255],\n                        [172/255, 56/255, 234/255],\n                        [14/255, 196/255, 196/255],\n                        [241/255, 148/255, 233/255]])\ncmap = mpl.colors.LinearSegmentedColormap.from_list(colors=color_array, name=\"my_cmap\", N=10)\n\"\"\"\n&lt;matplotlib.colors.LinearSegmentedColormap object at 0x000001B56A06AF60&gt;\n\"\"\"\n</code></pre> <p></p> (value, color)\u951a\u70b9\u5217\u8868<pre><code># \u6ce8\u610f\u7b2c\u4e00\u4e2a\u951a\u70b9\u5fc5\u987b\u662f0\uff0c\u6700\u540e\u4e00\u4e2a\u951a\u70b9\u5fc5\u987b\u662f1\ncolor_list = [(0, \"#de2c00\"), (0.5, \"#aaed0c\"), (0.7, \"#ac38ea\"), (0.8, \"#0ec4c4\"), (1, \"#f194e9\")]\ncmap = mpl.colors.LinearSegmentedColormap.from_list(colors=color_list, name=\"my_cmap\", N=10)\n\"\"\"\n&lt;matplotlib.colors.LinearSegmentedColormap object at 0x0000021FE8DA6C60&gt;\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#cubehelix","title":"cubehelix\u8c03\u8272\u677f","text":"<p>seaborn.cubehelix_palette \u2014 seaborn 0.13.2 documentation</p> <p>seaborn.choose_cubehelix_palette \u2014 seaborn 0.13.2 documentation</p> <p>\u57fa\u4e8ecubehelix\uff08\u7acb\u65b9\u87ba\u65cb\uff09\u7cfb\u7edf\u6784\u5efasequential\u8c03\u8272\u677f\uff0c\u751f\u6210\u4e00\u4e2a \u4eae\u5ea6\u7ebf\u6027\u9012\u51cf\uff08\u6216\u9012\u589e\uff09 \u7684\u8c03\u8272\u677f\uff0c\u4f7f\u7528\u8be5\u989c\u8272\u751f\u6210\u7684\u56fe\u5f62\u65e0\u8bba\u662f\u6253\u5370\u6210\u9ed1\u767d\u56fe\u50cf\u6216\u88ab\u8272\u76f2\u8005\u89c2\u770b\u65f6\u90fd\u4f9d\u7136\u80fd\u591f\u6e05\u6670\u5c55\u73b0\u6570\u636e\u7684\u4e0d\u540c\u7279\u5f81\u3002</p> <p>Note</p> <p>\u6b64\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5 <code>'ch: &lt;cubehelix arguments&gt; [_r]'</code> \u5b57\u7b26\u4e32\u751f\u6210 cubehelix\u8c03\u8272\u677f\uff1a <code>\"ch: s=...,r=..., g=..., h=..., l=..., d=... [_r]\"</code>\uff0c\u5176\u4e2ds=\"start\", r=\"rot\", g=\"gamma\", h=\"hue\", l=\"light\", d=\"dark\"\uff0c_r\u8868\u793areverse=True</p> cubehelix_palettechoose_cubehelix_palette cubehelix_palette<pre><code>cmap = sns.cubehelix_palette(n_colors=6,      # (1)!\n                             start=0,         # (2)!\n                             rot=0.4,         # (3)!\n                             gamma=1.0,       # (4)!\n                             hue=0.8,         # (5)!\n                             light=0.85,      # (6)!\n                             dark=0.15,       # (7)!\n                             reverse=False,   # (8)!\n                             as_cmap=True     # (9)!\n                             )\n\"\"\"\n&lt;matplotlib.colors.ListedColormap object at 0x000001E6593DD4C0&gt;\n\"\"\"\n</code></pre> <ol> <li>\u989c\u8272\u6570</li> <li>\u87ba\u65cb\u8d77\u59cb\u5904\u8272\u8c03\u503c[0, 3]</li> <li>\u8272\u8f6e\u65cb\u8f6c\u503c[-1, 1]</li> <li>\u975e\u7ebf\u6027\u7a81\u51fa\u6697\u8272[0, 1)\u6216\u4eae\u8272(1, +\u221e)</li> <li>\u8272\u5f69\u9971\u548c\u5ea6[0, 1]</li> <li>\u6700\u4eae\u8272\u5f3a\u5ea6[0, 1]</li> <li>\u6700\u6697\u8272\u5f3a\u5ea6[0, 1]</li> <li>True\uff1a\u6697\u2192\u4eae\uff1bFalse\uff1a\u4eae\u2192\u6697</li> <li>True\uff1a\u8fd4\u56deColormap\u5bf9\u8c61\uff1bFalse\uff1a\u8fd4\u56deRGB\u5143\u7ec4\u5217\u8868</li> </ol> <p></p> choose_cubehelix_palette<pre><code>sns.choose_cubehelix_palette(as_cmap=True)\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#dark","title":"dark\u8c03\u8272\u677f","text":"<p>seaborn.dark_palette \u2014 seaborn 0.13.2 documentation</p> <p>seaborn.choose_dark_palette \u2014 seaborn 0.13.2 documentation</p> <p>\u6df7\u5408\u6df1\u8272\u548c\u6307\u5b9a\u989c\u8272\uff0c\u6784\u5efasequential\u8c03\u8272\u677f\uff0c\u751f\u6210\u4e00\u4e2a \u6df1\u8272\u5230\u6307\u5b9a\u8272 \u7684\u8c03\u8272\u677f\u3002\u9002\u7528\u4e8e\u6570\u636e\u7684\u8303\u56f4\u5728\u611f\u5174\u8da3\u7684\u9ad8\u503c\u6570\u636e~\u4e0d\u611f\u5174\u8da3\u7684\u4f4e\u503c\u6570\u636e\u4e4b\u95f4\u7684\u53d8\u5316\u60c5\u51b5\u3002</p> <p><code>color</code> \u53c2\u6570\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u6307\u5b9a\uff0c\u5305\u62ec matplotlib \u4e2d\u5b9a\u4e49\u989c\u8272\u7684\u6240\u6709\u9009\u9879\u4ee5\u53ca seaborn \u5904\u7406\u7684\u4e00\u4e9b\u989d\u5916\u7684\u989c\u8272\u7a7a\u95f4\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 XKCD \u989c\u8272\u8c03\u67e5\u7684\u547d\u540d\u989c\u8272\u6570\u636e\u5e93\u3002</p> <p>Note</p> <p>\u6b64\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5 <code>'dark:&lt;color&gt;[_r]'</code> \u5b57\u7b26\u4e32\u751f\u6210dark\u8c03\u8272\u677f</p> dark_palettechoose_dark_palette dark_palette<pre><code>cmap = sns.dark_palette(\"green\",          # (1)!\n                        input='rgb',      # (2)!\n                        n_colors=6,       # (3)!\n                        reverse=False,    # (4)!\n                        as_cmap=True      # (5)!\n                        )\n\"\"\"\n&lt;matplotlib.colors.LinearSegmentedColormap object at 0x000001E6597A5580&gt;\n\"\"\"\n</code></pre> <ol> <li>\u9ad8\u503c\u989c\u8272(\u5341\u516d\u8fdb\u5236\u3001RGB\u5143\u7ec4\u3001html\u989c\u8272\u540d)</li> <li>\u89e3\u91cacolor\u7684\u989c\u8272\u7a7a\u95f4\uff0c\u53ef\u9009\u2018rgb\u2019, \u2018hls\u2019, \u2018husl\u2019, xkcd\u2019</li> <li>\u989c\u8272\u6570</li> <li>True\uff1a\u6307\u5b9a\u8272\u2192\u6df1\u8272\uff1bFalse\uff1a\u6df1\u8272\u2192\u6307\u5b9a\u8272</li> <li>True\uff1a\u8fd4\u56deColormap\u5bf9\u8c61\uff1bFalse\uff1a\u8fd4\u56deRGB\u5143\u7ec4\u5217\u8868</li> </ol> <p></p> choose_dark_palette<pre><code>sns.choose_dark_palette(input='rgb', as_cmap=False)\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#light","title":"light\u8c03\u8272\u677f","text":"<p>seaborn.light_palette \u2014 seaborn 0.13.2 documentation</p> <p>seaborn.choose_light_palette \u2014 seaborn 0.13.2 documentation</p> <p>\u6df7\u5408\u4eae\u8272\u548c\u6307\u5b9a\u989c\u8272\uff0c\u6784\u5efasequential\u8c03\u8272\u677f\uff0c\u751f\u6210\u4e00\u4e2a \u6d45\u8272\u5230\u6307\u5b9a\u8272 \u7684\u8c03\u8272\u677f\u3002</p> <p>Note</p> <p>\u6b64\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5 <code>'light:&lt;color&gt;[_r]'</code> \u5b57\u7b26\u4e32\u751f\u6210light\u8c03\u8272\u677f</p> light_palettechoose_light_palette light_palette<pre><code>cmap = sns.light_palette(\"green\",          # (1)!\n                         input='rgb',      # (2)!\n                         n_colors=6,       # (3)!\n                         reverse=False,    # (4)!\n                         as_cmap=True      # (5)!\n                         )\n\"\"\"\n&lt;matplotlib.colors.LinearSegmentedColormap object at 0x000001E659F781A0&gt;\n\"\"\"\n</code></pre> <ol> <li>\u9ad8\u503c\u989c\u8272(\u5341\u516d\u8fdb\u5236\u3001RGB\u5143\u7ec4\u3001html\u989c\u8272\u540d)</li> <li>\u89e3\u91cacolor\u7684\u989c\u8272\u7a7a\u95f4\uff0c\u53ef\u9009\u2018rgb\u2019, \u2018hls\u2019, \u2018husl\u2019, xkcd\u2019</li> <li>\u989c\u8272\u6570</li> <li>True\uff1a\u6307\u5b9a\u8272\u2192\u6d45\u8272\uff1bFalse\uff1a\u6d45\u8272\u2192\u6307\u5b9a\u8272</li> <li>True\uff1a\u8fd4\u56deColormap\u5bf9\u8c61\uff1bFalse\uff1a\u8fd4\u56deRGB\u5143\u7ec4\u5217\u8868</li> </ol> <p></p> choose_light_palette<pre><code>sns.choose_light_palette(input='rgb', as_cmap=False)\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#diverging","title":"diverging\u8c03\u8272\u677f","text":"<p>seaborn.diverging_palette \u2014 seaborn 0.13.2 documentation</p> <p>seaborn.choose_diverging_palette \u2014 seaborn 0.13.2 documentation</p> <p>\u521b\u5efa\u4e24\u4e2a HUSL \u989c\u8272\u4e4b\u95f4\u7684diverging\u8c03\u8272\u677f\uff0c\u9002\u7528\u4e8e \u79bb\u6563\u578b\u6570\u636e \u3002\u9002\u7528\u4e8e \u6570\u636e\u8303\u56f4\u5728\u6709\u8da3\u7684\u4f4e\u503c\u548c\u6709\u8da3\u7684\u9ad8\u503c\u4e4b\u95f4 \uff0c \u5e76\u4e14\u6709\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u4e2d\u95f4\u503c\uff08\u4f8b\u5982\uff0c\u76f8\u5bf9\u4e8e\u67d0\u4e2a\u57fa\u7ebf\u503c\u7684\u53d8\u5316\u5206\u6570\uff09\u3002</p> diverging_palettechoose_diverging_palette diverging_palette<pre><code>cmap = sns.diverging_palette(h_neg=120,         # (1)!\n                             h_pos=220,         # (2)!\n                             s=75,              # (3)!\n                             l=50,              # (4)!\n                             sep=1,             # (5)!\n                             n=6,               # (6)!\n                             center='light',    # (7)!\n                             as_cmap=True       # (8)!\n                             )\n\"\"\"\n&lt;matplotlib.colors.LinearSegmentedColormap object at 0x000001E65CDC9100&gt;\n\"\"\"\n</code></pre> <ol> <li>\u8d1f\u5411\u7aef\u8272\u8c03[0, 359]</li> <li>\u6b63\u5411\u7aef\u8272\u8c03[0, 359]</li> <li>\u9971\u548c\u5ea6[0, 100]</li> <li>\u4eae\u5ea6[0, 100]</li> <li>\u4e2d\u95f4\u533a\u57df\u5927\u5c0f</li> <li>\u989c\u8272\u6570</li> <li>\u8c03\u8272\u677f\u4e2d\u5fc3\u662f\u6d45\u8272(\u201clight\u201d)\u8fd8\u662f\u6df1\u8272(\u201cdark\u201d)</li> <li>True\uff1a\u8fd4\u56deColormap\u5bf9\u8c61\uff1bFalse\uff1a\u8fd4\u56deRGB\u5143\u7ec4\u5217\u8868</li> </ol> <p></p> choose_diverging_palette<pre><code>sns.choose_diverging_palette(as_cmap=False)\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#mpl","title":"mpl\u8c03\u8272\u677f","text":"<p>seaborn.mpl_palette \u2014 seaborn 0.13.2 documentation</p> <p>\u57fa\u4e8ematplotlibl\u7684\u8c03\u8272\u677f\uff0c\u6784\u5efadiverging/sequential \u8c03\u8272\u677f\uff0c\u751f\u6210\u4e00\u4e2a\u79bb\u6563\u6216\u8005\u8fde\u7eed\u7684\u8c03\u8272\u677f\u3002</p> <p>\u5f53name\u9009\u62e9matplotlib\u4e2ddiverging\u578b\u8c03\u8272\u677f\u65f6\uff0c\u751f\u6210\u4e5f\u4e3adiverging\u578b\uff1b\u5f53name\u9009\u62e9matplotlib\u4e2dsequential\u578b\u8c03\u8272\u677f\u65f6\uff0c\u751f\u6210\u4e5f\u4e3asequential\u578b\u989c\u8272\u3002</p> mpl_palette<pre><code>cmap = sns.mpl_palette(\"viridis\",       # (1)!\n                       n_colors=6,      # (2)!\n                       as_cmap=True     # (3)!\n                       )\n\"\"\"\n&lt;matplotlib.colors.ListedColormap object at 0x000001E6597C8FE0&gt;\n\"\"\"\n</code></pre> <ol> <li>matplotlib\u4e2d\u6ce8\u518c\u7684\u8c03\u8272\u677f\u540d\u79f0</li> <li>\u989c\u8272\u6570</li> <li>True\uff1a\u8fd4\u56deColormap\u5bf9\u8c61\uff1bFalse\uff1a\u8fd4\u56deRGB\u5143\u7ec4\u5217\u8868</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#hlshusl","title":"hls\u8c03\u8272\u677f\u548chusl\u8c03\u8272\u677f","text":"<p>seaborn.hls_palette \u2014 seaborn 0.13.2 documentation</p> <p>seaborn.husl_palette \u2014 seaborn 0.13.2 documentation</p> <p>\u4eceHLS\u989c\u8272\u7cfb\u7edf\u548cHUSL\u989c\u8272\u7cfb\u7edf\u6784\u5efa\u6052\u5b9a\u4eae\u5ea6\u548c\u9971\u548c\u5ea6\u7684\u8c03\u8272\u677f\uff0c\u9002\u7528\u4e8e\u5206\u7c7b\u6216\u5faa\u73af\u6570\u636e\u3002 </p> <p>HSL\u989c\u8272\u7cfb\u7edf\u7531\u8272\u8c03(Hue)\u3001\u9971\u548c\u5ea6(Saturation)\u548c\u4eae\u5ea6(Lightness)\u4e09\u4e2a\u8981\u7d20\u7ec4\u6210\u3002HUSL(Human-friendly HSL)\u989c\u8272\u7cfb\u7edf\u662fHSL\u7684\u6539\u8fdb\u7248\u672c\uff0c\u63d0\u4f9b\u66f4\u52a0\u4eba\u7c7b\u53cb\u597d\u7684\u989c\u8272\uff0cHUSL\u8003\u8651\u4e86\u4eba\u773c\u5bf9\u989c\u8272\u7684\u611f\u77e5\u65b9\u5f0f\uff0c\u66f4\u597d\u5730\u5e73\u8861\u4e86\u8272\u76f8\u3001\u9971\u548c\u5ea6\u548c\u4eae\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8fd9\u4f7f\u5f97\u5728\u56fe\u5f62\u548c\u6570\u636e\u53ef\u89c6\u5316\u4e2d\u4f7f\u7528HUSL\u914d\u8272\u66f4\u5438\u4eba\u3002</p> hls_palettehusl_palette hls_palette<pre><code>cmap = sns.hls_palette(n_colors=6,      # (1)!\n                       h=0.01,          # (2)!\n                       l=0.6,           # (3)!\n                       s=0.65,          # (4)!\n                       as_cmap=True     # (5)!\n                       )\n\"\"\"\n&lt;matplotlib.colors.ListedColormap object at 0x000001E659814E30&gt;\n\"\"\"\n</code></pre> <ol> <li>\u989c\u8272\u6570</li> <li>\u8272\u8c03[0, 1]\uff0c\u6cbf\u5706\u5f62\u8def\u5f84\u5747\u5300\u91c7\u6837</li> <li>\u4eae\u5ea6[0, 1]</li> <li>\u9971\u548c\u5ea6[0, 1]</li> <li>True\uff1a\u8fd4\u56deColormap\u5bf9\u8c61\uff1bFalse\uff1a\u8fd4\u56deRGB\u5143\u7ec4\u5217\u8868</li> </ol> <p></p> husl_palette<pre><code>cmap = sns.husl_palette(n_colors=6,      # (1)!\n                        h=0.01,          # (2)!\n                        l=0.65,          # (3)!\n                        s=0.9,           # (4)!\n                        as_cmap=True     # (5)!\n                        )\n\"\"\"\n&lt;matplotlib.colors.ListedColormap object at 0x000001E659385730&gt;\n\"\"\"\n</code></pre> <ol> <li>\u989c\u8272\u6570</li> <li>\u8272\u8c03[0, 1]\uff0c\u6cbf\u5706\u5f62\u8def\u5f84\u5747\u5300\u91c7\u6837</li> <li>\u4eae\u5ea6[0, 1]</li> <li>\u9971\u548c\u5ea6[0, 1]</li> <li>True\uff1a\u8fd4\u56deColormap\u5bf9\u8c61\uff1bFalse\uff1a\u8fd4\u56deRGB\u5143\u7ec4\u5217\u8868</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#blend","title":"blend\u8c03\u8272\u677f","text":"<p>seaborn.blend_palette \u2014 seaborn 0.13.2 documentation</p> <p>\u521b\u5efa\u4e00\u4e2a\u5728\u989c\u8272\u5217\u8868\u4e4b\u95f4\u6df7\u5408\u7684\u8c03\u8272\u677f\u3002</p> <p>Note</p> <p>\u6b64\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5 <code>'blend:&lt;color&gt;,&lt;color&gt;,...'</code> \u5b57\u7b26\u4e32\u751f\u6210blend\u8c03\u8272\u677f</p> blend_palette<pre><code>cmap = sns.blend_palette([\"red\", \"blue\", \"green\"],    # (1)!\n                         input='rgb',                 # (2)!\n                         n_colors=6,                  # (3)!\n                         as_cmap=True                 # (4)!\n                         )\n\"\"\"\n&lt;matplotlib.colors.LinearSegmentedColormap object at 0x000001E65A10ED80&gt;\n\"\"\"\n</code></pre> <ol> <li>\u7531 input\u53c2\u6570\u89e3\u91ca\u7684\u591a\u79cd\u683c\u5f0f\u7684\u989c\u8272\u5e8f\u5217</li> <li>\u89e3\u91cacolor\u7684\u989c\u8272\u7a7a\u95f4\uff0c\u53ef\u9009\u2018rgb\u2019, \u2018hls\u2019, \u2018husl\u2019, xkcd\u2019</li> <li>\u989c\u8272\u6570</li> <li>True\uff1a\u8fd4\u56deColormap\u5bf9\u8c61\uff1bFalse\uff1a\u8fd4\u56deRGB\u5143\u7ec4\u5217\u8868</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#colorbrewer","title":"colorbrewer\u8c03\u8272\u677f","text":"<p>seaborn.choose_colorbrewer_palette \u2014 seaborn 0.13.2 documentation</p> <p>\u9009\u62e9 ColorBrewer \u8c03\u8272\u677f\u4e2d\u7684\u4e00\u4e2a\u3002\u8fd9\u4e9b\u8c03\u8272\u677f\u5185\u7f6e\u5728 matplotlib \u4e2d\uff0c\u53ef\u4ee5\u5728\u8bb8\u591a seaborn \u51fd\u6570\u4e2d\u6309\u540d\u79f0\u4f7f\u7528\uff0c\u6216\u8005\u901a\u8fc7\u4f20\u9012\u6b64\u51fd\u6570\u8fd4\u56de\u7684\u5bf9\u8c61\u3002</p> choose_colorbrewer_palette<pre><code>cmap = sns.choose_colorbrewer_palette('sequential',    # (1)!\n                                      as_cmap=True     # (2)!\n                                      )\n\"\"\"\n&lt;matplotlib.colors.LinearSegmentedColormap object at 0x000001E65CED98B0&gt;\n\"\"\"\n</code></pre> <ol> <li>\u6570\u636e\u7c7b\u578b\uff1a\u53ef\u9009\u2018sequential\u2019, \u2018diverging\u2019, \u2018qualitative\u2019</li> <li>True\uff1a\u8fd4\u56deColormap\u5bf9\u8c61\uff1bFalse\uff1a\u8fd4\u56deRGB\u5143\u7ec4\u5217\u8868</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#crayon","title":"crayon\u8c03\u8272\u677f","text":"<p>seaborn.crayon_palette \u2014 seaborn 0.13.2 documentation</p> <p>\u521b\u5efa\u4e00\u4e2a\u4f7f\u7528 Crayola \u8721\u7b14\u989c\u8272\u540d\u79f0\u7684\u8c03\u8272\u677f\u3002\u989c\u8272\u53d6\u81eaList_of_Crayola_crayon_colors\u3002</p> crayonscrayon_palette crayons<pre><code>sns.crayons\n\"\"\"\n{'Almond': '#EFDECD',\n 'Antique Brass': '#CD9575',\n 'Apricot': '#FDD9B5',\n 'Aquamarine': '#78DBE2',\n 'Asparagus': '#87A96B',\n ...\n 'Wild Watermelon': '#FC6C85',\n 'Wisteria': '#CDA4DE',\n 'Yellow': '#FCE883',\n 'Yellow Green': '#C5E384',\n 'Yellow Orange': '#FFAE42'}\n\"\"\"\n</code></pre> crayon_palette<pre><code>sns.crayon_palette(['Wisteria', 'Yellow', 'Violet (Purple)'])   # (1)!\n\"\"\"\n[(0.803921568627451, 0.6431372549019608, 0.8705882352941177), \n (0.9882352941176471, 0.9098039215686274, 0.5137254901960784), \n (0.5725490196078431, 0.43137254901960786, 0.6823529411764706)]\n\"\"\"\n</code></pre> <ol> <li>crayons\u5b57\u5178\u4e2d\u989c\u8272\u7684\u5217\u8868</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#xkcd_1","title":"xkcd\u8c03\u8272\u677f","text":"<p>seaborn.xkcd_palette \u2014 seaborn 0.13.2 documentation</p> <p>\u521b\u5efa\u4e00\u4e2a\u5305\u542b xkcd \u989c\u8272\u8c03\u67e5\u4e2d\u989c\u8272\u540d\u79f0\u7684\u8c03\u8272\u677f\u3002</p> xkcd_rgbxkcd_palette xkcd_rgb<pre><code>sns.xkcd_rgb\n\"\"\"\n{'acid green': '#8ffe09',\n 'adobe': '#bd6c48',\n 'algae': '#54ac68',\n 'algae green': '#21c36f',\n 'almost black': '#070d0d',\n ...\n 'yellowish green': '#b0dd16',\n 'yellowish orange': '#ffab0f',\n 'yellowish tan': '#fcfc81',\n 'yellowy brown': '#ae8b0c',\n 'yellowy green': '#bff128'}\n\"\"\"\n</code></pre> xkcd_palette<pre><code>sns.xkcd_palette(['yellowy green', 'yellowy brown', 'algae green'])    # (1)!\n\"\"\"\n[(0.7490196078431373, 0.9450980392156862, 0.1568627450980392), \n (0.6823529411764706, 0.5450980392156862, 0.047058823529411764), \n (0.12941176470588237, 0.7647058823529411, 0.43529411764705883)]\n\"\"\"\n</code></pre> <ol> <li>xkcd_rgb\u5b57\u5178\u4e2d\u989c\u8272\u7684\u5217\u8868</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#_9","title":"\u6ce8\u518c\u8c03\u8272\u677f","text":"<p>Creating Colormaps in Matplotlib \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.cm \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.cm \u2014 Matplotlib 3.10.0 documentation</p> <p>\u5c06\u81ea\u5b9a\u4e49\u7684\u8c03\u8272\u677f\u8fdb\u884c\u6ce8\u518c\uff0c\u52a0\u5165<code>mpl.colormaps()</code>\u5217\u8868\u4e2d\uff0c\u53ef\u4ee5\u5b9e\u73b0\u50cf\u5185\u7f6e\u8c03\u8272\u677f\u7684\u8c03\u7528\u65b9\u5f0f\uff0c\u5982\u76f4\u63a5\u4f7f\u7528\u540d\u79f0\u3001\u4f7f\u7528<code>mpl.colormaps[my_map]</code>\u7b49\u3002\u901a\u8fc7\u4f7f\u7528<code>mpl.colormaps.register</code>\u5b9e\u73b0\uff0c\u5176\u4e2dname\u53c2\u6570\u8bbe\u7f6e\u540d\u79f0\uff0c\u9ed8\u8ba4\u4f7f\u7528\u81ea\u5b9a\u4e49\u8c03\u8272\u677f\u81ea\u8eab\u7684\u540d\u79f0\uff1bforce\u53c2\u6570\u8bbe\u7f6e\u662f\u5426\u80fd\u591f\u91cd\u5199\u5df2\u6709\u7684\u8c03\u8272\u677f\uff0c\u9ed8\u8ba4\u4e3aFalse\uff0c\u5373\u53ea\u5141\u8bb8\u6dfb\u52a0\u4e0d\u5141\u8bb8\u91cd\u5199\u3002</p> <p>\u901a\u8fc7<code>mpl.colormaps.unregister</code>\u4ece\u6ce8\u518c\u8c03\u8272\u677f\u4e2d\u79fb\u9664\u6ce8\u518c\u7684\u81ea\u5b9a\u4e49\u8c03\u8272\u677f\uff08\u6ce8\u610f\uff01\u65e0\u6cd5\u79fb\u9664\u6a21\u5757\u672c\u8eab\u5185\u7f6e\u7684\u8c03\u8272\u677f\uff09\u3002</p> \u6ce8\u518c\u4e3a\u5185\u7f6e\u8c03\u8272\u677f\u53d6\u6d88\u6ce8\u518c \u6ce8\u518c\u4e3a\u5185\u7f6e\u8c03\u8272\u677f<pre><code># \u81ea\u5b9a\u4e49\u8c03\u8272\u677f\ncolor_list = [\"#de2c00\", \"#aaed0c\", \"#ac38ea\", \"#0ec4c4\", \"#f194e9\"]\ncmap = mpl.colors.ListedColormap(colors=color_list, name=\"my_cmap\", N=10)\n# \u6ce8\u518c\nmpl.colormaps.register(cmap=cmap, name=\"my_cmap\", force=False)\n# \u8c03\u7528\ncmap = mpl.colormaps[\"my_cmap\"]\n\"\"\"\n&lt;matplotlib.colors.ListedColormap object at 0x000001BE74B8B080&gt;\n\"\"\"\n</code></pre> <p></p> \u53d6\u6d88\u6ce8\u518c<pre><code>mpl.colormaps.unregister(\"my_cmap\")\ncmap = mpl.colormaps[\"my_cmap\"]\n\"\"\"\nKeyError: \"'my_cmap' is not a known colormap name\"\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#reversed","title":"\u8c03\u8272\u677f\u53cd\u8f6c\uff08reversed\uff09","text":"<p>Creating Colormaps in Matplotlib \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.colors.Colormap \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.colors.ListedColormap \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.colors.LinearSegmentedColormap \u2014 Matplotlib 3.10.0 documentation</p> <p>\u5185\u7f6e\u8c03\u8272\u677f\u4e2d\u540d\u79f0\u540e\u52a0\u4e86<code>\"_r\"</code>\u7684\u5373\u4e3a\u5bf9\u5e94\u8c03\u8272\u677f\u7684\u53cd\u8f6c\u7248\u672c\u3002\u6216\u8005\u901a\u8fc7\u5bf9\u5df2\u6709Colormap\u5bf9\u8c61\u4f7f\u7528<code>.reversed(name=None)</code>\uff0c\u5176\u4e2dname\u53c2\u6570\u4e3a\u53cd\u8f6c\u7684Colormap\u5bf9\u8c61\u8bbe\u7f6e\u540d\u79f0\uff0c\u9ed8\u8ba4\u4e3a\u539f\u540d\u79f0+<code>\"_r\"</code>\u3002</p> \u53cd\u8f6c\u8c03\u8272\u677f\uff08Reversed colormaps\uff09<pre><code>cmap = mpl.cm.viridis.reversed(name=\"viridis_r\")\n\"\"\"\n&lt;matplotlib.colors.ListedColormap object at 0x000002B6EEFDE6C0&gt;\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#colormap","title":"Colormap\u5bf9\u8c61\u989c\u8272\u503c\u83b7\u53d6\uff08\u7d22\u5f15\uff09","text":"<p>Creating Colormaps in Matplotlib \u2014 Matplotlib 3.10.0 documentation</p> <p>\u83b7\u53d6Colormap\u5bf9\u8c61\u7684\u989c\u8272\u503c\uff0c\u5c24\u5176\u662f\u83b7\u5f97\u5176\u989c\u8272\u503c\u7684RGBA\u6570\u7ec4\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u5c06\u4e0d\u540c\u7684\u8c03\u8272\u677f\u7ec4\u5408\uff08\u5982\u6570\u7ec4\u7684\u62fc\u63a5\u7b49\u65b9\u5f0f\uff09\uff0c\u4ece\u800c\u66f4\u65b9\u4fbf\u5730\u521b\u5efa\u8c03\u8272\u677f\u3002\u540c\u65f6\uff0cColormap\u5185\u90e8\u989c\u8272\u503c\u7684\u7d22\u5f15\u4e5f\u662f\u5177\u4f53\u6570\u636e\u5bf9\u5e94\u5230\u989c\u8272\u503c\u7684\u65b9\u5f0f\u3002</p> <p>Colormap\u7d22\u5f15\u65f6\u8d85\u8303\u56f4\u7d22\u5f15\u5bf9\u5e94\u7684\u989c\u8272\u503c\u7531under\u548cover\u5b9a\u4e49\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a\u8303\u56f4\u5185\u7684\u4e24\u7aef\u989c\u8272\u503c\uff08\u5982\u4e0a\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7<code>set_under(color='k', alpha=None)</code>\u3001<code>set_over(color='k', alpha=None)</code>\u6765\u8bbe\u7f6e\u3002</p> <p>\u7d22\u5f15\u65f6\u88ab\u63a9\u7801\uff08masked\uff09\u7684\u503c\u3010\u65e0\u6548\u503c\u6216\u7f3a\u5931\u503c\uff0c \u5982np.nan\u4ee5\u53ca\u63a9\u7801\u6570\u7ec4\u4e2d\u88ab\u63a9\u7801\u7684\u503c\u3011\u5bf9\u5e94\u7684\u989c\u8272\u503c\u5219\u7531bad\u5b9a\u4e49\uff0c\u9ed8\u8ba4\u4e3a\u767d\u8272\uff08\u5982\u4e0a\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7<code>set_bad(color='k', alpha=None)</code>\u6765\u8bbe\u7f6e\u3002</p> <p>\u4ee5\u4e0a\u5747\u53ef\u901a\u8fc7<code>set_extremes(bad=None, under=None, over=None)</code>\u6765\u8bbe\u7f6e\u3002</p> my_cmap<pre><code>color_list = [\"#de2c00\", \"#aaed0c\", \"#ac38ea\", \"#0ec4c4\", \"#f194e9\"]\ncmap = mpl.colors.ListedColormap(colors=color_list, name=\"my_cmap\", N=10)\ncmap.set_extremes(under=\"black\", bad='gray', over='blue')\n</code></pre> <p></p> <ol> <li> <p><code>.colors</code></p> <p>\u4ec5\u7528\u4e8eListedColormap\u5bf9\u8c61\uff0c\u8f93\u51fa\u5176\u8303\u56f4\u5185\u5305\u542b\u7684\u6240\u6709\u989c\u8272\u503c\uff08\u5b57\u7b26\u4e32\u6216RGBA\u5217\u8868\uff09\u7ec4\u6210\u7684\u5217\u8868</p> .colors<pre><code>cmap.colors\n\"\"\"\n['#de2c00', '#aaed0c', '#ac38ea', '#0ec4c4', '#f194e9', '#de2c00', '#aaed0c', '#ac38ea', '#0ec4c4', '#f194e9']\n\"\"\"\n</code></pre> </li> <li> <p>\u6574\u6570</p> <p>\u5c06Colormap\u5bf9\u8c61\u89c6\u4e3a\u4e00\u4e2a\u989c\u8272\u5217\u8868\uff0c\u4ece\u800c\u53ef\u4ee5\u7c7b\u4f3c\u5217\u8868\u901a\u8fc7 0~N \u7684\u6574\u6570\u5b9e\u73b0\u5bf9\u5176\u989c\u8272\u503c\u8fdb\u884c\u7d22\u5f15\uff08\u8d85\u7d22\u5f15\u503c\u6309under\u548cover\u53d6\uff09\uff0c\u8fd4\u56de\u989c\u8272\u503cRGBA\u6570\u7ec4\u3002</p> <p></p> \u4e00\u822c\u7d22\u5f15\u63a9\u7801\u6570\u7ec4 \u4e00\u822c\u7d22\u5f15<pre><code>cmap([-1, 0, 2, 2, 9, 10])\n\"\"\"\n[[0.         0.         0.         1.        ]\n [0.87058824 0.17254902 0.         1.        ]\n [0.6745098  0.21960784 0.91764706 1.        ]\n [0.6745098  0.21960784 0.91764706 1.        ]\n [0.94509804 0.58039216 0.91372549 1.        ]\n [0.         0.         1.         1.        ]]\n\"\"\"\n</code></pre> <p></p> \u63a9\u7801\u6570\u7ec4<pre><code>masked_array = np.ma.masked_array([-1, 0, 2, 2, 9, 10], mask=[False, False, True, True, False, False])\n\"\"\"\nmasked_array(data=[-1, 0, --, --, 9, 10],\n             mask=[False, False,  True,  True, False, False],\n             fill_value=999999)\n\"\"\"\n\ncmap(masked_array)\n\"\"\"\n[[0.         0.         0.         1.        ]\n [0.87058824 0.17254902 0.         1.        ]\n [0.50196078 0.50196078 0.50196078 1.        ]\n [0.50196078 0.50196078 0.50196078 1.        ]\n [0.94509804 0.58039216 0.91372549 1.        ]\n [0.         0.         1.         1.        ]]\n\"\"\"\n</code></pre> <p></p> </li> <li> <p>\u6d6e\u70b9\u6570</p> <p>\u5c06Colormap\u5bf9\u8c61\u89c6\u4e3a\u4e00\u4e2a\u4ece 0.0~1.0 \u7684\u989c\u8272\u5c3a\uff0c\u6bcf\u4e00\u4e2a\u6d6e\u70b9\u6570\u843d\u5728\u54ea\u4e00\u4e2a\u989c\u8272\u533a\u95f4\u5185\uff08\u5de6\u95ed\u53f3\u5f00\uff09\u5373\u7d22\u5f15\u8be5\u989c\u8272\u503c\uff08\u8d85\u7d22\u5f15\u503c\u6309under\u548cover\u53d6\uff09\uff0c\u8fd4\u56de\u989c\u8272\u503cRGBA\u6570\u7ec4\u3002\u5728\u7d22\u5f15\u5217\u8868\u4e2d\u53ea\u8981\u6709\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u5219\u5747\u89c6\u4e3a\u6d6e\u70b9\u6570\uff0c\u6309\u6d6e\u70b9\u6570\u65b9\u5f0f\u7d22\u5f15\u3002\uff08\u6ce8\u610fnp.nan\u3001np.inf\u8fd9\u4e9b\u5747\u662f\u6d6e\u70b9\u6570\u7c7b\u578b\uff09\u3002</p> <p></p> \u4e00\u822c\u7d22\u5f15\u63a9\u7801\u6570\u7ec4 \u4e00\u822c\u7d22\u5f15<pre><code>cmap([-1, 0.2, 0.25, 0.4, 1, 2, np.nan])\n\"\"\"\n[[0.         0.         0.         1.        ]\n [0.6745098  0.21960784 0.91764706 1.        ]\n [0.6745098  0.21960784 0.91764706 1.        ]\n [0.94509804 0.58039216 0.91372549 1.        ]\n [0.94509804 0.58039216 0.91372549 1.        ]\n [0.         0.         1.         1.        ]\n [0.50196078 0.50196078 0.50196078 1.        ]]\n\"\"\"\n</code></pre> <p></p> \u63a9\u7801\u6570\u7ec4<pre><code>masked_array = np.ma.masked_array([-1, 0.2, 0.25, 0.4, 1, 2, np.nan], mask=[False, False, True, True, False, False, True])\n\"\"\"\nmasked_array(data=[-1.0, 0.2, --, --, 1.0, 2.0, --],\n             mask=[False, False,  True,  True, False, False,  True],\n             fill_value=1e+20)\n\"\"\"\n\ncmap(masked_array)\n\"\"\"\n[[0.         0.         0.         1.        ]\n [0.6745098  0.21960784 0.91764706 1.        ]\n [0.50196078 0.50196078 0.50196078 1.        ]\n [0.50196078 0.50196078 0.50196078 1.        ]\n [0.94509804 0.58039216 0.91372549 1.        ]\n [0.         0.         1.         1.        ]\n [0.50196078 0.50196078 0.50196078 1.        ]]\n\"\"\"\n</code></pre> <p></p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#resampled","title":"\u8c03\u8272\u677f\u91cd\u91c7\u6837\uff08resampled\uff09","text":"<p>Creating Colormaps in Matplotlib \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.colors.Colormap \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.colors.ListedColormap \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.colors.LinearSegmentedColormap \u2014 Matplotlib 3.10.0 documentation</p> <p>\u901a\u8fc7<code>.resampled(lutsize)</code>\u4eceColormap\u5bf9\u8c61\u4e2d\u7b49\u95f4\u9694\u7d22\u5f15\u53d6lutsize\u4e2a\u989c\u8272\u7ec4\u6210\u4e00\u4e2a\u65b0\u7684Colormap\u5bf9\u8c61\u3002</p> \u91cd\u91c7\u6837\uff08resampled\uff09<pre><code>cmap = mpl.cm.viridis.resampled(8)\n\"\"\"\n&lt;matplotlib.colors.ListedColormap object at 0x000001E353B86630&gt;\n\"\"\"\n\ncmap = mpl.cm.YlOrRd.resampled(8)\n\"\"\"\n&lt;matplotlib.colors.LinearSegmentedColormap object at 0x000001FFAA21AA80&gt;\n\"\"\"\n\ncolor_list = [\"#de2c00\", \"#aaed0c\", \"#ac38ea\", \"#0ec4c4\", \"#f194e9\"]\ncmap = mpl.colors.ListedColormap(colors=color_list, name=\"my_cmap\", N=10)\ncmap = cmap.resampled(8)\n\"\"\"\n&lt;matplotlib.colors.ListedColormap object at 0x0000021814E3ADB0&gt;\n\"\"\"\n\ncolor_list = [\"#de2c00\", \"#aaed0c\", \"#ac38ea\", \"#0ec4c4\", \"#f194e9\"]\ncmap = mpl.colors.LinearSegmentedColormap.from_list(colors=color_list, name=\"my_cmap\", N=10)\ncmap = cmap.resampled(8)\n\"\"\"\n&lt;matplotlib.colors.LinearSegmentedColormap object at 0x0000015021E0F620&gt;\n\"\"\"\n</code></pre> <p></p> <p></p> <p></p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#_10","title":"\u5f52\u4e00\u5316\u6620\u5c04","text":"<p>Colormap normalization \u2014 Matplotlib 3.10.0 documentation</p> <p>Colormap normalizations \u2014 Matplotlib 3.10.1 documentation</p> <p>\u5982\u524d\uff0c[0, 1]\u7684\u6570\u636e\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7colormap\u7d22\u5f15\u6620\u5c04\u5230\u5bf9\u5e94\u7684\u989c\u8272\uff0c\u4f46\u5927\u591a\u6570\u65f6\u5019\u4f7f\u7528\u7684\u6570\u636e\u5e76\u4e0d\u90fd\u5728[0, 1]\u5185\uff0c\u82e5\u76f4\u63a5\u7d22\u5f15\u5c06\u4f1a\u51fa\u73b0\u5927\u91cf\u7684under\u6216over\u8272\u503c\uff0c\u65e0\u6cd5\u533a\u5206\u6570\u636e\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u5c06\u6570\u636e\u8fdb\u884c\u5f52\u4e00\u5316\u3002\u8be5\u8fc7\u7a0b\u9996\u5148\u5c06\u8f93\u5165\u6570\u636e\u5f52\u4e00\u5316\u5230[0, 1]\uff0c\u7136\u540e\u518d\u6620\u5c04\u5230\u989c\u8272\u56fe\u4e2d\u7684\u7d22\u5f15\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#nonorm","title":"\u4e0d\u5f52\u4e00\u5316\uff08NoNorm\uff09","text":"<p>matplotlib.colors.NoNorm \u2014 Matplotlib 3.10.1 documentation</p> <p><code>mpl.colors.NoNorm()</code></p> \u4e0d\u5f52\u4e00\u5316\uff08NoNorm\uff09<pre><code>data = np.linspace(1, 20, 20)\n\"\"\"\narray([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14., 15., 16., 17., 18., 19., 20.])\n\"\"\"\n\nnorm = mpl.colors.NoNorm()\nnorm(data)\n\"\"\"\nmasked_array(data=[ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11.,\n                   12., 13., 14., 15., 16., 17., 18., 19., 20.],\n             mask=False,\n             fill_value=1e+20)\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#_11","title":"\u7ebf\u6027\u5f52\u4e00\u5316","text":"<p>\u9002\u7528\u4e8e \u7ebf\u6027\u5747\u5300\u5206\u5e03\u7684\u6570\u636e \u3002</p> NormalizeCenteredNormTwoSlopeNorm <p>matplotlib.colors.Normalize \u2014 Matplotlib 3.10.0 documentation</p> <p><code>#mpl.colors.Normalize(vmin=None, vmax=None, clip=False)</code></p> <p>\u5c06\u6570\u636e\u4ece[vmin, vmax]\u7ebf\u6027\u5f52\u4e00\u5316\u5230[0, 1]\u3002</p> <p>\\(Norm(x) = {x - v_{min} \\over {v_{max}-v_{min}}}\\)</p> <p>clip\u53c2\u6570\u51b3\u5b9a\u6620\u5c04\u65f6[vmin, vmax]\u5916\u6570\u636e\u7684\u6620\u5c04\u65b9\u5f0f\uff0c\u9ed8\u8ba4False\uff0c\u5219\u6309\u8d85\u8303\u56f4\u7d22\u5f15\u8fdb\u884c\u6620\u5c04\uff08under\u6216over\uff09\u3002\u82e5\u4e3aTrue\uff0c\u5219\u76f4\u63a5\u63090\u62161\u8fdb\u884c\u6620\u5c04\u3002</p> \u7ebf\u6027\u5f52\u4e00\u5316\uff08Normalize\uff09<pre><code>data = np.linspace(1, 20, 20)\n\"\"\"\narray([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14., 15., 16., 17., 18., 19., 20.])\n\"\"\"\n\nnorm = mpl.colors.Normalize(vmin=5, vmax=15, clip=False)\nnorm(data)\n\"\"\"\nmasked_array(data=[-0.4, -0.3, -0.2, -0.1,  0. ,  0.1,  0.2,  0.3,  0.4,\n                    0.5,  0.6,  0.7,  0.8,  0.9,  1. ,  1.1,  1.2,  1.3,\n                    1.4,  1.5],\n             mask=False,\n             fill_value=1e+20)\n\"\"\"\n\nnorm = mpl.colors.Normalize(vmin=5, vmax=15, clip=True)\nnorm(data)\n\"\"\"\nmasked_array(data=[0. , 0. , 0. , 0. , 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6,\n                   0.7, 0.8, 0.9, 1. , 1. , 1. , 1. , 1. , 1. ],\n             mask=False,\n             fill_value=1e+20)\n\"\"\"\n</code></pre> <p></p> <p></p> <p>matplotlib.colors.CenteredNorm \u2014 Matplotlib 3.10.1 documentation</p> <p><code>mpl.colors.CenteredNorm(vcenter=0, halfrange=None, clip=False)</code></p> <p>\u5c06\u6570\u636e\u4ece[vcenter-halfrange, vcenter+halfrange]\u7ebf\u6027\u5f52\u4e00\u5316\u5230[0, 1]\uff0c\u4ee5vcenter\u4e3a\u4e2d\u5fc3\uff0c\u4e24\u4fa7\u53d8\u5316\u7387\u76f8\u540c\u3002</p> <p>\\(Norm(x) = {x - (vcenter-halfrange) \\over {2 \\times halfrange}}\\)</p> \u4e2d\u5fc3\u5f52\u4e00\u5316\uff08CenteredNorm\uff09<pre><code>data = np.linspace(1, 20, 20)\n\"\"\"\narray([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14., 15., 16., 17., 18., 19., 20.])\n\"\"\"\n\nnorm = mpl.colors.CenteredNorm(vcenter=10, halfrange=5, clip=False)\nnorm(data)\n\"\"\"\nmasked_array(data=[-0.4, -0.3, -0.2, -0.1,  0. ,  0.1,  0.2,  0.3,  0.4,\n                    0.5,  0.6,  0.7,  0.8,  0.9,  1. ,  1.1,  1.2,  1.3,\n                    1.4,  1.5],\n             mask=False,\n             fill_value=1e+20)\n\"\"\"\n\nnorm = mpl.colors.CenteredNorm(vcenter=10, halfrange=5, clip=True)\nnorm(data)\n\"\"\"\nmasked_array(data=[0. , 0. , 0. , 0. , 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6,\n                   0.7, 0.8, 0.9, 1. , 1. , 1. , 1. , 1. , 1. ],\n             mask=False,\n             fill_value=1e+20)\n\"\"\"\n</code></pre> <p></p> <p>matplotlib.colors.TwoSlopeNorm \u2014 Matplotlib 3.10.1 documentation</p> <p><code>mpl.colors.TwoSlopeNorm(vmin=None, vcenter=None, vmax=None)</code></p> <p>\u5c06\u6570\u636e\u4ece[vmin, vcenter]\u7ebf\u6027\u5f52\u4e00\u5316\u5230[0, 0.5]\uff0c\u4ece[vcenter, vmax]\u7ebf\u6027\u5f52\u4e00\u5316\u5230[0.5, 1]\uff0c\u4ee5vcenter\u4e3a\u4e2d\u5fc3\uff0c\u4e24\u4fa7\u53d8\u5316\u7387\u4e0d\u540c\u3002</p> <p>\\(Norm(x) = \\begin{cases} {x-v_{min} \\over 2(v_{center}-v_{min})} &amp; x \\in [vmin, vcenter] \\\\{x-(v_{max}-v_{center}) \\over 2(v_{max}-v_{center})} &amp; x \\in [vcenter, vmax]\\end{cases}\\)</p> \u53cc\u659c\u7387\u5f52\u4e00\u5316\uff08TwoSlopeNorm\uff09<pre><code>data = np.linspace(1, 20, 20)\n\"\"\"\narray([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14., 15., 16., 17., 18., 19., 20.])\n\"\"\"\n\nnorm = mpl.colors.TwoSlopeNorm(vmin=5, vcenter=12, vmax=18)\nnorm(data)\n\"\"\"\nmasked_array(data=[      -inf,       -inf,       -inf,       -inf,\n                   0.        , 0.07142857, 0.14285714, 0.21428571,\n                   0.28571429, 0.35714286, 0.42857143, 0.5       ,\n                   0.58333333, 0.66666667, 0.75      , 0.83333333,\n                   0.91666667, 1.        ,        inf,        inf],\n             mask=False,\n             fill_value=1e+20)\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#powernorm","title":"\u5e42\u5f8b\u5f52\u4e00\u5316\uff08PowerNorm\uff09","text":"<p>matplotlib.colors.PowerNorm \u2014 Matplotlib 3.10.1 documentation</p> <p><code>mpl.colors.PowerNorm(gamma, vmin=None, vmax=None, clip=False)</code></p> <p>\u5c06\u6570\u636e\u4ece[vmin, vmax]\u7ebf\u6027\u5f52\u4e00\u5316\u5230[0, 1]\u540e\u518d\u5e94\u7528\u5e42\u5f8b\u03b3\uff08\u5bf9\u4e8e\uff1cvmin\u7684\u503c\u03b3=1\uff09\uff0c\u9002\u7528\u4e8e \u7b26\u5408\u5e42\u5f8b\u5206\u5e03\uff08\u957f\u5c3e\u5206\u5e03\uff09 \u7684\u6570\u636e</p> <p>\\(Norm(x) = ({x - v_{min} \\over {v_{max}-v_{min}}})^{\\gamma}\\)</p> \u5e42\u5f8b\u5f52\u4e00\u5316\uff08PowerNorm\uff09<pre><code>data = np.linspace(1, 20, 20)\n\"\"\"\narray([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14., 15., 16., 17., 18., 19., 20.])\n\"\"\"\n\nnorm = mpl.colors.PowerNorm(gamma=2, vmin=5, vmax=15, clip=False)\nnorm(data)\n\"\"\"\nmasked_array(data=[-0.4 , -0.3 , -0.2 , -0.1 ,  0.  ,  0.01,  0.04,  0.09,\n                    0.16,  0.25,  0.36,  0.49,  0.64,  0.81,  1.  ,  1.21,\n                    1.44,  1.69,  1.96,  2.25],\n             mask=False,\n             fill_value=1e+20)\n\"\"\"\n\nnorm = mpl.colors.PowerNorm(gamma=2, vmin=5, vmax=15, clip=Tr ue)\nnorm(data)\n\"\"\"\nmasked_array(data=[0.  , 0.  , 0.  , 0.  , 0.  , 0.01, 0.04, 0.09, 0.16,\n                   0.25, 0.36, 0.49, 0.64, 0.81, 1.  , 1.  , 1.  , 1.  ,\n                   1.  , 1.  ],\n             mask=False,\n             fill_value=1e+20)\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#lognorm","title":"\u5bf9\u6570\u5f52\u4e00\u5316\uff08LogNorm\uff09","text":"<p>matplotlib.colors.LogNorm \u2014 Matplotlib 3.10.1 documentation</p> <p><code>mpl.colors.LogNorm(vmin=None, vmax=None, clip=False)</code></p> <p>\u5c06\u6570\u636e\u4ece[vmin, vmax]\u6309\u5bf9\u6570\u5c3a\u5ea6\u5f52\u4e00\u5316\u5230[0, 1]\uff0c\u9002\u7528\u4e8e \u8de8\u8d8a\u591a\u4e2a\uff08\u6b63\u6570\uff09\u6570\u91cf\u7ea7\uff08\u6307\u6570\u53d8\u5316\uff09\u7684\u6570\u636e</p> <p>\\(Norm(x) = {{\\log_{}{x} - \\log_{}{v_{min}}} \\over {\\log_{}{v_{max}} - \\log_{}{v_{min}}}}\\)</p> \u5bf9\u6570\u5f52\u4e00\u5316\uff08LogNorm\uff09<pre><code>data = np.logspace(1, 10, 10, base=10)\n\"\"\"\narray([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08, 1.e+09, 1.e+10])\n\"\"\"\n\nnorm = mpl.colors.LogNorm(vmin=1e3, vmax=1e9, clip=False)\nnorm(data)\n\"\"\"\nmasked_array(data=[-0.3333333333333333, -0.16666666666666666, 0.0,\n                   0.16666666666666666, 0.3333333333333333, 0.5,\n                   0.6666666666666666, 0.8333333333333334, 1.0,\n                   1.1666666666666667],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False],\n             fill_value=1e+20)\n\"\"\"\n\nnorm = mpl.colors.LogNorm(vmin=1e3, vmax=1e9, clip=True)\nnorm(data)\n\"\"\"\nmasked_array(data=[0.0, 0.0, 0.0, 0.16666666666666666, 0.3333333333333333,\n                   0.5, 0.6666666666666666, 0.8333333333333334, 1.0, 1.0],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False],\n             fill_value=1e+20)\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#symlognorm","title":"\u5bf9\u79f0\u5bf9\u6570\u5f52\u4e00\u5316\uff08SymLogNorm\uff09","text":"<p>matplotlib.colors.SymLogNorm \u2014 Matplotlib 3.10.1 documentation</p> <p><code>mpl.colors.SymLogNorm(linthresh, linscale=1.0, vmin=None, vmax=None, clip=False, base=10)</code></p> <p>\u5c06\u6570\u636e\u4ece[vmin, vmax]\u6309\u5bf9\u79f0\u5bf9\u6570\u5c3a\u5ea6\u5f52\u4e00\u5316\u5230[0, 1]\u3002\u8be5\u65b9\u6cd5\u4f7f\u5f97\u5728\u6b63\u8d1f\u65b9\u5411\u4e0a\u90fd\u662f\u5bf9\u6570\u5c3a\u5ea6\u3002\u7531\u4e8e\u63a5\u8fd1\u96f6\u7684\u503c\u8d8b\u5411\u4e8e\u65e0\u7a77\u5927\uff0c\u56e0\u6b64\u9700\u8981\u6709\u4e00\u4e2a\u56f4\u7ed5\u96f6\u7684\u7ebf\u6027\u6620\u5c04\u8303\u56f4\uff08-<code>linthresh</code>, <code>linthresh</code>\uff09\u3002<code>linscale</code>\u5141\u8bb8\u7ebf\u6027\u8303\u56f4\u76f8\u5bf9\u4e8e\u5bf9\u6570\u8303\u56f4\u8fdb\u884c\u62c9\u4f38\uff0c\u5b83\u7684\u503c\u662f\u7ebf\u6027\u8303\u56f4\u7684\u6bcf\u4e00\u534a\uff081\uff09\u5360\u5bf9\u6570\u8303\u56f4\uff08base\uff09\u7684\u6bd4\u4f8b\u3002\u9002\u7528\u4e8e \u5305\u542b\u6b63\u8d1f\u503c\u4e14\u8de8\u5ea6\u5927\uff08\u53cc\u5411\u6307\u6570\u53d8\u5316\uff09\u7684\u6570\u636e</p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#boundarynorm","title":"\u533a\u95f4\u5f52\u4e00\u5316\uff08BoundaryNorm\uff09","text":"<p>matplotlib.colors.BoundaryNorm \u2014 Matplotlib 3.10.1 documentation</p> <p><code>mpl.colors.BoundaryNorm(boundaries, ncolors, clip=False, *, extend='neither')</code></p> <p>\u6839\u636e\u79bb\u6563\u533a\u95f4\u751f\u6210colormap\u7d22\u5f15\u3002\u4e0d\u540c\u4e8e <code>Normalize</code> \u6216 <code>LogNorm</code> \uff0c <code>BoundaryNorm</code> \u5c06\u503c\u6620\u5c04\u5230\u6574\u6570\uff0c\u800c\u4e0d\u662f\u6620\u5c04\u5230[0, 1]\u7684\u533a\u95f4\u3002\u5b83\u5c06\u6570\u636e\u5206\u4e3a\u591a\u4e2a\u533a\u95f4\uff08\u5de6\u95ed\u53f3\u5f00\uff09\uff0c\u6839\u636encolors\u4e3a\u6bcf\u4e2a\u533a\u95f4\u5206\u914d\u76f8\u5bf9\u5747\u5300\u5206\u5e03\u7684\u6574\u6570\u503c\uff0c\u843d\u5728\u8be5\u533a\u95f4\u7684\u6570\u636e\u5c06\u6620\u5c04\u5230colormap\u7684\u6574\u6570\u503c\u7d22\u5f15\u5bf9\u5e94\u7684\u989c\u8272\u3002</p> \u533a\u95f4\u5f52\u4e00\u5316\uff08BoundaryNorm\uff09<pre><code>data = np.linspace(1, 20, 20)\n\"\"\"\narray([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14., 15., 16., 17., 18., 19., 20.])\n\"\"\"\n\nnorm = mpl.colors.BoundaryNorm(boundaries=[1, 5, 9, 13, 17], ncolors=4, clip=False, extend='neither')\nnorm(data)\n\"\"\"\nmasked_array(data=[0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n             fill_value=np.int64(999999),\n             dtype=int16)\n\"\"\"\n\nnorm = mpl.colors.BoundaryNorm(boundaries=[1, 5, 9, 13, 17], ncolors=4, clip=True, extend='neither')\nnorm(data)\n\"\"\"\nmasked_array(data=[0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n            fill_value=np.int64(999999),\n            dtype=int16)\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#_12","title":"\u7b2c\u4e09\u65b9\u8c03\u8272\u677f","text":""},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#palettable","title":"Palettable","text":"<p>Palettable</p> \u5b89\u88c5<pre><code>pip install palettable\n</code></pre> \u793a\u4f8b<pre><code>from palettable.colorbrewer.qualitative import Dark2_7\n\"\"\"\n&lt;palettable.colorbrewer.colorbrewer.BrewerMap at 0x15b63254170&gt;\n\"\"\"\n\n# \u540d\u79f0\nDark2_7.name\n\"\"\"\n'Dark2'\n\"\"\"\n\n# \u7c7b\u578b\nDark2_7.type\n\"\"\"\n'qualitative'\n\"\"\"\n\n# \u5305\u542b\u989c\u8272\u6570\nDark2_7.number\n\"\"\"\n7\n\"\"\"\n\n# \u989c\u8272RGB\u503c\uff080~255\uff09\nDark2_7.colors\n\"\"\"\n[[27, 158, 119], [217, 95, 2], [117, 112, 179], [231, 41, 138], [102, 166, 30], [230, 171, 2], [166, 118, 29]]\n\"\"\"\n\n# \uff01\u989c\u8272\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\nDark2_7.hex_colors\n\"\"\"\n['#1B9E77', '#D95F02', '#7570B3', '#E7298A', '#66A61E', '#E6AB02', '#A6761D']\n\"\"\"\n\n# \uff01\u9002\u7528\u4e8ematplotlib\u7684\u989c\u8272RGB\u503c\uff080~1\uff09\nDark2_7.mpl_colors\n\"\"\"\n[(0.10588235294117647, 0.6196078431372549, 0.4666666666666667), (0.8509803921568627, 0.37254901960784315, 0.00784313725490196), (0.4588235294117647, 0.4392156862745098, 0.7019607843137254), (0.9058823529411765, 0.1607843137254902, 0.5411764705882353), (0.4, 0.6509803921568628, 0.11764705882352941), (0.9019607843137255, 0.6705882352941176, 0.00784313725490196), (0.6509803921568628, 0.4627450980392157, 0.11372549019607843)]\n\"\"\"\n\n# \uff01\u9002\u7528\u4e8ematplotlib\u7684LinearSegmentedColormap\u5bf9\u8c61\nDark2_7.mpl_colormap\nDark2_7.get_mpl_colormap(N=256)\n\"\"\"\n&lt;matplotlib.colors.LinearSegmentedColormap object at 0x00000201AA882C00&gt;\n\"\"\"\n</code></pre> <p></p> <p></p> \u5176\u5b83\u65b9\u6cd5<pre><code>Dark2_7.save_discrete_image(\"./discrete_image.jpg\")\n\nDark2_7.save_continuous_image(\"./continuous_image.jpg\")\n</code></pre> <p></p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E5%9F%BA%E7%A1%80/%E9%85%8D%E8%89%B2%EF%BC%88Color%E3%80%81Colormap%E3%80%81Palette%EF%BC%89%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%9D%A1%EF%BC%88Colorbar%EF%BC%89/#colorbar","title":"\u989c\u8272\u6761\uff08colorbar\uff09","text":"<p>Customized Colorbars Tutorial \u2014 Matplotlib 3.10.0 documentation</p> <p>matplotlib.colorbar \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.figure.Figure.colorbar \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.colorbar \u2014 Matplotlib 3.10.1 documentation</p> \u5df2\u6709Axes\u65b0Axes \u5df2\u6709Axes<pre><code>from mpl_toolkits.axes_grid1.axes_divider import make_axes_locatable\n\nfig = plt.figure(figsize=(6, 6), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax_divider = make_axes_locatable(ax)\ncax = ax_divider.append_axes(position=\"top\", size=0.3, pad=0.5)\n\ncmap = mpl.cm.cool\ncmap.set_extremes(under=\"b\", over=\"r\")\nnorm = mpl.colors.Normalize(vmin=5, vmax=10)\nfig.colorbar(mpl.cm.ScalarMappable(norm=norm, cmap=cmap),\n\n             # \u4f4d\u7f6e\u4e0e\u65b9\u5411\n             cax=cax,                        # (1)!\n             orientation='horizontal',       # (2)!\n             location=\"top\",                 # (3)!\n\n             # \u5ef6\u4f38\n             extend=\"both\",                  # (4)!\n             extendrect=False,               # (5)!\n             extendfrac=(0.05, 0.1),         # (6)!\n\n             # \u6807\u7b7e\u4e0e\u523b\u5ea6\n             label='Some Units',             # (7)!\n             ticklocation=\"top\",             # (8)!\n             ticks=[6, 7, 8, 9],             # (9)!\n             format='{x:.2f}mm',             # (10)!\n\n             # \u989c\u8272\u533a\u95f4\n             boundaries=[3, 6, 7, 9, 11],    # (11)!\n             # values=[3, 6, 7, 9, 11],      (12)\n             drawedges=True,                 # (13)!\n             spacing=\"proportional\",         # (14)!\n\n             # \u5176\u5b83\n             alpha=1\n             )\n\nplt.show()\n</code></pre> <ol> <li>\u7ed8\u5236\u5728\u54ea\u4e2aAxes\u4e0a</li> <li>\u65b9\u5411, \u53ef\u9009: <ol> <li>'vertical'(location\u5fc5\u987b\u4e3a'left', 'right')</li> <li>'horizontal'(location\u5fc5\u987b\u4e3a'top', 'bottom')</li> </ol> </li> <li>\u4f4d\u7f6e, \u53ef\u9009: <ol> <li>'left'</li> <li>'right'\u3010orientation=None/'vertical'\u65f6\u9ed8\u8ba4\u3011</li> <li>'top'</li> <li>'bottom'\u3010orientation='horizontal'\u65f6\u9ed8\u8ba4\u3011</li> </ol> </li> <li>\u8d85\u8303\u56f4\u503c\u5ef6\u4f38\uff1a\u53ef\u9009'neither'(\u9ed8\u8ba4), 'both', 'min', 'max'</li> <li>\u5ef6\u4f38\u5f62\u72b6\uff1aTrue\u4e3a\u77e9\u5f62\uff0cFalse\u4e3a\u4e09\u89d2\u5f62(\u9ed8\u8ba4)</li> <li>\u5ef6\u4f38\u6bd4\u4f8b\uff1a\u9ed8\u8ba4None(5%)\uff0c\u53ef\u9009'auto', \u6bd4\u4f8b, (\u6bd4\u4f8b\uff0c \u6bd4\u4f8b)</li> <li>\u6807\u7b7e</li> <li>\u523b\u5ea6\u4f4d\u7f6e, \u53ef\u9009: <ol> <li>'auto'\u3010\u540clocation\u53c2\u6570\u3011</li> <li>'left'</li> <li>'right'\u3010\u4ec5orientation='vertical'\uff0c\u9ed8\u8ba4'right'\u3011</li> <li>'top'</li> <li>'bottom'\u3010\u4ec5orientation='horizontal'\uff0c\u9ed8\u8ba4'bottom'\u3011</li> </ol> </li> <li>\u523b\u5ea6\u5b9a\u4f4d\u5668\u6216\u523b\u5ea6\u5217\u8868</li> <li>\u523b\u5ea6\u6807\u7b7e\u683c\u5f0f\u5316\u5668\u6216\u76f4\u63a5\u63a5\u53d7\u683c\u5f0f\u5316\u5b57\u7b26\u4e32</li> <li>\u533a\u95f4</li> <li>\u533a\u95f4\u503c</li> <li>\u662f\u5426\u7ed8\u5236\u989c\u8272\u533a\u95f4\u8fb9\u754c\u7ebf</li> <li>\u533a\u95f4\u7a7a\u95f4\u5206\u914d\uff1a\u53ef\u9009'uniform'(\u5747\u5300), 'proportional'(\u6570\u636e\u95f4\u9694\u6bd4\u4f8b)</li> </ol> <p></p> \u65b0Axes<pre><code>fig = plt.figure(figsize=(6, 6), dpi=100, layout=\"constrained\")\nax = fig.subplots(2, 2)\n\ncmap = mpl.cm.cool\ncmap.set_extremes(under=\"b\", over=\"r\")\nnorm = mpl.colors.Normalize(vmin=5, vmax=10)\nfig.colorbar(mpl.cm.ScalarMappable(norm=norm, cmap=cmap),\n\n             # \u4f4d\u7f6e\u4e0e\u65b9\u5411\n             ax=[ax[0, 0], ax[0, 1]],        # (1)!\n             orientation='horizontal',       # (2)!\n             location=\"top\",                 # (3)!\n\n             pad=0.2,                        # (4)!\n             # anchor=(0.5, 0.5),            (5)\n             # panchor=(1, 1),               (6)\n\n             # \u5927\u5c0f\n             fraction=0.15,                  # (7)!\n             shrink=1.5,                     # (8)!\n             aspect=30,                      # (9)!\n\n             # \u5ef6\u4f38\n             extend=\"both\",                  # (10)!\n             extendrect=False,               # (11)!\n             extendfrac=(0.05, 0.1),         # (12)!\n\n             # \u6807\u7b7e\u4e0e\u523b\u5ea6\n             label='Some Units',             # (13)!\n             ticklocation=\"top\",             # (14)!\n             ticks=[6, 7, 8, 9],             # (15)!\n             format='{x:.2f}mm',             # (16)!\n\n             # \u989c\u8272\u533a\u95f4\n             boundaries=[3, 6, 7, 9, 11],    # (17)!\n             # values=[3, 6, 7, 9, 11],      (18)\n             drawedges=True,                 # (19)!\n             spacing=\"proportional\",         # (20)!\n\n             # \u5176\u5b83\n             alpha=1\n             )\n\nplt.show()\n</code></pre> <ol> <li>\u5f53cax\u53c2\u6570\u672a\u6307\u5b9a\u65f6\uff0c\u4ece\u54ea\u4e2a\u6216\u54ea\u4e9bAxes(\u7236Axes)\u817e\u51fa\u7a7a\u95f4\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Axes(\u5b50Axes)\u6765\u7ed8\u5236</li> <li>\u65b9\u5411, \u53ef\u9009: <ol> <li>'vertical'(location\u5fc5\u987b\u4e3a'left', 'right')</li> <li>'horizontal'(location\u5fc5\u987b\u4e3a'top', 'bottom')</li> </ol> </li> <li>\u4f4d\u7f6e, \u53ef\u9009: <ol> <li>'left'</li> <li>'right'\u3010orientation=None/'vertical'\u65f6\u9ed8\u8ba4\u3011</li> <li>'top'</li> <li>'bottom'\u3010orientation='horizontal'\u65f6\u9ed8\u8ba4\u3011</li> </ol> </li> <li>\u4e0eax\u95f4\u8ddd\u6bd4\u4f8b\uff1a\u9ed8\u8ba40.05\u3010orientation='vertical'\u3011,\u62160.15\u3010orientation='horizontal'\u3011</li> <li>\u5b50Axes\u951a\u70b9\uff1a\u9ed8\u8ba4(0.0, 0.5)\u3010orientation='vertical'\u3011\uff0c\u6216(0.5, 1.0)\u3010orientation='horizontal'\u3011</li> <li>\u7236Axes\u951a\u70b9\uff1a\u9ed8\u8ba4(1.0, 0.5)\u3010orientation='vertical'\u3011\uff0c\u6216(0.5, 0.0)\u3010orientation='horizontal'\u3011</li> <li>\u5360Axes\u6bd4\u4f8b</li> <li>\u7f29\u653e\u6bd4\u4f8b\uff1a\u9ed8\u8ba41.0</li> <li>\u957f\u5bbd\u6bd4\uff1a\u9ed8\u8ba420</li> <li>\u8d85\u8303\u56f4\u503c\u5ef6\u4f38\uff1a\u53ef\u9009'neither'(\u9ed8\u8ba4), 'both', 'min', 'max'</li> <li>\u5ef6\u4f38\u5f62\u72b6\uff1aTrue\u4e3a\u77e9\u5f62\uff0cFalse\u4e3a\u4e09\u89d2\u5f62(\u9ed8\u8ba4)</li> <li>\u5ef6\u4f38\u6bd4\u4f8b\uff1a\u9ed8\u8ba4None(5%)\uff0c\u53ef\u9009'auto', \u6bd4\u4f8b, (\u6bd4\u4f8b\uff0c \u6bd4\u4f8b)</li> <li>\u6807\u7b7e</li> <li>\u523b\u5ea6\u4f4d\u7f6e, \u53ef\u9009: <ol> <li>'auto'\u3010\u540clocation\u53c2\u6570\u3011</li> <li>'left'</li> <li>'right'\u3010\u4ec5orientation='vertical'\uff0c\u9ed8\u8ba4'right'\u3011</li> <li>'top'</li> <li>'bottom'\u3010\u4ec5orientation='horizontal'\uff0c\u9ed8\u8ba4'bottom'\u3011</li> </ol> </li> <li>\u523b\u5ea6\u5b9a\u4f4d\u5668\u6216\u523b\u5ea6\u5217\u8868</li> <li>\u523b\u5ea6\u6807\u7b7e\u683c\u5f0f\u5316\u5668\u6216\u76f4\u63a5\u63a5\u53d7\u683c\u5f0f\u5316\u5b57\u7b26\u4e32</li> <li>\u533a\u95f4</li> <li>\u533a\u95f4\u503c</li> <li>\u662f\u5426\u7ed8\u5236\u989c\u8272\u533a\u95f4\u8fb9\u754c\u7ebf</li> <li>\u533a\u95f4\u7a7a\u95f4\u5206\u914d\uff1a\u53ef\u9009'uniform'(\u5747\u5300), 'proportional'(\u6570\u636e\u95f4\u9694\u6bd4\u4f8b)</li> </ol> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E6%A3%AE%E6%9E%97%E5%9B%BE/%E6%A3%AE%E6%9E%97%E5%9B%BE%EF%BC%88forestplot%EF%BC%89/","title":"\u68ee\u6797\u56fe\uff08forestplot\uff09","text":"<p>GitHub - LSYS/forestplot: A Python package to make publication-ready but customizable coefficient plots.</p> <p>sleep75.csv</p> <p>sleep75-des.csv</p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\nimport pingouin as pg\nimport forestplot as fp\n\npd.set_option(\"display.unicode.east_asian_width\", True)    # \u8f93\u51fa\u5217\u540d\u5bf9\u9f50\npd.set_option(\"display.max_columns\", None)                 # \u4fee\u6539\u6700\u5927\u5217\u6570\uff0c\u9632\u6b62\u5217\u663e\u793a\u4e0d\u5168\npd.set_option('display.expand_frame_repr', False)          # \u8bbe\u7f6e\u4e0d\u6298\u53e0\u6570\u636e\n\nsleep = pd.read_csv('../Data/sleep75.csv', index_col=0)\n\"\"\"\n          age  black  case  clerical  construc  educ  earns74  gdhlth  inlf  leis1  leis2  leis3  smsa   lhrwage    lothinc  male  marr  prot  rlxall  selfe  sleep  slpnaps  south  spsepay  spwrk75  totwrk  union  worknrm  workscnd  exper  yngkid  yrsmarr     hrwage  agesq\nrownames                                                                                                                                                                                                                                                                         \n1          32      0     1  0.000000  0.000000    12        0       0     1   3529   3479   3479     0  1.955861  10.075380     1     1     1    3163      0   3113     3163      0        0        0    3438      0     3438         0     14       0       13   7.070004   1024\n2          31      0     2  0.000000  0.000000    14     9500       1     1   2140   2140   2140     0  0.357674   0.000000     1     0     1    2920      1   2920     2920      1        0        0    5020      0     5020         0     11       0        0   1.429999    961\n3          44      0     3  0.000000  0.000000    17    42500       1     1   4595   4505   4227     1  3.021887   0.000000     1     1     0    3038      1   2670     2760      0    20000        1    2815      0     2815         0     21       0        0  20.529997   1936\n4          30      0     4  0.000000  0.000000    12    42500       1     1   3211   3211   3211     0  2.263844   0.000000     0     1     1    3083      1   3083     3083      0     5000        1    3786      0     3786         0     12       0       12   9.619998    900\n5          64      0     5  0.000000  0.000000    14     2500       1     1   4052   4007   4007     0  1.011601   9.328213     1     1     1    3493      0   3448     3493      0     2400        1    2580      0     2580         0     44       0       33   2.750000   4096\n...       ...    ...   ...       ...       ...   ...      ...     ...   ...    ...    ...    ...   ...       ...        ...   ...   ...   ...     ...    ...    ...      ...    ...      ...      ...     ...    ...      ...       ...    ...     ...      ...        ...    ...\n702        45      0   702  0.182331  0.030075    12     5500       1     0   5069   4669   4644     1       NaN   9.664660     0     1     1    3410      0   2985     3385      0    16000        1    2026      0     2026         0     27       0       18        NaN   2025\n703        34      0   703  0.182331  0.030075    10     2500       0     0   5885   5870   5870     0       NaN   0.000000     1     1     0    3535      0   3520     3535      0        0        0     675      1      465       210     18       0        4        NaN   1156\n704        37      0   704  0.182331  0.030075    12     3500       1     0   4719   4719   4584     0       NaN   9.235130     0     1     1    3645      0   3510     3510      0    12000        1    1851      0     1851         0     19       0       17        NaN   1369\n705        54      0   705  0.182331  0.030075    17    32500       1     0   5149   5119   5031     0       NaN   9.210441     0     1     1    3088      1   2970     3000      1    35000        1    1961      1     1481       480     31       0       22        NaN   2916\n706        30      0   706  0.182331  0.030075    16     6750       1     0   4747   4302   4302     0       NaN   9.940350     0     1     0    3415      0   2970     3415      1        0        0    2363      0     2363         0      8       1        9        NaN    900\n\n[706 rows x 34 columns]\n\n\"\"\"\n\nsleep_label = pd.read_csv('../Data/sleep75-des.csv').rename(columns={'des': 'label'})\n\"\"\"\n         var                           label                group\n0        age                        in years                  age\n1      black                     =1 if black        other factors\n2       case                      identifier        other factors\n3   clerical           =1 if clerical worker           occupation\n4   construc       =1 if construction worker           occupation\n5       educ              years of schooling        labor factors\n6    earns74            total earnings, 1974        labor factors\n7     gdhlth  =1 if in good or excel. health       health factors\n8       inlf            =1 if in labor force        labor factors\n9      leis1                  sleep - totwrk        other factors\n10     leis2                slpnaps - totwrk        other factors\n11     leis3                 rlxall - totwrk        other factors\n12      smsa              =1 if live in smsa    area of residence\n13   lhrwage                 log hourly wage        labor factors\n14   lothinc   log othinc, unless othinc &lt; 0        labor factors\n15      male                      =1 if male        other factors\n16      marr                   =1 if married       family factors\n17      prot                =1 if Protestant        other factors\n18    rlxall       slpnaps + personal activs  other sleep factors\n19     selfe             =1 if self employed        labor factors\n20     sleep     mins sleep at night, per wk        other factors\n21   slpnaps        minutes sleep, inc. naps  other sleep factors\n22     south             =1 if live in south    area of residence\n23   spsepay             spousal wage income        other factors\n24   spwrk75              =1 if spouse works        other factors\n25    totwrk            mins worked per week        labor factors\n26     union           =1 if belong to union        labor factors\n27   worknrm              mins work main job        labor factors\n28  workscnd            mins work second job        labor factors\n29     exper                  age - educ - 6        labor factors\n30    yngkid      =1 if children &lt; 3 present       family factors\n31   yrsmarr                   years married       family factors\n32    hrwage                     hourly wage        labor factors\n33     agesq                           age^2                  age\n\"\"\"\n\n# \u5220\u9664\u65e0\u5173\u53d8\u91cf\nsleep.drop(columns=['case', 'leis1', 'leis2', 'leis3'], inplace=True)\n\"\"\"\n          age  black  clerical  construc  educ  earns74  gdhlth  inlf  smsa   lhrwage    lothinc  male  marr  prot  rlxall  selfe  sleep  slpnaps  south  spsepay  spwrk75  totwrk  union  worknrm  workscnd  exper  yngkid  yrsmarr     hrwage  agesq\nrownames                                                                                                                                                                                                                                              \n1          32      0  0.000000  0.000000    12        0       0     1     0  1.955861  10.075380     1     1     1    3163      0   3113     3163      0        0        0    3438      0     3438         0     14       0       13   7.070004   1024\n2          31      0  0.000000  0.000000    14     9500       1     1     0  0.357674   0.000000     1     0     1    2920      1   2920     2920      1        0        0    5020      0     5020         0     11       0        0   1.429999    961\n3          44      0  0.000000  0.000000    17    42500       1     1     1  3.021887   0.000000     1     1     0    3038      1   2670     2760      0    20000        1    2815      0     2815         0     21       0        0  20.529997   1936\n4          30      0  0.000000  0.000000    12    42500       1     1     0  2.263844   0.000000     0     1     1    3083      1   3083     3083      0     5000        1    3786      0     3786         0     12       0       12   9.619998    900\n5          64      0  0.000000  0.000000    14     2500       1     1     0  1.011601   9.328213     1     1     1    3493      0   3448     3493      0     2400        1    2580      0     2580         0     44       0       33   2.750000   4096\n...       ...    ...       ...       ...   ...      ...     ...   ...   ...       ...        ...   ...   ...   ...     ...    ...    ...      ...    ...      ...      ...     ...    ...      ...       ...    ...     ...      ...        ...    ...\n702        45      0  0.182331  0.030075    12     5500       1     0     1       NaN   9.664660     0     1     1    3410      0   2985     3385      0    16000        1    2026      0     2026         0     27       0       18        NaN   2025\n703        34      0  0.182331  0.030075    10     2500       0     0     0       NaN   0.000000     1     1     0    3535      0   3520     3535      0        0        0     675      1      465       210     18       0        4        NaN   1156\n704        37      0  0.182331  0.030075    12     3500       1     0     0       NaN   9.235130     0     1     1    3645      0   3510     3510      0    12000        1    1851      0     1851         0     19       0       17        NaN   1369\n705        54      0  0.182331  0.030075    17    32500       1     0     0       NaN   9.210441     0     1     1    3088      1   2970     3000      1    35000        1    1961      1     1481       480     31       0       22        NaN   2916\n706        30      0  0.182331  0.030075    16     6750       1     0     0       NaN   9.940350     0     1     0    3415      0   2970     3415      1        0        0    2363      0     2363         0      8       1        9        NaN    900\n\n[706 rows x 30 columns]\n\"\"\"\n\nsleep_label = sleep_label[~sleep_label['var'].isin(['case', 'leis1', 'leis2', 'leis3'])]\n\"\"\"\n         var                           label                group\n0        age                        in years                  age\n1      black                     =1 if black        other factors\n3   clerical           =1 if clerical worker           occupation\n4   construc       =1 if construction worker           occupation\n5       educ              years of schooling        labor factors\n6    earns74            total earnings, 1974        labor factors\n7     gdhlth  =1 if in good or excel. health       health factors\n8       inlf            =1 if in labor force        labor factors\n12      smsa              =1 if live in smsa    area of residence\n13   lhrwage                 log hourly wage        labor factors\n14   lothinc   log othinc, unless othinc &lt; 0        labor factors\n15      male                      =1 if male        other factors\n16      marr                   =1 if married       family factors\n17      prot                =1 if Protestant        other factors\n18    rlxall       slpnaps + personal activs  other sleep factors\n19     selfe             =1 if self employed        labor factors\n20     sleep     mins sleep at night, per wk        other factors\n21   slpnaps        minutes sleep, inc. naps  other sleep factors\n22     south             =1 if live in south    area of residence\n23   spsepay             spousal wage income        other factors\n24   spwrk75              =1 if spouse works        other factors\n25    totwrk            mins worked per week        labor factors\n26     union           =1 if belong to union        labor factors\n27   worknrm              mins work main job        labor factors\n28  workscnd            mins work second job        labor factors\n29     exper                  age - educ - 6        labor factors\n30    yngkid      =1 if children &lt; 3 present       family factors\n31   yrsmarr                   years married       family factors\n32    hrwage                     hourly wage        labor factors\n33     agesq                           age^2                  age\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E6%A3%AE%E6%9E%97%E5%9B%BE/%E6%A3%AE%E6%9E%97%E5%9B%BE%EF%BC%88forestplot%EF%BC%89/#_1","title":"\u57fa\u7840\u7ed8\u5236\uff08\u5355\u6a21\u578b\uff09","text":"<p>forestplot/examples/get-sleep.ipynb at main \u00b7 LSYS/forestplot</p> <pre><code># \u8ba1\u7b97\u53d8\u91cf\u95f4\u7684\u6210\u5bf9\u76f8\u5173\u6027\uff08Pearson\u76f8\u5173\u6027\uff09\nsleep_corr = pg.pairwise_corr(sleep).rename(columns={'p-unc': 'p-val'})\n\"\"\"\n           X         Y   method alternative    n         r           CI95%         p-val       BF10     power\n0        age     black  pearson   two-sided  706 -0.063647   [-0.14, 0.01]  9.105487e-02      0.196  0.394045\n1        age  clerical  pearson   two-sided  706 -0.011861   [-0.09, 0.06]  7.530534e-01       0.05  0.061397\n2        age  construc  pearson   two-sided  706  0.018473   [-0.06, 0.09]  6.241168e-01      0.053  0.077924\n3        age      educ  pearson   two-sided  706 -0.265831   [-0.33, -0.2]  6.951621e-13  7.005e+09  1.000000\n4        age   earns74  pearson   two-sided  706  0.070692    [-0.0, 0.14]  6.046985e-02      0.274  0.467639\n..       ...       ...      ...         ...  ...       ...             ...           ...        ...       ...\n430   yngkid    hrwage  pearson   two-sided  532 -0.005156   [-0.09, 0.08]  9.055532e-01      0.055  0.051585\n431   yngkid     agesq  pearson   two-sided  706 -0.305331  [-0.37, -0.24]  1.063976e-16  3.906e+13  1.000000\n432  yrsmarr    hrwage  pearson   two-sided  532  0.110267    [0.03, 0.19]  1.092447e-02      1.373  0.721959\n433  yrsmarr     agesq  pearson   two-sided  706  0.583251    [0.53, 0.63]  1.406839e-65  1.139e+62  1.000000\n434   hrwage     agesq  pearson   two-sided  532  0.086673     [0.0, 0.17]  4.569576e-02      0.398  0.516054\n\n[435 rows x 10 columns]\n\"\"\"\n\n# \u4ec5\u4fdd\u7559\u5176\u4ed6\u53d8\u91cf\u4e0esleep\u53d8\u91cf\u7684\u76f8\u5173\u6027\nsleep_corr.query(\"Y == 'sleep' | X == 'sleep'\", inplace=True)\n\"\"\"\n            X         Y   method alternative    n         r           CI95%          p-val        BF10     power\n15        age     sleep  pearson   two-sided  706  0.090373    [0.02, 0.16]   1.630887e-02       0.839  0.671578\n43      black     sleep  pearson   two-sided  706 -0.027057    [-0.1, 0.05]   4.728889e-01       0.061  0.110805\n70   clerical     sleep  pearson   two-sided  706  0.048081   [-0.03, 0.12]   2.019484e-01       0.106  0.247768\n96   construc     sleep  pearson   two-sided  706  0.041229   [-0.03, 0.11]   2.739475e-01       0.086  0.194481\n121      educ     sleep  pearson   two-sided  706 -0.095004  [-0.17, -0.02]   1.155151e-02       1.137  0.715052\n145   earns74     sleep  pearson   two-sided  706 -0.076890   [-0.15, -0.0]   4.110934e-02       0.378  0.533501\n168    gdhlth     sleep  pearson   two-sided  706 -0.102825  [-0.18, -0.03]   6.246660e-03       1.967  0.781649\n190      inlf     sleep  pearson   two-sided  706 -0.027126    [-0.1, 0.05]   4.717698e-01       0.061  0.111121\n211      smsa     sleep  pearson   two-sided  706 -0.066997   [-0.14, 0.01]   7.524015e-02       0.229  0.428720\n231   lhrwage     sleep  pearson   two-sided  532 -0.067197   [-0.15, 0.02]   1.216222e-01       0.179  0.340792\n250   lothinc     sleep  pearson   two-sided  706  0.036661   [-0.04, 0.11]   3.306971e-01       0.076  0.163499\n268      male     sleep  pearson   two-sided  706 -0.035909   [-0.11, 0.04]   3.407214e-01       0.074  0.158760\n285      marr     sleep  pearson   two-sided  706  0.053757   [-0.02, 0.13]   1.536188e-01        0.13  0.297561\n301      prot     sleep  pearson   two-sided  706  0.027147    [-0.05, 0.1]   4.714176e-01       0.061  0.111220\n316    rlxall     sleep  pearson   two-sided  706  0.867744    [0.85, 0.88]  6.051022e-216  6.697e+211  1.000000\n330     selfe     sleep  pearson   two-sided  706  0.001782   [-0.07, 0.08]   9.623058e-01       0.047  0.050233\n344     sleep   slpnaps  pearson   two-sided  706  0.893043    [0.88, 0.91]  2.339108e-246   1.38e+242  1.000000\n345     sleep     south  pearson   two-sided  706  0.078600     [0.0, 0.15]   3.679946e-02       0.415  0.551599\n346     sleep   spsepay  pearson   two-sided  706  0.007881   [-0.07, 0.08]   8.344125e-01       0.048  0.055000\n347     sleep   spwrk75  pearson   two-sided  706  0.007868   [-0.07, 0.08]   8.346888e-01       0.048  0.054983\n348     sleep    totwrk  pearson   two-sided  706 -0.321384  [-0.39, -0.25]   1.994095e-18   1.961e+15  1.000000\n349     sleep     union  pearson   two-sided  706  0.009965   [-0.06, 0.08]   7.915440e-01       0.049  0.058021\n350     sleep   worknrm  pearson   two-sided  706 -0.322300  [-0.39, -0.25]   1.577335e-18   2.471e+15  1.000000\n351     sleep  workscnd  pearson   two-sided  706  0.001139   [-0.07, 0.07]   9.759034e-01       0.047  0.050082\n352     sleep     exper  pearson   two-sided  706  0.104191    [0.03, 0.18]   5.587422e-03       2.175  0.792292\n353     sleep    yngkid  pearson   two-sided  706 -0.013262   [-0.09, 0.06]   7.250012e-01        0.05  0.064278\n354     sleep   yrsmarr  pearson   two-sided  706  0.063997   [-0.01, 0.14]   8.928507e-02       0.199  0.397636\n355     sleep    hrwage  pearson   two-sided  532 -0.049450   [-0.13, 0.04]   2.548774e-01       0.104  0.206828\n356     sleep     agesq  pearson   two-sided  706  0.099722    [0.03, 0.17]   8.010946e-03       1.574  0.756346\n\"\"\"\n\n# \u63d0\u53d6\u53d8\u91cf\u540d\u5e76\u5220\u9664\u90e8\u5206\u65e0\u5173\u53c2\u6570\nsleep_corr.insert(0, 'var', np.where(sleep_corr['X']==\"sleep\", sleep_corr['Y'], sleep_corr['X']))\nsleep_corr.drop(columns=[\"X\", \"Y\", \"method\", \"alternative\"], inplace=True)\n\"\"\"\n          var    n         r           CI95%          p-val        BF10     power\n15        age  706  0.090373    [0.02, 0.16]   1.630887e-02       0.839  0.671578\n43      black  706 -0.027057    [-0.1, 0.05]   4.728889e-01       0.061  0.110805\n70   clerical  706  0.048081   [-0.03, 0.12]   2.019484e-01       0.106  0.247768\n96   construc  706  0.041229   [-0.03, 0.11]   2.739475e-01       0.086  0.194481\n121      educ  706 -0.095004  [-0.17, -0.02]   1.155151e-02       1.137  0.715052\n145   earns74  706 -0.076890   [-0.15, -0.0]   4.110934e-02       0.378  0.533501\n168    gdhlth  706 -0.102825  [-0.18, -0.03]   6.246660e-03       1.967  0.781649\n190      inlf  706 -0.027126    [-0.1, 0.05]   4.717698e-01       0.061  0.111121\n211      smsa  706 -0.066997   [-0.14, 0.01]   7.524015e-02       0.229  0.428720\n231   lhrwage  532 -0.067197   [-0.15, 0.02]   1.216222e-01       0.179  0.340792\n250   lothinc  706  0.036661   [-0.04, 0.11]   3.306971e-01       0.076  0.163499\n268      male  706 -0.035909   [-0.11, 0.04]   3.407214e-01       0.074  0.158760\n285      marr  706  0.053757   [-0.02, 0.13]   1.536188e-01        0.13  0.297561\n301      prot  706  0.027147    [-0.05, 0.1]   4.714176e-01       0.061  0.111220\n316    rlxall  706  0.867744    [0.85, 0.88]  6.051022e-216  6.697e+211  1.000000\n330     selfe  706  0.001782   [-0.07, 0.08]   9.623058e-01       0.047  0.050233\n344   slpnaps  706  0.893043    [0.88, 0.91]  2.339108e-246   1.38e+242  1.000000\n345     south  706  0.078600     [0.0, 0.15]   3.679946e-02       0.415  0.551599\n346   spsepay  706  0.007881   [-0.07, 0.08]   8.344125e-01       0.048  0.055000\n347   spwrk75  706  0.007868   [-0.07, 0.08]   8.346888e-01       0.048  0.054983\n348    totwrk  706 -0.321384  [-0.39, -0.25]   1.994095e-18   1.961e+15  1.000000\n349     union  706  0.009965   [-0.06, 0.08]   7.915440e-01       0.049  0.058021\n350   worknrm  706 -0.322300  [-0.39, -0.25]   1.577335e-18   2.471e+15  1.000000\n351  workscnd  706  0.001139   [-0.07, 0.07]   9.759034e-01       0.047  0.050082\n352     exper  706  0.104191    [0.03, 0.18]   5.587422e-03       2.175  0.792292\n353    yngkid  706 -0.013262   [-0.09, 0.06]   7.250012e-01        0.05  0.064278\n354   yrsmarr  706  0.063997   [-0.01, 0.14]   8.928507e-02       0.199  0.397636\n355    hrwage  532 -0.049450   [-0.13, 0.04]   2.548774e-01       0.104  0.206828\n356     agesq  706  0.099722    [0.03, 0.17]   8.010946e-03       1.574  0.756346\n\"\"\"\n\n# \u6dfb\u52a0\u6216\u4fee\u6539\u67d0\u4e9b\u53c2\u6570\nsleep_corr['hl'] = [float(ci[1]) for ci in sleep_corr['CI95%']]\nsleep_corr['ll'] = [float(ci[0]) for ci in sleep_corr['CI95%']]\nsleep_corr['moerror'] = sleep_corr['hl'] - sleep_corr['r']\nsleep_corr['power'] = sleep_corr['power'].round(decimals=2)\nsleep_corr['n'] = sleep_corr['n'].map(str)\n\"\"\"\n          var    n         r           CI95%          p-val        BF10  power    hl    ll   moerror\n15        age  706  0.090373    [0.02, 0.16]   1.630887e-02       0.839   0.67  0.16  0.02  0.069627\n43      black  706 -0.027057    [-0.1, 0.05]   4.728889e-01       0.061   0.11  0.05 -0.10  0.077057\n70   clerical  706  0.048081   [-0.03, 0.12]   2.019484e-01       0.106   0.25  0.12 -0.03  0.071919\n96   construc  706  0.041229   [-0.03, 0.11]   2.739475e-01       0.086   0.19  0.11 -0.03  0.068771\n121      educ  706 -0.095004  [-0.17, -0.02]   1.155151e-02       1.137   0.72 -0.02 -0.17  0.075004\n145   earns74  706 -0.076890   [-0.15, -0.0]   4.110934e-02       0.378   0.53 -0.00 -0.15  0.076890\n168    gdhlth  706 -0.102825  [-0.18, -0.03]   6.246660e-03       1.967   0.78 -0.03 -0.18  0.072825\n190      inlf  706 -0.027126    [-0.1, 0.05]   4.717698e-01       0.061   0.11  0.05 -0.10  0.077126\n211      smsa  706 -0.066997   [-0.14, 0.01]   7.524015e-02       0.229   0.43  0.01 -0.14  0.076997\n231   lhrwage  532 -0.067197   [-0.15, 0.02]   1.216222e-01       0.179   0.34  0.02 -0.15  0.087197\n250   lothinc  706  0.036661   [-0.04, 0.11]   3.306971e-01       0.076   0.16  0.11 -0.04  0.073339\n268      male  706 -0.035909   [-0.11, 0.04]   3.407214e-01       0.074   0.16  0.04 -0.11  0.075909\n285      marr  706  0.053757   [-0.02, 0.13]   1.536188e-01        0.13   0.30  0.13 -0.02  0.076243\n301      prot  706  0.027147    [-0.05, 0.1]   4.714176e-01       0.061   0.11  0.10 -0.05  0.072853\n316    rlxall  706  0.867744    [0.85, 0.88]  6.051022e-216  6.697e+211   1.00  0.88  0.85  0.012256\n330     selfe  706  0.001782   [-0.07, 0.08]   9.623058e-01       0.047   0.05  0.08 -0.07  0.078218\n344   slpnaps  706  0.893043    [0.88, 0.91]  2.339108e-246   1.38e+242   1.00  0.91  0.88  0.016957\n345     south  706  0.078600     [0.0, 0.15]   3.679946e-02       0.415   0.55  0.15  0.00  0.071400\n346   spsepay  706  0.007881   [-0.07, 0.08]   8.344125e-01       0.048   0.06  0.08 -0.07  0.072119\n347   spwrk75  706  0.007868   [-0.07, 0.08]   8.346888e-01       0.048   0.05  0.08 -0.07  0.072132\n348    totwrk  706 -0.321384  [-0.39, -0.25]   1.994095e-18   1.961e+15   1.00 -0.25 -0.39  0.071384\n349     union  706  0.009965   [-0.06, 0.08]   7.915440e-01       0.049   0.06  0.08 -0.06  0.070035\n350   worknrm  706 -0.322300  [-0.39, -0.25]   1.577335e-18   2.471e+15   1.00 -0.25 -0.39  0.072300\n351  workscnd  706  0.001139   [-0.07, 0.07]   9.759034e-01       0.047   0.05  0.07 -0.07  0.068861\n352     exper  706  0.104191    [0.03, 0.18]   5.587422e-03       2.175   0.79  0.18  0.03  0.075809\n353    yngkid  706 -0.013262   [-0.09, 0.06]   7.250012e-01        0.05   0.06  0.06 -0.09  0.073262\n354   yrsmarr  706  0.063997   [-0.01, 0.14]   8.928507e-02       0.199   0.40  0.14 -0.01  0.076003\n355    hrwage  532 -0.049450   [-0.13, 0.04]   2.548774e-01       0.104   0.21  0.04 -0.13  0.089450\n356     agesq  706  0.099722    [0.03, 0.17]   8.010946e-03       1.574   0.76  0.17  0.03  0.070278\n\"\"\"\n\n# \u4e24\u8868\u5408\u5e76\u5e76\u5220\u9664\u65e0\u5173\u53c2\u6570\nsleep_corr = pd.merge(sleep_corr, sleep_label, on='var', how='inner').drop(columns=['CI95%', 'BF10'])\n\"\"\"\n         var    n         r          p-val  power    hl    ll   moerror                           label                group\n0        age  706  0.090373   1.630887e-02   0.67  0.16  0.02  0.069627                        in years                  age\n1      black  706 -0.027057   4.728889e-01   0.11  0.05 -0.10  0.077057                     =1 if black        other factors\n2   clerical  706  0.048081   2.019484e-01   0.25  0.12 -0.03  0.071919           =1 if clerical worker           occupation\n3   construc  706  0.041229   2.739475e-01   0.19  0.11 -0.03  0.068771       =1 if construction worker           occupation\n4       educ  706 -0.095004   1.155151e-02   0.72 -0.02 -0.17  0.075004              years of schooling        labor factors\n5    earns74  706 -0.076890   4.110934e-02   0.53 -0.00 -0.15  0.076890            total earnings, 1974        labor factors\n6     gdhlth  706 -0.102825   6.246660e-03   0.78 -0.03 -0.18  0.072825  =1 if in good or excel. health       health factors\n7       inlf  706 -0.027126   4.717698e-01   0.11  0.05 -0.10  0.077126            =1 if in labor force        labor factors\n8       smsa  706 -0.066997   7.524015e-02   0.43  0.01 -0.14  0.076997              =1 if live in smsa    area of residence\n9    lhrwage  532 -0.067197   1.216222e-01   0.34  0.02 -0.15  0.087197                 log hourly wage        labor factors\n10   lothinc  706  0.036661   3.306971e-01   0.16  0.11 -0.04  0.073339   log othinc, unless othinc &lt; 0        labor factors\n11      male  706 -0.035909   3.407214e-01   0.16  0.04 -0.11  0.075909                      =1 if male        other factors\n12      marr  706  0.053757   1.536188e-01   0.30  0.13 -0.02  0.076243                   =1 if married       family factors\n13      prot  706  0.027147   4.714176e-01   0.11  0.10 -0.05  0.072853                =1 if Protestant        other factors\n14    rlxall  706  0.867744  6.051022e-216   1.00  0.88  0.85  0.012256       slpnaps + personal activs  other sleep factors\n15     selfe  706  0.001782   9.623058e-01   0.05  0.08 -0.07  0.078218             =1 if self employed        labor factors\n16   slpnaps  706  0.893043  2.339108e-246   1.00  0.91  0.88  0.016957        minutes sleep, inc. naps  other sleep factors\n17     south  706  0.078600   3.679946e-02   0.55  0.15  0.00  0.071400             =1 if live in south    area of residence\n18   spsepay  706  0.007881   8.344125e-01   0.06  0.08 -0.07  0.072119             spousal wage income        other factors\n19   spwrk75  706  0.007868   8.346888e-01   0.05  0.08 -0.07  0.072132              =1 if spouse works        other factors\n20    totwrk  706 -0.321384   1.994095e-18   1.00 -0.25 -0.39  0.071384            mins worked per week        labor factors\n21     union  706  0.009965   7.915440e-01   0.06  0.08 -0.06  0.070035           =1 if belong to union        labor factors\n22   worknrm  706 -0.322300   1.577335e-18   1.00 -0.25 -0.39  0.072300              mins work main job        labor factors\n23  workscnd  706  0.001139   9.759034e-01   0.05  0.07 -0.07  0.068861            mins work second job        labor factors\n24     exper  706  0.104191   5.587422e-03   0.79  0.18  0.03  0.075809                  age - educ - 6        labor factors\n25    yngkid  706 -0.013262   7.250012e-01   0.06  0.06 -0.09  0.073262      =1 if children &lt; 3 present       family factors\n26   yrsmarr  706  0.063997   8.928507e-02   0.40  0.14 -0.01  0.076003                   years married       family factors\n27    hrwage  532 -0.049450   2.548774e-01   0.21  0.04 -0.13  0.089450                     hourly wage        labor factors\n28     agesq  706  0.099722   8.010946e-03   0.76  0.17  0.03  0.070278                           age^2                  age\n\"\"\"\n</code></pre> <pre><code>fig = plt.figure(figsize=(15, 20), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\ngroup_order = [\"age factors\", \"labor factors\", \"occupation\", \"health factors\", \"family factors\", \"area of residence\", \"other factors\", \"other sleep factors\"]\n\nfp.forestplot(sleep_corr,\n\n              # \u7ed8\u5236\u4f30\u8ba1\u503c\u4e0e\u7f6e\u4fe1\u533a\u95f4\u7684errorbar\u548cscatter\u221a\n              estimate=\"r\",                                      # \u4f30\u8ba1\u503c\uff0c\u4f20\u9012\u7ed9ax.errorbar\u548cax.scatter\u7684x\u53c2\u6570\n              ll=\"ll\",                                           # \u7f6e\u4fe1\u533a\u95f4\u4e0b\u9650\uff0c\u8ba1\u7b97\u540e\u4f20\u9012\u7ed9ax.errorbar\u7684xerr\u53c2\u6570\n              hl=\"hl\",                                           # \u7f6e\u4fe1\u533a\u95f4\u4e0a\u9650\uff0c\u8ba1\u7b97\u540e\u4f20\u9012\u7ed9ax.errorbar\u7684xerr\u53c2\u6570\n              lw=2,                                              # \u8bef\u5dee\u7ebf\u5bbd\uff0c\u4f20\u9012\u7ed9ax.errorbar\u7684elinewidth\u53c2\u6570\n              linecolor='r',                                     # \u8bef\u5dee\u7ebf\u8272\uff0c\u4f20\u9012\u7ed9ax.errorbar\u7684ecolor\u53c2\u6570\n              marker=\"*\",                                        # \u4f30\u8ba1\u503c\u6807\u8bb0\u7c7b\u578b\uff0c\u4f20\u9012\u7ed9ax.scatter\u7684marker\u53c2\u6570\n              markersize=100,                                    # \u4f30\u8ba1\u503c\u6807\u8bb0\u5927\u5c0f\uff0c\u4f20\u9012\u7ed9ax.scatter\u7684s\u53c2\u6570\n              markercolor=\"k\",                                   # \u4f30\u8ba1\u503c\u6807\u8bb0\u989c\u8272\uff0c\u4f20\u9012\u7ed9ax.scatter\u7684color\u53c2\u6570\n              markeralpha=1,                                     # \u4f30\u8ba1\u503c\u6807\u8bb0\u900f\u660e\u5ea6\uff0c\u4f20\u9012\u7ed9ax.scatter\u7684alpha\u53c2\u6570\n              logscale=False,                                    # \u662f\u5426x\u8f74\u8fdb\u884c\u5bf9\u6570\u5316\uff08\u4ee510\u4e3a\u5e95\uff09\u7f29\u653e\u3010ax.set_xscale(\"log\", base=10)\u3011\n              color_alt_rows=True,                               # \u53d8\u91cf\u884c\u4ea4\u66ff\u663e\u793a\u989c\u8272\n\n              # \u8bbe\u7f6ex\u8f74\u523b\u5ea6\u4e0e\u8303\u56f4\u221a\n              xticks=[-0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1.0],   # \u221ax\u8f74\u523b\u5ea6\u4f4d\u7f6e\u3010ax.set_xticks(xticks)\u3011\n              nticks=8,                                          # \u221axticks=None\u65f6x\u8f74\u6700\u5927\u523b\u5ea6\u6570\uff0c\u81ea\u52a8\u8bbe\u7f6e\u523b\u5ea6\u4f4d\u7f6e\u3010ax.xaxis.set_major_locator(plt.MaxNLocator(nticks))\u3011\n              xticklabels=None,                                  # \u221ax\u8f74\u523b\u5ea6\u6807\u7b7e\u6587\u672c\u3010ax.set_xticklabels(xticklabels)\u3011\n              xtick_size=20,                                     # \u221ax\u8f74\u523b\u5ea6\u6807\u7b7e\u5927\u5c0f\u3010ax.tick_params(axis=\"x\", labelsize=xtick_size)\u3011\n              xlim=[-0.4, 1],                                    # \u221ax\u8f74\u8303\u56f4\u3010ax.set_xlim(xlim[0], xlim[1])\u3011\n\n              # x\u8f74\u6807\u9898\u221a\n              xlabel=\"Pearson correlation coefficient\",          # \u221ax\u8f74\u6807\u9898\u6587\u672c\u5185\u5bb9\uff0c\u4f20\u9012\u7ed9ax.set_xlabel\u7684xlabel\u53c2\u6570\n              xlabel_size=20,                                    # \u221ax\u8f74\u6807\u9898\u5b57\u4f53\u5927\u5c0f\uff0c\u4f20\u9012\u7ed9ax.set_xlabel\u7684size\u53c2\u6570\n              xlabel_fontweight=\"bold\",                          # \u221ax\u8f74\u6807\u9898\u5b57\u4f53\u7c97\u7ec6\uff0c\u4f20\u9012\u7ed9ax.set_xlabel\u7684fontweight\u53c2\u6570\n\n              # \u7ed8\u5236\u53c2\u8003\u7ebf\u221a\n              xline=0,                                           # \u221a\u53c2\u8003\u7ebf\u4f4d\u7f6e\uff0c\u4f20\u9012\u7ed9ax.vlines\u7684x\u53c2\u6570\n              xlinestyle='--',                                   # \u221a\u53c2\u8003\u7ebf\u7ebf\u578b\uff0c\u4f20\u9012\u7ed9ax.vlines\u7684linestyle\u53c2\u6570\n              xlinecolor='r',                                    # \u221a\u53c2\u8003\u7ebf\u989c\u8272\uff0c\u4f20\u9012\u7ed9ax.vlines\u7684color\u53c2\u6570\n              xlinewidth=2,                                      # \u221a\u53c2\u8003\u7ebf\u7ebf\u5bbd\uff0c\u4f20\u9012\u7ed9ax.vlines\u7684linewidth\u53c2\u6570\n\n              # \u7ed8\u5236\u5de6\u4fa7y\u8f74\u523b\u5ea6\u6807\u7b7eyticklabel\n              varlabel=\"var\",                                    # \u221a\u53d8\u91cf\u6807\u7b7e\n\n              groupvar='group',                                  # \u221a\u5206\u7ec4\u4fe1\u606f\u5217\u3002\u6ce8\u610f\u5206\u7ec4\u540d\u5c3d\u91cf\u4e0d\u4e0e\u53d8\u91cf\u6807\u7b7e\u540d\u91cd\u590d\uff0c\u5426\u5219\u663e\u793a\u51fa\u95ee\u9898\u3002\n              group_order=group_order,                           # \u221a\u5206\u7ec4\u663e\u793a\u987a\u5e8f\n              grouplab_size=20,                                  # \u221a\u5206\u7ec4\u6587\u672c\u5b57\u4f53\u5927\u5c0f\n              # grouplab_fontweight=\"bold\",                      # \u221a\u5206\u7ec4\u6587\u672c\u548c\u53f3\u4fa7\u8868\u5934\u5b57\u4f53\u7c97\u7ec6\uff08rightannote!=None\u65f6\uff09\n\n              flush=True,                                        # \u221a\u5982\u679c\u4e3aTrue\uff0c\u5219\u8bbe\u7f6eax.set_yticklabels\u7684ha\u53c2\u6570\u4e3a\"left\"\uff0c\u5426\u5219\u8bbe\u7f6e\u4e3a\"right\"\n              capitalize=\"title\",                                # \u221a\u53d8\u91cf\u6807\u7b7e\u548c\u5206\u7ec4\u540d\u7684\u663e\u793a\u5f62\u5f0f\u3002\u53ef\u9009\"title\", \"capitalize\", \"lower\", \"upper\", \"swapcase\"\n              sort=True,                                         # \u221a\u662f\u5426\u5bf9\u53d8\u91cf\u6839\u636esortby\u53c2\u6570\u8fdb\u884c\u6392\u5e8f\uff08\u964d\u5e8f\uff09\uff0c\u9ed8\u8ba4False\u3002\u5982\u679c\u8bbe\u7f6e\u4e86groupvar\u53c2\u6570\uff0c\u5219\u5728\u5404\u81ea\u7ec4\u5185\u6392\u5e8f\u3002\n              sortby='r',                                        # \u221a\u6392\u5e8f\u4f9d\u636e\uff08\u82e5\u8bbe\u7f6e\u5219\u9ed8\u8ba4\u8bbe\u7f6esort=True\uff09\uff0c\u9ed8\u8ba4\u662festimate\u53c2\u6570\u5bf9\u5e94\u7684\u5217\u3002\n\n              form_ci_report=True,                               # \u221a\u662f\u5426\u81ea\u52a8\u5904\u7406\u5e76\u5f62\u6210\u7f6e\u4fe1\u533a\u95f4\u62a5\u544a\"est_ci\"\u5217\uff08\u9ed8\u8ba4\u4e3aTrue\uff09\n              # ci_report=True,                                  # \u221a\u662f\u5426\u5728\u56fe\u5de6\u4fa7\u663e\u793a\u7f6e\u4fe1\u533a\u95f4\u62a5\u544a\u5217\uff08\u9ed8\u8ba4\u4e3aTrue\uff0c\u82e5ll=None\u5219\u8bbe\u7f6e\u4e3aFalse\uff09\uff0c\u82e5\u8bbe\u7f6e\u4e3aTrue\u5219\u9ed8\u8ba4\u8bbe\u7f6eform_ci_report=True\n\n              annote=['label', \"est_ci\"],                        # \u221a\u56fe\u5de6\u4fa7\u663e\u793a\u7684\u4fe1\u606f\u5217\uff0c\u8986\u76d6\u4ee5\u4e0a\u8bbe\u7f6e\u7684\u7f6e\u4fe1\u533a\u95f4\u62a5\u544a\u5217\n              annoteheaders=[\"Label\", \"Est. (95% Conf. Int.)\"],  # \u221a\u56fe\u5de6\u4fa7\u663e\u793a\u7684\u4fe1\u606f\u5217\u7684\u8868\u5934\uff0c\u8986\u76d6\u4ee5\u4e0a\u8bbe\u7f6e\u7684\u7f6e\u4fe1\u533a\u95f4\u62a5\u544a\u5217\n              variable_header=\"Variable\",                        # \u221a\u53d8\u91cf\u6807\u7b7e\u5217\u8868\u5934\n              # tableheader_fontweight=\"bold\",                   # \u221a\u56fe\u5de6\u4fa7\u663e\u793a\u7684\u4fe1\u606f\u5217\u7684\u8868\u5934\u5b57\u4f53\u7c97\u7ec6\n\n              # \u7ed8\u5236\u53f3\u4fa7y\u8f74\u523b\u5ea6\u6807\u7b7eyticklabel2\n              pval='p-val',                                      # \u221a\u53d8\u91cfp\u503c\u4fe1\u606f\u5217\uff0c\u6dfb\u52a0'formatted_pval'\u5217\u5e76\u663e\u793a\u5728\u56fe\u53f3\u4fa7\n              starpval=True,                                     # \u221a\u662f\u5426\u6839\u636ethresholds\u53c2\u6570\u63d0\u4f9b\u7684\u9608\u503c\uff0c\u5728p\u503c\u540e\u6dfb\u52a0\u5bf9\u5e94\u7b26\u53f7\n              thresholds=[0.001, 0.01, 0.05],                    # \u221a\u5c0f\u4e8e\u7b49\u4e8e\u5bf9\u5e94\u9608\u503c\u7684p\u503c\u540e\u6dfb\u52a0symbols\u53c2\u6570\u5bf9\u5e94\u663e\u8457\u6027\u7b26\u53f7\n              symbols=[' ***', ' **', ' *'],                     # \u221a\u4e3ap\u503c\u6dfb\u52a0\u663e\u8457\u6027\u7b26\u53f7\n              # pval_title=\"P-value\",                            # \u221ap\u503c\u5217\u8868\u5934\uff08rightannote=None\u65f6\uff09\n              # pval_title_fontsize=20,                          # \u221ap\u503c\u8868\u5934\u6587\u672c\u5927\u5c0f\uff08rightannote=None\u4e14annoteheaders\uff01=None\u65f6\uff09\n              # pval_title_fontweight=\"bold\",                    # \u221ap\u503c\u8868\u5934\u6587\u672c\u7c97\u7ec6\uff08rightannote=None\u4e14annoteheaders\uff01=None\u65f6\uff09\n\n              rightannote=[\"formatted_pval\", \"n\", \"power\"],      # \u221a\u56fe\u53f3\u4fa7\u663e\u793a\u7684\u4fe1\u606f\u5217\uff0c\u8986\u76d6\u4ee5\u4e0a\u8bbe\u7f6e\u7684p\u503c\u5217\n              right_annoteheaders=[\"P-value\", \"N\", \"Power\"],     # \u221a\u56fe\u53f3\u4fa7\u663e\u793a\u7684\u4fe1\u606f\u5217\u7684\u8868\u5934\uff0c\u8986\u76d6\u4ee5\u4e0a\u8bbe\u7f6e\u7684p\u503c\u5217\n\n              # \u4e24\u4fa7y\u8f74\u523b\u5ea6\u6807\u7b7e\n              table=True,                                        # \u221a\u662f\u5426\u7ed8\u5236\u8868\u683c\u7ebf\n              col_spacing=2,                                     # \u221a\u5217\u95f4\u8ddd\n              fontfamily=\"monospace\",                            # \u221a\u5b57\u4f53\n              fontsize=20,                                       # \u221a\u5b57\u4f53\u5927\u5c0f\n\n              # y\u8f74\u6807\u9898\u221a\n              ylabel=\"Variable Information\",                     # \u221ay\u8f74\u6807\u9898\uff0c\u4f20\u9012\u7ed9ax.set_ylabel\u7684ylabel\u53c2\u6570\n              ylabel1_size=18,                                   # \u221ay\u8f74\u6807\u9898\u5b57\u4f53\u5927\u5c0f\uff0c\u4f20\u9012\u7ed9ax.set_ylabel\u7684size\u53c2\u6570\uff1bp\u503c\u8868\u5934\u6587\u672c\u5927\u5c0f\uff08rightannote=None\u4e14annoteheaders=None\u65f6\uff0c\u9ed8\u8ba4\u8bbe\u7f6e\u5b57\u4f53\u7c97\u7ec6\u4e3a\"bold\"\uff09\n              ylabel1_fontweight=\"bold\",                         # \u221ay\u8f74\u6807\u9898\u5b57\u4f53\u7c97\u7ec6\uff0c\u4f20\u9012\u7ed9ax.set_ylabel\u7684fontweight\u53c2\u6570\n              ylabel_loc=\"top\",                                  # \u221ay\u8f74\u6807\u9898\u4f4d\u7f6e\uff0c\u4f20\u9012\u7ed9ax.set_ylabel\u7684loc\u53c2\u6570\n              ylabel_angle=\"horizontal\",                         # \u221ay\u8f74\u6807\u9898\u65cb\u8f6c\u89d2\u5ea6\uff0c\u4f20\u9012\u7ed9ax.set_ylabel\u7684rotation\u53c2\u6570\n\n              # \u5176\u5b83\u221a\n              decimal_precision=2,                               # \u221a\u6570\u636e\u5c0f\u6570\u70b9\u7cbe\u786e\u4f4d\u6570\n              return_df=True,                                    # \u221a\u662f\u5426\u8fd4\u56de\u5185\u90e8\u5904\u7406\u540e\u7684DataFrame\u7ed3\u679c\n              despine=False,\n              ax=ax\n              )\n\"\"\"\n(                    var                group    n         r          p-val  power    hl    ll   moerror                           label formatted_r formatted_ll formatted_hl          ci_range                 est_ci formatted_pval                 formatted_label       formatted_est_ci                                         yticklabel formatted_formatted_pval formatted_n formatted_power          yticklabel2\n 0                Rlxall  Other Sleep Factors  706  0.867744  6.051022e-216   1.00  0.88  0.85  0.012256       slpnaps + personal activs        0.87         0.85         0.88  ( 0.85 to  0.88)   0.87( 0.85 to  0.88)        0.0 ***  slpnaps + personal activs        0.87( 0.85 to  0.88)    Rlxall             slpnaps + personal activs...                  0.0 ***         706           1.0    0.0 ***  706  1.0  \n 1               Slpnaps  Other Sleep Factors  706  0.893043  2.339108e-246   1.00  0.91  0.88  0.016957        minutes sleep, inc. naps        0.89         0.88         0.91  ( 0.88 to  0.91)   0.89( 0.88 to  0.91)        0.0 ***  minutes sleep, inc. naps         0.89( 0.88 to  0.91)    Slpnaps            minutes sleep, inc. naps ...                  0.0 ***         706           1.0    0.0 ***  706  1.0  \n 2   Other Sleep Factors  Other Sleep Factors  NaN       NaN            NaN    NaN   NaN   NaN       NaN                             NaN         nan          nan          nan  (  nan to   nan)    nan(  nan to   nan)                 nan                               nan(  nan to   nan)                                Other Sleep Factors                                  nan           nan                       \n 3                  Male        Other Factors  706 -0.035909   3.407214e-01   0.16  0.04 -0.11  0.075909                      =1 if male       -0.04        -0.11         0.04  (-0.11 to  0.04)  -0.04(-0.11 to  0.04)           0.34  =1 if male                      -0.04(-0.11 to  0.04)    Male               =1 if male               ...                  0.34            706           0.16   0.34     706  0.16 \n 4                 Black        Other Factors  706 -0.027057   4.728889e-01   0.11  0.05 -0.10  0.077057                     =1 if black       -0.03        -0.10         0.05  (-0.10 to  0.05)  -0.03(-0.10 to  0.05)           0.47  =1 if black                     -0.03(-0.10 to  0.05)    Black              =1 if black              ...                  0.47            706           0.11   0.47     706  0.11 \n 5               Spwrk75        Other Factors  706  0.007868   8.346888e-01   0.05  0.08 -0.07  0.072132              =1 if spouse works        0.01        -0.07         0.08  (-0.07 to  0.08)   0.01(-0.07 to  0.08)           0.83  =1 if spouse works               0.01(-0.07 to  0.08)    Spwrk75            =1 if spouse works       ...                  0.83            706           0.05   0.83     706  0.05 \n 6               Spsepay        Other Factors  706  0.007881   8.344125e-01   0.06  0.08 -0.07  0.072119             spousal wage income        0.01        -0.07         0.08  (-0.07 to  0.08)   0.01(-0.07 to  0.08)           0.83  spousal wage income              0.01(-0.07 to  0.08)    Spsepay            spousal wage income      ...                  0.83            706           0.06   0.83     706  0.06 \n 7                  Prot        Other Factors  706  0.027147   4.714176e-01   0.11  0.10 -0.05  0.072853                =1 if Protestant        0.03        -0.05         0.10  (-0.05 to  0.10)   0.03(-0.05 to  0.10)           0.47  =1 if Protestant                 0.03(-0.05 to  0.10)    Prot               =1 if Protestant         ...                  0.47            706           0.11   0.47     706  0.11 \n 8         Other Factors        Other Factors  NaN       NaN            NaN    NaN   NaN   NaN       NaN                             NaN         nan          nan          nan  (  nan to   nan)    nan(  nan to   nan)                 nan                               nan(  nan to   nan)                                      Other Factors                                  nan           nan                       \n 9                  Smsa    Area Of Residence  706 -0.066997   7.524015e-02   0.43  0.01 -0.14  0.076997              =1 if live in smsa       -0.07        -0.14         0.01  (-0.14 to  0.01)  -0.07(-0.14 to  0.01)           0.08  =1 if live in smsa              -0.07(-0.14 to  0.01)    Smsa               =1 if live in smsa       ...                  0.08            706           0.43   0.08     706  0.43 \n 10                South    Area Of Residence  706  0.078600   3.679946e-02   0.55  0.15  0.00  0.071400             =1 if live in south        0.08         0.00         0.15  ( 0.00 to  0.15)   0.08( 0.00 to  0.15)         0.04 *  =1 if live in south              0.08( 0.00 to  0.15)    South              =1 if live in south      ...                  0.04 *          706           0.55   0.04 *   706  0.55 \n 11    Area Of Residence    Area Of Residence  NaN       NaN            NaN    NaN   NaN   NaN       NaN                             NaN         nan          nan          nan  (  nan to   nan)    nan(  nan to   nan)                 nan                               nan(  nan to   nan)                                  Area Of Residence                                  nan           nan                       \n 12               Yngkid       Family Factors  706 -0.013262   7.250012e-01   0.06  0.06 -0.09  0.073262      =1 if children &lt; 3 present       -0.01        -0.09         0.06  (-0.09 to  0.06)  -0.01(-0.09 to  0.06)           0.73  =1 if children &lt; 3 present      -0.01(-0.09 to  0.06)    Yngkid             =1 if children &lt; 3 presen...                  0.73            706           0.06   0.73     706  0.06 \n 13                 Marr       Family Factors  706  0.053757   1.536188e-01   0.30  0.13 -0.02  0.076243                   =1 if married        0.05        -0.02         0.13  (-0.02 to  0.13)   0.05(-0.02 to  0.13)           0.15  =1 if married                    0.05(-0.02 to  0.13)    Marr               =1 if married            ...                  0.15            706           0.3    0.15     706  0.3  \n 14              Yrsmarr       Family Factors  706  0.063997   8.928507e-02   0.40  0.14 -0.01  0.076003                   years married        0.06        -0.01         0.14  (-0.01 to  0.14)   0.06(-0.01 to  0.14)           0.09  years married                    0.06(-0.01 to  0.14)    Yrsmarr            years married            ...                  0.09            706           0.4    0.09     706  0.4  \n 15       Family Factors       Family Factors  NaN       NaN            NaN    NaN   NaN   NaN       NaN                             NaN         nan          nan          nan  (  nan to   nan)    nan(  nan to   nan)                 nan                               nan(  nan to   nan)                                     Family Factors                                  nan           nan                       \n 16               Gdhlth       Health Factors  706 -0.102825   6.246660e-03   0.78 -0.03 -0.18  0.072825  =1 if in good or excel. health       -0.10        -0.18        -0.03  (-0.18 to -0.03)  -0.10(-0.18 to -0.03)        0.01 **  =1 if in good or excel. health  -0.10(-0.18 to -0.03)    Gdhlth             =1 if in good or excel. h...                  0.01 **         706           0.78   0.01 **  706  0.78 \n 17       Health Factors       Health Factors  NaN       NaN            NaN    NaN   NaN   NaN       NaN                             NaN         nan          nan          nan  (  nan to   nan)    nan(  nan to   nan)                 nan                               nan(  nan to   nan)                                     Health Factors                                  nan           nan                       \n 18             Construc           Occupation  706  0.041229   2.739475e-01   0.19  0.11 -0.03  0.068771       =1 if construction worker        0.04        -0.03         0.11  (-0.03 to  0.11)   0.04(-0.03 to  0.11)           0.27  =1 if construction worker        0.04(-0.03 to  0.11)    Construc           =1 if construction worker...                  0.27            706           0.19   0.27     706  0.19 \n 19             Clerical           Occupation  706  0.048081   2.019484e-01   0.25  0.12 -0.03  0.071919           =1 if clerical worker        0.05        -0.03         0.12  (-0.03 to  0.12)   0.05(-0.03 to  0.12)            0.2  =1 if clerical worker            0.05(-0.03 to  0.12)    Clerical           =1 if clerical worker    ...                  0.2             706           0.25   0.2      706  0.25 \n 20           Occupation           Occupation  NaN       NaN            NaN    NaN   NaN   NaN       NaN                             NaN         nan          nan          nan  (  nan to   nan)    nan(  nan to   nan)                 nan                               nan(  nan to   nan)                                         Occupation                                  nan           nan                       \n 21              Worknrm        Labor Factors  706 -0.322300   1.577335e-18   1.00 -0.25 -0.39  0.072300              mins work main job       -0.32        -0.39        -0.25  (-0.39 to -0.25)  -0.32(-0.39 to -0.25)        0.0 ***  mins work main job              -0.32(-0.39 to -0.25)    Worknrm            mins work main job       ...                  0.0 ***         706           1.0    0.0 ***  706  1.0  \n 22               Totwrk        Labor Factors  706 -0.321384   1.994095e-18   1.00 -0.25 -0.39  0.071384            mins worked per week       -0.32        -0.39        -0.25  (-0.39 to -0.25)  -0.32(-0.39 to -0.25)        0.0 ***  mins worked per week            -0.32(-0.39 to -0.25)    Totwrk             mins worked per week     ...                  0.0 ***         706           1.0    0.0 ***  706  1.0  \n 23                 Educ        Labor Factors  706 -0.095004   1.155151e-02   0.72 -0.02 -0.17  0.075004              years of schooling       -0.10        -0.17        -0.02  (-0.17 to -0.02)  -0.10(-0.17 to -0.02)         0.01 *  years of schooling              -0.10(-0.17 to -0.02)    Educ               years of schooling       ...                  0.01 *          706           0.72   0.01 *   706  0.72 \n 24              Earns74        Labor Factors  706 -0.076890   4.110934e-02   0.53 -0.00 -0.15  0.076890            total earnings, 1974       -0.08        -0.15        -0.00  (-0.15 to -0.00)  -0.08(-0.15 to -0.00)         0.04 *  total earnings, 1974            -0.08(-0.15 to -0.00)    Earns74            total earnings, 1974     ...                  0.04 *          706           0.53   0.04 *   706  0.53 \n 25              Lhrwage        Labor Factors  532 -0.067197   1.216222e-01   0.34  0.02 -0.15  0.087197                 log hourly wage       -0.07        -0.15         0.02  (-0.15 to  0.02)  -0.07(-0.15 to  0.02)           0.12  log hourly wage                 -0.07(-0.15 to  0.02)    Lhrwage            log hourly wage          ...                  0.12            532           0.34   0.12     532  0.34 \n 26               Hrwage        Labor Factors  532 -0.049450   2.548774e-01   0.21  0.04 -0.13  0.089450                     hourly wage       -0.05        -0.13         0.04  (-0.13 to  0.04)  -0.05(-0.13 to  0.04)           0.25  hourly wage                     -0.05(-0.13 to  0.04)    Hrwage             hourly wage              ...                  0.25            532           0.21   0.25     532  0.21 \n 27                 Inlf        Labor Factors  706 -0.027126   4.717698e-01   0.11  0.05 -0.10  0.077126            =1 if in labor force       -0.03        -0.10         0.05  (-0.10 to  0.05)  -0.03(-0.10 to  0.05)           0.47  =1 if in labor force            -0.03(-0.10 to  0.05)    Inlf               =1 if in labor force     ...                  0.47            706           0.11   0.47     706  0.11 \n 28             Workscnd        Labor Factors  706  0.001139   9.759034e-01   0.05  0.07 -0.07  0.068861            mins work second job        0.00        -0.07         0.07  (-0.07 to  0.07)   0.00(-0.07 to  0.07)           0.98  mins work second job             0.00(-0.07 to  0.07)    Workscnd           mins work second job     ...                  0.98            706           0.05   0.98     706  0.05 \n 29                Selfe        Labor Factors  706  0.001782   9.623058e-01   0.05  0.08 -0.07  0.078218             =1 if self employed        0.00        -0.07         0.08  (-0.07 to  0.08)   0.00(-0.07 to  0.08)           0.96  =1 if self employed              0.00(-0.07 to  0.08)    Selfe              =1 if self employed      ...                  0.96            706           0.05   0.96     706  0.05 \n 30                Union        Labor Factors  706  0.009965   7.915440e-01   0.06  0.08 -0.06  0.070035           =1 if belong to union        0.01        -0.06         0.08  (-0.06 to  0.08)   0.01(-0.06 to  0.08)           0.79  =1 if belong to union            0.01(-0.06 to  0.08)    Union              =1 if belong to union    ...                  0.79            706           0.06   0.79     706  0.06 \n 31              Lothinc        Labor Factors  706  0.036661   3.306971e-01   0.16  0.11 -0.04  0.073339   log othinc, unless othinc &lt; 0        0.04        -0.04         0.11  (-0.04 to  0.11)   0.04(-0.04 to  0.11)           0.33  log othinc, unless othinc &lt; 0    0.04(-0.04 to  0.11)    Lothinc            log othinc, unless othinc...                  0.33            706           0.16   0.33     706  0.16 \n 32                Exper        Labor Factors  706  0.104191   5.587422e-03   0.79  0.18  0.03  0.075809                  age - educ - 6        0.10         0.03         0.18  ( 0.03 to  0.18)   0.10( 0.03 to  0.18)        0.01 **  age - educ - 6                   0.10( 0.03 to  0.18)    Exper              age - educ - 6           ...                  0.01 **         706           0.79   0.01 **  706  0.79 \n 33        Labor Factors        Labor Factors  NaN       NaN            NaN    NaN   NaN   NaN       NaN                             NaN         nan          nan          nan  (  nan to   nan)    nan(  nan to   nan)                 nan                               nan(  nan to   nan)                                      Labor Factors                                  nan           nan                       \n 34                  Age          Age Factors  706  0.090373   1.630887e-02   0.67  0.16  0.02  0.069627                        in years        0.09         0.02         0.16  ( 0.02 to  0.16)   0.09( 0.02 to  0.16)         0.02 *  in years                         0.09( 0.02 to  0.16)    Age                in years                 ...                  0.02 *          706           0.67   0.02 *   706  0.67 \n 35                Agesq          Age Factors  706  0.099722   8.010946e-03   0.76  0.17  0.03  0.070278                           age^2        0.10         0.03         0.17  ( 0.03 to  0.17)   0.10( 0.03 to  0.17)        0.01 **  age^2                            0.10( 0.03 to  0.17)    Agesq              age^2                    ...                  0.01 **         706           0.76   0.01 **  706  0.76 \n 36          Age Factors          Age Factors  NaN       NaN            NaN    NaN   NaN   NaN       NaN                             NaN         nan          nan          nan  (  nan to   nan)    nan(  nan to   nan)                 nan                               nan(  nan to   nan)                                        Age Factors                                  nan           nan                       \n 37                  NaN                  NaN  NaN       NaN            NaN    NaN   NaN   NaN       NaN                             NaN         NaN          NaN          NaN               NaN                    NaN            NaN                             NaN                    NaN  Variable             Label                    ...                      NaN         NaN             NaN  P-value  N    Power,\n &lt;Axes: xlabel='Pearson correlation coefficient', ylabel='Variable Information'&gt;)\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E6%A3%AE%E6%9E%97%E5%9B%BE/%E6%A3%AE%E6%9E%97%E5%9B%BE%EF%BC%88forestplot%EF%BC%89/#_2","title":"\u591a\u6a21\u578b","text":"<p>forestplot/examples/get-sleep-multmodel.ipynb at main \u00b7 LSYS/forestplot</p> <pre><code># \u56de\u5f52\u53c2\u6570\nstdopts = {'relimp': False, 'remove_na': True}\n\n# \u4fdd\u7559\u53d8\u91cf\nx = [\"age\", \"black\", \"clerical\", \"construc\", \"educ\", \"gdhlth\", \"smsa\", \"lhrwage\", \"prot\", \"selfe\", \"south\", \"spsepay\", \"totwrk\", \"yrsmarr\"]\n\n# \u6240\u6709\u6837\u672c\u53d8\u91cf\u4e0e'sleep'\u53d8\u91cf\u7684\u56de\u5f52\u7ed3\u679c\nlm_all = pg.linear_regression(sleep[x], sleep['sleep'], **stdopts).assign(model='all')\n\"\"\"\n        names         coef          se          T           pval        r2    adj_r2     CI[2.5%]    CI[97.5%] model\n0   Intercept  3693.605849  136.823292  26.995446  8.489175e-101  0.127289  0.103656  3424.807860  3962.403839   all\n1         age     0.994889    1.969249   0.505213   6.136249e-01  0.127289  0.103656    -2.873825     4.863603   all\n2       black   -84.796612   82.150125  -1.032215   3.024539e-01  0.127289  0.103656  -246.185715    76.592491   all\n3    clerical    22.505827   48.963263   0.459647   6.459627e-01  0.127289  0.103656   -73.685593   118.697248   all\n4    construc   113.929558  105.045137   1.084577   2.786145e-01  0.127289  0.103656   -92.438240   320.297357   all\n5        educ    -7.210558    7.516736  -0.959267   3.378725e-01  0.127289  0.103656   -21.977660     7.556543   all\n6      gdhlth   -82.580434   58.204717  -1.418793   1.565620e-01  0.127289  0.103656  -196.927272    31.766405   all\n7        smsa   -40.653557   39.507723  -1.029003   3.039595e-01  0.127289  0.103656  -118.268971    36.961857   all\n8     lhrwage    21.605697   31.989301   0.675404   4.997212e-01  0.127289  0.103656   -41.239303    84.450696   all\n9        prot    -9.249430   39.771462  -0.232564   8.161916e-01  0.127289  0.103656   -87.382976    68.884117   all\n10      selfe   -21.274179   63.303918  -0.336064   7.369588e-01  0.127289  0.103656  -145.638720   103.090363   all\n11      south    82.486980   46.377571   1.778596   7.589350e-02  0.127289  0.103656    -8.624685   173.598644   all\n12    spsepay    -0.001005    0.002648  -0.379739   7.042954e-01  0.127289  0.103656    -0.006207     0.004196   all\n13     totwrk    -0.151922    0.020366  -7.459430   3.698705e-13  0.127289  0.103656    -0.191934    -0.111911   all\n14    yrsmarr    -0.075958    2.009356  -0.037802   9.698602e-01  0.127289  0.103656    -4.023464     3.871548   all\n\"\"\"\n\n# \u7537\u6027\u6837\u672c\u53d8\u91cf\u4e0e'sleep'\u53d8\u91cf\u7684\u56de\u5f52\u7ed3\u679c\nlm_male = pg.linear_regression(sleep.query('male==1')[x], sleep.query('male==1')['sleep'], **stdopts).assign(model='men')\n\"\"\"\n        names         coef          se          T          pval        r2    adj_r2     CI[2.5%]    CI[97.5%] model\n0   Intercept  3919.280072  191.619361  20.453466  2.284744e-57  0.180382  0.139106  3542.070849  4296.489295   men\n1         age     1.482893    2.885462   0.513919  6.077171e-01  0.180382  0.139106    -4.197237     7.163023   men\n2       black  -132.967109  132.581166  -1.002911  3.167759e-01  0.180382  0.139106  -393.957639   128.023420   men\n3    clerical  -229.275962  102.888221  -2.228399  2.665377e-02  0.180382  0.139106  -431.814921   -26.737003   men\n4    construc    65.696059  107.889208   0.608922  5.430737e-01  0.180382  0.139106  -146.687512   278.079631   men\n5        educ    -7.545420    9.720341  -0.776250  4.382610e-01  0.180382  0.139106   -26.680241    11.589402   men\n6      gdhlth  -188.284508   80.476539  -2.339620  2.001135e-02  0.180382  0.139106  -346.705309   -29.863707   men\n7        smsa   -27.631427   52.418593  -0.527130  5.985235e-01  0.180382  0.139106  -130.819208    75.556354   men\n8     lhrwage     3.544752   47.045923   0.075347  9.399931e-01  0.180382  0.139106   -89.066745    96.156249   men\n9        prot   -20.967328   52.201060  -0.401665  6.882393e-01  0.180382  0.139106  -123.726888    81.792233   men\n10      selfe     3.484094   77.585707   0.044906  9.642142e-01  0.180382  0.139106  -149.246005   156.214193   men\n11      south    79.401694   64.439832   1.232183  2.189217e-01  0.180382  0.139106   -47.450305   206.253693   men\n12    spsepay     0.003069    0.004924   0.623344  5.335697e-01  0.180382  0.139106    -0.006624     0.012762   men\n13     totwrk    -0.191008    0.029765  -6.417152  5.964764e-10  0.180382  0.139106    -0.249602    -0.132414   men\n14    yrsmarr     0.224116    2.934791   0.076365  9.391834e-01  0.180382  0.139106    -5.553120     6.001352   men\n\"\"\"\n\n# \u5973\u6027\u6837\u672c\u53d8\u91cf\u4e0e'sleep'\u53d8\u91cf\u7684\u56de\u5f52\u7ed3\u679c\nlm_female = pg.linear_regression(sleep.query('male==0')[x], sleep.query('male==0')['sleep'], **stdopts).assign(model='women')\n\"\"\"\n        names         coef          se          T          pval        r2    adj_r2     CI[2.5%]    CI[97.5%]  model\n0   Intercept  3599.064226  210.446560  17.102034  1.637481e-42  0.109105  0.053425  3184.355929  4013.772523  women\n1         age     0.953200    2.943209   0.323864  7.463431e-01  0.109105  0.053425    -4.846721     6.753121  women\n2       black   -68.350631  108.901754  -0.627636  5.308819e-01  0.109105  0.053425  -282.953621   146.252360  women\n3    clerical   106.507258   61.127321   1.742384  8.281375e-02  0.109105  0.053425   -13.950911   226.965427  women\n4    construc   361.756430  428.264834   0.844703  3.991782e-01  0.109105  0.053425  -482.186946  1205.699805  women\n5        educ    -6.278397   11.869883  -0.528935  5.973743e-01  0.109105  0.053425   -29.669318    17.112525  women\n6      gdhlth   -24.491583   87.716867  -0.279212  7.803399e-01  0.109105  0.053425  -197.347402   148.364236  women\n7        smsa   -57.146400   61.521030  -0.928892  3.539449e-01  0.109105  0.053425  -178.380417    64.087616  women\n8     lhrwage   -22.580482   53.782320  -0.419850  6.749978e-01  0.109105  0.053425  -128.564512    83.403547  women\n9        prot     1.066643   61.898047   0.017232  9.862667e-01  0.109105  0.053425  -120.910327   123.043614  women\n10      selfe   -90.685936  112.556497  -0.805693  4.212746e-01  0.109105  0.053425  -312.491002   131.119130  women\n11      south   114.622934   69.300494   1.653999  9.952837e-02  0.109105  0.053425   -21.941379   251.187246  women\n12    spsepay    -0.000508    0.003621  -0.140324  8.885302e-01  0.109105  0.053425    -0.007644     0.006628  women\n13     totwrk    -0.125512    0.032713  -3.836783  1.621349e-04  0.109105  0.053425    -0.189977    -0.061048  women\n14    yrsmarr    -1.414137    2.931985  -0.482314  6.300539e-01  0.109105  0.053425    -7.191939     4.363665  women\n\"\"\"\n# \u513f\u7ae5\u6837\u672c\u53d8\u91cf\u4e0e'sleep'\u53d8\u91cf\u7684\u56de\u5f52\u7ed3\u679c\nlm_kids = pg.linear_regression(sleep.query('yngkid==1')[x], sleep.query('yngkid==1')['sleep'], **stdopts).assign(model='young kids')\n\"\"\"\n        names         coef          se         T          pval        r2    adj_r2     CI[2.5%]    CI[97.5%]       model\n0   Intercept  3496.301163  514.490634  6.795656  5.575797e-09  0.178147 -0.013619  2467.166669  4525.435657  young kids\n1         age    22.634017   15.495320  1.460700  1.493148e-01  0.178147 -0.013619    -8.361238    53.629272  young kids\n2       black  -119.741039  296.432953 -0.403940  6.876932e-01  0.178147 -0.013619  -712.695230   473.213151  young kids\n3    clerical  -239.902574  211.760200 -1.132897  2.617642e-01  0.178147 -0.013619  -663.486040   183.680893  young kids\n4    construc  -186.415201  358.223501 -0.520388  6.047082e-01  0.178147 -0.013619  -902.968890   530.138489  young kids\n5        educ   -20.972116   26.974032 -0.777493  4.399230e-01  0.178147 -0.013619   -74.928213    32.983981  young kids\n6      gdhlth  -141.814976  203.213022 -0.697864  4.879582e-01  0.178147 -0.013619  -548.301540   264.671589  young kids\n7        smsa    43.429572  138.683089  0.313157  7.552474e-01  0.178147 -0.013619  -233.977910   320.837053  young kids\n8     lhrwage    35.609317  122.323738  0.291107  7.719733e-01  0.178147 -0.013619  -209.074589   280.293223  young kids\n9        prot   -24.173124  127.566497 -0.189494  8.503450e-01  0.178147 -0.013619  -279.344111   230.997863  young kids\n10      selfe  -370.956512  241.153473 -1.538259  1.292427e-01  0.178147 -0.013619  -853.335279   111.422256  young kids\n11      south    71.851381  136.010112  0.528280  5.992538e-01  0.178147 -0.013619  -200.209350   343.912111  young kids\n12    spsepay    -0.004701    0.011443 -0.410849  6.826471e-01  0.178147 -0.013619    -0.027591     0.018188  young kids\n13     totwrk    -0.112995    0.076363 -1.479712  1.441818e-01  0.178147 -0.013619    -0.265743     0.039753  young kids\n14    yrsmarr   -31.211144   16.914011 -1.845283  6.993267e-02  0.178147 -0.013619   -65.044204     2.621915  young kids\n\"\"\"\n\nsleep_lm = pd.concat([lm_all, lm_female, lm_male, lm_kids]).query('names!=\"Intercept\"')\nsleep_lm.rename(columns={'names': 'var', 'CI[2.5%]': 'll', 'CI[97.5%]': 'hl'}, inplace=True)\nsleep_lm = pd.merge(sleep_lm, sleep_label, on='var', how='left', validate='m:1')\nsleep_lm.sort_values(['var', 'model', 'group'], inplace=True)\nsleep_lm.reset_index(drop=True, inplace=True)\n\"\"\"\n         var        coef          se         T          pval        r2    adj_r2          ll           hl       model                           label              group\n0        age    0.994889    1.969249  0.505213  6.136249e-01  0.127289  0.103656   -2.873825     4.863603         all                        in years        age factors\n1        age    1.482893    2.885462  0.513919  6.077171e-01  0.180382  0.139106   -4.197237     7.163023         men                        in years        age factors\n2        age    0.953200    2.943209  0.323864  7.463431e-01  0.109105  0.053425   -4.846721     6.753121       women                        in years        age factors\n3        age   22.634017   15.495320  1.460700  1.493148e-01  0.178147 -0.013619   -8.361238    53.629272  young kids                        in years        age factors\n4      black  -84.796612   82.150125 -1.032215  3.024539e-01  0.127289  0.103656 -246.185715    76.592491         all                     =1 if black      other factors\n5      black -132.967109  132.581166 -1.002911  3.167759e-01  0.180382  0.139106 -393.957639   128.023420         men                     =1 if black      other factors\n6      black  -68.350631  108.901754 -0.627636  5.308819e-01  0.109105  0.053425 -282.953621   146.252360       women                     =1 if black      other factors\n7      black -119.741039  296.432953 -0.403940  6.876932e-01  0.178147 -0.013619 -712.695230   473.213151  young kids                     =1 if black      other factors\n8   clerical   22.505827   48.963263  0.459647  6.459627e-01  0.127289  0.103656  -73.685593   118.697248         all           =1 if clerical worker         occupation\n9   clerical -229.275962  102.888221 -2.228399  2.665377e-02  0.180382  0.139106 -431.814921   -26.737003         men           =1 if clerical worker         occupation\n10  clerical  106.507258   61.127321  1.742384  8.281375e-02  0.109105  0.053425  -13.950911   226.965427       women           =1 if clerical worker         occupation\n11  clerical -239.902574  211.760200 -1.132897  2.617642e-01  0.178147 -0.013619 -663.486040   183.680893  young kids           =1 if clerical worker         occupation\n12  construc  113.929558  105.045137  1.084577  2.786145e-01  0.127289  0.103656  -92.438240   320.297357         all       =1 if construction worker         occupation\n13  construc   65.696059  107.889208  0.608922  5.430737e-01  0.180382  0.139106 -146.687512   278.079631         men       =1 if construction worker         occupation\n14  construc  361.756430  428.264834  0.844703  3.991782e-01  0.109105  0.053425 -482.186946  1205.699805       women       =1 if construction worker         occupation\n15  construc -186.415201  358.223501 -0.520388  6.047082e-01  0.178147 -0.013619 -902.968890   530.138489  young kids       =1 if construction worker         occupation\n16      educ   -7.210558    7.516736 -0.959267  3.378725e-01  0.127289  0.103656  -21.977660     7.556543         all              years of schooling      labor factors\n17      educ   -7.545420    9.720341 -0.776250  4.382610e-01  0.180382  0.139106  -26.680241    11.589402         men              years of schooling      labor factors\n18      educ   -6.278397   11.869883 -0.528935  5.973743e-01  0.109105  0.053425  -29.669318    17.112525       women              years of schooling      labor factors\n19      educ  -20.972116   26.974032 -0.777493  4.399230e-01  0.178147 -0.013619  -74.928213    32.983981  young kids              years of schooling      labor factors\n20    gdhlth  -82.580434   58.204717 -1.418793  1.565620e-01  0.127289  0.103656 -196.927272    31.766405         all  =1 if in good or excel. health     health factors\n21    gdhlth -188.284508   80.476539 -2.339620  2.001135e-02  0.180382  0.139106 -346.705309   -29.863707         men  =1 if in good or excel. health     health factors\n22    gdhlth  -24.491583   87.716867 -0.279212  7.803399e-01  0.109105  0.053425 -197.347402   148.364236       women  =1 if in good or excel. health     health factors\n23    gdhlth -141.814976  203.213022 -0.697864  4.879582e-01  0.178147 -0.013619 -548.301540   264.671589  young kids  =1 if in good or excel. health     health factors\n24   lhrwage   21.605697   31.989301  0.675404  4.997212e-01  0.127289  0.103656  -41.239303    84.450696         all                 log hourly wage      labor factors\n25   lhrwage    3.544752   47.045923  0.075347  9.399931e-01  0.180382  0.139106  -89.066745    96.156249         men                 log hourly wage      labor factors\n26   lhrwage  -22.580482   53.782320 -0.419850  6.749978e-01  0.109105  0.053425 -128.564512    83.403547       women                 log hourly wage      labor factors\n27   lhrwage   35.609317  122.323738  0.291107  7.719733e-01  0.178147 -0.013619 -209.074589   280.293223  young kids                 log hourly wage      labor factors\n28      prot   -9.249430   39.771462 -0.232564  8.161916e-01  0.127289  0.103656  -87.382976    68.884117         all                =1 if Protestant      other factors\n29      prot  -20.967328   52.201060 -0.401665  6.882393e-01  0.180382  0.139106 -123.726888    81.792233         men                =1 if Protestant      other factors\n30      prot    1.066643   61.898047  0.017232  9.862667e-01  0.109105  0.053425 -120.910327   123.043614       women                =1 if Protestant      other factors\n31      prot  -24.173124  127.566497 -0.189494  8.503450e-01  0.178147 -0.013619 -279.344111   230.997863  young kids                =1 if Protestant      other factors\n32     selfe  -21.274179   63.303918 -0.336064  7.369588e-01  0.127289  0.103656 -145.638720   103.090363         all             =1 if self employed      labor factors\n33     selfe    3.484094   77.585707  0.044906  9.642142e-01  0.180382  0.139106 -149.246005   156.214193         men             =1 if self employed      labor factors\n34     selfe  -90.685936  112.556497 -0.805693  4.212746e-01  0.109105  0.053425 -312.491002   131.119130       women             =1 if self employed      labor factors\n35     selfe -370.956512  241.153473 -1.538259  1.292427e-01  0.178147 -0.013619 -853.335279   111.422256  young kids             =1 if self employed      labor factors\n36      smsa  -40.653557   39.507723 -1.029003  3.039595e-01  0.127289  0.103656 -118.268971    36.961857         all              =1 if live in smsa  area of residence\n37      smsa  -27.631427   52.418593 -0.527130  5.985235e-01  0.180382  0.139106 -130.819208    75.556354         men              =1 if live in smsa  area of residence\n38      smsa  -57.146400   61.521030 -0.928892  3.539449e-01  0.109105  0.053425 -178.380417    64.087616       women              =1 if live in smsa  area of residence\n39      smsa   43.429572  138.683089  0.313157  7.552474e-01  0.178147 -0.013619 -233.977910   320.837053  young kids              =1 if live in smsa  area of residence\n40     south   82.486980   46.377571  1.778596  7.589350e-02  0.127289  0.103656   -8.624685   173.598644         all             =1 if live in south  area of residence\n41     south   79.401694   64.439832  1.232183  2.189217e-01  0.180382  0.139106  -47.450305   206.253693         men             =1 if live in south  area of residence\n42     south  114.622934   69.300494  1.653999  9.952837e-02  0.109105  0.053425  -21.941379   251.187246       women             =1 if live in south  area of residence\n43     south   71.851381  136.010112  0.528280  5.992538e-01  0.178147 -0.013619 -200.209350   343.912111  young kids             =1 if live in south  area of residence\n44   spsepay   -0.001005    0.002648 -0.379739  7.042954e-01  0.127289  0.103656   -0.006207     0.004196         all             spousal wage income      other factors\n45   spsepay    0.003069    0.004924  0.623344  5.335697e-01  0.180382  0.139106   -0.006624     0.012762         men             spousal wage income      other factors\n46   spsepay   -0.000508    0.003621 -0.140324  8.885302e-01  0.109105  0.053425   -0.007644     0.006628       women             spousal wage income      other factors\n47   spsepay   -0.004701    0.011443 -0.410849  6.826471e-01  0.178147 -0.013619   -0.027591     0.018188  young kids             spousal wage income      other factors\n48    totwrk   -0.151922    0.020366 -7.459430  3.698705e-13  0.127289  0.103656   -0.191934    -0.111911         all            mins worked per week      labor factors\n49    totwrk   -0.191008    0.029765 -6.417152  5.964764e-10  0.180382  0.139106   -0.249602    -0.132414         men            mins worked per week      labor factors\n50    totwrk   -0.125512    0.032713 -3.836783  1.621349e-04  0.109105  0.053425   -0.189977    -0.061048       women            mins worked per week      labor factors\n51    totwrk   -0.112995    0.076363 -1.479712  1.441818e-01  0.178147 -0.013619   -0.265743     0.039753  young kids            mins worked per week      labor factors\n52   yrsmarr   -0.075958    2.009356 -0.037802  9.698602e-01  0.127289  0.103656   -4.023464     3.871548         all                   years married     family factors\n53   yrsmarr    0.224116    2.934791  0.076365  9.391834e-01  0.180382  0.139106   -5.553120     6.001352         men                   years married     family factors\n54   yrsmarr   -1.414137    2.931985 -0.482314  6.300539e-01  0.109105  0.053425   -7.191939     4.363665       women                   years married     family factors\n55   yrsmarr  -31.211144   16.914011 -1.845283  6.993267e-02  0.178147 -0.013619  -65.044204     2.621915  young kids                   years married     family factors\n\"\"\"\n</code></pre> <pre><code>fig = plt.figure(dpi=100, layout=\"constrained\")\n\ngroup_order = [\"age factors\", \"labor factors\", \"occupation\", \"health factors\", \"family factors\", \"area of residence\", \"other factors\"]\n\nfp.mforestplot(sleep_lm,\n\n               # \u7ed8\u5236\u4f30\u8ba1\u503c\u4e0e\u7f6e\u4fe1\u533a\u95f4\u7684errorbar\u548cscatter\n               estimate=\"coef\",                                   # \u4f30\u8ba1\u503c\u5217\uff0c\u4f20\u9012\u7ed9ax.errorbar\u548cax.scatter\u7684x\u53c2\u6570\n               ll=\"ll\",                                           # \u7f6e\u4fe1\u533a\u95f4\u4e0b\u9650\uff0c\u8ba1\u7b97\u540e\u4f20\u9012\u7ed9ax.errorbar\u7684xerr\u53c2\u6570\n               hl=\"hl\",                                           # \u7f6e\u4fe1\u533a\u95f4\u4e0a\u9650\uff0c\u8ba1\u7b97\u540e\u4f20\u9012\u7ed9ax.errorbar\u7684xerr\u53c2\u6570\n               model_col='model',                                 # \u6a21\u578b\u4fe1\u606f\u5217\n               models=['men', 'women'],                           # \u9009\u62e9\u7ed8\u5236\u7684\u6a21\u578b\n               msymbols=['o', '*'],                               # \u5404\u6a21\u578b\u4f30\u8ba1\u503c\u6807\u8bb0\u7c7b\u578b\uff0c\u5206\u522b\u4f20\u9012\u7ed9ax.scatter\u7684marker\u53c2\u6570\n               mcolor=['r', 'b'],                                 # \u5404\u6a21\u578b\u4f30\u8ba1\u503c\u6807\u8bb0\u548c\u8bef\u5dee\u7ebf\u989c\u8272\uff0c\u5206\u522b\u4f20\u9012\u7ed9ax.scatter\u7684c\u53c2\u6570\u548cax.errorbar\u7684ecolor\u53c2\u6570\n               lw=2,                                              # \u8bef\u5dee\u7ebf\u5bbd\uff0c\u4f20\u9012\u7ed9ax.errorbar\u7684elinewidth\u53c2\u6570\n               markersize=100,                                    # \u4f30\u8ba1\u503c\u6807\u8bb0\u5927\u5c0f\uff0c\u4f20\u9012\u7ed9ax.scatter\u7684s\u53c2\u6570\n               offset=0.5,                                        # \u6a21\u578b\u7ed8\u56fe\u95f4\u8ddd\n               logscale=False,                                    # \u662f\u5426x\u8f74\u8fdb\u884c\u5bf9\u6570\u5316\uff08\u4ee510\u4e3a\u5e95\uff09\u7f29\u653e\u3010ax.set_xscale(\"log\", base=10)\u3011\n               color_alt_rows=True,                               # \u53d8\u91cf\u884c\u4ea4\u66ff\u663e\u793a\u989c\u8272\n\n               # \u7ed8\u5236\u6a21\u578b\u56fe\u4f8b\n               legend=True,                                       # \u221a\u662f\u5426\u7ed8\u5236\u6a21\u578b\u56fe\u4f8b\n               modellabels=['M', 'WM'],                           # \u221a\u5404\u6a21\u578b\u56fe\u4f8b\u6807\u7b7e\u3002\u4f20\u9012\u7ed9ax.legend\u7684labels\u53c2\u6570\n               leg_loc='best',                                    # \u221a\u6a21\u578b\u56fe\u4f8b\u4f4d\u7f6e\u3002\u4f20\u9012\u7ed9ax.legend\u7684loc\u53c2\u6570\n               bbox_to_anchor=None,                               # \u221a\u6a21\u578b\u56fe\u4f8bbbox\u3002\u4f20\u9012\u7ed9ax.legend\u7684bbox_to_anchor\u53c2\u6570\n               leg_markersize=8,                                  # \u221a\u6a21\u578b\u56fe\u4f8b\u6807\u8bb0\u5927\u5c0f\u3002\u4f20\u9012\u7ed9Line2D\u7684markersize\u53c2\u6570\n               leg_ncol=1,                                        # \u221a\u6a21\u578b\u56fe\u4f8b\u6761\u76ee\u5217\u6570\u3002\u4f20\u9012\u7ed9ax.legend\u7684ncol\u53c2\u6570\n               leg_fontsize=8,                                    # \u221a\u6a21\u578b\u56fe\u4f8b\u5b57\u4f53\u5927\u5c0f\u3002\u4f20\u9012\u7ed9ax.legend\u7684fontsize\u53c2\u6570\n\n               # \u8bbe\u7f6ex\u8f74\u523b\u5ea6\u4e0e\u6807\u7b7e\n               xticks=None,                                       # \u221a\u8bbe\u7f6ex\u8f74\u523b\u5ea6\u4f4d\u7f6e\u3010ax.set_xticks(xticks)\u3011\n               nticks=6,                                          # \u221axticks=None\u65f6\u8bbe\u7f6ex\u8f74\u6700\u5927\u523b\u5ea6\u6570\u81ea\u52a8\u8bbe\u7f6e\u523b\u5ea6\u4f4d\u7f6e\u3010ax.xaxis.set_major_locator(plt.MaxNLocator(nticks))\u3011\n               xticklabels=None,                                  # \u221a\u8bbe\u7f6ex\u8f74\u523b\u5ea6\u6807\u7b7e\u3010ax.set_xticklabels(xticklabels)\u3011\n               xtick_size=12,                                     # \u221a\u8bbe\u7f6ex\u8f74\u523b\u5ea6\u6807\u7b7e\u5927\u5c0f\u3010ax.tick_params(axis=\"x\", labelsize=xtick_size)\u3011\n               xlim=[-1000, 1500],                                # \u221a\u8bbe\u7f6ex\u8f74\u8303\u56f4\u3010ax.set_xlim(xlim[0], xlim[1])\u3011\n\n               # x\u8f74\u6807\u9898\u221a\n               xlabel=\"Linear Regression coefficient\",            # \u221ax\u8f74\u6807\u9898\uff0c\u4f20\u9012\u7ed9ax.set_xlabel\u7684xlabel\u53c2\u6570\n               xlabel_size=20,                                    # \u221ax\u8f74\u6807\u9898\u5b57\u4f53\u5927\u5c0f\uff0c\u4f20\u9012\u7ed9ax.set_xlabel\u7684size\u53c2\u6570\n               xlabel_fontweight=\"bold\",                          # \u221ax\u8f74\u6807\u9898\u5b57\u4f53\u7c97\u7ec6\uff0c\u4f20\u9012\u7ed9ax.set_xlabel\u7684fontweight\u53c2\u6570\n\n               # \u7ed8\u5236\u53c2\u8003\u7ebf\n               xline=0,                                           # \u221a\u53c2\u8003\u7ebf\u4f4d\u7f6e\uff0c\u4f20\u9012\u7ed9ax.vlines\u7684x\u53c2\u6570\n               xlinestyle='--',                                   # \u221a\u53c2\u8003\u7ebf\u7ebf\u578b\uff0c\u4f20\u9012\u7ed9ax.vlines\u7684linestyle\u53c2\u6570\n               xlinecolor='r',                                    # \u221a\u53c2\u8003\u7ebf\u989c\u8272\uff0c\u4f20\u9012\u7ed9ax.vlines\u7684color\u53c2\u6570\n               xlinewidth=2,                                      # \u221a\u53c2\u8003\u7ebf\u7ebf\u5bbd\uff0c\u4f20\u9012\u7ed9ax.vlines\u7684linewidth\u53c2\u6570\n\n               # \u7ed8\u5236\u5de6\u4fa7y\u8f74\u523b\u5ea6\u6807\u7b7eyticklabel\n               varlabel=\"var\",                                    # \u221a\u53d8\u91cf\u6807\u7b7e\n               variable_header=\"Variable\",                        # \u221a\u53d8\u91cf\u6807\u7b7e\u5217\u8868\u5934\n\n               groupvar='group',                                  # \u221a\u53d8\u91cf\u5206\u7ec4\u4fe1\u606f\u5217\u3002\u6ce8\u610f\u5206\u7ec4\u540d\u5c3d\u91cf\u4e0d\u4e0e\u53d8\u91cf\u6807\u7b7e\u540d\u91cd\u590d\uff0c\u5426\u5219\u663e\u793a\u51fa\u95ee\u9898\u3002\n               group_order=group_order,                           # \u221a\u53d8\u91cf\u5206\u7ec4\u663e\u793a\u987a\u5e8f\n               grouplab_size=20,                                  # \u221a\u5206\u7ec4\u6587\u672c\u5b57\u4f53\u5927\u5c0f\n               # grouplab_fontweight=\"bold\",                      # \u221a\u5206\u7ec4\u6587\u672c\u548c\u53f3\u4fa7\u8868\u5934\u5b57\u4f53\u7c97\u7ec6\uff08rightannote!=None\u65f6\uff09\n\n               flush=True,                                        # \u221a\u5982\u679c\u4e3aTrue\uff0c\u5219\u8bbe\u7f6eax.set_yticklabels\u7684ha\u53c2\u6570\u4e3a\"left\"\uff0c\u5426\u5219\u8bbe\u7f6e\u4e3a\"right\"\n               capitalize=\"title\",                                # \u221a\u53d8\u91cf\u6807\u7b7e\u548c\u5206\u7ec4\u540d\u7684\u663e\u793a\u5f62\u5f0f\u3002\u53ef\u9009\"title\", \"capitalize\", \"lower\", \"upper\", \"swapcase\"\n               sort=True,                                         # \u221a\u662f\u5426\u5bf9\u53d8\u91cf\u6839\u636esortby\u53c2\u6570\u8fdb\u884c\u6392\u5e8f\uff08\u964d\u5e8f\uff09\uff0c\u9ed8\u8ba4False\u3002\u5982\u679c\u8bbe\u7f6e\u4e86groupvar\u53c2\u6570\uff0c\u5219\u5728\u5404\u81ea\u7ec4\u5185\u6392\u5e8f\u3002\n               sortby='coef',                                     # \u221a\u6392\u5e8f\u4f9d\u636e\uff08\u82e5\u8bbe\u7f6e\u5219\u9ed8\u8ba4\u8bbe\u7f6esort=True\uff09\uff0c\u9ed8\u8ba4\u662festimate\u53c2\u6570\u5bf9\u5e94\u7684\u5217\u3002\n\n               annote=['label'],                                  # \u221a\u56fe\u5de6\u4fa7\u663e\u793a\u7684\u4fe1\u606f\u5217\n               annoteheaders=[\"Label\"],                           # \u221a\u56fe\u5de6\u4fa7\u663e\u793a\u7684\u4fe1\u606f\u5217\u7684\u8868\u5934\n               # tableheader_fontweight=\"bold\",                   # \u221a\u56fe\u5de6\u4fa7\u663e\u793a\u7684\u4fe1\u606f\u5217\u7684\u8868\u5934\u5b57\u4f53\u7c97\u7ec6\n\n               # # \u7ed8\u5236\u53f3\u4fa7y\u8f74\u523b\u5ea6\u6807\u7b7eyticklabel2\n               rightannote=[\"group\"],                             # \u221a\u56fe\u53f3\u4fa7\u663e\u793a\u7684\u4fe1\u606f\u5217\n               right_annoteheaders=[\"Group\"],                     # \u221a\u56fe\u53f3\u4fa7\u663e\u793a\u7684\u4fe1\u606f\u5217\u7684\u8868\u5934\n\n               # # \u4e24\u4fa7y\u8f74\u523b\u5ea6\u6807\u7b7e\n               table=True,                                        # \u221a\u662f\u5426\u7ed8\u5236\u8868\u683c\u7ebf\n               col_spacing=5,                                     # \u221a\u5217\u95f4\u8ddd\n               fontfamily=\"monospace\",                            # \u221a\u5b57\u4f53\n               fontsize=20,                                       # \u221a\u5b57\u4f53\u5927\u5c0f\n\n               # \u5176\u5b83\n               return_df=True,                                    # \u221a\u662f\u5426\u8fd4\u56de\u5185\u90e8\u5904\u7406\u540e\u7684DataFrame\u7ed3\u679c\n               despine=False,\n               figsize=(5, 15)\n               )\n\"\"\"\n(                  var              group  model        coef          se         T          pval        r2    adj_r2          ll           hl                           label                 formatted_label                                         yticklabel    formatted_group        yticklabel2\n 0             Spsepay      other factors  women   -0.000508    0.003621 -0.140324  8.885302e-01  0.109105  0.053425   -0.007644     0.006628             spousal wage income  spousal wage income               Spsepay             spousal wage income     ...  other factors      other factors    \n 1                Prot      other factors  women    1.066643   61.898047  0.017232  9.862667e-01  0.109105  0.053425 -120.910327   123.043614                =1 if Protestant  =1 if Protestant                  Prot                =1 if Protestant        ...  other factors      other factors    \n 2               Black      other factors  women  -68.350631  108.901754 -0.627636  5.308819e-01  0.109105  0.053425 -282.953621   146.252360                     =1 if black  =1 if black                       Black               =1 if black             ...  other factors      other factors    \n 3       Other Factors      other factors  women         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                                 Other Factors  other factors                       \n 4               South  area of residence  women  114.622934   69.300494  1.653999  9.952837e-02  0.109105  0.053425  -21.941379   251.187246             =1 if live in south  =1 if live in south               South               =1 if live in south     ...  area of residence  area of residence\n 5                Smsa  area of residence  women  -57.146400   61.521030 -0.928892  3.539449e-01  0.109105  0.053425 -178.380417    64.087616              =1 if live in smsa  =1 if live in smsa                Smsa                =1 if live in smsa      ...  area of residence  area of residence\n 6   Area Of Residence  area of residence  women         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                             Area Of Residence  area of residence                   \n 7             Yrsmarr     family factors  women   -1.414137    2.931985 -0.482314  6.300539e-01  0.109105  0.053425   -7.191939     4.363665                   years married  years married                     Yrsmarr             years married           ...  family factors     family factors   \n 8      Family Factors     family factors  women         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                                Family Factors  family factors                      \n 9              Gdhlth     health factors  women  -24.491583   87.716867 -0.279212  7.803399e-01  0.109105  0.053425 -197.347402   148.364236  =1 if in good or excel. health  =1 if in good or excel. health    Gdhlth              =1 if in good or excel. ...  health factors     health factors   \n 10     Health Factors     health factors  women         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                                Health Factors  health factors                      \n 11           Clerical         occupation  women  106.507258   61.127321  1.742384  8.281375e-02  0.109105  0.053425  -13.950911   226.965427           =1 if clerical worker  =1 if clerical worker             Clerical            =1 if clerical worker   ...  occupation         occupation       \n 12           Construc         occupation  women  361.756430  428.264834  0.844703  3.991782e-01  0.109105  0.053425 -482.186946  1205.699805       =1 if construction worker  =1 if construction worker         Construc            =1 if construction worke...  occupation         occupation       \n 13         Occupation         occupation  women         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                                    Occupation  occupation                          \n 14               Educ      labor factors  women   -6.278397   11.869883 -0.528935  5.973743e-01  0.109105  0.053425  -29.669318    17.112525              years of schooling  years of schooling                Educ                years of schooling      ...  labor factors      labor factors    \n 15              Selfe      labor factors  women  -90.685936  112.556497 -0.805693  4.212746e-01  0.109105  0.053425 -312.491002   131.119130             =1 if self employed  =1 if self employed               Selfe               =1 if self employed     ...  labor factors      labor factors    \n 16             Totwrk      labor factors  women   -0.125512    0.032713 -3.836783  1.621349e-04  0.109105  0.053425   -0.189977    -0.061048            mins worked per week  mins worked per week              Totwrk              mins worked per week    ...  labor factors      labor factors    \n 17            Lhrwage      labor factors  women  -22.580482   53.782320 -0.419850  6.749978e-01  0.109105  0.053425 -128.564512    83.403547                 log hourly wage  log hourly wage                   Lhrwage             log hourly wage         ...  labor factors      labor factors    \n 18      Labor Factors      labor factors  women         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                                 Labor Factors  labor factors                       \n 19                Age        age factors  women    0.953200    2.943209  0.323864  7.463431e-01  0.109105  0.053425   -4.846721     6.753121                        in years  in years                          Age                 in years                ...  age factors        age factors      \n 20        Age Factors        age factors  women         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                                   Age Factors  age factors                         \n 21                NaN                NaN  women         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN                             NaN  Variable              Label                   ...                NaN  Group            \n 22            Spsepay      other factors    men    0.003069    0.004924  0.623344  5.335697e-01  0.180382  0.139106   -0.006624     0.012762             spousal wage income  spousal wage income               Spsepay             spousal wage income     ...  other factors      other factors    \n 23               Prot      other factors    men  -20.967328   52.201060 -0.401665  6.882393e-01  0.180382  0.139106 -123.726888    81.792233                =1 if Protestant  =1 if Protestant                  Prot                =1 if Protestant        ...  other factors      other factors    \n 24              Black      other factors    men -132.967109  132.581166 -1.002911  3.167759e-01  0.180382  0.139106 -393.957639   128.023420                     =1 if black  =1 if black                       Black               =1 if black             ...  other factors      other factors    \n 25      Other Factors      other factors    men         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                                 Other Factors  other factors                       \n 26              South  area of residence    men   79.401694   64.439832  1.232183  2.189217e-01  0.180382  0.139106  -47.450305   206.253693             =1 if live in south  =1 if live in south               South               =1 if live in south     ...  area of residence  area of residence\n 27               Smsa  area of residence    men  -27.631427   52.418593 -0.527130  5.985235e-01  0.180382  0.139106 -130.819208    75.556354              =1 if live in smsa  =1 if live in smsa                Smsa                =1 if live in smsa      ...  area of residence  area of residence\n 28  Area Of Residence  area of residence    men         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                             Area Of Residence  area of residence                   \n 29            Yrsmarr     family factors    men    0.224116    2.934791  0.076365  9.391834e-01  0.180382  0.139106   -5.553120     6.001352                   years married  years married                     Yrsmarr             years married           ...  family factors     family factors   \n 30     Family Factors     family factors    men         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                                Family Factors  family factors                      \n 31             Gdhlth     health factors    men -188.284508   80.476539 -2.339620  2.001135e-02  0.180382  0.139106 -346.705309   -29.863707  =1 if in good or excel. health  =1 if in good or excel. health    Gdhlth              =1 if in good or excel. ...  health factors     health factors   \n 32     Health Factors     health factors    men         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                                Health Factors  health factors                      \n 33           Clerical         occupation    men -229.275962  102.888221 -2.228399  2.665377e-02  0.180382  0.139106 -431.814921   -26.737003           =1 if clerical worker  =1 if clerical worker             Clerical            =1 if clerical worker   ...  occupation         occupation       \n 34           Construc         occupation    men   65.696059  107.889208  0.608922  5.430737e-01  0.180382  0.139106 -146.687512   278.079631       =1 if construction worker  =1 if construction worker         Construc            =1 if construction worke...  occupation         occupation       \n 35         Occupation         occupation    men         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                                    Occupation  occupation                          \n 36               Educ      labor factors    men   -7.545420    9.720341 -0.776250  4.382610e-01  0.180382  0.139106  -26.680241    11.589402              years of schooling  years of schooling                Educ                years of schooling      ...  labor factors      labor factors    \n 37             Totwrk      labor factors    men   -0.191008    0.029765 -6.417152  5.964764e-10  0.180382  0.139106   -0.249602    -0.132414            mins worked per week  mins worked per week              Totwrk              mins worked per week    ...  labor factors      labor factors    \n 38              Selfe      labor factors    men    3.484094   77.585707  0.044906  9.642142e-01  0.180382  0.139106 -149.246005   156.214193             =1 if self employed  =1 if self employed               Selfe               =1 if self employed     ...  labor factors      labor factors    \n 39            Lhrwage      labor factors    men    3.544752   47.045923  0.075347  9.399931e-01  0.180382  0.139106  -89.066745    96.156249                 log hourly wage  log hourly wage                   Lhrwage             log hourly wage         ...  labor factors      labor factors    \n 40      Labor Factors      labor factors    men         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                                 Labor Factors  labor factors                       \n 41                Age        age factors    men    1.482893    2.885462  0.513919  6.077171e-01  0.180382  0.139106   -4.197237     7.163023                        in years  in years                          Age                 in years                ...  age factors        age factors      \n 42        Age Factors        age factors    men         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN  nan                                                                   Age Factors  age factors                         \n 43                NaN                NaN    men         NaN         NaN       NaN           NaN       NaN       NaN         NaN          NaN                             NaN                             NaN  Variable              Label                   ...                NaN  Group            ,\n &lt;Axes: xlabel='Linear Regression coefficient'&gt;)\n&lt;Figure size 640x480 with 0 Axes&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%83%AD%E5%9B%BE/%E7%83%AD%E5%9B%BE%EF%BC%88imshow%E3%80%81matshow%E3%80%81pcolor%E3%80%81pcolormesh%E3%80%81heatmap%E3%80%81clustermap%EF%BC%89/","title":"\u70ed\u56fe\uff08imshow\u3001matshow\u3001pcolor\u3001pcolormesh\u3001heatmap\u3001clustermap\uff09","text":"<p>Heatmap(\u70ed\u56fe)\u662f\u4e00\u79cd\u901a\u8fc7\u989c\u8272\u7f16\u7801\u4e8c\u7ef4\u6570\u636e\u7684\u53ef\u89c6\u5316\u56fe\u5f62\uff0c\u901a\u5e38\u7528\u4e8e\u8868\u793a\u77e9\u9635\u6216\u8868\u683c\u4e2d\u7684\u6570\u503c\u5173\u7cfb\u3002\u5b83\u4f7f\u7528\u4e0d\u540c\u7684\u989c\u8272\u6765\u8868\u793a\u4e0d\u540c\u7684\u6570\u503c\u5927\u5c0f\uff0c\u989c\u8272\u7684\u53d8\u5316\u80fd\u591f\u76f4\u89c2\u5730\u663e\u793a\u6570\u636e\u7684\u5206\u5e03\u548c\u6a21\u5f0f\u3002\u70ed\u56fe\u7684\u6bcf\u4e2a\u5355\u5143\u683c\u4ee3\u8868\u6570\u636e\u4e2d\u7684\u4e00\u4e2a\u503c\uff0c\u989c\u8272\u5f3a\u5ea6\u4e0e\u6570\u636e\u503c\u7684\u5927\u5c0f\u76f8\u5173\u8054\u3002\u5b83\u80fd\u591f\u5e2e\u52a9\u7814\u7a76\u4eba\u5458\u3001\u5206\u6790\u5e08\u7b49\u4ece\u7e41\u6742\u7684\u6570\u503c\u4e2d\u63d0\u53d6\u6709\u4ef7\u503c\u7684\u4fe1\u606f\u3002</p> <p>\u666e\u901a\u70ed\u56fe\u4e25\u683c\u6765\u8bf4\u4e0d\u5c5e\u4e8e\u70ed\u56fe\uff0c\u800c\u662f\u989c\u8272\u56fe(Color Image)\u3002\u5176\u751f\u6210\u8fc7\u7a0b\u4e0d\u6d89\u53ca\u6570\u636e\u8f6c\u6362\u8ba1\u7b97\uff0c\u800c\u662f\u5c06\u6570\u636e\u7b80\u5355\u6620\u5c04\u5230\u4e00\u4e2a\u7f51\u683c\u77e9\u9635\u4e2d\uff0c\u7136\u540e\u6839\u636e\u9884\u5148\u6307\u5b9a\u7684\u989c\u8272\u5e8f\u5217\u4e3a\u7f51\u683c\u77e9\u9635\u4e2d\u7684\u6570\u636e\u8d4b\u4e88\u4e0d\u540c\u7684\u989c\u8272\uff0c\u4ece\u800c\u5229\u7528\u989c\u8272\u6df1\u6d45\u6765\u8868\u793a\u6570\u636e\u7684\u5927\u5c0f\u3002\u8fd9\u79cd\u666e\u901a\u70ed\u56fe\u501f\u52a9\u4e8e\u4eba\u773c\u5bf9\u989c\u8272\u7684\u654f\u611f\u5ea6\uff0c\u53ef\u4ee5\u5feb\u901f\u53d1\u73b0\u7edf\u8ba1\u7279\u5f81\uff08\u5982\u989c\u8272\u6df1\u6d45\u4e0e\u6570\u636e\u5927\u5c0f\u7684\u5173\u7cfb\uff09\uff0c\u76f8\u6bd4\u76f4\u63a5\u89c2\u5bdf\u6570\u636e\uff0c\u5177\u6709\u663e\u8457\u4f18\u52bf\u3002</p> <p>flights.csv</p> <p>penguins.csv</p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\nflights = pd.read_csv('../Data/flights.csv').pivot(index=\"year\", columns=\"month\", values=\"passengers\")\n\"\"\"\nmonth  April  August  December  February  ...  May  November  October  September\nyear                                      ...                                   \n1949     129     148       118       118  ...  121       104      119        136\n1950     135     170       140       126  ...  125       114      133        158\n1951     163     199       166       150  ...  172       146      162        184\n1952     181     242       194       180  ...  183       172      191        209\n1953     235     272       201       196  ...  229       180      211        237\n1954     227     293       229       188  ...  234       203      229        259\n1955     269     347       278       233  ...  270       237      274        312\n1956     313     405       306       277  ...  318       271      306        355\n1957     348     467       336       301  ...  355       305      347        404\n1958     348     505       337       318  ...  363       310      359        404\n1959     396     559       405       342  ...  420       362      407        463\n1960     461     606       432       391  ...  472       390      461        508\n\n[12 rows x 12 columns]\n\"\"\"\n\nflights_min = np.min(flights)\n\"\"\"\nnp.int64(104)\n\"\"\"\n\nflights_max = np.max(flights)\n\"\"\"\nnp.int64(622)\n\"\"\"\n\nflights_norm = mpl.colors.Normalize(vmin=flights_min, vmax=flights_max)\n\npenguins = pd.read_csv('../Data/penguins.csv')\npenguins_data = penguins.drop(columns=['species', 'island', 'sex']).fillna(1)\n\"\"\"\n     culmen_length_mm  culmen_depth_mm  flipper_length_mm  body_mass_g\n0                39.1             18.7              181.0       3750.0\n1                39.5             17.4              186.0       3800.0\n2                40.3             18.0              195.0       3250.0\n3                 1.0              1.0                1.0          1.0\n4                36.7             19.3              193.0       3450.0\n..                ...              ...                ...          ...\n339               1.0              1.0                1.0          1.0\n340              46.8             14.3              215.0       4850.0\n341              50.4             15.7              222.0       5750.0\n342              45.2             14.8              212.0       5200.0\n343              49.9             16.1              213.0       5400.0\n\n[344 rows x 4 columns]\n\"\"\"\n\npenguins_min = np.min(penguins_data)\n\"\"\"\nnp.float64(0.0)\n\"\"\"\n\npenguins_max = np.max(penguins_data)\n\"\"\"\nnp.float64(6300.0)\n\"\"\"\n\npenguins_norm = mpl.colors.LogNorm(vmin=penguins_min, vmax=penguins_max)\n\ncmap = plt.cm.viridis\n</code></pre> <p></p> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%83%AD%E5%9B%BE/%E7%83%AD%E5%9B%BE%EF%BC%88imshow%E3%80%81matshow%E3%80%81pcolor%E3%80%81pcolormesh%E3%80%81heatmap%E3%80%81clustermap%EF%BC%89/#matplotlibimshow","title":"Matplotlib\uff1aimshow","text":"<p>matplotlib.axes.Axes.imshow \u2014 Matplotlib 3.10.1 documentation</p> <p>Interpolations for imshow \u2014 Matplotlib 3.10.1 documentation</p> <p><code>imshow(X, cmap=None, norm=None, *, aspect=None, interpolation=None, alpha=None, vmin=None, vmax=None, colorizer=None, origin=None, extent=None, interpolation_stage=None, filternorm=True, filterrad=4.0, resample=None, url=None, data=None, **kwargs)</code></p> <p>\u4ee5\u56fe\u50cf\u5f62\u5f0f\uff08\u5373\u5728\u4e8c\u7ef4\u89c4\u5219\u6805\u683c\u4e0a\uff09\u663e\u793a\u6570\u636e\u3002\u8f93\u5165\u53ef\u4ee5\u662f\u5b9e\u9645\u7684RGB(A)\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e8c\u7ef4\u6807\u91cf\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u5c06\u88ab\u6e32\u67d3\u4e3a\u4f2a\u5f69\u8272\u56fe\u50cf\u3002\u5bf9\u4e8e\u663e\u793a\u7070\u5ea6\u56fe\u50cf\uff0c\u8bf7\u4f7f\u7528\u53c2\u6570<code>cmap='gray', vmin=0, vmax=255</code>\u8bbe\u7f6e\u989c\u8272\u6620\u5c04\u3002</p> <p>\u7528\u4e8e\u6e32\u67d3\u56fe\u50cf\u7684\u50cf\u7d20\u6570\u91cf\u7531Axes\u7684\u5927\u5c0f\u548cFigure\u7684DPI\u8bbe\u7f6e\u3002\u5f53\u56fe\u50cf\u91cd\u91c7\u6837\u65f6\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u6df7\u53e0\u4f2a\u5f71\uff0c\u56e0\u4e3a\u663e\u793a\u7684\u56fe\u50cf\u5927\u5c0f\u901a\u5e38\u4e0d\u4f1a\u4e0e<code>X</code>\u7684\u5927\u5c0f\u5339\u914d\u3002</p> <ol> <li> <p>**X\uff1a**\u56fe\u50cf\u6570\u636e\u3002\u652f\u6301\u7684\u6570\u7ec4\u5f62\u72b6\u5305\u62ec\uff1a</p> </li> <li> <p>(M, N)\uff1a\u5177\u6709\u6807\u91cf\u6570\u636e\u7684\u56fe\u50cf\u3002\u503c\u901a\u8fc7<code>norm</code>\u548c<code>cmap</code>\u6620\u5c04\u5230\u989c\u8272\u3002</p> </li> <li> <p>(M, N, 3)\uff1a\u4e00\u4e2a\u5177\u6709RGB\u503c\uff08\u6d6e\u70b9\u65700-1\u6216\u6574\u65700-255\uff09\u7684\u56fe\u50cf\u3002</p> </li> <li> <p>(M, N, 4)\uff1a\u4e00\u4e2a\u5177\u6709RGBA\u503c\uff08\u6d6e\u70b9\u65700-1\u6216\u6574\u65700-255\uff09\u7684\u56fe\u50cf\uff0c\u5373\u5305\u62ec\u900f\u660e\u5ea6\u3002</p> </li> <li> <p>**alpha\uff1a**\u900f\u660e\u5ea6\u6df7\u5408\u503c\uff0c\u4ecb\u4e8e 0\uff08\u900f\u660e\uff09\u548c 1\uff08\u4e0d\u900f\u660e\uff09\u4e4b\u95f4\u3002\u5982\u679c\u662f\u4e00\u4e2a\u6570\u7ec4\u5219\u5f62\u72b6\u5fc5\u987b\u4e0e X \u76f8\u540c\uff0c\u900f\u660e\u5ea6\u6df7\u5408\u503c\u5c06\u4f9d\u6b21\u5e94\u7528\u4e8e\u6bcf\u4e2a\u50cf\u7d20\u3002</p> </li> <li> <p>**aspect\uff1a**Axes\u7684\u7eb5\u6a2a\u6bd4\u3002\u6b64\u53c2\u6570\u5bf9\u4e8e\u56fe\u50cf\u5c24\u5176\u76f8\u5173\uff0c\u56e0\u4e3a\u5b83\u51b3\u5b9a\u4e86\u6570\u636e\u50cf\u7d20\u662f\u5426\u4e3a\u6b63\u65b9\u5f62\u3002\u6b64\u53c2\u6570\u662f\u663e\u5f0f\u8c03\u7528<code>Axes.set_aspect</code>\u7684\u5feb\u6377\u65b9\u5f0f\u3002\u901a\u5e38\u4e3a<code>None</code>\uff08\u9ed8\u8ba4\u503c\uff09\uff0c\u8868\u793a\u4f7f\u7528<code>rcParams[\"image.aspect\"]</code>\uff08\u9ed8\u8ba4\u503c\uff1a<code>'equal'</code>\uff09\u3002\u7136\u800c\uff0c\u5982\u679c\u56fe\u50cf\u4f7f\u7528\u4e0d\u5305\u542bAxes\u6570\u636e\u53d8\u6362\u7684\u53d8\u6362\uff0c\u5219<code>None</code>\u8868\u793a\u5b8c\u5168\u4e0d\u4fee\u6539\u8f74\u5bbd\u9ad8\u6bd4\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528<code>Axes.set_aspect</code>\uff09\u3002</p> </li> <li> <p>**'equal'\uff1a**\u786e\u4fdd\u5bbd\u9ad8\u6bd4\u4e3a 1\u3002\u50cf\u7d20\u5c06\u662f\u6b63\u65b9\u5f62\uff08\u9664\u975e\u5728\u6570\u636e\u5750\u6807\u4e2d\u4f7f\u7528<code>extent</code>\u663e\u5f0f\u5730\u5c06\u50cf\u7d20\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u975e\u6b63\u65b9\u5f62\uff09\u3002</p> </li> <li> <p>**'auto'\uff1a**\u4fdd\u6301Axes\u56fa\u5b9a\uff0c\u5e76\u8c03\u6574\u5bbd\u9ad8\u6bd4\uff0c\u4f7f\u6570\u636e\u9002\u5408Axes\u3002\u901a\u5e38\uff0c\u8fd9\u5c06\u5bfc\u81f4\u975e\u6b63\u65b9\u5f62\u50cf\u7d20\u3002</p> </li> <li> <p>**origin\uff1a**\u5c06\u6570\u7ec4\u7684[0, 0]\u7d22\u5f15\u653e\u7f6e\u5728Axes\u7684\u5de6\u4e0a\u89d2\uff08<code>'upper'</code>\uff09\u6216\u5de6\u4e0b\u89d2\uff08<code>'lower'</code>\uff09\u3002\u53ef\u9009\u7ea6\u5b9a\uff08\u9ed8\u8ba4\uff09<code>rcParams[\"image.origin\"]='upper'</code>\u901a\u5e38\u7528\u4e8e\u77e9\u9635\u548c\u56fe\u50cf\u3002\u6ce8\u610f\uff0c\u5bf9\u4e8e<code>'lower'</code>\uff0c\u5782\u76f4\u8f74\u5411\u4e0a\uff0c\u800c\u5bf9\u4e8e<code>'upper'</code>\uff0c\u5219\u5411\u4e0b\u3002</p> </li> <li> <p>**extent\uff1a**\u6570\u636e\u5750\u6807\u4e2d\u56fe\u50cf\u5c06\u586b\u5145\u7684\u8fb9\u754c\u6846\u3002\u8fd9\u4e9b\u503c\u53ef\u80fd\u662f\u5355\u4f4d\u503c\uff0c\u5e76\u4e14\u4e0e\u8f74\u7684\u5355\u4f4d\u76f8\u5339\u914d\u3002\u56fe\u50cf\u5c06\u5206\u522b\u6cbf x \u8f74\u548c y \u8f74\u62c9\u4f38\u4ee5\u586b\u5145\u6846\u3002\u9ed8\u8ba4\u8303\u56f4\u7531\u4ee5\u4e0b\u6761\u4ef6\u786e\u5b9a\u3002\u50cf\u7d20\u5728\u6570\u636e\u5750\u6807\u4e2d\u5177\u6709\u5355\u4f4d\u5927\u5c0f\u3002\u5b83\u4eec\u7684\u4e2d\u5fc3\u4f4d\u4e8e\u6574\u6570\u5750\u6807\u4e0a\uff0c\u5e76\u4e14\u5176\u4e2d\u5fc3\u5750\u6807\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u4ece 0 \u5230 columns-1\uff0c\u5728\u5782\u76f4\u65b9\u5411\u4e0a\u4ece 0 \u5230 rows-1\u3002\u8bf7\u6ce8\u610f\uff0c\u5782\u76f4\u8f74\u7684\u65b9\u5411\u4ee5\u53ca\u9876\u90e8\u548c\u5e95\u90e8\u7684\u9ed8\u8ba4\u503c\u53d6\u51b3\u4e8e\u539f\u70b9\uff1a</p> </li> <li> <p>\u5bf9\u4e8e<code>origin == 'upper'</code>\uff0c\u9ed8\u8ba4\u662f<code>extent=(-0.5, numcols-0.5, numrows-0.5, -0.5)</code>\u3002</p> </li> <li> <p>\u5bf9\u4e8e<code>origin == 'lower'</code>\uff0c\u9ed8\u8ba4\u662f<code>extent=(-0.5, numcols-0.5, -0.5, numrows-0.5)</code>\u3002</p> </li> <li> <p>**resample\uff1a**\u5f53\u4e3a<code>True</code>\u65f6\uff0c\u4f7f\u7528\u5b8c\u6574\u7684\u91cd\u91c7\u6837\u65b9\u6cd5\u3002\u5f53\u4e3a<code>False</code>\u65f6\uff0c\u53ea\u6709\u5f53\u8f93\u51fa\u56fe\u50cf\u5927\u4e8e\u8f93\u5165\u56fe\u50cf\u65f6\u624d\u8fdb\u884c\u91cd\u91c7\u6837\u3002\u9ed8\u8ba4<code>rcParams[\"image.resample\"]=True</code>\u3002</p> </li> <li> <p>**interpolation\uff1a**\u4f7f\u7528\u7684\u63d2\u503c\u65b9\u6cd5\u3002\u652f\u6301\u7684\u503c\u6709<code>'none'</code>, <code>'auto'</code>\uff08\u9ed8\u8ba4\uff0c<code>rcParams[\"image.interpolation\"]</code>\uff09, <code>'nearest'</code>, <code>'bilinear'</code>, <code>'bicubic'</code>, <code>'spline16'</code>, <code>'spline36'</code>, <code>'hanning'</code>, <code>'hamming'</code>, <code>'hermite'</code>, <code>'kaiser'</code>, <code>'quadric'</code>, <code>'catrom'</code>, <code>'gaussian'</code>, <code>'bessel'</code>, <code>'mitchell'</code>, <code>'sinc'</code>, <code>'lanczos'</code>, <code>'blackman'</code>\u3002\u4f7f\u7528\u63d2\u503c\u65b9\u6cd5\u5c06\u6570\u636e X \u91cd\u91c7\u6837\u5230\u56fe\u5f62\u753b\u5e03\u4e0a\u56fe\u50cf\u7684\u50cf\u7d20\u5927\u5c0f\uff0c\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u4e0a\u91c7\u6837\u6216\u4e0b\u91c7\u6837\u3002\u4e00\u4e9b\u63d2\u503c\u65b9\u6cd5\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u534a\u5f84\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u53ef\u4ee5\u901a\u8fc7<code>filterrad</code>\u8bbe\u7f6e\u3002\u6b64\u5916\uff0c\u6297\u952f\u9f7f\u56fe\u50cf\u7f29\u653e\u8fc7\u6ee4\u5668\u7531\u53c2\u6570<code>filternorm</code>\u63a7\u5236\u3002</p> </li> <li> <p>\u5982\u679c\u8bbe\u7f6e\u4e3a<code>'none'</code>\uff0c\u5219\u5bf9\u4e8e ps\u3001pdf \u548c svg \u540e\u7aef\uff0c\u4e0d\u4f1a\u53d1\u751f\u4e0b\u91c7\u6837\u6216\u4e0a\u91c7\u6837\uff0c\u56fe\u50cf\u6570\u636e\u5c06\u4f5c\u4e3a\u539f\u751f\u56fe\u50cf\u4f20\u9012\u7ed9\u540e\u7aef\u3002\u8bf7\u6ce8\u610f\uff0c\u4e0d\u540c\u7684 ps\u3001pdf \u548c svg \u67e5\u770b\u5668\u53ef\u80fd\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u663e\u793a\u8fd9\u4e9b\u539f\u59cb\u50cf\u7d20\u3002\u5bf9\u4e8e\u5176\u5b83\u540e\u7aef\u5219\u548c<code>'nearest'</code>\u76f8\u540c\u3002</p> </li> <li> <p>resam\u5982\u679c\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u7684<code>'auto'</code>\uff0c\u5219\u5f53\u56fe\u50cf\u4e0a\u91c7\u6837\u8d85\u8fc7\u4e09\u500d\u56e0\u5b50\u65f6\uff08\u5373\u663e\u793a\u50cf\u7d20\u6570\u81f3\u5c11\u662f\u6570\u636e\u6570\u7ec4\u5927\u5c0f\u7684\u4e09\u500d\uff09\uff0c\u5c06\u4f7f\u7528<code>'nearest'</code>\u63d2\u503c\u3002\u5982\u679c\u4e0a\u91c7\u6837\u7387\u5c0f\u4e8e 3\uff0c\u6216\u8005\u56fe\u50cf\u4e0b\u91c7\u6837\uff0c\u5219\u4f7f\u7528<code>'hanning'</code>\u63d2\u503c\u4f5c\u4e3a\u6297\u952f\u9f7f\u6ee4\u6ce2\u5668\uff0c\u9664\u975e\u56fe\u50cf\u6070\u597d\u4ee5\u4e24\u500d\u6216\u4e00\u500d\u56e0\u5b50\u4e0a\u91c7\u6837\u3002</p> </li> <li> <p>interpolation_stage\uff1a</p> </li> <li> <p>**'data'\uff1a**\u5728\u7528\u6237\u63d0\u4f9b\u7684\u6570\u636e\u4e0a\u6267\u884c\u63d2\u503c\u3002\u8fd9\u5728\u5728\u4e0a\u91c7\u6837\u671f\u95f4\u5728\u50cf\u7d20\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\u65f6\u5f88\u6709\u7528\u3002</p> </li> <li> <p>**'rgba'\uff1a**\u5728\u5e94\u7528\u989c\u8272\u6620\u5c04\u540e\uff0c\u5728 RGBA \u7a7a\u95f4\u5185\u6267\u884c\u63d2\u503c\u3002\u8fd9\u5728\u4e0b\u91c7\u6837\u548c\u89c6\u89c9\u4e0a\u7ec4\u5408\u50cf\u7d20\u65f6\u5f88\u6709\u7528\u3002</p> </li> <li> <p>**'auto'\uff08\u9ed8\u8ba4\uff09\uff1a**\u81ea\u52a8\u9009\u62e9\u5408\u9002\u7684\u63d2\u503c\u9636\u6bb5\u3002\u5728\u4e0b\u91c7\u6837\u6216\u8005\u5728\u91c7\u6837\u7387\u5c0f\u4e8e3\u7684\u4e0a\u91c7\u6837\u65f6\u4f7f\u7528<code>'rgba'</code>\uff0c\u5728\u91c7\u6837\u7387\u66f4\u9ad8\u7684\u4e0a\u91c7\u6837\u65f6\u4f7f\u7528<code>'data'</code>\u3002</p> </li> <li> <p>**filternorm\uff1a**\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u6297\u952f\u9f7f\u56fe\u50cf\u7f29\u653e\u8fc7\u6ee4\u5668\u7684\u53c2\u6570\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a<code>True</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u5219\u8fc7\u6ee4\u5668\u5c06\u5f52\u4e00\u5316\u6574\u6570\u503c\u5e76\u7ea0\u6b63\u820d\u5165\u8bef\u5dee\u3002\u5b83\u4e0d\u5bf9\u6e90\u6d6e\u70b9\u503c\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u5b83\u4ec5\u6839\u636e 1.0 \u7684\u89c4\u5219\u7ea0\u6b63\u6574\u6570\uff0c\u8fd9\u610f\u5473\u7740\u50cf\u7d20\u6743\u91cd\u7684\u603b\u548c\u5fc5\u987b\u7b49\u4e8e 1.0\u3002\u56e0\u6b64\uff0c\u8fc7\u6ee4\u5668\u51fd\u6570\u5fc5\u987b\u4ea7\u751f\u6b63\u786e\u5f62\u72b6\u7684\u56fe\u5f62\u3002</p> </li> <li> <p>**filterrad\uff1a**\u8fc7\u6ee4\u5668\u7684\u534a\u5f84\uff08\u9ed8\u8ba44.0\uff09\uff0c\u9002\u7528\u4e8e\u5177\u6709\u534a\u5f84\u53c2\u6570\u7684\u8fc7\u6ee4\u5668\uff0c\u5373\u5f53\u63d2\u503c\u65b9\u5f0f\u4e3a\uff1a<code>'sinc'</code>\u3001<code>'lanczos'</code>\u6216<code>'blackman'</code>\u65f6\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.imshow(flights, cmap=cmap, norm=flights_norm, alpha=1,\n          aspect='equal',\n          origin='upper'\n          )\n\"\"\"\n&lt;matplotlib.image.AxesImage at 0x17451151880&gt;\n\"\"\"\nfig.colorbar(mpl.cm.ScalarMappable(cmap=cmap, norm=flights_norm), shrink=0.79, label='Passengers', ax=ax)\nax.set_xticks(ticks=np.linspace(0, 11, 12), labels=flights.columns, rotation=45)\nax.set_yticks(ticks=np.linspace(0, 11, 12), labels=flights.index, rotation=45)\nax.set_xlabel('Months')\nax.set_ylabel('Years')\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%83%AD%E5%9B%BE/%E7%83%AD%E5%9B%BE%EF%BC%88imshow%E3%80%81matshow%E3%80%81pcolor%E3%80%81pcolormesh%E3%80%81heatmap%E3%80%81clustermap%EF%BC%89/#matplotlibmatshow","title":"Matplotlib\uff1amatshow","text":"<p>matplotlib.axes.Axes.matshow \u2014 Matplotlib 3.10.1 documentation</p> <p><code>matshow(Z, **kwargs)</code></p> <p>\u5c06 2D \u77e9\u9635\u6216\u6570\u7ec4\u7684\u503c\u7ed8\u5236\u4e3a\u5f69\u8272\u56fe\u50cf\u3002\u77e9\u9635\u5c06\u6309\u7167\u6253\u5370\u7684\u65b9\u5f0f\u663e\u793a\uff0c\u7b2c\u4e00\u884c\u5728\u9876\u90e8\u3002\u884c\u548c\u5217\u7684\u7f16\u53f7\u4ece\u96f6\u5f00\u59cb\u3002\u8fd9\u662f\u4e00\u4e2a\u5c01\u88c5<code>imshow</code>\u7684\u4fbf\u5229\u51fd\u6570\uff0c\u7528\u4e8e\u8bbe\u7f6e\u663e\u793a\u77e9\u9635\u7684\u6709\u7528\u9ed8\u8ba4\u503c\u3002\u7279\u522b\u662f\uff1a</p> <ol> <li> <p>\u8bbe\u7f6e<code>origin='upper'</code>\u3002</p> </li> <li> <p>\u8bbe\u7f6e<code>interpolation='nearest'</code>\u3002</p> </li> <li> <p>\u8bbe\u7f6e<code>aspect='equal'</code>\u3002</p> </li> <li> <p>\u523b\u5ea6\u7ebf\u653e\u7f6e\u5728\u5de6\u4fa7\u548c\u4e0a\u65b9\u3002</p> </li> <li> <p>\u523b\u5ea6\u7ebf\u683c\u5f0f\u5316\u4e3a\u663e\u793a\u6574\u6570\u7d22\u5f15\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.matshow(flights, cmap=cmap, norm=flights_norm, alpha=1)\n\"\"\"\n&lt;matplotlib.image.AxesImage at 0x17453202cf0&gt;\n\"\"\"\nfig.colorbar(mpl.cm.ScalarMappable(cmap=cmap, norm=flights_norm), shrink=0.77, label='Passengers', ax=ax)\nax.set_xticks(ticks=np.linspace(0, 11, 12), labels=flights.columns, rotation=45)\nax.set_yticks(ticks=np.linspace(0, 11, 12), labels=flights.index, rotation=45)\nax.set_xlabel('Months')\nax.set_ylabel('Years')\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%83%AD%E5%9B%BE/%E7%83%AD%E5%9B%BE%EF%BC%88imshow%E3%80%81matshow%E3%80%81pcolor%E3%80%81pcolormesh%E3%80%81heatmap%E3%80%81clustermap%EF%BC%89/#matplotlibpcolor","title":"Matplotlib\uff1apcolor","text":"<p>matplotlib.axes.Axes.pcolor \u2014 Matplotlib 3.10.1 documentation</p> <p><code>pcolor(*args, shading=None, alpha=None, norm=None, cmap=None, vmin=None, vmax=None, colorizer=None, data=None, **kwargs)</code></p> <p>\u521b\u5efa\u4e00\u4e2a\u5177\u6709\u975e\u89c4\u5219\u77e9\u5f62\u7f51\u683c\u7684\u4f2a\u5f69\u8272\u56fe\u3002<code>X</code>\u548c<code>Y</code>\u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u56db\u8fb9\u5f62\u7684\u89d2\u3002<code>X</code>\u3001<code>Y</code>\u3001<code>C</code>\u53c2\u6570\u4ec5\u63a5\u53d7\u4f4d\u7f6e\u53c2\u6570\u3002\u5bf9\u4e8e\u5927\u578b\u6570\u7ec4\uff0c<code>pcolor()</code>\u53ef\u80fd\u975e\u5e38\u6162\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5e94\u8be5\u4f7f\u7528\u7c7b\u4f3c\u4f46\u901f\u5ea6\u5feb\u7684\u591a\u7684<code>pcolormesh</code>\u3002</p> <ol> <li> <p>**X, Y\uff1a**\u56db\u8fb9\u5f62\u9876\u70b9\u5750\u6807\u3002\u5982\u679c<code>X</code>\u548c/\u6216<code>Y</code>\u662f 1-D \u6570\u7ec4\u6216\u5217\u5411\u91cf\uff0c\u5b83\u4eec\u5c06\u6839\u636e\u9700\u8981\u6269\u5c55\u4e3a\u9002\u5f53\u7684 2D \u6570\u7ec4\uff0c\u5f62\u6210\u4e00\u4e2a\u77e9\u5f62\u7f51\u683c\u3002</p> </li> <li> <p>\u5982\u679c<code>shading='flat'</code>\uff0c<code>X</code>\u548c<code>Y</code>\u7684\u7ef4\u5ea6\u5e94\u6bd4 <code>C</code> \u5927\u4e00\u4e2a\uff0c\u5e76\u4e14\u56db\u8fb9\u5f62\u56e0<code>C[i, j]</code>\u7684\u503c\u800c\u7740\u8272\u3002\u5982\u679c<code>X</code>\u3001<code>Y</code>\u548c<code>C</code>\u7684\u7ef4\u5ea6\u76f8\u7b49\uff0c\u5c06\u5f15\u53d1\u8b66\u544a\uff0c\u5e76\u5ffd\u7565<code>C</code>\u7684\u6700\u540e\u4e00\u884c\u548c\u6700\u540e\u4e00\u5217\u3002</p> </li> <li> <p>\u5982\u679c<code>shading='nearest'</code>\uff0c<code>X</code>\u548c<code>Y</code>\u7684\u7ef4\u5ea6\u5e94\u4e0e<code>C</code>\u76f8\u540c\uff08\u5982\u679c\u4e0d\u76f8\u540c\uff0c\u5c06\u5f15\u53d1 ValueError\uff09\u3002\u989c\u8272<code>C[i, j]</code>\u5c06\u4f4d\u4e8e<code>(X[i, j], Y[i, j])</code>\u7684\u4e2d\u5fc3\u3002</p> </li> <li> <p>**C\uff1a**\u989c\u8272\u6620\u5c04\u7684\u503c\u3002</p> </li> <li> <p>**shading\uff1a**\u56db\u8fb9\u5f62\u7684\u586b\u5145\u6837\u5f0f\u3002\u53ef\u80fd\u7684\u503c\uff1a</p> </li> <li> <p>**'flat'\uff1a**\u6bcf\u4e2a\u56db\u8fb9\u5f62\u4f7f\u7528\u4e00\u79cd\u7eaf\u8272\u3002\u56db\u8fb9\u5f62(i, j)\uff0c(i+1, j)\uff0c(i, j+1)\uff0c(i+1, j+1)\u7684\u989c\u8272\u7531<code>C[i, j]</code>\u7ed9\u51fa\u3002</p> </li> <li> <p>**'nearest'\uff1a**\u6bcf\u4e2a\u7f51\u683c\u70b9\u5c06\u6709\u4e00\u4e2a\u989c\u8272\uff0c\u989c\u8272\u4e2d\u5fc3\u4f4d\u4e8e\u70b9\u4e0a\uff0c\u5ef6\u4f38\u5230\u76f8\u90bb\u7f51\u683c\u4e2d\u5fc3\u4e4b\u95f4\u7684\u4e00\u534a\u3002</p> </li> <li> <p>**'auto'\uff1a**\u5982\u679c<code>X</code>\u548c<code>Y</code>\u7684\u7ef4\u5ea6\u6bd4<code>C</code>\u5927\u4e00\u4e2a\uff0c\u5219\u9009\u62e9<code>'flat'</code>\u3002\u5982\u679c\u7ef4\u5ea6\u76f8\u540c\uff0c\u5219\u9009\u62e9<code>'nearest'</code>\u3002</p> </li> <li> <p>**edgecolors\uff1a**\u8fb9\u7f18\u989c\u8272\u3002\u9ed8\u8ba4\u4e3a<code>'none'</code>\u3002\u5355\u6570\u5f62\u5f0f<code>edgecolor</code>\u662f\u4e00\u4e2a\u522b\u540d\u3002\u53ef\u80fd\u7684\u503c\uff1a</p> </li> <li> <p>'none'**\u6216''\uff1a**\u65e0\u8fb9\u7f18\u3002</p> </li> <li> <p>None\uff1a<code>rcParams[\"patch.edgecolor\"]</code>\uff08\u9ed8\u8ba4\uff1a<code>'black'</code>\uff09\u5c06\u88ab\u4f7f\u7528\u3002\u6ce8\u610f\uff0c\u76ee\u524d<code>rcParams[\"patch.force_edgecolor\"]</code>\uff08\u9ed8\u8ba4\uff1a<code>False</code> \uff09\u5fc5\u987b\u4e3a<code>True</code>\u624d\u80fd\u4f7f\u7528\u3002</p> </li> <li> <p>**'face'\uff1a**\u4f7f\u7528\u76f8\u90bb\u7684\u9762\u989c\u8272\u3002</p> </li> <li> <p>\u989c\u8272\u6216\u989c\u8272\u5e8f\u5217</p> </li> <li> <p>**snap\uff1a**\u662f\u5426\u5c06\u7f51\u683c\u6355\u6349\u5230\u50cf\u7d20\u8fb9\u754c\u3002</p> </li> <li> <p>**antialiaseds\uff1a**\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4f7f\u7528\u9ed8\u8ba4\u7684<code>edgecolors=\"none\"</code>\uff0c\u5219\u8be5\u53c2\u6570\u4e3a<code>False</code>\u3002\u8fd9\u6d88\u9664\u4e86\u5728\u8865\u4e01\u8fb9\u754c\u5904\u7684\u4f2a\u7ebf\uff0c\u5e76\u4e14\u65e0\u8bba<code>alpha</code>\u7684\u503c\u5982\u4f55\u90fd\u6709\u6548\u3002\u5426\u5219\u8be5\u53c2\u6570\u9ed8\u8ba4\u4ece<code>rcParams[\"patch.antialiased\"]</code>\uff08\u9ed8\u8ba4\uff1a<code>True</code>\uff09\u83b7\u53d6\u3002\u5982\u679c<code>alpha</code>\u4e3a1\uff0c\u5219\u53ef\u80fd\u66f4\u559c\u6b22\u63cf\u8fb9\u8fb9\u7f18\uff0c\u4f46\u4f1a\u5bfc\u81f4\u4f2a\u5f71\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nx = np.linspace(-0.5, 11.5, 13)\ny = np.linspace(11.5, -0.5, 13)\nX, Y = np.meshgrid(x, y)\n\nax.pcolor(X, Y, flights, cmap=cmap, norm=flights_norm, alpha=1,\n          shading='flat'\n          )\n\"\"\"\n&lt;matplotlib.collections.PolyQuadMesh at 0x1745204c920&gt;\n\"\"\"\nfig.colorbar(mpl.cm.ScalarMappable(cmap=cmap, norm=flights_norm), shrink=1, label='Passengers', ax=ax)\nax.set_xticks(ticks=np.linspace(0, 11, 12), labels=flights.columns, rotation=45)\nax.set_yticks(ticks=np.linspace(11, 0, 12), labels=flights.index, rotation=45)\nax.set_xlabel('Months')\nax.set_ylabel('Years')\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nx = np.linspace(0, 11, 12)\ny = np.linspace(11, 0, 12)\nX, Y = np.meshgrid(x, y)\n\nax.pcolor(X, Y, flights, cmap=cmap, norm=flights_norm, alpha=1,\n          shading='nearest'\n          )\n\"\"\"\n&lt;matplotlib.collections.PolyQuadMesh at 0x1745391d0d0&gt;\n\"\"\"\nfig.colorbar(mpl.cm.ScalarMappable(cmap=cmap, norm=flights_norm), shrink=1, label='Passengers', ax=ax)\nax.set_xticks(ticks=np.linspace(0, 11, 12), labels=flights.columns, rotation=45)\nax.set_yticks(ticks=np.linspace(11, 0, 12), labels=flights.index, rotation=45)\nax.set_xlabel('Months')\nax.set_ylabel('Years')\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%83%AD%E5%9B%BE/%E7%83%AD%E5%9B%BE%EF%BC%88imshow%E3%80%81matshow%E3%80%81pcolor%E3%80%81pcolormesh%E3%80%81heatmap%E3%80%81clustermap%EF%BC%89/#matplotlibpcolormesh","title":"Matplotlib\uff1apcolormesh","text":"<p>matplotlib.axes.Axes.pcolormesh \u2014 Matplotlib 3.10.1 documentation</p> <p><code>pcolormesh(*args, alpha=None, norm=None, cmap=None, vmin=None, vmax=None, colorizer=None, shading=None, antialiased=False, data=None, **kwargs)</code></p> <p><code>pcolormesh</code> \u4e0e <code>pcolor</code> \u7c7b\u4f3c\u3002\u5b83\u901f\u5ea6\u66f4\u5feb\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u662f\u9996\u9009\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nx = np.linspace(0, 11, 12)\ny = np.linspace(11, 0, 12)\nX, Y = np.meshgrid(x, y)\n\nax.pcolormesh(X, Y, flights, cmap=cmap, norm=flights_norm, alpha=1,\n              shading='nearest'\n              )\n\"\"\"\n&lt;matplotlib.collections.QuadMesh at 0x174533f1550&gt;\n\"\"\"\nfig.colorbar(mpl.cm.ScalarMappable(cmap=cmap, norm=flights_norm), shrink=1, label='Passengers', ax=ax)\nax.set_xticks(ticks=np.linspace(0, 11, 12), labels=flights.columns, rotation=45)\nax.set_yticks(ticks=np.linspace(11, 0, 12), labels=flights.index, rotation=45)\nax.set_xlabel('Months')\nax.set_ylabel('Years')\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%83%AD%E5%9B%BE/%E7%83%AD%E5%9B%BE%EF%BC%88imshow%E3%80%81matshow%E3%80%81pcolor%E3%80%81pcolormesh%E3%80%81heatmap%E3%80%81clustermap%EF%BC%89/#seabornheatmap","title":"Seaborn\uff1aheatmap","text":"<p>seaborn.pydata.org</p> <p><code>sns.heatmap(data, *, vmin=None, vmax=None, cmap=None, center=None, robust=False, annot=None, fmt='.2g', annot_kws=None, linewidths=0, linecolor='white', cbar=True, cbar_kws=None, cbar_ax=None, square=False, xticklabels='auto', yticklabels='auto', mask=None, ax=None, **kwargs)</code></p> <p>\u5c06\u77e9\u5f62\u6570\u636e\u7ed8\u5236\u4e3a\u989c\u8272\u7f16\u7801\u77e9\u9635\u3002\u8fd9\u662f\u4e00\u4e2aAxes\u7ea7\u522b\u51fd\u6570\uff0c\u5982\u679c<code>ax</code>\u53c2\u6570\u672a\u63d0\u4f9b\uff0c\u5219\u5c06\u7ed8\u5236\u70ed\u56fe\u5230\u5f53\u524d\u6d3b\u52a8\u7684Axes\u4e2d\u3002\u8fd9\u90e8\u5206Axes\u7a7a\u95f4\u5c06\u88ab\u5360\u7528\u5e76\u7528\u4e8e\u7ed8\u5236\u989c\u8272\u6761\uff0c\u9664\u975e<code>cbar</code>\u4e3a<code>False</code>\u6216<code>cbar_ax</code>\u63d0\u4f9b\u4e86\u5355\u72ec\u7684Axes\u3002</p> <p><code>**kwargs</code>\u5176\u4ed6\u6240\u6709\u5173\u952e\u5b57\u53c2\u6570\u90fd\u4f20\u9012\u7ed9<code>matplotlib.axes.Axes.pcolormesh()</code>\u3002</p> <ol> <li> <p>**robust\uff1a**\u5982\u679c\u4e3a<code>True</code>\u4e14<code>vmin</code>\u6216<code>vmax</code>\u7f3a\u5931\uff0c\u5219\u4f7f\u7528\u7a33\u5065\u5206\u4f4d\u6570\u800c\u4e0d\u662f\u6781\u7aef\u503c\u6765\u8ba1\u7b97\u989c\u8272\u6620\u5c04\u8303\u56f4\u3002\u9ed8\u8ba4\u4e3a<code>False</code>\u3002</p> </li> <li> <p>**square\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u5c06 Axes \u7684\u7eb5\u6a2a\u6bd4\u8bbe\u7f6e\u4e3a<code>'equal'</code>\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u5355\u5143\u683c\u90fd\u662f\u65b9\u5f62\u3002</p> </li> <li> <p>**annot\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u5728\u6bcf\u4e2a\u5355\u5143\u683c\u4e2d\u5199\u5165\u6570\u636e\u503c\u3002\u5982\u679c\u662f\u4e00\u4e2a\u4e0e<code>data</code>\u5f62\u72b6\u76f8\u540c\u7684\u6570\u7ec4\uff0c\u5219\u4f7f\u7528\u5b83\u6765\u6ce8\u91ca\u70ed\u56fe\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u6570\u636e\u3002\u8bf7\u6ce8\u610f\uff0cDataFrame \u5c06\u6839\u636e\u4f4d\u7f6e\u800c\u4e0d\u662f\u7d22\u5f15\u8fdb\u884c\u5339\u914d\u3002</p> </li> <li> <p>**fmt\uff1a**\u6dfb\u52a0\u6ce8\u91ca\u65f6\u4f7f\u7528\u7684\u5b57\u7b26\u4e32\u683c\u5f0f\u4ee3\u7801\u3002\u9ed8\u8ba4\u4e3a<code>'.2g'</code>\u3002</p> </li> <li> <p>**annot_kws\uff1a**\u5f53<code>annot</code>\u4e3a<code>True</code>\u65f6\uff0c\u4f20\u9012\u7ed9<code>matplotlib.axes.Axes.text()</code>\u7684\u5173\u952e\u5b57\u53c2\u6570\u3002</p> </li> <li> <p>**linewidths\uff1a**\u7528\u4e8e\u5206\u9694\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u7ebf\u7684\u5bbd\u5ea6\u3002\u9ed8\u8ba4\u4e3a0\u3002</p> </li> <li> <p>**linecolor\uff1a**\u5206\u9694\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u7ebf\u6761\u989c\u8272\u3002\u9ed8\u8ba4<code>'white'</code>\u3002</p> </li> <li> <p>**cbar\uff1a**\u662f\u5426\u7ed8\u5236\u8272\u6761\u3002\u9ed8\u8ba4\u4e3a<code>True</code>\u3002</p> </li> <li> <p>**cbar_kws\uff1a**\u4f20\u9012\u7ed9<code>matplotlib.figure.Figure.colorbar()</code>\u7684\u5173\u952e\u5b57\u53c2\u6570\u3002</p> </li> <li> <p>**cbar_ax\uff1a**\u7ed8\u5236\u8272\u6761\u7684\u533a\u57df\uff0c\u5426\u5219\u5360\u7528\u4e3b Axes \u7684\u7a7a\u95f4\u3002</p> </li> <li> <p>**xticklabels\u3001yticklabels\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u7ed8\u5236\u6570\u636e\u6846\u7684\u5217\u540d\u6216\u884c\u540d\u3002\u5982\u679c\u4e3a\u5217\u8868\uff0c\u5219\u7ed8\u5236\u8fd9\u4e9b\u66ff\u4ee3\u6807\u7b7e\u3002\u5982\u679c\u4e3a\u6574\u6570\uff0c\u5219\u4f7f\u7528\u5217\u540d\u6216\u884c\u540d\uff0c\u4f46\u4ec5\u7ed8\u5236\u6bcfn\u4e2a\u6807\u7b7e\u3002\u5982\u679c\u4e3a<code>'auto'</code>\uff0c\u5219\u5c1d\u8bd5\u5bc6\u96c6\u7ed8\u5236\u4e0d\u91cd\u53e0\u7684\u6807\u7b7e\u3002</p> </li> <li> <p>mask\uff1a**\u63a9\u7801\u6570\u7ec4\u3002**\u5982\u679c\u4f20\u5165\uff0c\u5bf9\u5e94<code>True</code>\u7684\u5355\u5143\u683c\u4e2d\u4e0d\u4f1a\u663e\u793a\u6570\u636e\u3002\u7f3a\u5931\u503c\u7684\u5355\u5143\u683c\u5c06\u81ea\u52a8\u88ab\u5c4f\u853d\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.heatmap(flights, cmap=cmap, norm=flights_norm, square=True,\n\n            mask=flights&lt;204,\n\n            annot=True,\n            fmt='.2f',\n            annot_kws={\"fontsize\": 8, 'color': 'r'},\n\n            linewidths=2,\n            linecolor='k',\n\n            cbar=True,\n            cbar_kws={\"label\": \"Passengers\", 'shrink': 0.855},\n            cbar_ax=None,\n\n            xticklabels='auto',\n            yticklabels='auto',\n\n            ax=ax\n            )\n\"\"\"\n&lt;Axes: xlabel='month', ylabel='year'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%83%AD%E5%9B%BE/%E7%83%AD%E5%9B%BE%EF%BC%88imshow%E3%80%81matshow%E3%80%81pcolor%E3%80%81pcolormesh%E3%80%81heatmap%E3%80%81clustermap%EF%BC%89/#seabornclustermap","title":"Seaborn\uff1aclustermap","text":"<p>seaborn.clustermap \u2014 seaborn 0.13.2 documentation</p> <p>linkage \u2014 SciPy v1.14.1 Manual</p> <p>docs.scipy.org</p> <p><code>sns.clustermap(data, *, pivot_kws=None, method='average', metric='euclidean', z_score=None, standard_scale=None, figsize=(10, 10), cbar_kws=None, row_cluster=True, col_cluster=True, row_linkage=None, col_linkage=None, row_colors=None, col_colors=None, mask=None, dendrogram_ratio=0.2, colors_ratio=0.03, cbar_pos=(0.02, 0.8, 0.05, 0.18), tree_kws=None, **kwargs)</code></p> <p>\u5c06\u77e9\u9635\u6570\u636e\u96c6\u7ed8\u5236\u4e3a\u5c42\u6b21\u805a\u7c7b\u70ed\u56fe\u3002\u8be5\u51fd\u6570\u9700\u8981 scipy \u53ef\u7528\u3002<code>**kwargs</code>\u6240\u6709\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u90fd\u4f20\u9012\u7ed9<code>heatmap()</code>\u3002</p> <ol> <li> <p>data\uff1a**\u7528\u4e8e\u805a\u7c7b\u7684\u77e9\u5f62\u6570\u636e\u3002**\u4e0d\u80fd\u5305\u542b\u7a7a\u503c\u3002</p> </li> <li> <p>**pivot_kws\uff1a**\u5982\u679c<code>data</code>\u662f\u6574\u6d01\u7684 DataFrame\uff0c\u53ef\u4ee5\u63d0\u4f9b\u7528\u4e8epivot\u7684\u5173\u952e\u5b57\u53c2\u6570\u6765\u521b\u5efa\u77e9\u5f62DataFrame\u3002</p> </li> <li> <p>**row_cluster\u3001col_cluster\uff1a**\u5982\u679c<code>True</code> \uff0c\u5bf9\u884c\u6216\u5217\u8fdb\u884c\u805a\u7c7b\u3002</p> </li> <li> <p>**method\uff1a**\u7528\u4e8e\u8ba1\u7b97\u805a\u7c7b\u7684\u94fe\u63a5\u65b9\u6cd5\u3002\u53c2\u9605<code>scipy.cluster.hierarchy.linkage()</code>\u6587\u6863\u3002</p> </li> <li> <p>**metric\uff1a**\u7528\u4e8e\u6570\u636e\u7684\u8ddd\u79bb\u5ea6\u91cf\u3002\u53c2\u9605<code>scipy.spatial.distance.pdist()</code>\u6587\u6863\u3002\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u5ea6\u91cf\uff08\u6216\u65b9\u6cd5\uff09\u7528\u4e8e\u884c\u548c\u5217\uff0c\u53ef\u4ee5\u5206\u522b\u6784\u5efa\u94fe\u63a5\u77e9\u9635\uff0c\u5e76\u5c06\u5b83\u4eec\u4f5c\u4e3a<code>{row,col}_linkage</code>\u53c2\u6570\u63d0\u4f9b\u3002</p> </li> <li> <p>**row_linkage\u3001col_linkage\uff1a**\u884c\u6216\u5217\u7684\u9884\u8ba1\u7b97\u94fe\u63a5\u77e9\u9635\u3002\u53c2\u89c1<code>scipy.cluster.hierarchy.linkage()</code>\u4e86\u89e3\u5177\u4f53\u683c\u5f0f\u3002</p> </li> <li> <p>**row_colors\u3001col_colors\uff1a**\u7528\u4e8e\u6807\u8bb0\u884c\u6216\u5217\u7684\u989c\u8272\u5217\u8868\u3002\u53ef\u7528\u4e8e\u8bc4\u4f30\u7ec4\u5185\u6837\u672c\u662f\u5426\u805a\u96c6\u5728\u4e00\u8d77\u3002\u53ef\u4ee5\u4f7f\u7528\u5d4c\u5957\u5217\u8868\u6216 DataFrame\u6765\u8868\u793a\u591a\u7ea7\u989c\u8272\u6807\u8bb0\u3002\u5982\u679c\u4f5c\u4e3a<code>pandas.DataFrame</code>\u6216<code>pandas.Series</code>\u63d0\u4f9b\uff0c\u989c\u8272\u6807\u7b7e\u5c06\u63d0\u53d6\u81eaDataFrames \u7684\u5217\u540d\u6216Series \u7684\u540d\u79f0\u3002DataFrame/Series\u989c\u8272\u4e5f\u5c06\u901a\u8fc7\u5176\u7d22\u5f15\u4e0e\u6570\u636e\u5339\u914d\uff0c\u786e\u4fdd\u989c\u8272\u6309\u6b63\u786e\u987a\u5e8f\u7ed8\u5236\u3002</p> </li> <li> <p>**dendrogram_ratio\u3001colors_ratio\uff1a**\u56fe\u5f62\u5927\u5c0f\u4e2d\u7528\u4e8e\u4e24\u4e2a\u8fb9\u7f18\u5143\u7d20\u7684\u6bd4\u4f8b\u3002\u5982\u679c\u7ed9\u51fa\u4e00\u5bf9\uff0c\u5219\u5bf9\u5e94\u4e8e\uff08\u884c\uff0c\u5217\uff09\u6bd4\u4f8b\u3002</p> </li> <li> <p>**z_score\uff1a**\u662f\u5426\u8ba1\u7b97**\u884c\uff080\uff09**\u6216**\u5217\uff081\uff09**\u7684z\u5206\u6570\u3002z\u5206\u6570\u4e3a\uff1az = (x - mean)/std\u3002\u8fd9\u786e\u4fdd\u4e86\u6bcf\u884c\uff08\u5217\uff09\u7684\u5e73\u5747\u503c\u4e3a 0\uff0c\u65b9\u5dee\u4e3a 1\u3002</p> </li> <li> <p>**standard_scale\uff1a**\u5bf9\u6bcf\u4e00**\u884c\uff080\uff09**\u6216\u6bcf\u4e00**\u5217\uff081\uff09**\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u5373(x - min)/ max\u3002</p> </li> <li> <p>**cbar_pos\uff1a**Figure\u4e2d\u989c\u8272\u6761Axes\u7684\u4f4d\u7f6e\uff0c\u5f62\u5982<code>(left, bottom, width, height)</code>\u7684\u5143\u7ec4\u3002\u8bbe\u7f6e\u4e3a<code>None</code>\u5c06\u7981\u7528\u989c\u8272\u6761\u3002</p> </li> <li> <p>**tree_kws\uff1a**\u7528\u4e8e\u7ed8\u5236\u6811\u72b6\u56fe\u7ebf\u7684<code>matplotlib.collections.LineCollection</code>\u53c2\u6570\u3002</p> </li> </ol> <pre><code>from matplotlib.patches import Patch\na = sns.clustermap(penguins_data, cmap=cmap, norm=penguins_norm,\n\n                   mask=None,\n\n                   annot=False,\n\n                   linewidths=0,\n\n                   cbar_kws=None,\n                   cbar_pos=(1, 0.071, 0.05, 0.735),\n\n                   xticklabels='auto',\n                   yticklabels=[],\n\n                   row_cluster=True,\n                   col_cluster=False,\n                   method='weighted',\n                   metric='mahalanobis',\n                   row_linkage=None,\n                   col_linkage=None,\n                   row_colors=penguins['species'].map({'Adelie': 'r', 'Chinstrap': 'g', 'Gentoo': 'b'}),\n                   col_colors=None,\n                   dendrogram_ratio=0.2,\n                   colors_ratio=0.02,\n                   tree_kws=None,\n\n                   z_score=None,\n                   standard_scale=None,\n\n                   figsize=(10,10)\n                   )\n\"\"\"\n&lt;seaborn.matrix.ClusterGrid at 0x2a739377bc0&gt;\n\"\"\"\np1 = Patch(facecolor='r')\np2 = Patch(facecolor='g')\np3 = Patch(facecolor='b')\na.figure.legend([p1, p2, p3], ['Adelie', 'Chinstrap', 'Gentoo'], loc='center left')\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/","title":"\u57fa\u7840\u7ed8\u56fe\u4e0e\u6298\u7ebf\u56fe\uff08plot\u3001stairs\u3001lineplot\uff09","text":"<p>fmri.csv</p> <p>iris.csv</p> <p></p> <p></p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n</code></pre> <pre><code>fmri = pd.read_csv('../Data/fmri.csv')\n\ntimepoint = fmri['timepoint']\n\"\"\"\n0       18\n1       14\n2       18\n3       18\n4       18\n        ..\n1059     8\n1060     7\n1061     7\n1062     7\n1063     0\nName: timepoint, Length: 1064, dtype: int64\n\"\"\"\n\nsignal = fmri['signal']\n\"\"\"\n0      -0.017552\n1      -0.080883\n2      -0.081033\n3      -0.046134\n4      -0.037970\n          ...   \n1059    0.018165\n1060   -0.029130\n1061   -0.004939\n1062   -0.025367\n1063   -0.006899\nName: signal, Length: 1064, dtype: float64\n\"\"\"\n\nfmri[\"region\"].unique()\n\"\"\"\n['parietal' 'frontal']\n\"\"\"\n</code></pre> <pre><code>iris = pd.read_csv('../Data/iris.csv')\n\nsepal_length = iris['sepal_length']\n\"\"\"\n0      5.1\n1      4.9\n2      4.7\n3      4.6\n4      5.0\n      ... \n145    6.7\n146    6.3\n147    6.5\n148    6.2\n149    5.9\nName: sepal_length, Length: 150, dtype: float64\n\"\"\"\n\nsepal_width = iris['sepal_width']\n\"\"\"\n0      3.5\n1      3.0\n2      3.2\n3      3.1\n4      3.6\n      ... \n145    3.0\n146    2.5\n147    3.0\n148    3.4\n149    3.0\nName: sepal_width, Length: 150, dtype: float64\n\"\"\"\n\niris[\"species\"].unique()\n\"\"\"\n['setosa' 'versicolor' 'virginica']\n\"\"\"\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#matplotlibplot","title":"matplotlib\uff1aplot","text":"<p>matplotlib.pyplot.plot \u2014 Matplotlib 3.9.0 documentation</p> <p>matplotlib.axes.Axes.plot \u2014 Matplotlib 3.10.1 documentation</p> <p><code>plot(*args, scalex=True, scaley=True, data=None, **kwargs)</code></p> <p>\u7ed8\u5236 y \u4e0e x \u7684\u7ebf\u56fe\u548c/\u6216\u6807\u8bb0\u56fe\uff0c\u8fd4\u56de\u7ed8\u5236\u56fe\u5f62\u7684\u5217\u8868\u3002</p> <p>\u8be5\u51fd\u6570\u7ee7\u627f\u81ea<code>Line2D</code>\u7c7b\uff0ckwargs\u662f\u4e00\u4e2a\u53ef\u7528 <code>Line2D</code> \u5c5e\u6027\u7684\u5217\u8868\uff0c\u89c1\u7ebf\u578b\u548c\u6807\u8bb0\u3002\u5982\u679c\u5728\u4e00\u6b21plot\u8c03\u7528\u4e2d\u8fdb\u884c\u4e86\u591a\u7ec4\u7ed8\u5236\uff0c\u8fd9\u4e9b\u5173\u952e\u5b57\u53c2\u6570\u5c06\u5e94\u7528\u4e8e\u6240\u6709\u8fd9\u4e9b\u7ed8\u5236\u3002</p> <p><code>scalex</code>\u548c<code>scaley</code>\u53c2\u6570\u63a7\u5236\u81ea\u52a8\u5bf9\u6570\u636e\u8fdb\u884c\u7ebf\u6027\u5f52\u4e00\u5316\u6620\u5c04\u5230\u8f74\u4e0a\uff0c\u4ee5\u4fbf\u7ed8\u5236\u7684\u56fe\u5f62\u5728\u89c6\u56fe\u8303\u56f4\u5185\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u66f4\u6539\u3002</p> <pre><code>plot([x], y, [fmt], *, data=None, **kwargs)\nplot([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#_1","title":"\u6570\u636e\u683c\u5f0f","text":"<p>\u6570\u636e\u70b9\u6216\u7ebf\u8282\u70b9\u7684\u6c34\u5e73/\u5782\u76f4\u5750\u6807\u7531 x, y \u7ed9\u51fa\u3002x \u503c\u662f\u53ef\u9009\u7684\uff0c\u82e5\u672a\u7ed9\u51fa\uff0c\u5219\u9ed8\u8ba4\u4e3a <code>range(len(y))</code>\u3002\u8fd9\u4e9b\u53c2\u6570\u4e0d\u80fd\u4f5c\u4e3a\u5173\u952e\u5b57\u4f20\u9012\u3002</p> <p>\u6709\u4e00\u4e2a\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u7ed8\u5236\u5e26\u6807\u7b7e\u6570\u636e\u7684\u5bf9\u8c61\uff08\u5373\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15<code>obj['y']</code>\u8bbf\u95ee\u7684\u6570\u636e\uff09\uff0c\u53ea\u9700\u5728 data \u53c2\u6570\u4e2d\u63d0\u4f9b\u5bf9\u8c61\uff0c\u5e76\u7ed9\u51fa x \u548c y \u7684\u6807\u7b7e\u3002\u6240\u6709\u53ef\u7d22\u5f15\u7684\u5bf9\u8c61\u90fd\u53d7\u652f\u6301\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u662f <code>dict</code> \uff0c<code>pandas.DataFrame</code> \u6216\u7ed3\u6784\u5316 NumPy \u6570\u7ec4\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(signal,    # y\n\n        # Line2D\u53c2\u6570\n        linestyle=\"--\",\n        linewidth=2,\n        color=\"red\",\n        marker=\"o\",\n        markersize=5,\n        markerfacecolor=\"blue\",\n        )\n\"\"\"\n[&lt;matplotlib.lines.Line2D at 0x273ef1dfbf0&gt;]\n\"\"\"\n\nax.set_ylabel(\"signal\")\nplt.show()\n</code></pre> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(\"signal\",     # y\n        data=fmri,\n\n        # Line2D\u53c2\u6570\n        linestyle=\"--\",\n        linewidth=2,\n        color=\"red\",\n        marker=\"o\",\n        markersize=5,\n        markerfacecolor=\"blue\",\n        )\n\"\"\"\n[&lt;matplotlib.lines.Line2D at 0x21c1f892330&gt;]\n\"\"\"\n\nax.set_ylabel(\"signal\")\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(timepoint,    # x\n        signal,       # y\n\n        # Line2D\u53c2\u6570\n        linestyle=\"--\",\n        linewidth=2,\n        color=\"red\",\n        marker=\"o\",\n        markersize=5,\n        markerfacecolor=\"blue\",\n        )\n\"\"\"\n[&lt;matplotlib.lines.Line2D at 0x273f6d1b4d0&gt;]\n\"\"\"\n\nax.set_xlabel(\"timepoint\")\nax.set_ylabel(\"signal\")\nplt.show()\n</code></pre> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(\"timepoint\",    # x\n        \"signal\",       # y\n        data=fmri,\n\n        # Line2D\u53c2\u6570\n        linestyle=\"--\",\n        linewidth=2,\n        color=\"red\",\n        marker=\"o\",\n        markersize=5,\n        markerfacecolor=\"blue\",\n        )\n\"\"\"\n[&lt;matplotlib.lines.Line2D at 0x273f453d700&gt;]\n\"\"\"\n\nax.set_xlabel(\"timepoint\")\nax.set_ylabel(\"signal\")\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#_2","title":"\u683c\u5f0f\u5b57\u7b26\u4e32","text":"<p>fmt\u53c2\u6570\u8bbe\u7f6e\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u7531\u989c\u8272\u3001\u6807\u8bb0\u548c\u7ebf\u6761\u7684\u90e8\u5206\u7ec4\u6210\uff1a<code>[marker][line][color]</code>\u3002\u6bcf\u4e2a\u90fd\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\uff0c\u5219\u4f7f\u7528\u5c5e\u6027\u5faa\u73af\u4e2d\u7684\u503c\u3002\uff08\u4f8b\u5916\uff1a\u5982\u679c\u63d0\u4f9b\u4e86 <code>line</code> \uff0c\u4f46\u6ca1\u6709\u63d0\u4f9b <code>marker</code> \uff0c\u5219\u6570\u636e\u5c06\u662f\u4e00\u6761\u6ca1\u6709\u6807\u8bb0\u7684\u7ebf\uff09\u3002\u652f\u6301\u7684\u989c\u8272\u7f29\u5199\u662f\u5355\u5b57\u6bcd\u4ee3\u7801\uff08'r', 'g'\u7b49\uff09\u548c\u7d22\u5f15\u5230\u9ed8\u8ba4\u989c\u8272\u5faa\u73af\u7684 <code>'CN'</code> \u989c\u8272\u3002\u5982\u679c\u989c\u8272\u662f\u683c\u5f0f\u5b57\u7b26\u4e32\u7684\u552f\u4e00\u90e8\u5206\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 <code>matplotlib.colors</code> \u89c4\u8303\uff0c\u4f8b\u5982\u5b8c\u6574\u540d\u79f0\uff08 <code>'green'</code> \uff09\u6216\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\uff08 <code>'#008000'</code> \uff09\u3002\u683c\u5f0f\u5b57\u7b26\u4e32\u53ea\u662f\u5feb\u901f\u8bbe\u7f6e\u57fa\u672c\u7ebf\u5c5e\u6027\u7684\u4e00\u79cd\u7f29\u5199\u3002\u6240\u6709\u8fd9\u4e9b\u4ee5\u53ca\u66f4\u591a\u90fd\u53ef\u4ee5\u901a\u8fc7\u5173\u952e\u5b57\u53c2\u6570\u6765\u63a7\u5236\uff08\u5173\u952e\u5b57\u53c2\u6570\u4f18\u5148\uff09\u3002\u6b64\u53c2\u6570\u4e0d\u80fd\u4f5c\u4e3a\u5173\u952e\u5b57\u4f20\u9012\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(\"timepoint\",    # x\n        \"signal\",       # y\n        \"o--r\",         # fmt\n        data=fmri\n        )\n\"\"\"\n[&lt;matplotlib.lines.Line2D at 0x273f506cf20&gt;]\n\"\"\"\n\nax.set_xlabel(\"timepoint\")\nax.set_ylabel(\"signal\")\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(\"timepoint\",    # x\n        \"signal\",       # y\n        \"red\",          # fmt\n        data=fmri\n        )\n\"\"\"\n[&lt;matplotlib.lines.Line2D at 0x273f3f81160&gt;]\n\"\"\"\n\nax.set_xlabel(\"timepoint\")\nax.set_ylabel(\"signal\")\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#_3","title":"\u591a\u7ec4\u7ed8\u5236","text":"<ol> <li> <p>\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\u5c31\u662f\u591a\u6b21\u8c03\u7528 <code>plot</code> \u3002</p> </li> <li> <p>\u5982\u679c x \u548c/\u6216 y \u662f\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6bcf\u4e00\u5217\u5c06\u4f5c\u4e3a\u5355\u72ec\u7684\u6570\u636e\u96c6\u8fdb\u884c\u7ed8\u5236\u3002\u5982\u679c x \u548c y \u90fd\u662f\u4e8c\u7ef4\u7684\uff0c\u5b83\u4eec\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u5f62\u72b6\uff0c\u5217\u4e0e\u5217\u4e00\u4e00\u5bf9\u5e94\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5f62\u72b6\u4e3a(N, m)\uff0c\u5219\u53e6\u4e00\u4e2a\u5fc5\u987b\u5177\u6709\u957f\u5ea6 N\uff0c\u5e76\u5c06\u4e3a\u6bcf\u4e2a\u6570\u636e\u96c6 m \u4f7f\u7528\u3002</p> </li> <li> <p>\u7b2c\u4e09\u79cd\u65b9\u6cd5\u662f\u6307\u5b9a\u591a\u4e2a[x], y, [fmt]\u7ec4\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u989d\u5916\u7684\u5173\u952e\u5b57\u53c2\u6570\u90fd\u9002\u7528\u4e8e\u6240\u6709\u6570\u636e\u96c6\u3002\u6b64\u5916\uff0c\u6b64\u8bed\u6cd5\u4e0d\u80fd\u4e0edata\u53c2\u6570\u7ed3\u5408\u4f7f\u7528\u3002</p> </li> </ol> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6761\u7ebf\u90fd\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u7531 'style cycle' \u6307\u5b9a\u7684\u4e0d\u540c\u6837\u5f0f\u3002fmt \u548c line\u5c5e\u6027\u53c2\u6570\u4ec5\u5728\u60f3\u8981\u660e\u786e\u504f\u79bb\u8fd9\u4e9b\u9ed8\u8ba4\u503c\u65f6\u624d\u662f\u5fc5\u8981\u7684\u3002\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>rcParams[\"axes.prop_cycle\"]</code> \u6765\u66f4\u6539\u6837\u5f0f\u5faa\u73af\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(\"sepal_length\",    # x\n        \"sepal_width\",     # y1\n        data=iris\n        )\n\"\"\"\n[&lt;matplotlib.lines.Line2D at 0x273f7e36c60&gt;]\n\"\"\"\n\nax.plot(\"sepal_length\",    # x\n        \"petal_width\",     # y2\n        data=iris\n        )\n\"\"\"\n[&lt;matplotlib.lines.Line2D at 0x273f7e46ae0&gt;]\n\"\"\"\n\nplt.show()\n</code></pre> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(iris[\"sepal_length\"],    # x\n        iris[\"sepal_width\"],     # y1\n        iris[\"sepal_length\"],    # x\n        iris[\"petal_width\"]      # y2\n        )\n\"\"\"\n[&lt;matplotlib.lines.Line2D at 0x21c225f1c10&gt;,\n &lt;matplotlib.lines.Line2D at 0x21c225f39b0&gt;]\n\"\"\"\n\nplt.show()\n</code></pre> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.plot(\"sepal_length\",                           # x\n        iris[[\"sepal_width\", \"petal_width\"]],     # y1\uff0cy2\n        data=iris\n        )\n\"\"\"\n[&lt;matplotlib.lines.Line2D at 0x21c225c51f0&gt;,\n &lt;matplotlib.lines.Line2D at 0x21c225c6180&gt;]\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#errorbar","title":"\u8bef\u5dee\u7ebf\uff08errorbar\uff09","text":"<p>matplotlib.axes.Axes.errorbar \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.errorbar \u2014 Matplotlib 3.10.1 documentation</p> <p>Different ways of specifying error bars \u2014 Matplotlib 3.10.1 documentation</p> <p><code>errorbar(x, y, yerr=None, xerr=None, fmt='', *, ecolor=None, elinewidth=None, capsize=None, barsabove=False, lolims=False, uplims=False, xlolims=False, xuplims=False, errorevery=1, capthick=None, data=None, **kwargs)</code></p> <p>\u4ee5\u7ebf\u6216\u6807\u8bb0\u7684\u5f62\u5f0f\u7ed8\u5236<code>y</code>\u4e0e<code>x</code>\u7684\u5173\u7cfb\uff0c\u5e76\u9644\u52a0\u8bef\u5dee\u7ebf\u3002<code>x</code>,<code>y</code>\u5b9a\u4e49\u6570\u636e\u4f4d\u7f6e\uff0c<code>xerr</code>,<code>yerr</code>\u5b9a\u4e49\u8bef\u5dee\u7ebf\u5927\u5c0f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5c06\u7ed8\u5236\u6570\u636e\u6807\u8bb0/\u7ebf\u6761\u4ee5\u53ca\u8bef\u5dee\u7ebf\u3002\u4f7f\u7528<code>fmt='none'</code>\u6765\u7ed8\u5236\u4e0d\u5e26\u4efb\u4f55\u6570\u636e\u6807\u8bb0\u7684\u8bef\u5dee\u7ebf\u3002<code>**kwargs</code>\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u90fd\u5c06\u4f20\u9012\u7ed9<code>plot</code>\u8c03\u7528\u3002<code>data</code>\u53c2\u6570\u5982\u679c\u63d0\u4f9b\uff0c\u4ee5\u4e0b\u53c2\u6570\u4e5f\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32<code>s</code>\uff0c\u5982\u679c<code>s</code>\u662f<code>data</code> \u4e2d\u7684\u952e\uff0c\u5219\u89e3\u91ca\u4e3a<code>data[s]</code>\uff1ax, y, xerr, yerr\u3002</p> <ol> <li> <p>**x, y\uff1a**\u6570\u636e\u4f4d\u7f6e\u3002</p> </li> <li> <p>**fmt\uff1a**\u6570\u636e\u70b9/\u6570\u636e\u7ebf\u7684\u683c\u5f0f\uff0c\u9ed8\u8ba4<code>''</code>\u3002\u4f7f\u7528<code>'none'</code>\uff08\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09\u6765\u7ed8\u5236\u4e0d\u5e26\u6570\u636e\u6807\u8bb0\u7684\u8bef\u5dee\u7ebf\u3002</p> </li> <li> <p>**xerr, yerr\uff1a**\u8bef\u5dee\u7ebf\u5927\u5c0f\u3002\u6240\u6709\u503c\u5fc5\u987b\u22650\u3002</p> </li> <li> <p>\u6807\u91cf\uff1a\u6240\u6709\u6570\u636e\u70b9\u8bbe\u7f6e\u76f8\u540c\u5bf9\u79f0\u00b1\u503c\u3002</p> </li> <li> <p>(N,)\u6570\u7ec4\uff1a\u6bcf\u4e2a\u6570\u636e\u70b9\u8bbe\u7f6e\u4e0d\u540c\u5bf9\u79f0\u00b1\u503c\u3002</p> </li> <li> <p>(2, N)\u6570\u7ec4\uff1a\u6bcf\u4e2a\u6570\u636e\u70b9\u8bbe\u7f6e\u72ec\u7acb-\u548c+\u503c\u3002\u7b2c\u4e00\u884c\u5305\u542b\u4e0b\u9650\u8bef\u5dee(-)\uff0c\u7b2c\u4e8c\u884c\u5305\u542b\u4e0a\u9650\u8bef\u5dee(+)\u3002</p> </li> <li> <p>None\uff1a\u65e0\u8bef\u5dee\u7ebf\uff08\u9ed8\u8ba4\uff09\u3002</p> </li> <li> <p>**lolims, uplims, xlolims, xuplims\uff1a**\u8fd9\u4e9b\u53c2\u6570\u53ef\u4ee5\u7528\u6765\u8868\u793a\u6570\u636e\u503c\u672c\u8eab\u662f\u5426\u4e3a\u4e0a\u9650/\u4e0b\u9650\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u4e00\u4e2a\u7bad\u5934\u7b26\u53f7\u6765\u8868\u793a\u3002\u8981\u5728\u53cd\u8f6c\u7684Axes\u4e2d\u4f7f\u7528\uff0c\u5fc5\u987b\u5728<code>set_xlim</code> \u6216 <code>set_ylim</code> \u4e4b\u524d\u8c03\u7528<code>errorbar()</code>\u3002\u9ed8\u8ba4\u5747\u4e3aFalse\u3002</p> </li> <li> <p>**errorevery\uff1a**\u5728\u6570\u636e\u5b50\u96c6\u4e0a\u7ed8\u5236\u8bef\u5dee\u7ebf\u3002<code>errorevery=N</code>\u5728\u70b9<code>(x[::N], y[::N])</code>\u4e0a\u7ed8\u5236\u8bef\u5dee\u7ebf\u3002<code>errorevery=(start, N)</code> \u5728\u70b9<code>(x[start::N], y[start::N])</code>\u4e0a\u7ed8\u5236\u8bef\u5dee\u7ebf\u3002\u7528\u4e8e\u907f\u514d\u4e24\u4e2a\u5e8f\u5217\u5171\u4eab x \u8f74\u503c\u65f6\u8bef\u5dee\u7ebf\u7684\u91cd\u53e0\u3002\u9ed8\u8ba4\u4e3a1.</p> </li> <li> <p>**barsabove\uff1a**\u5982\u679c\u4e3aTrue\uff0c\u5c06\u5728\u6807\u8bb0\u4e0a\u65b9\u7ed8\u5236\u8bef\u5dee\u7ebf\u3002\u9ed8\u8ba4\u4e3a\u4e0b\u65b9\uff08False\uff09\u3002</p> </li> <li> <p>**ecolor\uff1a**\u8bef\u5dee\u7ebf\u7684\u989c\u8272\u3002\u5982\u679c\u4e3a<code>None</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u5219\u4f7f\u7528\u8fde\u63a5\u6807\u8bb0\u7684\u7ebf\u7684\u989c\u8272\u3002</p> </li> <li> <p>**elinewidth\uff1a**\u8bef\u5dee\u7ebf\u7684\u7ebf\u5bbd\u3002\u5982\u679c\u4e3a<code>None</code>\uff08\u9ed8\u8ba4\uff09\uff0c\u5219\u4f7f\u7528\u5f53\u524d\u6837\u5f0f\u7684\u7ebf\u5bbd\u3002</p> </li> <li> <p>**capsize\uff1a**\u8bef\u5dee\u7ebf\u5e3d\u7684\u957f\u5ea6\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09\u3002\u9ed8\u8ba4<code>rcParams[\"errorbar.capsize\"]=0.0</code>\u3002</p> </li> <li> <p>**capthick\uff1a**\u8fd9\u662f\u5173\u952e\u5b57\u53c2\u6570<code>markeredgewidth</code>\u7684\u522b\u540d\u3002\u6b64\u8bbe\u7f6e\u662f\u7528\u4e8e\u63a7\u5236\u8bef\u5dee\u7ebf\u5e3d\u7684\u539a\u5ea6\uff08\u4ee5\u70b9\u4e3a\u5355\u4f4d\uff09\u7684\u4e00\u4e2a\u66f4\u5408\u7406\u7684\u540d\u79f0\u3002\u4e3a\u4e86\u5411\u540e\u517c\u5bb9\uff0c\u5982\u679c\u63d0\u4f9b\u4e86<code>mew</code>\u6216 <code>markeredgewidth</code>\u53c2\u6570\uff0c\u5219\u5b83\u4eec\u5c06\u8986\u76d6<code>capthick</code>\u53c2\u6570\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nx = np.arange(1, 11, 1)\ny = np.sin(x) + 5\n\nax.errorbar(x, y, fmt='b-o',\n\n            xerr=[[0.3, 0.3, 0.3, 0.5, 0.3, 0.5, 0.3, 0.6, 0.3, 0.1],\n                  [0.3, 0.7, 0.3, 0.1, 0.3, 0.5, 0.3, 0.1, 0.3, 0.5]],\n            yerr=[0.2, 0.2, 0.2, 0.1, 0.2, 0.6, 0.2, 0.6, 0.2, 0.1],\n            lolims=[True, True, True, False, False, False, True, False, True, False],\n            uplims=[False, False, False, True, True, True, False, False, False, True],\n            # xlolims=[False, False, False, False, False, True, True, True, True, True],\n            # xuplims=[True, True, True, True, False, False, False, False, False, False],\n            errorevery=(1, 2),\n\n            barsabove=False,\n            ecolor='r',\n            elinewidth=2,\n            capsize=10,\n            capthick=2\n            )\n\"\"\"\n&lt;ErrorbarContainer object of 3 artists&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#_4","title":"\u96f7\u8fbe\u56fe","text":"<p>\u96f7\u8fbe\u56fe(Radar Chart)\uff0c\u4e5f\u79f0\u4e3a\u8718\u86db\u56fe\u6216\u86db\u7f51\u56fe\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u663e\u793a\u591a\u53d8\u91cf\u6570\u636e\u7684\u53ef\u89c6\u5316\u5de5\u5177\u3002\u5b83\u901a\u8fc7\u5c06\u5404\u53d8\u91cf\u8868\u793a\u4e3a\u4ece\u4e2d\u5fc3\u70b9\u8f90\u5c04\u51fa\u7684\u8f74\uff0c\u4ee5\u5c01\u95ed\u591a\u8fb9\u5f62\u7684\u5f62\u5f0f\u5c55\u793a\u6570\u636e\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\u548c\u8d8b\u52bf\u3002</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#matplotlibstairs","title":"Matplotlib\uff1astairs","text":"<p>matplotlib.axes.Axes.stairs \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.stairs \u2014 Matplotlib 3.10.1 documentation</p> <p><code>stairs(values, edges=None, *, orientation='vertical', baseline=0, fill=False, data=None, **kwargs)</code></p> <p>\u7ed8\u5236\u9636\u68af\uff08stepwise\uff09\u5e38\u6570\u51fd\u6570\u7684\u7ebf\u56fe\u6216\u586b\u5145\u56fe\u3002<code>edges</code>\u5b9a\u4e49\u9636\u68af\u7684x\u8f74\u4f4d\u7f6e\u3002<code>values</code>\u5b9a\u4e49\u8fd9\u4e9b\u9636\u68af\u4e4b\u95f4\u7684\u51fd\u6570\u503c\u3002\u6839\u636e<code>fill</code>\u7684\u8bbe\u7f6e\uff0c\u51fd\u6570\u53ef\u4ee5\u7ed8\u5236\u4e3a\u5e26\u6709\u5782\u76f4\u6bb5\u7684\u8fde\u7eed\u7ebf\uff0c\u6216\u8005\u7ed8\u5236\u4e3a\u586b\u5145\u533a\u57df\u3002\u5982\u679c\u63d0\u4f9b<code>data</code>\u53c2\u6570\uff0c\u6240\u6709\u53c2\u6570\u4e5f\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32<code>s</code>\uff0c\u5982\u679c<code>s</code>\u662f<code>data</code>\u4e2d\u7684\u952e\uff0c\u5219\u89e3\u91ca\u4e3a<code>data[s]</code>\u3002\u53ef\u4ee5\u4f5c\u4e3a\u5206\u5e03\u76f4\u65b9\u56fe\u7ed8\u5236\u7684\u4e00\u79cd\u5f62\u5f0f\u3002</p> <ol> <li> <p>**values\uff1a**\u9636\u68af\u7684\u9ad8\u5ea6\u3002</p> </li> <li> <p>**edges\uff1a**\u9636\u68af\u7684\u4f4d\u7f6e\uff0c\u6ee1\u8db3<code>len(edges) == len(values) + 1</code>\uff0c\u5728\u6bcf\u4e24\u70b9\u4e4b\u95f4\u53d6<code>values</code>\u503c\u3002</p> </li> <li> <p>**orientation\uff1a**\u9636\u68af\u7684\u65b9\u5411\u3002\u53ef\u9009<code>'vertical'</code>\uff08\u9ed8\u8ba4\uff09, <code>'horizontal'</code>\u3002</p> </li> <li> <p>**baseline\uff1a**\u8fb9\u754c\u7684\u5e95\u90e8\u503c\u6216\u5f53<code>fill=True</code>\u65f6\uff0c\u4e0b\u8fb9\u7f18\u7684\u4f4d\u7f6e\u3002\u5982\u679c<code>fill=True</code>\u6216\u5411<code>baseline</code>\u4f20\u9012\u4e00\u4e2a\u6570\u7ec4\uff0c\u5219\u7ed8\u5236\u4e00\u4e2a\u95ed\u5408\u8def\u5f84\u3002\u5982\u679c\u4e3a<code>None</code>\uff0c\u5219\u7ed8\u5236\u4e3a\u672a\u95ed\u5408\u7684\u8def\u5f84\u3002\u9ed8\u8ba4\u4e3a0\uff0c</p> </li> <li> <p>**fill\uff1a**\u662f\u5426\u586b\u5145\u66f2\u7ebf\u4e0b\u9762\u79ef\u3002\u9ed8\u8ba4<code>False</code>\u3002\u540c\u65f6\u4f20\u9012<code>fill=True</code>\u548c<code>baseline=None</code>\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u671f\u671b\u7684\u586b\u5145\uff1a\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u70b9\u5c06\u901a\u8fc7\u76f4\u7ebf\u8fde\u63a5\uff0c\u586b\u5145\u5c06\u5728\u8fd9\u6761\u7ebf\u548c\u9636\u68af\u4e4b\u95f4\u8fdb\u884c\u3002</p> </li> </ol> <p><code>**kwargs</code>\u5176\u5b83\u53c2\u6570\u4f20\u9012\u7ed9<code>StepPatch</code>\u7c7b\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nbins = [4.3 , 4.66, 5.02, 5.38, 5.74, 6.1 , 6.46, 6.82, 7.18, 7.54, 7.9 ]\ncounts = [ 9., 23., 14., 27., 16., 26., 18.,  6.,  5.,  6.]\n\nax.stairs(values=counts, edges=bins,\n          orientation='vertical',\n          baseline=3,\n          fill=True,\n\n          facecolor='g',\n          linestyle='--',\n          linewidth=2,\n          hatch='/',\n          hatch_linewidth=2,\n          edgecolor='r',\n          alpha=0.5\n          )\n\"\"\"\n&lt;matplotlib.patches.StepPatch at 0x1451815c560&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#seabornlineplot","title":"seaborn\uff1alineplot","text":"<p>seaborn.lineplot \u2014 seaborn 0.13.2 documentation</p> <p>Visualizing statistical relationships \u2014 seaborn 0.13.2 documentation</p> <p>Statistical estimation and error bars \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.lineplot(data=None, *, x=None, y=None, hue=None, size=None, style=None, units=None, weights=None, palette=None, hue_order=None, hue_norm=None, sizes=None, size_order=None, size_norm=None, dashes=True, markers=None, style_order=None, estimator='mean', errorbar=('ci', 95), n_boot=1000, seed=None, orient='x', sort=True, err_style='band', err_kws=None, legend='auto', ci='deprecated', ax=None, **kwargs)</code></p> <p><code>legend</code>\u53c2\u6570\u51b3\u5b9a\u5982\u4f55\u7ed8\u5236\u56fe\u4f8b\u3002\u5982\u679c\u4e3a\"brief\"\uff0c\u5219\u6570\u503c\u53d8\u91cf <code>hue</code> \u548c <code>size</code> \u5c06\u4ee5\u7b49\u95f4\u8ddd\u7684\u6837\u672c\u503c\u8868\u793a\u3002\u5982\u679c\u4e3a\"full\"\uff0c\u5219\u6bcf\u4e2a\u7ec4\u90fd\u4f1a\u5728\u56fe\u4f8b\u4e2d\u6709\u4e00\u4e2a\u6761\u76ee\u3002\u5982\u679c\u4e3a\"auto\"\uff0c\u5219\u6839\u636e\u7ea7\u522b\u6570\u91cf\u5728\"brief\"\u548c\"full\"\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002\u5982\u679c\u4e3a <code>False</code> \uff0c\u5219\u4e0d\u6dfb\u52a0\u56fe\u4f8b\u6570\u636e\uff0c\u4e5f\u4e0d\u7ed8\u5236\u56fe\u4f8b\u3002<code>**kwargs</code>\u6307\u5b9a\u7684\u5176\u5b83\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9 <code>matplotlib.axes.Axes.plot()</code> \u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.lineplot(data=fmri,\n             x='timepoint',\n             y='signal',\n\n             sort=False,\n             estimator=None,\n\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='timepoint', ylabel='signal'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#sort","title":"sort","text":"<p>\u5982\u679c\u4e3a True\uff08\u9ed8\u8ba4\uff09\uff0c\u5219**\u6309 x \uff08\u9ed8\u8ba4\uff09\u6216 y \u53d8\u91cf\uff08\u7531orient\u53c2\u6570\u6307\u5b9a\uff09\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff08\u5373\u6309x \u6216 y \u53d8\u91cf\u7684\u6570\u636e\u987a\u5e8f\u8fde\u63a5\u6570\u636e\u70b9\uff09**\uff0c\u5426\u5219\u5c06\u6309\u7167\u6570\u636e\u96c6\u4e2d\u539f\u51fa\u73b0\u7684\u987a\u5e8f\u8fde\u63a5\uff08\u5982\u4e0a\uff09\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.lineplot(data=fmri,\n             x='timepoint',\n             y='signal',\n\n             sort=True,\n             orient=\"x\",\n             estimator=None,\n\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='timepoint', ylabel='signal'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.lineplot(data=fmri,\n             x='signal',\n             y='timepoint',\n\n             sort=True,\n             orient=\"y\",\n             estimator=None,\n\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='signal', ylabel='timepoint'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#hue","title":"hue","text":"<ol> <li> <p>hue\uff1a\u53d8\u91cf\u5206\u7ec4\uff0c\u5c06\u4ea7\u751f\u4e0d\u540c\u989c\u8272\u7684\u7ebf\u6761\u3002\u53ef\u4ee5\u662f**\u5206\u7c7b\u53d8\u91cf**\u6216**\u6570\u503c\u53d8\u91cf**\uff0c\u4f46\u540e\u8005\u989c\u8272\u6620\u5c04\u5c06\u6709\u6240\u4e0d\u540c\u3002</p> </li> <li> <p>palette\uff1a\u9009\u62e9\u7528\u4e8e\u6620\u5c04 <code>hue</code> \u8bed\u4e49\u7684\u989c\u8272\u7684\u65b9\u6cd5\u3002\u5b57\u7b26\u4e32\u503c\u4f20\u9012\u7ed9 <code>color_palette()</code> \u3002\u5217\u8868\u6216\u5b57\u5178\u503c\u8868\u793a\u5206\u7c7b\u53d8\u91cf\u6620\u5c04\uff0c\u800c**Colormap\u5bf9\u8c61\u8868\u793a\u6570\u503c\u53d8\u91cf\u6620\u5c04**\u3002</p> </li> <li> <p>hue_order\uff1a\u6307\u5b9a\u5904\u7406\u548c\u7ed8\u56fe\u65f6\u5bf9 <code>hue</code> \u8bed\u4e49\u7684**\u5206\u7c7b\u53d8\u91cf\u6c34\u5e73\u7684\u987a\u5e8f**\u3002</p> </li> <li> <p>hue_norm\uff1a\u8bbe\u7f6e\u6570\u636e\u5355\u4f4d\u4e2d\u5f52\u4e00\u5316\u8303\u56f4\u7684(vmin, vmax)\u5143\u7ec4\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u5c06\u6570\u636e\u5355\u4f4d\u6620\u5c04\u5230 [0, 1] \u533a\u95f4\u7684Normalize\u5bf9\u8c61\u3002\u7528\u4e8e\u6570\u503c\u53d8\u91cf\u6620\u5c04\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.lineplot(data=fmri,\n             x='timepoint',\n             y='signal',\n\n             hue='region',\n             palette={\"parietal\": \"r\", \"frontal\": \"g\"},\n             hue_order=[\"frontal\", \"parietal\"],\n\n             sort=True,\n             orient=\"x\",\n             estimator=None,\n\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='timepoint', ylabel='signal'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#size","title":"size","text":"<ol> <li> <p>size\uff1a\u53d8\u91cf\u5206\u7ec4\uff0c\u5c06\u4ea7\u751f\u4e0d\u540c\u5bbd\u5ea6\u7684\u7ebf\u6761\u3002\u53ef\u4ee5\u662f**\u5206\u7c7b\u53d8\u91cf**\u6216**\u6570\u503c\u53d8\u91cf**\uff0c\u4f46\u540e\u8005\u5927\u5c0f\u6620\u5c04\u5c06\u6709\u6240\u4e0d\u540c\u3002</p> </li> <li> <p>sizes\uff1a\u5f53\u4f7f\u7528 <code>size</code> \u65f6\u7528\u4e8e\u51b3\u5b9a\u5982\u4f55\u9009\u62e9\u7ebf\u5bbd\u7684\u5bf9\u8c61\u3002\u5217\u8868\u6216\u5b57\u5178\u53c2\u6570\u5e94\u63d0\u4f9b\u6bcf\u4e2a\u552f\u4e00\u6570\u636e\u503c\u7684\u7ebf\u5bbd\uff0c\u8fd9\u5f3a\u5236\u8fdb\u884c\u5206\u7c7b\u89e3\u91ca\u3002\u8be5\u53c2\u6570\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u6700\u5c0f\u503c\u3001\u6700\u5927\u503c\u5143\u7ec4\u3002</p> </li> <li> <p>size_order\uff1a\u6307\u5b9a <code>size</code> \u5206\u7c7b\u53d8\u91cf\u6c34\u5e73\u7684\u987a\u5e8f\uff0c\u5426\u5219\u5b83\u4eec\u5c06\u4ece\u6570\u636e\u4e2d\u786e\u5b9a\u3002\u5f53 <code>size</code> \u53d8\u91cf\u4e3a\u6570\u503c\u53d8\u91cf\u65f6\uff0c\u4e0d\u76f8\u5173\u3002</p> </li> <li> <p>size_norm\uff1a\u8bbe\u7f6e\u6570\u636e\u5355\u4f4d\u4e2d\u5f52\u4e00\u5316\u8303\u56f4\u7684(vmin, vmax)\u5143\u7ec4\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u5c06\u6570\u636e\u5355\u4f4d\u6620\u5c04\u5230 [0, 1] \u533a\u95f4\u7684Normalize\u5bf9\u8c61\u3002\u7528\u4e8e\u6570\u503c\u53d8\u91cf\u6620\u5c04\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.lineplot(data=fmri,\n             x='timepoint',\n             y='signal',\n\n             hue='region',\n             palette={\"parietal\": \"r\", \"frontal\": \"g\"},\n             hue_order=[\"frontal\", \"parietal\"],\n\n             size=\"region\",\n             sizes={\"parietal\": 2, \"frontal\": 5},\n             # size_order=[\"frontal\", \"parietal\"],\n\n             sort=True,\n             orient=\"x\",\n             estimator=None,\n\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='timepoint', ylabel='signal'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#style","title":"style","text":"<ol> <li> <p>style\uff1a\u53d8\u91cf\u5206\u7ec4\uff0c\u5c06\u4ea7\u751f\u5177\u6709\u4e0d\u540c\u865a\u7ebf\u548c/\u6216\u6807\u8bb0\u7684\u7ebf\u6761\u3002\u53ef\u4ee5\u662f\u6570\u503c\u53d8\u91cf\uff0c\u4f46\u59cb\u7ec8\u88ab\u89c6\u4e3a\u5206\u7c7b\u53d8\u91cf\u3002</p> </li> <li> <p>dashes\uff1a\u786e\u5b9a\u5982\u4f55\u7ed8\u5236<code>style</code> \u53d8\u91cf\u4e0d\u540c\u5206\u7c7b\u6c34\u5e73\u7684\u7ebf\u6761\u7684\u5bf9\u8c61\u3002\u8bbe\u7f6e\u4e3a <code>True</code> \u5c06\u4f7f\u7528\u9ed8\u8ba4\u7684dash\u4ee3\u7801\uff0c\u6216\u8005\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2adash\u4ee3\u7801\u5217\u8868\u6216\u4e00\u4e2a\u5c06 <code>style</code> \u53d8\u91cf\u7684\u5206\u7c7b\u6620\u5c04\u5230dash\u4ee3\u7801\u7684\u5b57\u5178\u3002\u8bbe\u7f6e\u4e3a <code>False</code> \u5c06\u4e3a\u6240\u6709\u5b50\u96c6\u4f7f\u7528\u5b9e\u7ebf\u3002dash\u4ee3\u7801\u7684\u6307\u5b9a\u65b9\u5f0f\u4e0e matplotlib\u76f8\u540c\uff1a\u4e00\u4e2a(segment, gap)\u957f\u5ea6\u5143\u7ec4\uff0c\u6216\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u4ee5\u7ed8\u5236\u5b9e\u7ebf\u3002</p> </li> <li> <p>markers\uff1a\u786e\u5b9a\u5982\u4f55\u7ed8\u5236 <code>style</code> \u53d8\u91cf\u4e0d\u540c\u5206\u7c7b\u6c34\u5e73\u7684\u6807\u8bb0\u7684\u5bf9\u8c61\u3002\u8bbe\u7f6e\u4e3a <code>True</code> \u5c06\u4f7f\u7528\u9ed8\u8ba4\u6807\u8bb0\uff0c\u6216\u8005\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u6807\u8bb0\u5217\u8868\u6216\u4e00\u4e2a\u5c06 <code>style</code> \u53d8\u91cf\u7684\u5206\u7c7b\u6620\u5c04\u5230\u6807\u8bb0\u7684\u5b57\u5178\u3002\u8bbe\u7f6e\u4e3a <code>False</code> \u5c06\u7ed8\u5236\u65e0\u6807\u8bb0\u7684\u7ebf\u6761\u3002\u6807\u8bb0\u7684\u6307\u5b9a\u65b9\u5f0f\u4e0e matplotlib \u76f8\u540c\u3002</p> </li> <li> <p>style_order\uff1a\u6307\u5b9a <code>style</code> \u5206\u7c7b\u53d8\u91cf\u6c34\u5e73\u7684\u987a\u5e8f\uff0c\u5426\u5219\u5b83\u4eec\u5c06\u4ece\u6570\u636e\u4e2d\u786e\u5b9a\u3002\u5f53 <code>style</code> \u53d8\u91cf\u4e3a\u6570\u503c\u65f6\uff0c\u4e0d\u76f8\u5173\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.lineplot(data=fmri,\n             x='timepoint',\n             y='signal',\n\n             hue='region',\n             palette={\"parietal\": \"r\", \"frontal\": \"g\"},\n             hue_order=[\"frontal\", \"parietal\"],\n\n             size=\"region\",\n             sizes={\"parietal\": 2, \"frontal\": 5},\n             # size_order=[\"frontal\", \"parietal\"],\n\n             style=\"region\",\n             dashes={\"parietal\": (1, 0), \"frontal\": (1, 1)},\n             markers={\"parietal\": \"*\", \"frontal\": \"^\"},\n             # style_order=[\"frontal\", \"parietal\"],\n             markersize=10,\n\n             sort=True,\n             orient=\"x\",\n             estimator=None,\n\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='timepoint', ylabel='signal'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#units","title":"units","text":"<p>\u8bc6\u522b\u91c7\u6837\u5355\u4f4d\u7684\u53d8\u91cf\u5206\u7ec4\u3002\u5f53\u4f7f\u7528\u65f6\uff0c\u5c06\u4e3a\u6bcf\u4e2a\u5355\u4f4d\u7ed8\u5236\u4e00\u6761\u5355\u72ec\u7684\u7ebf\uff0c\u5e76\u5177\u6709\u9002\u5f53\u7684\u8bed\u4e49\uff0c\u4f46\u4e0d\u4f1a\u6dfb\u52a0\u56fe\u4f8b\u6761\u76ee\u3002\u5f53\u4e0d\u9700\u8981\u7cbe\u786e\u8eab\u4efd\u65f6\uff0c\u7528\u4e8e\u663e\u793a\u5b9e\u9a8c\u91cd\u590d\u6837\u672c\u7684\u5206\u5e03\u3002\u6b64\u65f6**estimator\u5fc5\u987b\u4e3aNone**\u3002\u7c7b\u4f3c\u4ee5\u4e0a\u8fdb\u884c\u53d6\u5b50\u96c6\u7ed8\u5236\uff0c\u4f46\u5e76\u4e0d\u6dfb\u52a0\u56fe\u4f8b\uff0c\u4ec5\u7ed8\u5236\uff0c\u8fd9\u53ef\u4ee5\u907f\u514d\u56fe\u4f8b\u7684\u6742\u4e71\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.lineplot(data=fmri,\n             x='timepoint',\n             y='signal',\n\n             hue='region',\n             palette={\"parietal\": \"r\", \"frontal\": \"g\"},\n             hue_order=[\"frontal\", \"parietal\"],\n\n             size=\"region\",\n             sizes={\"parietal\": 2, \"frontal\": 5},\n             # size_order=[\"frontal\", \"parietal\"],\n\n             style=\"region\",\n             dashes={\"parietal\": (1, 0), \"frontal\": (1, 1)},\n             markers={\"parietal\": \"*\", \"frontal\": \"^\"},\n             # style_order=[\"frontal\", \"parietal\"],\n             markersize=10,\n\n             units=\"subject\",\n\n             sort=True,\n             orient=\"x\",\n             estimator=None,\n\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='timepoint', ylabel='signal'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%8A%98%E7%BA%BF%E5%9B%BE%EF%BC%88plot%E3%80%81stairs%E3%80%81lineplot%EF%BC%89/#_5","title":"\u53c2\u6570\u4f30\u8ba1","text":"<p>\u4e00\u4e2a\u4f8b\u5b50\u641e\u61c2Bootstrap\u65b9\u6cd5</p> <ol> <li> <p>estimator\uff1a\u7528\u4e8e\u5bf9\u76f8\u540c\u7684 <code>x</code>\u6216<code>y</code> \u53d8\u91cf**\uff08\u7531orient\u53c2\u6570\u6307\u5b9a\uff09**\u6c34\u5e73\u4e0a\u7684\u591a\u4e2a\u89c2\u6d4b\u503c\u8fdb\u884c\u805a\u5408\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u53ea\u7ed8\u5236\u805a\u5408\u7ed3\u679c\u3002\u53ef\u4ee5\u662fpandas\u7684\u805a\u5408\u65b9\u6cd5\u540d\u79f0\u6216\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u51fd\u6570\u540d\u3002\u5982\u679c<code>None</code>\uff0c\u5219\u5c06\u7ed8\u5236\u6240\u6709\u89c2\u6d4b\u503c\u3002</p> </li> <li> <p>errorbar\uff1a\u8bef\u5dee\u68d2\u65b9\u6cd5\u540d\u79f0\uff08\u53ef\u4ee5\u662f**\"ci\"\u3001\"pi\"\u3001\"se\"\u6216\"sd\"**\uff09\uff0c\u6216\u4e00\u4e2a\u5305\u542b\u65b9\u6cd5\u540d\u79f0\u548c\u6c34\u5e73\u53c2\u6570\u7684\u5143\u7ec4\uff0c\u6216\u4e00\u4e2a\u5c06\u5411\u91cf\u6620\u5c04\u5230(min, max)\u533a\u95f4\u7684\u51fd\u6570\uff0c\u6216 None \u4ee5\u9690\u85cf\u8bef\u5dee\u68d2\u3002</p> </li> <li> <p>weights\uff1a\u7528\u4e8e\u8ba1\u7b97\u52a0\u6743\u4f30\u8ba1\u7684\u6570\u636e\u503c\u6216\u5217\u3002\u8bf7\u6ce8\u610f\uff0c\u76ee\u524d\u4f7f\u7528weights\u65f6\u7edf\u8ba1\u91cf\u7684\u9009\u62e9\u9650\u5236\u4e3a**estimator='mean'\u548c**errorbar='ci'\u3002</p> </li> <li> <p>n_boot\uff1a\u7528\u4e8e\u8ba1\u7b97\u7f6e\u4fe1\u533a\u95f4\u7684bootstraps\u6570\u91cf\u3002</p> </li> <li> <p>seed\uff1a\u79cd\u5b50\u6216\u968f\u673a\u6570\u751f\u6210\u5668\uff0c\u7528\u4e8e\u53ef\u91cd\u590d\u7684bootstrapping\u3002</p> </li> <li> <p>err_style\uff1a\u662f\u4ee5\u534a\u900f\u660e\u8bef\u5dee\u5e26(\"band\")\u8fd8\u662f\u79bb\u6563\u8bef\u5dee\u68d2(\"bars\")\u7684\u5f62\u5f0f\u7ed8\u5236\u7f6e\u4fe1\u533a\u95f4\u3002</p> </li> <li> <p>err_kws\uff1a\u63a7\u5236\u8bef\u5dee\u68d2\u7f8e\u5b66\u7684\u9644\u52a0\u53c2\u6570\u3002\u53c2\u6570\u4f20\u9012\u7ed9 <code>matplotlib.axes.Axes.fill_between()</code> \u6216 <code>matplotlib.axes.Axes.errorbar()</code> \uff0c\u5177\u4f53\u53d6\u51b3\u4e8e<code>err_style</code>\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.lineplot(data=fmri,\n             x='timepoint',\n             y='signal',\n\n             hue='region',\n             palette={\"parietal\": \"r\", \"frontal\": \"g\"},\n             hue_order=[\"frontal\", \"parietal\"],\n\n             size=\"region\",\n             sizes={\"parietal\": 2, \"frontal\": 5},\n             # size_order=[\"frontal\", \"parietal\"],\n\n             style=\"region\",\n             dashes={\"parietal\": (1, 0), \"frontal\": (1, 1)},\n             markers={\"parietal\": \"*\", \"frontal\": \"^\"},\n             # style_order=[\"frontal\", \"parietal\"],\n             markersize=10,\n\n             sort=True,\n             orient=\"x\",\n             estimator=\"mean\",\n             errorbar=('ci', 95),\n             weights=None,\n             n_boot=1000,\n             seed=0,\n             err_style='band',\n\n             ax=ax\n             )\n\"\"\"\n&lt;Axes: xlabel='timepoint', ylabel='signal'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p> <p>https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.stairs.html</p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%95%A3%E7%82%B9%E5%9B%BE%EF%BC%88scatter%E3%80%81scatterplot%EF%BC%89/","title":"\u6563\u70b9\u56fe\uff08scatter\u3001scatterplot\uff09","text":"<p>iris.csv</p> <p></p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\niris = pd.read_csv('../Data/iris.csv')\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%95%A3%E7%82%B9%E5%9B%BE%EF%BC%88scatter%E3%80%81scatterplot%EF%BC%89/#matplotlibscatter","title":"Matplotlib\uff1ascatter","text":"<p>matplotlib.pyplot.scatter \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.axes.Axes.scatter \u2014 Matplotlib 3.10.1 documentation</p> <p><code>scatter(x, y, s=None, c=None, *, marker=None, cmap=None, norm=None, vmin=None, vmax=None, alpha=None, linewidths=None, edgecolors=None, colorizer=None, plotnonfinite=False, data=None, **kwargs)</code></p> <p>\u7ed8\u5236y \u4e0e x \u7684\u6563\u70b9\u56fe\uff0c\u5177\u6709\u53d8\u5316\u7684\u6563\u70b9\u5927\u5c0f\u548c/\u6216\u989c\u8272\uff08\u4ec5\u53ef\u7ed8\u5236\u4e00\u7ec4\u6570\u636e\uff0c\u591a\u7ec4\u6570\u636e\u4ec5\u53ef\u901a\u8fc7\u591a\u6b21\u8c03\u7528\u5b9e\u73b0\uff09\u3002x, y, s, c, color, facecolor, facecolors, edgecolors, linewidths\u53c2\u6570\u53ef\u7531data\u6807\u7b7e\u6307\u5b9a\u3002\u8be5\u51fd\u6570\u7ee7\u627f\u81ea<code>PathCollection</code>\u7c7b\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.scatter(\"sepal_length\",\n           \"sepal_width\",\n           data=iris,\n\n           marker=\"o\",\n           s=150,\n           c=\"red\",\n           # color=\"red\",\n           # facecolor=\"red\",    # facecolor/facecolors/fc\n\n           linestyle=\"-\",        # linestyle/dashes/linestyles/ls\n           linewidth=2,          # linewidth/linewidths/lw\n           edgecolor=\"g\",        # edgecolor/ec/edgecolors\n           alpha=0.6\n           )\n\"\"\"\n&lt;matplotlib.collections.PathCollection at 0x203c1992060&gt;\n\"\"\"\n\nax.set_xlabel(\"sepal_length\")\nax.set_ylabel(\"sepal_width\")\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%95%A3%E7%82%B9%E5%9B%BE%EF%BC%88scatter%E3%80%81scatterplot%EF%BC%89/#_1","title":"\u6563\u70b9\u5927\u5c0f","text":"<p><code>s</code>**\u4e3a\u6bcf\u4e2a\u6563\u70b9\u8bbe\u7f6e\u5927\u5c0f\uff08\u4ee5\\(\u70b9^{2}\\)\u4e3a\u5355\u4f4d\uff0c1 \u70b9\u7b49\u4e8e 1/72 \u82f1\u5bf8\uff09\uff0c\u53ef\u4ee5\u662f\u5355\u4e00\u6570\u503c\u6216\u4e0ex\u548cy\u76f8\u540c\u957f\u5ea6\uff08n\uff09\u7684\u6570\u503c\u6570\u7ec4\u3002\u82e5\u4e3a\u4e00\u4e2a\u5355\u4e00\u6570\u503c\uff0c\u5219\u4e3a\u6bcf\u4e2a\u6563\u70b9\u8bbe\u7f6e\u76f8\u540c\u5927\u5c0f\u3002\u9ed8\u8ba4\u503c\u4e3a <code>rcParams['lines.markersize'] ** 2</code> \u3002\u6563\u70b9\u5927\u5c0f\u4e0e\u8fb9\u7f18\u7ebf\u5bbd\u548c\u7ebf\u8272\u5728\u89c6\u89c9\u4e0a\u4ea4\u4e92\uff0c\u5982\u679c\u6563\u70b9\u5927\u5c0f\uff1c\u8fb9\u7f18\u7ebf\u5bbd\uff0c\u5219\u53ef\u80fd\u4ea7\u751f\u4f2a\u5f71\u3002\u5982\u679c\u8fb9\u7f18\u7ebf\u5bbd\uff1e**0 \u4e14\u7ebf\u8272\u4e0d\u4e3a'none'\uff0c\u5219\u6563\u70b9\u7684\u6709\u6548\u5927\u5c0f\u5c06\u589e\u52a0\u8fb9\u7f18\u7ebf\u5bbd\u7684\u4e00\u534a\uff0c\u56e0\u4e3a\u8fb9\u7f18\u7ebf\u5c06\u5c45\u4e2d\u4e8e\u6563\u70b9\u8fb9\u7f18\u3002</p> <p>\u5c06\u6563\u70b9\u7684\u5927\u5c0f\u4e0e\u6570\u636e\u4e2d\u7684\u7b2c\u4e09\u4e2a\u53d8\u91cf\u5173\u8054\u7684\u6563\u70b9\u56fe\u79f0\u4e3a**\u6c14\u6ce1\u56fe**\u3002\u4f8b\u5982\uff1ax\u548cy\u8868\u793a\u53d8\u91cf\u5173\u7cfb\uff0c\u70b9\u7684\u5927\u5c0f\u8868\u793a\u6743\u91cd\u6216\u9891\u7387\u3002</p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nax.scatter(\"sepal_length\",\n           \"sepal_width\",\n           data=iris,\n\n           marker=\"o\",\n           s=iris[\"petal_length\"] * 100,\n           c=\"red\",\n           # color=\"red\",\n           # facecolor=\"red\",    # facecolor/facecolors/fc\n\n           linestyle=\"-\",        # linestyle/dashes/linestyles/ls\n           linewidth=2,          # linewidth/linewidths/lw\n           edgecolor=\"g\",        # edgecolor/ec/edgecolors\n           alpha=0.6\n           )\n\"\"\"\n&lt;matplotlib.collections.PathCollection at 0x203e35ee7b0&gt;\n\"\"\"\n\nax.set_xlabel(\"sepal_length\")\nax.set_ylabel(\"sepal_width\")\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%95%A3%E7%82%B9%E5%9B%BE%EF%BC%88scatter%E3%80%81scatterplot%EF%BC%89/#_2","title":"\u6563\u70b9\u989c\u8272","text":"<ol> <li> <p>c\uff1a\u4e3a\u6bcf\u4e2a\u6563\u70b9\u8bbe\u7f6e\u989c\u8272\u3002\u9ed8\u8ba4\u4e3a <code>None</code> \uff0c\u6b64\u65f6\u6563\u70b9\u989c\u8272\u7531 color\u3001facecolor \u6216 facecolors \u51b3\u5b9a\u3002\u5982\u679c\u8fd9\u4e9b\u5747\u672a\u6307\u5b9a\u6216\u5747\u4e3a <code>None</code> \uff0c\u5219\u7531 <code>Axes</code>\u5f53\u524d\u989c\u8272\u5faa\u73af(<code>rcParams[\"axes.prop_cycle\"]</code>)\u7684\u4e0b\u4e00\u4e2a\u989c\u8272\u51b3\u5b9a\u3002</p> </li> <li> <p>\u542b n \u4e2a\u6570\u503c\u7684\u5e8f\u5217\uff0c\u7528\u4e8e\u901a\u8fc7 cmap \u548c norm \u6620\u5c04\u6765\u4e3a\u6bcf\u4e2a\u6563\u70b9\u8bbe\u7f6e\u989c\u8272\u3002</p> </li> <li> <p>\u5355\u4e2a\u989c\u8272\u683c\u5f0f\u5b57\u7b26\u4e32\u3001\u957f\u5ea6\u4e3a n \u7684\u989c\u8272\u5e8f\u5217\uff0c\u6216\u8005**n\u884cRGB(A)\u4e8c\u7ef4\u6570\u7ec4**\uff0c\u76f4\u63a5\u4e3a\u6bcf\u4e2a\u6563\u70b9\u8bbe\u7f6e\u989c\u8272\u3002\u6ce8\u610f\uff0c\u4e0d\u5e94\u4e3a\u5355\u4e2a RGB(A) \u5e8f\u5217\uff0c\u56e0\u4e3a\u8fd9\u65e0\u6cd5\u4e0e\u8981\u8fdb\u884c\u989c\u8272\u6620\u5c04\u7684\u6570\u503c\u5e8f\u5217\u533a\u5206\u5f00\u6765\u3002\u5982\u679c\u60f3\u4e3a\u6240\u6709\u70b9\u6307\u5b9a\u76f8\u540c\u7684 RGB \u6216 RGBA \u503c\uff0c\u5e94\u4f7f\u7528\u5355\u884c\u4e8c\u7ef4\u6570\u7ec4\u3002\u5426\u5219\uff0c\u5728\u5e8f\u5217\u957f\u5ea6\u4e0e x \u548c y \u5339\u914d\u7684\u60c5\u51b5\u4e0b\uff0c\u6570\u503c\u6620\u5c04\u5c06\u5177\u6709\u4f18\u5148\u7ea7\u3002\u5982\u679c\u60f3\u4e3a\u6240\u6709\u70b9\u6307\u5b9a\u5355\u4e2a\u989c\u8272\uff0c\u4f18\u5148\u4f7f\u7528color\u5173\u952e\u5b57\u53c2\u6570\u3002</p> </li> <li> <p>cmap\uff1a\u5c06\u6570\u636e\u6620\u5c04\u5230\u989c\u8272\u7684 Colormap \u5bf9\u8c61**\u6216**\u5df2\u6ce8\u518c\u7684 Colormap \u540d\u79f0\u3002\u9ed8\u8ba4<code>rcParams[\"image.cmap\"]='viridis'</code>\u3002\u5982\u679c c \u662f RGB(A)\uff0c\u5219\u5ffd\u7565\u6b64\u53c2\u6570\u3002</p> </li> <li> <p>norm\uff1a\u7528\u4e8e\u5728\u5c06\u6570\u636e\u901a\u8fc7cmap\u6620\u5c04\u5230\u989c\u8272\u4e4b\u524d\u5c06\u5176\u7f29\u653e\u5230[0, 1]\u8303\u56f4\u7684\u5f52\u4e00\u5316\u65b9\u6cd5\u3002\u9ed8\u8ba4\u4e3a\u7ebf\u6027\u7f29\u653e\u3002\u5982\u679c c \u662f RGB(A)\uff0c\u5219\u5ffd\u7565\u6b64\u53c2\u6570\u3002</p> </li> <li> <p>Normalize \u5bf9\u8c61</p> </li> <li> <p>\u7f29\u653e\u540d\u79f0\uff0c\u4f8b\u5982\"linear\", \"log\", \"symlog\", \"logit\"\u7b49\u3002\u6b64\u65f6\uff0c\u5c06\u52a8\u6001\u751f\u6210\u5e76\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5408\u9002\u7684 <code>Normalize</code> \u5bf9\u8c61\u3002</p> </li> <li> <p>vmin, vmax\uff1a\u5f53c\u63d0\u4f9b\u4e86\u6570\u636e\u4e14\u6ca1\u6709\u663e\u5f0f\u6307\u5b9anorm\u65f6\uff0cvmin \u548c vmax \u5b9a\u4e49\u4e86colormap\u8986\u76d6\u7684\u6570\u636e\u8303\u56f4\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0ccolormap\u8986\u76d6\u63d0\u4f9b\u6570\u636e\u7684\u5b8c\u6574\u8303\u56f4\u3002\u5982\u679cnorm\u4e3aNormalize \u5bf9\u8c61\uff0c\u4f7f\u7528 vmin/vmax \u53c2\u6570\u662f\u9519\u8bef\u7684\uff08\u4f46norm\u5b57\u7b26\u4e32\u540d\u79f0\u53ef\u4ee5\u4e0e vmin/vmax \u4e00\u8d77\u4f7f\u7528\uff09\u3002\u5982\u679c c \u662f RGB(A)\uff0c\u5219\u5ffd\u7565\u6b64\u53c2\u6570\u3002</p> </li> <li> <p>colorizer\uff1a\u7528\u4e8e\u5c06\u989c\u8272\u6620\u5c04\u5230\u6570\u636e\u7684 Colorizer \u5bf9\u8c61\u3002\u5982\u679c\u4e3a None\uff0c\u5219\u4ecenorm\u548c cmap \u521b\u5efa Colorizer \u5bf9\u8c61\u3002\u5982\u679c c \u662f RGB(A)\uff0c\u5219\u5ffd\u7565\u6b64\u53c2\u6570\u3002</p> </li> <li> <p>color\uff1a\u989c\u8272\u6216 RGBA \u5143\u7ec4\u5217\u8868</p> </li> <li> <p>facecolor/facecolors/fc\uff1a\u989c\u8272\u6216\u989c\u8272\u5217\u8868</p> </li> <li> <p>plotnonfinite\uff1a\u662f\u5426\u7ed8\u5236\u5177\u6709\u975e\u6709\u9650 c\uff08\u5373 <code>inf</code> \u3001 <code>-inf</code> \u6216 <code>nan</code> \uff09\u7684\u70b9\u3002\u5982\u679c <code>True</code> \uff0c\u5219\u4f7f\u7528Colormap\u5bf9\u8c61\u7684bad\u989c\u8272\u7ed8\u5236\u8fd9\u4e9b\u70b9\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\ncmap = plt.cm.viridis\nnorm = mpl.colors.Normalize(vmin=iris[\"sepal_length\"].min(), \n                            vmax=iris[\"sepal_length\"].max())\n\nax.scatter(\"sepal_length\",\n           \"sepal_width\",\n           data=iris,\n\n           marker=\"o\",\n           s=150,\n           c=\"sepal_length\",\n           # color=\"red\",\n           # facecolor=\"red\",    # facecolor/facecolors/fc\n           cmap=cmap,\n           norm=norm,\n\n           linestyle=\"-\",        # linestyle/dashes/linestyles/ls\n           linewidth=2,          # linewidth/linewidths/lw\n           edgecolor=\"g\",        # edgecolor/ec/edgecolors\n           alpha=0.6\n           )\n\"\"\"\n&lt;matplotlib.collections.PathCollection at 0x203e3519bb0&gt;\n\"\"\"\n\nfig.colorbar(mpl.cm.ScalarMappable(norm=norm, cmap=cmap), \n             label=\"sepal_length\",\n             ax=ax)\nax.set_xlabel(\"sepal_length\")\nax.set_ylabel(\"sepal_width\")\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%95%A3%E7%82%B9%E5%9B%BE%EF%BC%88scatter%E3%80%81scatterplot%EF%BC%89/#_3","title":"\u8fb9\u7f18\u7ebf","text":"<p>\u79fb\u9664\u6563\u70b9\u8fb9\u7f18\u7ebf\u53ef\u4ee5\u8bbe\u7f6elinewidth=0\u6216edgecolor='none'</p> <ol> <li> <p>linestyle/dashes/linestyles/ls\uff1a\u4e3a\u6bcf\u4e2a\u6563\u70b9\u8bbe\u7f6e\u8fb9\u7f18\u7ebf\u578b\u3002\u53ef\u4ee5\u662f\u5355\u4e00\u5b57\u7b26\u4e32\u3001\u5143\u7ec4\u6216\u76f8\u5e94\u5217\u8868</p> </li> <li> <p>linewidth/linewidths/lw\uff1a\u4e3a\u6bcf\u4e2a\u6563\u70b9\u8bbe\u7f6e\u8fb9\u7f18\u7ebf\u5bbd\u3002\u53ef\u4ee5\u662f\u5355\u4e00\u6570\u503c\u6216\u4e0ex\u548cy\u76f8\u540c\u957f\u5ea6\uff08n\uff09\u7684\u6570\u503c\u6570\u7ec4\u3002</p> </li> <li> <p>edgecolor/ec/edgecolors\uff1a\u4e3a\u6bcf\u4e2a\u6563\u70b9\u8bbe\u7f6e\u8fb9\u7f18\u7ebf\u8272\u3002\u5bf9\u4e8e\u975e\u586b\u5145\u6807\u8bb0\uff0c\u5ffd\u7565\u8be5\u53c2\u6570\uff0c\u5176\u989c\u8272\u786e\u5b9a\u65b9\u5f0f\u4e0e 'face' \u76f8\u540c\uff0c\u5373\u4ece c\u3001colors \u6216 facecolors \u4e2d\u83b7\u53d6\u3002</p> </li> <li> <p>'face'\uff1a\u4e0e\u586b\u5145\u8272\u4e00\u81f4</p> </li> <li> <p>'none'\uff1a\u65e0\u8fb9\u7f18\u7ebf</p> </li> <li> <p>\u5355\u4e00\u989c\u8272\u6216\u989c\u8272\u5e8f\u5217</p> </li> </ol>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E6%95%A3%E7%82%B9%E5%9B%BE%EF%BC%88scatter%E3%80%81scatterplot%EF%BC%89/#seabornscatterplot","title":"Seaborn\uff1ascatterplot","text":"<p>seaborn.scatterplot \u2014 seaborn 0.13.2 documentation</p> <p>Visualizing statistical relationships \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.scatterplot(data=None, *, x=None, y=None, hue=None, size=None, style=None, palette=None, hue_order=None, hue_norm=None, sizes=None, size_order=None, size_norm=None, markers=True, style_order=None, legend='auto', ax=None, **kwargs)</code></p> <p><code>**kwargs</code>\u6307\u5b9a\u7684\u5176\u5b83\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9<code>matplotlib.axes.Axes.scatter()</code></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nsns.scatterplot(data=iris,\n                x='sepal_length',\n                y='sepal_width',\n\n                hue='species',\n                palette={\"setosa\": \"r\", \"versicolor\": \"g\", \"virginica\": \"b\"},\n                hue_order=[\"versicolor\", \"setosa\", \"virginica\"],\n\n                size=\"species\",\n                sizes={\"setosa\": 50, \"versicolor\": 100, \"virginica\": 200},\n                # size_order=[\"versicolor\", \"setosa\", \"virginica\"],\n\n                style=\"species\",\n                markers={\"setosa\": \"*\", \"versicolor\": \"&lt;\", \"virginica\": \"^\"},\n                # style_order=[\"versicolor\", \"setosa\", \"virginica\"],\n\n                ax=ax\n                )\n\"\"\"\n&lt;Axes: xlabel='sepal_length', ylabel='sepal_width'&gt;\n\"\"\"\n\nplt.show()\n</code></pre> <p></p> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\ncmap=plt.cm.viridis\nnorm=mpl.colors.Normalize(vmin=iris[\"sepal_length\"].min(), \n                          vmax=iris[\"sepal_length\"].max())\n\nsns.scatterplot(data=iris,\n                x='sepal_length',\n                y='sepal_width',\n\n                hue='sepal_length',\n                palette=cmap,\n                hue_norm=norm,\n\n                size=\"species\",\n                sizes={\"setosa\": 50, \"versicolor\": 100, \"virginica\": 200},\n                # size_order=[\"versicolor\", \"setosa\", \"virginica\"],\n\n                style=None,\n                markers=\"o\",\n\n                ax=ax\n                )\n\"\"\"\n&lt;Axes: xlabel='sepal_length', ylabel='sepal_width'&gt;\n\"\"\"\n\nfig.colorbar(mpl.cm.ScalarMappable(norm=norm, cmap=cmap), \n             label=\"sepal_length\",\n             ax=ax)\n\nplt.show()\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E7%BB%BC%E5%90%88%EF%BC%88relplot%EF%BC%89/","title":"\u7efc\u5408\uff08relplot\uff09","text":"<p>tips.csv</p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\ntips = pd.read_csv('../Data/tips.csv')\n</code></pre> <p></p> <p>seaborn.relplot \u2014 seaborn 0.13.2 documentation</p> <p>seaborn.FacetGrid \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.relplot(data=None, *, x=None, y=None, hue=None, size=None, style=None, units=None, weights=None, row=None, col=None, col_wrap=None, row_order=None, col_order=None, palette=None, hue_order=None, hue_norm=None, sizes=None, size_order=None, size_norm=None, markers=None, dashes=None, style_order=None, legend='auto', kind='scatter', height=5, aspect=1, facet_kws=None, **kwargs)</code></p> <p>\u7528\u4e8e\u5728 FacetGrid \u4e0a\u7ed8\u5236Figure\u7ea7\u76f8\u5173\u5173\u7cfb\u56fe\u7ed8\u56fe\u51fd\u6570\u3002\u6b64\u51fd\u6570\u63d0\u4f9b\u4e86\u8bbf\u95ee\u591a\u4e2a\u4e0d\u540cAxes\u7ea7\u51fd\u6570\u7684\u63a5\u53e3\uff0c\u8fd9\u4e9b\u51fd\u6570\u901a\u8fc7\u5b50\u96c6\u7684\u8bed\u4e49\u6620\u5c04\u5c55\u793a\u4e86\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 <code>kind</code> \u53c2\u6570\u7528\u4e8e\u9009\u62e9\u8981\u4f7f\u7528\u7684\u5e95\u5c42Axes\u7ea7\u51fd\u6570\uff1a<code>\"scatter\"</code>(\u9ed8\u8ba4)\u3001<code>\"line\"</code>\u3002\u989d\u5916\u7684\u5173\u952e\u5b57\u53c2\u6570<code>**kwargs</code>\u4f1a\u88ab\u4f20\u9012\u7ed9\u8fd9\u4e9b\u5e95\u5c42\u51fd\u6570</p> <ol> <li> <p>row\u3001col\uff1a\u5b9a\u4e49\u8981\u5728\u4e0d\u540c\u5206\u9762\uff08facet\uff09\u4e0a\u7ed8\u5236\u7684\u5b50\u96c6\u7684\u53d8\u91cf\u3002</p> </li> <li> <p>col_wrap\uff1a\u8d85\u8fc7\u6b64\u6570\u91cf\u7684\u5217\u53d8\u91cf\u5206\u9762\uff08facet\uff09\u5c06\u6362\u884c\u7ed8\u5236\uff0c\u4ee5\u4fbf\u5217\u5206\u9762\uff08facet\uff09\u8de8\u8d8a\u591a\u884c\u3002\u4e0e <code>row</code> \u5206\u9762\uff08facet\uff09\u4e0d\u517c\u5bb9\u3002</p> </li> <li> <p>row_order\u3001col_order\uff1a\u7ec4\u7ec7\u7f51\u683c\u5e03\u5c40\u7684\u884c\u548c/\u6216\u5217\u7684\u987a\u5e8f\uff0c\u5426\u5219\u987a\u5e8f\u7531\u6570\u636e\u5bf9\u8c61\u63a8\u65ad\u3002</p> </li> <li> <p>height\uff1a\u6bcf\u4e2a\u5206\u9762\uff08facet\uff09\u7684\u9ad8\u5ea6\uff08\u82f1\u5bf8\uff09\u3002</p> </li> <li> <p>aspect\uff1a\u6bcf\u4e2a\u5206\u9762\uff08facet\uff09\u7684\u5bbd\u9ad8\u6bd4\u3002\u56e0\u6b64 <code>aspect * height</code> \u8868\u793a\u6bcf\u4e2a\u5206\u9762\u7684\u5bbd\u5ea6\uff08\u82f1\u5bf8\uff09\u3002</p> </li> <li> <p>facet_kws\uff1a\u4f20\u9012\u7ed9 <code>FacetGrid</code> \u7684\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u5b57\u5178</p> </li> <li> <p>sharex\u3001sharey\uff1a\u5982\u679c <code>True</code> \uff0c\u5219\u5206\u9762\uff08facet\uff09\u5c06\u5728\u5217\u4e4b\u95f4\u5171\u4eaby\u8f74\u548c/\u6216\u884c\u4e4b\u95f4\u5171\u4eabx\u8f74\u3002</p> </li> <li> <p>xlim\u3001ylim\uff1a\u6bcf\u4e2a\u5206\u9762\uff08facet\uff09\u6bcf\u4e2a\u8f74\u7684\u8303\u56f4\uff08\u4ec5\u5728 sharex\u3001sharey \u4e3a True \u65f6\u76f8\u5173\uff09\u3002</p> </li> <li> <p>legend_out\uff1a\u5982\u679c <code>True</code> \uff0c\u5219\u56fe\u5c3a\u5bf8\u5c06\u6269\u5c55\uff0c\u56fe\u4f8b\u5c06\u5728\u56fe\u7684\u4e2d\u5fc3\u53f3\u4fa7\u5916\u90e8\u7ed8\u5236\u3002</p> </li> <li> <p>despine\uff1a\u5982\u679c <code>True</code> \uff0c\u79fb\u9664\u6bcf\u4e2a\u5206\u9762\uff08facet\uff09\u56fe\u8868\u7684\u9876\u90e8\u548c\u53f3\u4fa7\u8fb9\u6846\u3002</p> </li> <li> <p>**margin_titles\uff1a**\u5982\u679c <code>True</code> \uff0c\u884c\u53d8\u91cf\u7684\u6807\u9898\u5c06\u7ed8\u5236\u5728\u6700\u540e\u4e00\u5217\u7684\u53f3\u4fa7\u3002</p> </li> <li> <p>**subplot_kws\uff1a**\u4f20\u9012\u7ed9 matplotlib subplot(s)\u65b9\u6cd5\u7684\u952e\u503c\u53c2\u6570\u5b57\u5178\u3002</p> </li> <li> <p>**gridspec_kws\uff1a**\u4f20\u9012\u7ed9 <code>matplotlib.gridspec.GridSpec</code> \uff08\u901a\u8fc7 <code>matplotlib.figure.Figure.subplots()</code> \uff09\u7684\u952e\u503c\u53c2\u6570\u5b57\u5178\u3002\u5982\u679c <code>col_wrap</code> \u4e0d\u7b49\u4e8e <code>None</code> \uff0c\u5219\u5ffd\u7565\u3002</p> </li> </ol> <pre><code>sns.relplot(data=tips,\n            x='total_bill',\n            y='tip',\n            kind='scatter',\n\n            hue='time',\n            size='size',\n            sizes=(50, 300),\n            style='time',\n\n            col='day',\n            col_wrap=2,\n            col_order=[\"Thur\", \"Fri\", \"Sat\", \"Sun\"],\n\n            height=6,\n            aspect=1.5,\n            facet_kws={\"sharex\": True, \"sharey\": True,\n                       # \"xlim\": (10, 40), \"ylim\": (2, 8),\n                       \"legend_out\": True,\n                       \"despine\": True,\n                       # \"margin_titles\": True,\n                       \"subplot_kws\": None,\n                       \"gridspec_kws\": None\n                       }\n            )\n\"\"\"\n&lt;seaborn.axisgrid.FacetGrid at 0x1ea42c90e90&gt;\n\"\"\"\n</code></pre> <p></p> <pre><code>sns.relplot(data=tips,\n            x='total_bill',\n            y='tip',\n            kind='scatter',\n\n            hue='day',\n            hue_order=[\"Thur\", \"Fri\", \"Sat\", \"Sun\"],\n            size='size',\n            sizes=(50, 300),\n            style='day',\n\n            row='sex',\n            row_order=[\"Female\", \"Male\"],\n            col='time',\n            col_order=[\"Lunch\", \"Dinner\"],\n\n            height=6,\n            aspect=1.5,\n            facet_kws={\"sharex\": True, \"sharey\": True,\n                       # \"xlim\": (10, 40), \"ylim\": (2, 8),\n                       \"legend_out\": True,\n                       \"despine\": True,\n                       \"margin_titles\": True,\n                       \"subplot_kws\": None,\n                       \"gridspec_kws\": None\n                       },\n            )\n\"\"\"\n&lt;seaborn.axisgrid.FacetGrid at 0x207ed489370&gt;\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E8%81%94%E5%90%88%E5%9B%BE%EF%BC%88jointplot%E3%80%81JointGrid%EF%BC%89/","title":"\u8054\u5408\u56fe\uff08jointplot\u3001JointGrid\uff09","text":"<p>penguins.csv</p> <p></p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\npenguins = pd.read_csv('../Data/penguins.csv')\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E8%81%94%E5%90%88%E5%9B%BE%EF%BC%88jointplot%E3%80%81JointGrid%EF%BC%89/#jointplot","title":"jointplot","text":"<p>seaborn.jointplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.jointplot(data=None, *, x=None, y=None, hue=None, kind='scatter', height=6, ratio=5, space=0.2, dropna=False, xlim=None, ylim=None, color=None, palette=None, hue_order=None, hue_norm=None, marginal_ticks=False, joint_kws=None, marginal_kws=None, **kwargs)</code></p> <p>\u7ed8\u5236\u4e24\u4e2a\u53d8\u91cf\u7684\u53cc\u53d8\u91cf\uff08\u8054\u5408\uff0cjoint\uff09\u548c\u5355\u53d8\u91cf\uff08\u8fb9\u7f18\uff0cmarginal\uff09\u56fe\u8868\u3002\u6b64\u51fd\u6570\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u63a5\u53e3\u5230<code>JointGrid</code>\u7c7b\uff0c\u5177\u6709\u591a\u79cd\u9884\u5b9a\u4e49\u7684\u7ed8\u56fe\u7c7b\u578b\u3002\u8fd9\u662f\u4e00\u4e2a\u76f8\u5bf9\u8f7b\u91cf\u7ea7\u7684\u5305\u88c5\u5668\uff1b\u5982\u679c\u9700\u8981\u66f4\u591a\u7075\u6d3b\u6027\uff0c\u5e94\u76f4\u63a5\u4f7f\u7528<code>JointGrid</code>\u3002\u8fd4\u56de\u5bf9\u8c61\u662f\u5e95\u5c42<code>JointGrid</code>\uff0c\u53ef\u7528\u4e8e\u8fdb\u4e00\u6b65\u81ea\u5b9a\u4e49\u56fe\u8868\u3002</p> <p><code>**kwargs</code>\u9644\u52a0\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9\u7528\u4e8e\u5728\u8054\u5408Axes\u4e0a\u7ed8\u5236\u56fe\u8868\u7684\u51fd\u6570\uff0c\u8986\u76d6<code>joint_kws</code>\u5b57\u5178\u4e2d\u7684\u9879\u3002</p> <ol> <li> <p>**kind\uff1a**\u7ed8\u56fe\u7c7b\u578b\u3002\u53ef\u9009<code>\"scatter\"</code>\u3001<code>\"kde\"</code>\u3001<code>\"hist\"</code>\u3001<code>\"hex\"</code>\u3001<code>\"reg\"</code>\u3001<code>\"resid\"</code>\u3002</p> </li> <li> <p>**height\uff1a**Figure\u5927\u5c0f\uff08\u6b63\u65b9\u5f62\uff09\u3002</p> </li> <li> <p>**ratio\uff1a**\u8054\u5408Axes\u9ad8\u5ea6\u4e0e\u8fb9\u7f18Axes\u9ad8\u5ea6\u7684\u6bd4\u7387\u3002</p> </li> <li> <p>**space\uff1a**\u8054\u5408Axes\u548c\u8fb9\u7f18Axes\u4e4b\u95f4\u7684\u7a7a\u95f4\u3002</p> </li> <li> <p>**marginal_ticks\uff1a**\u5982\u679c\u4e3a<code>False</code>\uff0c\u5219\u4e0d\u7ed8\u5236\u8fb9\u7f18\u56fe\u7684\u8ba1\u6570/\u5bc6\u5ea6\u8f74\u4e0a\u7684\u523b\u5ea6\u3002</p> </li> <li> <p>**joint_kws\u3001marginal_kws\uff1a**\u56fe\u8868\u7ec4\u4ef6\u7684\u9644\u52a0\u5173\u952e\u5b57\u53c2\u6570\u3002</p> </li> </ol> <pre><code>jg = sns.jointplot(data=penguins,\n                   x=\"culmen_length_mm\",\n                   y=\"culmen_depth_mm\",\n\n                   xlim=(30, 60),\n                   ylim=(12, 22),\n                   dropna=True,\n\n                   hue=\"sex\",\n                   hue_order=['FEMALE', 'MALE'],\n                   palette={\"FEMALE\": \"#facc87\", \"MALE\": \"#b1fa87\"},\n\n                   height=8,\n                   ratio=5,\n                   space=0.5,\n                   marginal_ticks=True,\n\n                   kind=\"scatter\",\n                   joint_kws={'s': 100},\n                   marginal_kws=None\n                   )\n# jg.plot(sns.kdeplot, sns.histplot)\njg.plot_joint(sns.kdeplot)\njg.plot_marginals(sns.histplot, kde=True)\n\"\"\"\n&lt;seaborn.axisgrid.JointGrid at 0x1bbd9446900&gt;\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E8%81%94%E5%90%88%E5%9B%BE%EF%BC%88jointplot%E3%80%81JointGrid%EF%BC%89/#jointgrid","title":"JointGrid","text":"<p>seaborn.JointGrid \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.JointGrid(data=None, *, x=None, y=None, hue=None, height=6, ratio=5, space=0.2, palette=None, hue_order=None, hue_norm=None, dropna=False, xlim=None, ylim=None, marginal_ticks=False)</code></p> <p>\u53cc\u53d8\u91cf\u7ed8\u56fe\u7f51\u683c\uff0c\u8fb9\u7f18\u4e3a\u5355\u53d8\u91cf\u7ed8\u56fe\u3002\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528<code>jointplot()</code>\u7ed8\u5236\u8bb8\u591a\u56fe\u8868\u3002\u5f53\u9700\u8981\u66f4\u591a\u7075\u6d3b\u6027\u65f6\uff0c\u76f4\u63a5\u4f7f\u7528\u6b64\u7c7b\u3002</p> <pre><code>jg = sns.JointGrid(data=penguins,\n                   x=\"culmen_length_mm\",\n                   y=\"culmen_depth_mm\",\n\n                   xlim=(30, 60),\n                   ylim=(12, 22),\n                   dropna=True,\n\n                   hue=\"sex\",\n                   hue_order=['FEMALE', 'MALE'],\n                   palette={\"FEMALE\": \"#facc87\", \"MALE\": \"#b1fa87\"},\n\n                   height=8,\n                   ratio=5,\n                   space=0.5,\n                   marginal_ticks=True\n                   )\njg.plot_joint(sns.scatterplot, s=100)\n# sns.scatterplot(data=penguins, x=\"culmen_length_mm\", y=\"culmen_depth_mm\", s=100, ax=jg.ax_joint)\njg.plot_joint(sns.kdeplot)\n# sns.kdeplot(data=penguins, x=\"culmen_length_mm\", y=\"culmen_depth_mm\", ax=jg.ax_joint)\njg.plot_marginals(sns.histplot, kde=True)\n# sns.histplot(data=penguins, x=\"culmen_length_mm\", kde=True, ax=jg.ax_marg_x)\n# sns.histplot(data=penguins, y=\"culmen_depth_mm\", kde=True, ax=jg.ax_marg_y)\njg.refline(x=45, y=18, joint=True, marginal=True, color='r', linestyle='--', linewidth=2)\n\"\"\"\n&lt;seaborn.axisgrid.JointGrid at 0x1bbdb630890&gt;\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E9%85%8D%E5%AF%B9%E5%9B%BE%EF%BC%88pairplot%E3%80%81PairGrid%EF%BC%89/","title":"\u914d\u5bf9\u56fe\uff08pairplot\u3001PairGrid\uff09","text":"<p>penguins.csv</p> <p></p> <pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\n\npenguins = pd.read_csv('../Data/penguins.csv')\n</code></pre>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E9%85%8D%E5%AF%B9%E5%9B%BE%EF%BC%88pairplot%E3%80%81PairGrid%EF%BC%89/#seabornpairplot","title":"Seaborn\uff1apairplot","text":"<p>seaborn.pairplot \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.pairplot(data, *, hue=None, hue_order=None, palette=None, vars=None, x_vars=None, y_vars=None, kind='scatter', diag_kind='auto', markers=None, height=2.5, aspect=1, corner=False, dropna=False, plot_kws=None, diag_kws=None, grid_kws=None)</code></p> <p>\u5728\u6570\u636e\u96c6\u4e2d\u7ed8\u5236\u6210\u5bf9\u5173\u7cfb\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u51fd\u6570\u5c06\u521b\u5efa\u4e00\u4e2aAxes\u7684\u7f51\u683c\uff0c\u4f7f\u5f97<code>data</code>\u4e2d\u6bcf\u4e2a\u6570\u503c\u578b\u53d8\u91cf\u5728\u5355\u4e2a\u884c\u4e2d\u5171\u4eab y \u8f74\uff0c\u5728\u5355\u4e2a\u5217\u4e2d\u5171\u4eab x \u8f74\u3002\u5bf9\u89d2\u7ebf\u56fe\u5904\u7406\u65b9\u5f0f\u4e0d\u540c\uff1a\u7ed8\u5236\u4e00\u4e2a\u5355\u53d8\u91cf\u5206\u5e03\u56fe\u4ee5\u663e\u793a\u6bcf\u5217\u6570\u636e\u7684\u8fb9\u7f18\u5206\u5e03\u3002\u8fd8\u53ef\u4ee5\u663e\u793a\u53d8\u91cf\u7684\u5b50\u96c6\u6216\u5728\u4e0d\u540c\u884c\u548c\u5217\u4e0a\u7ed8\u5236\u4e0d\u540c\u7684\u53d8\u91cf\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u7ed8\u5236\u4e00\u4e9b\u5e38\u89c1\u6837\u5f0f\u7684<code>PairGrid</code>\u7684\u9ad8\u7ea7\u63a5\u53e3\u3002\u5982\u679c\u9700\u8981\u66f4\u591a\u7075\u6d3b\u6027\uff0c\u5e94\u76f4\u63a5\u4f7f\u7528<code>PairGrid</code>\u3002\u8fd4\u56de\u5bf9\u8c61\u662f\u5e95\u5c42<code>PairGrid</code> \uff0c\u53ef\u7528\u4e8e\u8fdb\u4e00\u6b65\u81ea\u5b9a\u4e49\u56fe\u8868\u3002</p> <ol> <li> <p>**data\uff1a**\u6574\u6d01\uff08\u957f\u683c\u5f0f\uff09\u6570\u636e\u6846\uff0c\u5176\u4e2d\u6bcf\u5217\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u6bcf\u884c\u662f\u4e00\u4e2a\u89c2\u6d4b\u503c\u3002</p> </li> <li> <p>**vars\uff1a**\u5728<code>data</code>\u4e2d\u8981\u4f7f\u7528\u7684\u53d8\u91cf\uff0c\u5426\u5219\u4f7f\u7528\u5177\u6709\u6570\u503c\u6570\u636e\u7c7b\u578b\u7684\u6bcf\u4e00\u5217\u3002\u4f18\u5148\u4e8e<code>x_vars</code>\u3001<code>y_vars</code>\u53c2\u6570\u3002</p> </li> <li> <p>**x_vars\uff0cy_vars\uff1a**\u56fe\u5f62\u7684\u884c\u548c\u5217\u5206\u522b\u8981\u4f7f\u7528\u7684<code>data</code>\u4e2d\u7684\u53d8\u91cf\uff0c\u5373\u53ef\u5236\u4f5c\u975e\u6b63\u65b9\u5f62\u56fe\u8868\u3002</p> </li> <li> <p>**kind\uff1a**\u51b3\u5b9a\u5bf9\u89d2\u5b50\u56fe\u548c\u975e\u5bf9\u89d2\u5b50\u56fe\u7ed8\u56fe\u7c7b\u578b\u3002\u53ef\u9009<code>'scatter'</code>\uff08\u9ed8\u8ba4\uff09\uff0c<code>'kde'</code>\uff0c<code>'hist'</code>\uff0c<code>'reg'</code>\u3002</p> </li> <li> <p>**diag_kind\uff1a**\u5bf9\u89d2\u5b50\u56fe\u7c7b\u578b\uff0c\u53ef\u9009<code>'auto'</code>\uff08\u9ed8\u8ba4\uff09\uff0c<code>'hist'</code>\uff0c<code>'kde'</code>\uff0c<code>None</code>\u3002\u5982\u679c\u4e3a<code>'auto'</code>\uff0c\u5219\u6839\u636e\u662f\u5426\u4f7f\u7528 <code>hue</code> \u6765\u9009\u62e9\u3002</p> </li> <li> <p>**markers\uff1a**\u8981\u7528\u4e8e\u6240\u6709\u6563\u70b9\u56fe\u70b9\u7684\u6807\u8bb0\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u4e0e<code>hue</code>\u53d8\u91cf\u7ea7\u522b\u6570\u91cf\u76f8\u540c\u7684\u6807\u8bb0\u5217\u8868\uff0c\u4ee5\u4fbf\u4e0d\u540c\u989c\u8272\u7684\u70b9\u4e5f\u6709\u4e0d\u540c\u7684\u6563\u70b9\u56fe\u6807\u8bb0\u3002</p> </li> <li> <p>**corner\uff1a**\u5982\u679c\u4e3a<code>True</code>\uff0c\u5219\u4e0d\u5728\u7f51\u683c\u7684\u4e0a\u90e8\u4e09\u89d2\u5f62\u89d2\u843d\uff08\u975e\u5bf9\u89d2\u7ebf\uff09\u4e2d\u6dfb\u52a0Axes\u3002</p> </li> <li> <p>**dropna\uff1a**\u5728\u7ed8\u56fe\u524d\u4ece\u6570\u636e\u4e2d\u5220\u9664\u7f3a\u5931\u503c\u3002</p> </li> <li> <p>plot_kws\uff0cdiag_kws\uff0cgrid_kws\uff1a<code>plot_kws</code>\u4f20\u9012\u7ed9\u53cc\u53d8\u91cf\u7ed8\u56fe\u51fd\u6570\uff0c<code>diag_kws</code>\u4f20\u9012\u7ed9\u5355\u53d8\u91cf\u7ed8\u56fe\u51fd\u6570\uff0c<code>grid_kws</code> \u4f20\u9012\u7ed9<code>PairGrid</code>\u6784\u9020\u51fd\u6570\u3002</p> </li> </ol> <pre><code>pg = sns.pairplot(data=penguins,\n                  vars=['culmen_length_mm', 'culmen_depth_mm', 'flipper_length_mm', 'body_mass_g'],\n                  x_vars=None,\n                  y_vars=None,\n\n                  hue='sex',\n                  hue_order=['FEMALE', 'MALE'],\n                  palette={\"FEMALE\": \"#facc87\", \"MALE\": \"#b1fa87\"},\n                  markers=['o', '*'],\n\n                  kind='scatter',\n                  plot_kws={'s': 100},\n                  diag_kind='hist',\n                  diag_kws={'kde': True},\n\n                  height=2,\n                  aspect=1.5,\n                  corner=True,\n                  dropna=True,\n                  grid_kws={'despine': True, 'layout_pad': 3}\n                  )\npg.map_lower(sns.kdeplot)\n\"\"\"\n&lt;seaborn.axisgrid.PairGrid at 0x1f136e47140&gt;\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E7%9B%B8%E5%85%B3%E5%85%B3%E7%B3%BB%E5%9B%BE/%E9%85%8D%E5%AF%B9%E5%9B%BE%EF%BC%88pairplot%E3%80%81PairGrid%EF%BC%89/#seabornpairgrid","title":"Seaborn\uff1aPairGrid","text":"<p>seaborn.PairGrid \u2014 seaborn 0.13.2 documentation</p> <p><code>sns.PairGrid(data, *, hue=None, vars=None, x_vars=None, y_vars=None, hue_order=None, palette=None, hue_kws=None, corner=False, height=2.5, aspect=1, layout_pad=0.5, despine=True, dropna=False)</code></p> <p>\u6570\u636e\u96c6\u7684\u6210\u5bf9\u5173\u7cfb\u56fe\u7f51\u683c\u3002\u6b64\u5bf9\u8c61\u5c06\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u53d8\u91cf\u6620\u5c04\u5230\u7f51\u683c\u4e2d\u7684\u5217\u548c\u884c\u3002\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u8f74\u7ea7\u7ed8\u56fe\u51fd\u6570\u5728\u4e0a\u4e09\u89d2\u548c\u4e0b\u4e09\u89d2\u4e2d\u7ed8\u5236\u53cc\u53d8\u91cf\u56fe\uff0c\u5e76\u5728\u5bf9\u89d2\u7ebf\u4e0a\u663e\u793a\u6bcf\u4e2a\u53d8\u91cf\u7684\u8fb9\u7f18\u5206\u5e03\u3002\u4f7f\u7528<code>pairplot()</code>\u53ef\u4ee5\u5728\u4e00\u884c\u4e2d\u751f\u6210\u51e0\u4e2a\u4e0d\u540c\u7684\u5e38\u89c1\u56fe\u3002\u5f53\u9700\u8981\u66f4\u591a\u7075\u6d3b\u6027\u65f6\u4f7f\u7528<code>PairGrid</code> \u3002</p> <ol> <li> <p>hue_kws\uff1a\u5176\u4ed6\u5173\u952e\u5b57\u53c2\u6570\u53ef\u4ee5\u63d2\u5165\u5230\u7ed8\u56fe\u8c03\u7528\u4e2d\uff0c\u4ee5\u4f7f\u5176\u4ed6\u7ed8\u56fe\u5c5e\u6027\u5728\u8272\u8c03\u53d8\u91cf\u7684\u5404\u4e2a\u7ea7\u522b\u4e0a\u53d8\u5316\uff08\u4f8b\u5982\u6563\u70b9\u56fe\u4e2d\u7684\u6807\u8bb0\uff09\u3002</p> </li> <li> <p>layout_pad\uff1a\u5b50\u56fe\u4e4b\u95f4\u7684\u95f4\u9694\uff1b\u4f20\u9012\u7ed9<code>fig.tight_layout</code>\u3002</p> </li> </ol> <pre><code>pg = sns.PairGrid(data=penguins,\n                  vars=['culmen_length_mm', 'culmen_depth_mm', 'flipper_length_mm', 'body_mass_g'],\n                  x_vars=None,\n                  y_vars=None,\n\n                  hue='sex',\n                  hue_order=['FEMALE', 'MALE'],\n                  palette={\"FEMALE\": \"#facc87\", \"MALE\": \"#b1fa87\"},\n                  hue_kws=None,\n\n                  height=2,\n                  aspect=1.5,\n                  corner=False,\n                  dropna=True,\n                  despine=True,\n                  layout_pad=3\n                  )\n# pg.map(sns.scatterplot)\n# pg.map_offdiag(sns.scatterplot)\npg.map_diag(sns.histplot, kde=True)\npg.map_lower(sns.scatterplot, s=100)\npg.map_upper(sns.kdeplot)\npg.add_legend()\n\"\"\"\n&lt;seaborn.axisgrid.PairGrid at 0x1f132fa5880&gt;\n\"\"\"\n</code></pre> <p></p>"},{"location":"Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Python%E7%BB%98%E5%9B%BE/%E8%8C%8E%E7%8A%B6%E5%9B%BE/%E8%8C%8E%E7%8A%B6%E5%9B%BE%EF%BC%88stem%EF%BC%89/","title":"\u830e\u72b6\u56fe\uff08stem\uff09","text":"<pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n</code></pre> <p>matplotlib.axes.Axes.stem \u2014 Matplotlib 3.10.1 documentation</p> <p>matplotlib.pyplot.stem \u2014 Matplotlib 3.10.1 documentation</p> <p><code>stem(*args, linefmt=None, markerfmt=None, basefmt=None, bottom=0, label=None, orientation='vertical', data=None)</code></p> <p>\u830e\u72b6\u56fe\u5728\u6bcf\u4e2a\u4f4d\u7f6e<code>locs</code>\u5904\uff0c\u4ece\u57fa\u7ebf\u5230\u5934\u90e8 <code>heads</code>\u7ed8\u5236\u4e0e\u57fa\u7ebf\u5782\u76f4\u7684\u7ebf\uff0c\u5e76\u5728\u5934\u90e8\u653e\u7f6e\u4e00\u4e2a\u6807\u8bb0\u3002\u5bf9\u4e8e\u5782\u76f4\u830e\u72b6\u56fe\uff08\u9ed8\u8ba4\uff09\uff0c<code>locs</code>\u662fx\u7684\u4f4d\u7f6e\uff0c<code>heads</code>\u662fy\u503c\uff1b\u5bf9\u4e8e\u6c34\u5e73\u830e\u72b6\u56fe\uff0c<code>locs</code> \u662fy\u7684\u4f4d\u7f6e\uff0c<code>heads</code>\u662fx\u503c\u3002<code>locs</code>\u53c2\u6570\u662f\u53ef\u9009\u7684\uff0c\u9ed8\u8ba4\u4e3a(0, 1, ..., <code>len(heads)</code>-1)\u3002</p> <pre><code>stem([locs,] heads, linefmt=None, markerfmt=None, basefmt=None)\n</code></pre> <ol> <li> <p>**bottom\uff1a**\u57fa\u51c6\u7ebf\u7684 y/x \u4f4d\u7f6e\uff08\u53d6\u51b3\u4e8e<code>orientation</code>\uff09\u3002\u9ed8\u8ba4\u4e3a0\u3002</p> </li> <li> <p>**orientation\uff1a**\u830e\u7684\u671d\u5411\u3002\u53ef\u9009'vertical'\uff08\u9ed8\u8ba4\uff09, 'horizontal'\u3002</p> </li> <li> <p>**linefmt\uff1a**\u5b9a\u4e49\u5782\u76f4\u7ebf\u7684\u989c\u8272\u548c/\u6216\u7ebf\u578b\u7684\u5b57\u7b26\u4e32\u3002\u9ed8\u8ba4'C0-'\uff0c\u5373\u4f7f\u7528\u989c\u8272\u5faa\u73af\u7684\u7b2c\u4e00\u4e2a\u989c\u8272\u7ed8\u5236\u5b9e\u7ebf\u3002\u6ce8\u610f\uff0c\u901a\u8fc7\u6b64\u53c2\u6570\u6307\u5b9a\u7684\u6807\u8bb0\uff08\u4f8b\u5982 'x'\uff09\u5c06\u88ab\u9759\u9ed8\u5ffd\u7565\u3002\u76f8\u53cd\uff0c\u5e94\u4f7f\u7528<code>markerfmt</code>\u6307\u5b9a\u6807\u8bb0\u3002</p> </li> <li> <p>**markerfmt\uff1a**\u5b9a\u4e49\u830e\u5934\u5904\u6807\u8bb0\u7684\u989c\u8272\u548c/\u6216\u5f62\u72b6\u7684\u5b57\u7b26\u4e32\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u6807\u8bb0\uff0c\u5219\u4f7f\u7528\u6807\u8bb0 'o'\uff0c\u5373\u5b9e\u5fc3\u5706\u5708\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u989c\u8272\uff0c\u5219\u4f7f\u7528<code>linefmt</code>\u4e2d\u7684\u989c\u8272\u3002</p> </li> <li> <p>**basefmt\uff1a**\u5b9a\u4e49\u57fa\u7ebf\u5c5e\u6027\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u3002\u9ed8\u8ba4'C3-'\uff08\u7ecf\u5178\u6a21\u5f0f\u4e2d\u4e3a'C2-'\uff09\u3002</p> </li> </ol> <pre><code>fig = plt.figure(figsize=(8, 8), dpi=100, layout=\"constrained\")\nax = fig.add_subplot(1, 1, 1)\n\nlocs = np.arange(1, 11, 1)\nheads = np.sin(locs) + 5\n\nmarkerline, stemlines, baseline = ax.stem(locs, heads,\n                                          bottom=2,\n                                          orientation='vertical',\n                                          linefmt='r--',\n                                          markerfmt='g*',\n                                          basefmt='b-',\n                                          label=\"stem\"\n                                          )\n\"\"\"\n&lt;StemContainer object of 3 artists&gt;\n-----------------------------------\nmarkerline: &lt;matplotlib.lines.Line2D at 0x1abcd089730&gt;\nstemlines: &lt;matplotlib.collections.LineCollection at 0x1abcd02c680&gt;\nbaseline: &lt;matplotlib.lines.Line2D at 0x1abcd0899a0&gt;\n\"\"\"\nmarkerline.set(markersize=20)\nstemlines.set(linewidth=5)\nbaseline.set(linewidth=5)\n\nax.legend()\nplt.show()\n</code></pre> <p></p>"}]}